"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = function(fn, res) {
  return function __init() {
    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
  };
};
var __commonJS = function(cb, mod) {
  return function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
};
var __export = function(target, all2) {
  for (var name in all2)
    __defProp(target, name, { get: all2[name], enumerable: true });
};
var __copyProps = function(to, from, except, desc) {
  if (from && typeof from === "object" || typeof from === "function")
    for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {
      key = keys[i];
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: function(k) {
          return from[k];
        }.bind(null, key), enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
  return to;
};
var __toESM = function(mod, isNodeMode, target) {
  return target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  );
};
var __toCommonJS = function(mod) {
  return __copyProps(__defProp({}, "__esModule", { value: true }), mod);
};

// node_modules/libram/dist/logger.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var import_kolmafia, LogLevels, defaultHandlers, Logger, logger_default;
var init_logger = __esm({
  "node_modules/libram/dist/logger.js": function() {
    import_kolmafia = require("kolmafia");
    (function(LogLevels2) {
      LogLevels2[LogLevels2["NONE"] = 0] = "NONE";
      LogLevels2[LogLevels2["ERROR"] = 1] = "ERROR";
      LogLevels2[LogLevels2["WARNING"] = 2] = "WARNING";
      LogLevels2[LogLevels2["INFO"] = 3] = "INFO";
      LogLevels2[LogLevels2["DEBUG"] = 4] = "DEBUG";
    })(LogLevels || (LogLevels = {}));
    defaultHandlers = _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, LogLevels.INFO, function(message) {
      (0, import_kolmafia.printHtml)("<b>[Libram Info]</b> ".concat(message));
      (0, import_kolmafia.logprint)("[Libram] ".concat(message));
      return;
    }), LogLevels.WARNING, function(message) {
      (0, import_kolmafia.printHtml)('<span style="background: orange; color: white;"><b>[Libram Warning]</b> '.concat(message, "</span>"));
      (0, import_kolmafia.logprint)("[Libram] ".concat(message));
      return;
    }), LogLevels.ERROR, function(error2) {
      (0, import_kolmafia.printHtml)('<span style="background: red; color: white;"><b>[Libram Error]</b> '.concat(error2.toString(), "</span>"));
      (0, import_kolmafia.logprint)("[Libram] ".concat(error2));
      return;
    }), LogLevels.DEBUG, function(message) {
      (0, import_kolmafia.printHtml)('<span style="background: red; color: white;"><b>[Libram Debug]</b> '.concat(message, "</span>"));
      (0, import_kolmafia.logprint)("[Libram] ".concat(message));
      return;
    });
    Logger = /* @__PURE__ */ function() {
      function Logger2() {
        _classCallCheck(this, Logger2);
        _defineProperty(this, "handlers", defaultHandlers);
      }
      _createClass(Logger2, [{
        key: "level",
        get: function get4() {
          return Logger2.currentLevel;
        }
      }, {
        key: "setLevel",
        value: function setLevel(level) {
          Logger2.currentLevel = level;
        }
      }, {
        key: "setHandler",
        value: function setHandler(level, callback) {
          this.handlers[level] = callback;
        }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
      }, {
        key: "log",
        value: function log2(level, message) {
          if (this.level >= level) this.handlers[level](message);
        }
      }, {
        key: "info",
        value: function info2(message) {
          this.log(LogLevels.INFO, message);
        }
      }, {
        key: "warning",
        value: function warning(message) {
          this.log(LogLevels.WARNING, message);
        }
      }, {
        key: "error",
        value: function error2(message) {
          this.log(LogLevels.ERROR, message);
        }
      }, {
        key: "debug",
        value: function debug2(message) {
          this.log(LogLevels.DEBUG, message);
        }
      }]);
      return Logger2;
    }();
    _defineProperty(Logger, "currentLevel", LogLevels.ERROR);
    logger_default = new Logger();
  }
});

// node_modules/libram/dist/propertyTypes.js
var propertyTypes_exports = {};
__export(propertyTypes_exports, {
  booleanProperties: function() {
    return booleanProperties;
  },
  familiarProperties: function() {
    return familiarProperties;
  },
  locationProperties: function() {
    return locationProperties;
  },
  monsterProperties: function() {
    return monsterProperties;
  },
  numericOrStringProperties: function() {
    return numericOrStringProperties;
  },
  numericProperties: function() {
    return numericProperties;
  },
  phylumProperties: function() {
    return phylumProperties;
  },
  statProperties: function() {
    return statProperties;
  },
  stringProperties: function() {
    return stringProperties;
  }
});
var booleanProperties, numericProperties, monsterProperties, locationProperties, stringProperties, numericOrStringProperties, familiarProperties, statProperties, phylumProperties;
var init_propertyTypes = __esm({
  "node_modules/libram/dist/propertyTypes.js": function() {
    booleanProperties = ["abortOnChoiceWhenNotInChoice", "addChatCommandLine", "addCreationQueue", "addStatusBarToFrames", "allowCloseableDesktopTabs", "allowNegativeTally", "allowNonMoodBurning", "allowSummonBurning", "autoHighlightOnFocus", "broadcastEvents", "cacheMallSearches", "chatBeep", "chatLinksUseRelay", "compactChessboard", "copyAsHTML", "customizedTabs", "debugBuy", "debugConsequences", "debugFoxtrotRemoval", "debugPathnames", "debugTopMenuStyle", "gapProtection", "gitInstallDependencies", "gitShowCommitMessages", "gitUpdateOnLogin", "greenScreenProtection", "guiUsesOneWindow", "hideServerDebugText", "logAcquiredItems", "logBattleAction", "logBrowserInteractions", "logChatMessages", "logChatRequests", "logCleanedHTML", "logDecoratedResponses", "logFamiliarActions", "logGainMessages", "logReadableHTML", "logPreferenceChange", "logMonsterHealth", "logReverseOrder", "logStatGains", "logStatusEffects", "logStatusOnLogin", "macroDebug", "macroLens", "mementoListActive", "mergeHobopolisChat", "pingLogin", "pingStealthyTimein", "printStackOnAbort", "proxySet", "relayAddSounds", "relayAddsCustomCombat", "relayAddsDiscoHelper", "relayAddsGraphicalCLI", "relayAddsQuickScripts", "relayAddsRestoreLinks", "relayAddsUpArrowLinks", "relayAddsUseLinks", "relayAddsWikiLinks", "relayAllowRemoteAccess", "relayBrowserOnly", "relayCacheUncacheable", "relayFormatsChatText", "relayHidesJunkMallItems", "relayMaintainsEffects", "relayMaintainsHealth", "relayMaintainsMana", "relayOverridesImages", "relayRunsAfterAdventureScript", "relayRunsBeforeBattleScript", "relayRunsBeforePVPScript", "relayScriptButtonFirst", "relayTextualizesEffects", "relayTrimsZapList", "relayUsesInlineLinks", "relayUsesIntegratedChat", "relayWarnOnRecoverFailure", "removeMalignantEffects", "saveSettingsOnSet", "sharePriceData", "showAllRequests", "showExceptionalRequests", "stealthLogin", "svnAlwaysAdd", "svnAlwaysOverwrite", "svnInstallDependencies", "svnShowCommitMessages", "svnUpdateOnLogin", "switchEquipmentForBuffs", "syncAfterSvnUpdate", "useChatToolbar", "useContactsFrame", "useDevServer", "useDockIconBadge", "useHugglerChannel", "useImageCache", "useLastUserAgent", "useSystemTrayIcon", "useTabbedChatFrame", "useToolbars", "useCachedVolcanoMaps", "useZoneComboBox", "verboseSpeakeasy", "verboseFloundry", "wrapLongLines", "_faxDataChanged", "_gitUpdated", "_svnRepoFileFetched", "_svnUpdated", "antagonisticSnowmanKitAvailable", "arcadeGameHints", "armoryUnlocked", "autoForbidIgnoringStores", "autoCraft", "autoQuest", "autoEntangle", "autoGarish", "autoManaRestore", "autoFillMayoMinder", "autoPinkyRing", "autoPlantHardcore", "autoPlantSoftcore", "autoPotionID", "autoRepairBoxServants", "autoSatisfyWithCloset", "autoSatisfyWithCoinmasters", "autoSatisfyWithMall", "autoSatisfyWithNPCs", "autoSatisfyWithStash", "autoSatisfyWithStorage", "autoSetConditions", "autoSteal", "autoTuxedo", "backupCameraReverserEnabled", "badMoonEncounter01", "badMoonEncounter02", "badMoonEncounter03", "badMoonEncounter04", "badMoonEncounter05", "badMoonEncounter06", "badMoonEncounter07", "badMoonEncounter08", "badMoonEncounter09", "badMoonEncounter10", "badMoonEncounter11", "badMoonEncounter12", "badMoonEncounter13", "badMoonEncounter14", "badMoonEncounter15", "badMoonEncounter16", "badMoonEncounter17", "badMoonEncounter18", "badMoonEncounter19", "badMoonEncounter20", "badMoonEncounter21", "badMoonEncounter22", "badMoonEncounter23", "badMoonEncounter24", "badMoonEncounter25", "badMoonEncounter26", "badMoonEncounter27", "badMoonEncounter28", "badMoonEncounter29", "badMoonEncounter30", "badMoonEncounter31", "badMoonEncounter32", "badMoonEncounter33", "badMoonEncounter34", "badMoonEncounter35", "badMoonEncounter36", "badMoonEncounter37", "badMoonEncounter38", "badMoonEncounter39", "badMoonEncounter40", "badMoonEncounter41", "badMoonEncounter42", "badMoonEncounter43", "badMoonEncounter44", "badMoonEncounter45", "badMoonEncounter46", "badMoonEncounter47", "badMoonEncounter48", "barrelShrineUnlocked", "batWingsBatHoleEntrance", "batWingsBatratBurrow", "batWingsBeanbatChamber", "batWingsGuanoJunction", "bigBrotherRescued", "blackBartsBootyAvailable", "bondAdv", "bondBeach", "bondBeat", "bondBooze", "bondBridge", "bondDesert", "bondDR", "bondDrunk1", "bondDrunk2", "bondHoney", "bondHP", "bondInit", "bondItem1", "bondItem2", "bondItem3", "bondJetpack", "bondMartiniDelivery", "bondMartiniPlus", "bondMartiniTurn", "bondMeat", "bondMox1", "bondMox2", "bondMPregen", "bondMus1", "bondMus2", "bondMys1", "bondMys2", "bondSpleen", "bondStat", "bondStat2", "bondStealth", "bondStealth2", "bondSymbols", "bondWar", "bondWeapon2", "bondWpn", "booPeakLit", "bootsCharged", "breakfastCompleted", "burrowgrubHiveUsed", "calzoneOfLegendEaten", "candyCaneSwordApartmentBuilding", "candyCaneSwordBlackForest", "candyCaneSwordBowlingAlley", "candyCaneSwordCopperheadClub", "candyCaneSwordDailyDungeon", "candyCaneSwordDefiledCranny", "candyCaneSwordFunHouse", "candyCaneSwordShore", "candyCaneSwordWarFratRoom", "candyCaneSwordWarFratZetas", "candyCaneSwordWarHippyBait", "candyCaneSwordWarHippyLine", "canteenUnlocked", "chaosButterflyThrown", "chatbotScriptExecuted", "chateauAvailable", "chatLiterate", "chatServesUpdates", "checkJackassHardcore", "checkJackassSoftcore", "clanAttacksEnabled", "coldAirportAlways", "considerShadowNoodles", "controlRoomUnlock", "concertVisited", "controlPanel1", "controlPanel2", "controlPanel3", "controlPanel4", "controlPanel5", "controlPanel6", "controlPanel7", "controlPanel8", "controlPanel9", "corralUnlocked", "crAlways", "crimbo23ArmoryAtWar", "crimbo23BarAtWar", "crimbo23CafeAtWar", "crimbo23CottageAtWar", "crimbo23FoundryAtWar", "cyberDatastickCollected", "dailyDungeonDone", "dampOldBootPurchased", "daycareOpen", "deepDishOfLegendEaten", "demonSummoned", "dinseyAudienceEngagement", "dinseyGarbagePirate", "dinseyRapidPassEnabled", "dinseyRollercoasterNext", "dinseySafetyProtocolsLoose", "doghouseBoarded", "dontStopForCounters", "drippingHallUnlocked", "drippyShieldUnlocked", "edUsedLash", "eldritchFissureAvailable", "eldritchHorrorAvailable", "enqueueForConsumption", "errorOnAmbiguousFold", "essenceOfAnnoyanceAvailable", "essenceOfBearAvailable", "expressCardUsed", "falloutShelterChronoUsed", "falloutShelterCoolingTankUsed", "fireExtinguisherBatHoleUsed", "fireExtinguisherChasmUsed", "fireExtinguisherCyrptUsed", "fireExtinguisherDesertUsed", "fireExtinguisherHaremUsed", "fistTeachingsHaikuDungeon", "fistTeachingsPokerRoom", "fistTeachingsBarroomBrawl", "fistTeachingsConservatory", "fistTeachingsBatHole", "fistTeachingsFunHouse", "fistTeachingsMenagerie", "fistTeachingsSlums", "fistTeachingsFratHouse", "fistTeachingsRoad", "fistTeachingsNinjaSnowmen", "flickeringPixel1", "flickeringPixel2", "flickeringPixel3", "flickeringPixel4", "flickeringPixel5", "flickeringPixel6", "flickeringPixel7", "flickeringPixel8", "floristFriarAvailable", "floristFriarChecked", "frAlways", "frCemetaryUnlocked", "friarsBlessingReceived", "frMountainsUnlocked", "frSwampUnlocked", "frVillageUnlocked", "frWoodUnlocked", "getawayCampsiteUnlocked", "ghostPencil1", "ghostPencil2", "ghostPencil3", "ghostPencil4", "ghostPencil5", "ghostPencil6", "ghostPencil7", "ghostPencil8", "ghostPencil9", "gingerAdvanceClockUnlocked", "gingerBlackmailAccomplished", "gingerbreadCityAvailable", "gingerExtraAdventures", "gingerNegativesDropped", "gingerSewersUnlocked", "gingerSubwayLineUnlocked", "gingerRetailUnlocked", "glitchItemAvailable", "grabCloversHardcore", "grabCloversSoftcore", "guideToSafariAvailable", "guyMadeOfBeesDefeated", "hallowienerDefiledNook", "hallowienerGuanoJunction", "hallowienerKnollGym", "hallowienerMadnessBakery", "hallowienerMiddleChamber", "hallowienerOvergrownLot", "hallowienerSkeletonStore", "hallowienerSmutOrcs", "hallowienerSonofaBeach", "hallowienerVolcoino", "hardcorePVPWarning", "harvestBatteriesHardcore", "harvestBatteriesSoftcore", "hasAutumnaton", "hasBartender", "hasChef", "hasCocktailKit", "hasCosmicBowlingBall", "hasDetectiveSchool", "hasMaydayContract", "hasOven", "hasRange", "hasShaker", "hasSushiMat", "hasTwinkleVision", "haveBoxingDaydreamHardcore", "haveBoxingDaydreamSoftcore", "hermitHax0red", "holidayHalsBookAvailable", "horseryAvailable", "hotAirportAlways", "implementGlitchItem", "intenseCurrents", "itemBoughtPerAscension637", "itemBoughtPerAscension8266", "itemBoughtPerAscension10790", "itemBoughtPerAscension10794", "itemBoughtPerAscension10795", "itemBoughtPerCharacter6423", "itemBoughtPerCharacter6428", "itemBoughtPerCharacter6429", "kingLiberated", "lastPirateInsult1", "lastPirateInsult2", "lastPirateInsult3", "lastPirateInsult4", "lastPirateInsult5", "lastPirateInsult6", "lastPirateInsult7", "lastPirateInsult8", "lawOfAveragesAvailable", "leafletCompleted", "ledCandleDropped", "libraryCardUsed", "lockPicked", "logBastilleBattalionBattles", "loginRecoveryHardcore", "loginRecoverySoftcore", "lovebugsUnlocked", "loveTunnelAvailable", "lowerChamberUnlock", "madnessBakeryAvailable", "makePocketWishesHardcore", "makePocketWishesSoftcore", "manualOfNumberologyAvailable", "mappingMonsters", "mapToAnemoneMinePurchased", "mapToKokomoAvailable", "mapToMadnessReefPurchased", "mapToTheDiveBarPurchased", "mapToTheMarinaraTrenchPurchased", "mapToTheSkateParkPurchased", "maraisBeaverUnlock", "maraisCorpseUnlock", "maraisDarkUnlock", "maraisVillageUnlock", "maraisWildlifeUnlock", "maraisWizardUnlock", "maximizerAlwaysCurrent", "maximizerCreateOnHand", "maximizerCurrentMallPrices", "maximizerFoldables", "maximizerIncludeAll", "maximizerNoAdventures", "middleChamberUnlock", "milkOfMagnesiumActive", "moonTuned", "neverendingPartyAlways", "noncombatForcerActive", "oasisAvailable", "odeBuffbotCheck", "oilPeakLit", "oscusSodaUsed", "outrageousSombreroUsed", "overgrownLotAvailable", "ownsFloristFriar", "ownsSpeakeasy", "pathedSummonsHardcore", "pathedSummonsSoftcore", "pirateRealmUnlockedAnemometer", "pirateRealmUnlockedBlunderbuss", "pirateRealmUnlockedBreastplate", "pirateRealmUnlockedClipper", "pirateRealmUnlockedCrabsicle", "pirateRealmUnlockedFlag", "pirateRealmUnlockedFork", "pirateRealmUnlockedGoldRing", "pirateRealmUnlockedManOWar", "pirateRealmUnlockedPlushie", "pirateRealmUnlockedRadioRing", "pirateRealmUnlockedRhum", "pirateRealmUnlockedScurvySkillbook", "pirateRealmUnlockedShavingCream", "pirateRealmUnlockedSpyglass", "pirateRealmUnlockedTattoo", "pirateRealmUnlockedThirdCrewmate", "pirateRealmUnlockedTikiSkillbook", "pizzaOfLegendEaten", "popularTartUnlocked", "potatoAlarmClockUsed", "prAlways", "prayedForGlamour", "prayedForProtection", "prayedForVigor", "primaryLabCheerCoreGrabbed", "pumpkinSpiceWhorlUsed", "pyramidBombUsed", "rageGlandVented", "readManualHardcore", "readManualSoftcore", "relayShowSpoilers", "relayShowWarnings", "rememberDesktopSize", "replicaChateauAvailable", "replicaNeverendingPartyAlways", "replicaWitchessSetAvailable", "requireBoxServants", "requireSewerTestItems", "restUsingCampAwayTent", "restUsingChateau", "ROMOfOptimalityAvailable", "safePickpocket", "schoolOfHardKnocksDiplomaAvailable", "scriptCascadingMenus", "serverAddsCustomCombat", "SHAWARMAInitiativeUnlocked", "showForbiddenStores", "showGainsPerUnit", "showIgnoringStorePrices", "showNoSummonOnly", "showTurnFreeOnly", "skeletonStoreAvailable", "sleazeAirportAlways", "snojoAvailable", "sortByEffect", "sortByRoom", "spacegateAlways", "spacegateVaccine1", "spacegateVaccine2", "spacegateVaccine3", "spaceInvaderDefeated", "spelunkyHints", "spiceMelangeUsed", "spookyAirportAlways", "stenchAirportAlways", "stopForFixedWanderer", "stopForUltraRare", "styxPixieVisited", "superconductorDefeated", "suppressCyberRealmDarkMode", "suppressCyberRealmGreenImages", "suppressInappropriateNags", "suppressPowerPixellation", "suppressMallPriceCacheMessages", "telegraphOfficeAvailable", "telescopeLookedHigh", "timeTowerAvailable", "trackLightsOut", "uneffectWithHotTub", "universalSeasoningActive", "universalSeasoningAvailable", "useBookOfEverySkillHardcore", "useBookOfEverySkillSoftcore", "useCrimboToysHardcore", "useCrimboToysSoftcore", "verboseMaximizer", "visitLoungeHardcore", "visitLoungeSoftcore", "visitRumpusHardcore", "visitRumpusSoftcore", "voteAlways", "wildfireBarrelCaulked", "wildfireDusted", "wildfireFracked", "wildfirePumpGreased", "wildfireSprinkled", "yearbookCameraPending", "youRobotScavenged", "_2002MrStoreCreditsCollected", "_affirmationCookieEaten", "_affirmationHateUsed", "_airFryerUsed", "_akgyxothUsed", "_alienAnimalMilkUsed", "_alienPlantPodUsed", "_allYearSucker", "_aprilShower", "_armyToddlerCast", "_aug1Cast", "_aug2Cast", "_aug3Cast", "_aug4Cast", "_aug5Cast", "_aug6Cast", "_aug7Cast", "_aug8Cast", "_aug9Cast", "_aug10Cast", "_aug11Cast", "_aug12Cast", "_aug13Cast", "_aug14Cast", "_aug15Cast", "_aug16Cast", "_aug17Cast", "_aug18Cast", "_aug19Cast", "_aug20Cast", "_aug21Cast", "_aug22Cast", "_aug23Cast", "_aug24Cast", "_aug25Cast", "_aug26Cast", "_aug27Cast", "_aug28Cast", "_aug29Cast", "_aug30Cast", "_aug31Cast", "_augTodayCast", "_authorsInkUsed", "_baconMachineUsed", "_bagOfCandy", "_bagOfCandyUsed", "_bagOTricksUsed", "_ballastTurtleUsed", "_ballInACupUsed", "_ballpit", "_barrelPrayer", "_bastilleLastBattleWon", "_beachCombing", "_bendHellUsed", "_blackMonolithUsed", "_blankoutUsed", "_bonersSummoned", "_bookOfEverySkillUsed", "_borrowedTimeUsed", "_bowleggedSwaggerUsed", "_bowlFullOfJellyUsed", "_boxOfHammersUsed", "_brainPreservationFluidUsed", "_brassDreadFlaskUsed", "_cameraUsed", "_canSeekBirds", "_candyCaneSwordBackAlley", "_candyCaneSwordHauntedBedroom", "_candyCaneSwordHauntedLibrary", "_candyCaneSwordLyle", "_candyCaneSwordMadnessBakery", "_candyCaneSwordOvergrownLot", "_candyCaneSwordOvergrownShrine", "_candyCaneSwordPalindome", "_candyCaneSwordSouthOfTheBorder", "_candyCaneSwordSpookyForest", "_carboLoaded", "_cargoPocketEmptied", "_ceciHatUsed", "_chateauDeskHarvested", "_chateauMonsterFought", "_chibiChanged", "_chronerCrossUsed", "_chronerTriggerUsed", "_chubbyAndPlumpUsed", "_circadianRhythmsRecalled", "_circleDrumUsed", "_clanFortuneBuffUsed", "_claraBellUsed", "_coalPaperweightUsed", "_cocoaDispenserUsed", "_cocktailShakerUsed", "_coldAirportToday", "_coldOne", "_communismUsed", "_confusingLEDClockUsed", "_controlPanelUsed", "_cookbookbatRecipeDrops", "_corruptedStardustUsed", "_cosmicSixPackConjured", "_crappyCameraUsed", "_creepyVoodooDollUsed", "_crimboTraining", "_crimboTree", "_crToday", "_cursedKegUsed", "_cursedMicrowaveUsed", "_cyberTrashCollected", "_dailyDungeonMalwareUsed", "_darkChocolateHeart", "_daycareFights", "_daycareNap", "_daycareSpa", "_daycareToday", "_defectiveTokenChecked", "_defectiveTokenUsed", "_dinseyGarbageDisposed", "_discoKnife", "_distentionPillUsed", "_dnaHybrid", "_docClocksThymeCocktailDrunk", "_drippingHallDoor1", "_drippingHallDoor2", "_drippingHallDoor3", "_drippingHallDoor4", "_drippyCaviarUsed", "_drippyNuggetUsed", "_drippyPilsnerUsed", "_drippyPlumUsed", "_drippyWineUsed", "_eldritchHorrorEvoked", "_eldritchTentacleFought", "_emberingHulkFought", "_entauntaunedToday", "_envyfishEggUsed", "_epicMcTwistUsed", "_essentialTofuUsed", "_etchedHourglassUsed", "_eternalCarBatteryUsed", "_everfullGlassUsed", "_extraGreasySliderEaten", "_eyeAndATwistUsed", "_fancyChessSetUsed", "_falloutShelterSpaUsed", "_fancyHotDogEaten", "_farmerItemsCollected", "_favoriteBirdVisited", "_firedJokestersGun", "_fireExtinguisherRefilled", "_fireStartingKitUsed", "_fireworksShop", "_fireworksShopHatBought", "_fireworksShopEquipmentBought", "_fireworkUsed", "_fishyPipeUsed", "_floundryItemCreated", "_floundryItemUsed", "_freePillKeeperUsed", "_frToday", "_frostyMugUsed", "_fudgeSporkUsed", "_garbageItemChanged", "_gingerBiggerAlligators", "_gingerbreadCityToday", "_gingerbreadClockAdvanced", "_gingerbreadClockVisited", "_gingerbreadColumnDestroyed", "_gingerbreadMobHitUsed", "_glennGoldenDiceUsed", "_glitchItemImplemented", "_gnollEyeUsed", "_governmentPerDiemUsed", "_grimBuff", "_guildManualUsed", "_guzzlrQuestAbandoned", "_hardKnocksDiplomaUsed", "_hippyMeatCollected", "_hobbyHorseUsed", "_hodgmansBlanketDrunk", "_holidayFunUsed", "_holoWristCrystal", "_hotAirportToday", "_hungerSauceUsed", "_hyperinflatedSealLungUsed", "_iceHotelRoomsRaided", "_iceSculptureUsed", "_incredibleSelfEsteemCast", "_infernoDiscoVisited", "_infiniteJellyUsed", "_internetDailyDungeonMalwareBought", "_internetGallonOfMilkBought", "_internetPlusOneBought", "_internetPrintScreenButtonBought", "_internetViralVideoBought", "_interviewIsabella", "_interviewMasquerade", "_interviewVlad", "_inquisitorsUnidentifiableObjectUsed", "_ironicMoustache", "_jackassPlumberGame", "_jarlsCheeseSummoned", "_jarlsCreamSummoned", "_jarlsDoughSummoned", "_jarlsEggsSummoned", "_jarlsFruitSummoned", "_jarlsMeatSummoned", "_jarlsPotatoSummoned", "_jarlsVeggiesSummoned", "_jingleBellUsed", "_jukebox", "_kgbFlywheelCharged", "_kgbLeftDrawerUsed", "_kgbOpened", "_kgbRightDrawerUsed", "_kolConSixPackUsed", "_kolhsCutButNotDried", "_kolhsIsskayLikeAnAshtray", "_kolhsPoeticallyLicenced", "_kolhsSchoolSpirited", "_kudzuSaladEaten", "_lastCombatLost", "_lastCombatWon", "_latteBanishUsed", "_latteCopyUsed", "_latteDrinkUsed", "_leafAntEggCrafted", "_leafDayShortenerCrafted", "_leafTattooCrafted", "_leavesJumped", "_legendaryBeat", "_licenseToChillUsed", "_lodestoneUsed", "_lookingGlass", "_loveTunnelToday", "_loveTunnelUsed", "_luckyGoldRingVolcoino", "_lunchBreak", "_lupineHormonesUsed", "_lyleFavored", "_madLiquorDrunk", "_madTeaParty", "_mafiaMiddleFingerRingUsed", "_managerialManipulationUsed", "_mansquitoSerumUsed", "_mapToACandyRichBlockUsed", "_maydayDropped", "_mayoDeviceRented", "_mayoTankSoaked", "_meatballMachineUsed", "_meatifyMatterUsed", "_milkOfMagnesiumUsed", "_mimeArmyShotglassUsed", "_miniKiwiIntoxicatingSpiritsBought", "_missGravesVermouthDrunk", "_missileLauncherUsed", "_molehillMountainUsed", "_momFoodReceived", "_mrBurnsgerEaten", "_muffinOrderedToday", "_mulliganStewEaten", "_mushroomGardenVisited", "_neverendingPartyToday", "_newYouQuestCompleted", "_olympicSwimmingPool", "_olympicSwimmingPoolItemFound", "_overflowingGiftBasketUsed", "_partyHard", "_pastaAdditive", "_perfectFreezeUsed", "_perfectlyFairCoinUsed", "_petePartyThrown", "_peteRiotIncited", "_photocopyUsed", "_pickyTweezersUsed", "_pickleJuiceDrunk", "_pingPongGame", "_pirateBellowUsed", "_pirateDinghyUsed", "_pirateForkUsed", "_pirateRealmSoldCompass", "_pirateRealmWindicleUsed", "_pixelOrbUsed", "_plumbersMushroomStewEaten", "_pneumaticityPotionUsed", "_portableSteamUnitUsed", "_pottedTeaTreeUsed", "_prToday", "_psychoJarFilled", "_psychoJarUsed", "_psychokineticHugUsed", "_punchingMirrorUsed", "_rainStickUsed", "_redwoodRainStickUsed", "_replicaSnowconeTomeUsed", "_replicaResolutionLibramUsed", "_replicaSmithsTomeUsed", "_requestSandwichSucceeded", "_rhinestonesAcquired", "_saladForkUsed", "_seaJellyHarvested", "_septEmberBalanceChecked", "_setOfJacksUsed", "_sewingKitUsed", "_sexChanged", "_shadowAffinityToday", "_shadowForestLooted", "_shrubDecorated", "_silverDreadFlaskUsed", "_sitCourseCompleted", "_skateBuff1", "_skateBuff2", "_skateBuff3", "_skateBuff4", "_skateBuff5", "_sleazeAirportToday", "_snowballFactoryUsed", "_sobrieTeaUsed", "_softwareGlitchTurnReceived", "_sotParcelReturned", "_spacegateMurderbot", "_spacegateRuins", "_spacegateSpant", "_spacegateToday", "_spacegateVaccine", "_spaghettiBreakfast", "_spaghettiBreakfastEaten", "_spinmasterLatheVisited", "_spinningWheel", "_spookyAirportToday", "_stabonicScrollUsed", "_steelyEyedSquintUsed", "_stenchAirportToday", "_stinkyCheeseBanisherUsed", "_strangeStalagmiteUsed", "_streamsCrossed", "_structuralEmberUsed", "_stuffedPocketwatchUsed", "_styxSprayUsed", "_summonAnnoyanceUsed", "_summonCarrotUsed", "_summonResortPassUsed", "_sweetToothUsed", "_syntheticDogHairPillUsed", "_tacoFlierUsed", "_takerSpaceSuppliesDelivered", "_telegraphOfficeToday", "_templeHiddenPower", "_tempuraAirUsed", "_thesisDelivered", "_tiedUpFlamingLeafletFought", "_tiedUpFlamingMonsteraFought", "_tiedUpLeaviathanFought", "_timeSpinnerReplicatorUsed", "_toastSummoned", "_tonicDjinn", "_treasuryEliteMeatCollected", "_treasuryHaremMeatCollected", "_trivialAvocationsGame", "_tryptophanDartUsed", "_turtlePowerCast", "_twelveNightEnergyUsed", "_ultraMegaSourBallUsed", "_victorSpoilsUsed", "_villainLairCanLidUsed", "_villainLairColorChoiceUsed", "_villainLairDoorChoiceUsed", "_villainLairFirecrackerUsed", "_villainLairSymbologyChoiceUsed", "_villainLairWebUsed", "_vmaskBanisherUsed", "_voraciTeaUsed", "_volcanoItemRedeemed", "_volcanoSuperduperheatedMetal", "_voodooSnuffUsed", "_voteToday", "_VYKEACafeteriaRaided", "_VYKEALoungeRaided", "_walfordQuestStartedToday", "_warbearBankUsed", "_warbearBreakfastMachineUsed", "_warbearGyrocopterUsed", "_warbearSodaMachineUsed", "_wildfireBarrelHarvested", "_witchessBuff", "_workshedItemUsed", "_yamBatteryUsed", "_zombieClover", "_preventScurvy", "lockedItem4637", "lockedItem4638", "lockedItem4639", "lockedItem4646", "lockedItem4647", "unknownRecipe3542", "unknownRecipe3543", "unknownRecipe3544", "unknownRecipe3545", "unknownRecipe3546", "unknownRecipe3547", "unknownRecipe3548", "unknownRecipe3749", "unknownRecipe3751", "unknownRecipe4172", "unknownRecipe4173", "unknownRecipe4174", "unknownRecipe5060", "unknownRecipe5061", "unknownRecipe5062", "unknownRecipe5063", "unknownRecipe5064", "unknownRecipe5066", "unknownRecipe5067", "unknownRecipe5069", "unknownRecipe5070", "unknownRecipe5072", "unknownRecipe5073", "unknownRecipe5670", "unknownRecipe5671", "unknownRecipe6501", "unknownRecipe6564", "unknownRecipe6565", "unknownRecipe6566", "unknownRecipe6567", "unknownRecipe6568", "unknownRecipe6569", "unknownRecipe6570", "unknownRecipe6571", "unknownRecipe6572", "unknownRecipe6573", "unknownRecipe6574", "unknownRecipe6575", "unknownRecipe6576", "unknownRecipe6577", "unknownRecipe6578", "unknownRecipe7752", "unknownRecipe7753", "unknownRecipe7754", "unknownRecipe7755", "unknownRecipe7756", "unknownRecipe7757", "unknownRecipe7758", "unknownRecipe10970", "unknownRecipe10971", "unknownRecipe10972", "unknownRecipe10973", "unknownRecipe10974", "unknownRecipe10975", "unknownRecipe10976", "unknownRecipe10977", "unknownRecipe10978", "unknownRecipe10988", "unknownRecipe10989", "unknownRecipe10990", "unknownRecipe10991", "unknownRecipe10992", "unknownRecipe11000"];
    numericProperties = ["coinMasterIndex", "dailyDeedsVersion", "defaultDropdown1", "defaultDropdown2", "defaultDropdownSplit", "defaultLimit", "fixedThreadPoolSize", "itemManagerIndex", "lastBuffRequestType", "lastGlobalCounterDay", "lastImageCacheClear", "pingDefaultTestPings", "pingLoginCount", "pingLoginGoal", "pingLoginThreshold", "pingTestPings", "previousUpdateRevision", "relayDelayForSVN", "relaySkillButtonCount", "scriptButtonPosition", "statusDropdown", "svnThreadPoolSize", "toolbarPosition", "_beachTides", "_g9Effect", "8BitBonusTurns", "8BitScore", "addingScrolls", "affirmationCookiesEaten", "aminoAcidsUsed", "antagonisticSnowmanKitCost", "ascensionsToday", "asolDeferredPoints", "asolPointsPigSkinner", "asolPointsCheeseWizard", "asolPointsJazzAgent", "autoAbortThreshold", "autoAntidote", "autoBuyPriceLimit", "autopsyTweezersUsed", "autumnatonQuestTurn", "availableCandyCredits", "availableDimes", "availableFunPoints", "availableMrStore2002Credits", "availableQuarters", "availableSeptEmbers", "availableStoreCredits", "availableSwagger", "averageSwagger", "awolMedicine", "awolPointsBeanslinger", "awolPointsCowpuncher", "awolPointsSnakeoiler", "awolDeferredPointsBeanslinger", "awolDeferredPointsCowpuncher", "awolDeferredPointsSnakeoiler", "awolVenom", "bagOTricksCharges", "ballpitBonus", "bankedKarma", "bartenderTurnsUsed", "basementMallPrices", "basementSafetyMargin", "batmanFundsAvailable", "batmanBonusInitialFunds", "batmanTimeLeft", "bearSwagger", "beeCounter", "beGregariousCharges", "beGregariousFightsLeft", "birdformCold", "birdformHot", "birdformRoc", "birdformSleaze", "birdformSpooky", "birdformStench", "blackBartsBootyCost", "blackPuddingsDefeated", "blackForestProgress", "blankOutUsed", "bloodweiserDrunk", "bodyguardCharge", "bondPoints", "bondVillainsDefeated", "boneAbacusVictories", "bookOfFactsGummi", "bookOfFactsPinata", "booPeakProgress", "borisPoints", "breakableHandling", "breakableHandling1964", "breakableHandling9691", "breakableHandling9692", "breakableHandling9699", "breathitinCharges", "brodenBacteria", "brodenSprinkles", "buffBotMessageDisposal", "buffBotPhilanthropyType", "buffJimmyIngredients", "burnoutsDefeated", "burrowgrubSummonsRemaining", "bwApronMealsEaten", "camelSpit", "camerasUsed", "campAwayDecoration", "candyWitchTurnsUsed", "candyWitchCandyTotal", "carboLoading", "catBurglarBankHeists", "cellarLayout", "charitableDonations", "chasmBridgeProgress", "chefTurnsUsed", "chessboardsCleared", "chibiAlignment", "chibiBirthday", "chibiFitness", "chibiIntelligence", "chibiLastVisit", "chibiSocialization", "chilledToTheBone", "cinchoSaltAndLime", "cinderellaMinutesToMidnight", "cinderellaScore", "cocktailSummons", "commerceGhostCombats", "cookbookbatIngredientsCharge", "controlPanelOmega", "cornucopiasOpened", "cosmicBowlingBallReturnCombats", "cozyCounter6332", "cozyCounter6333", "cozyCounter6334", "craftingClay", "craftingLeather", "craftingStraw", "crimbo16BeardChakraCleanliness", "crimbo16BootsChakraCleanliness", "crimbo16BungChakraCleanliness", "crimbo16CrimboHatChakraCleanliness", "crimbo16GutsChakraCleanliness", "crimbo16HatChakraCleanliness", "crimbo16JellyChakraCleanliness", "crimbo16LiverChakraCleanliness", "crimbo16NippleChakraCleanliness", "crimbo16NoseChakraCleanliness", "crimbo16ReindeerChakraCleanliness", "crimbo16SackChakraCleanliness", "crimboTrainingSkill", "crimboTreeDays", "cubelingProgress", "currentExtremity", "currentHedgeMazeRoom", "currentMojoFilters", "currentNunneryMeat", "currentPortalEnergy", "currentReplicaStoreYear", "cursedMagnifyingGlassCount", "cyrptAlcoveEvilness", "cyrptCrannyEvilness", "cyrptNicheEvilness", "cyrptNookEvilness", "cyrptTotalEvilness", "darkGyfftePoints", "dartsThrown", "daycareEquipment", "daycareInstructors", "daycareLastScavenge", "daycareToddlers", "dbNemesisSkill1", "dbNemesisSkill2", "dbNemesisSkill3", "desertExploration", "desktopHeight", "desktopWidth", "dinseyFilthLevel", "dinseyFunProgress", "dinseyNastyBearsDefeated", "dinseySocialJusticeIProgress", "dinseySocialJusticeIIProgress", "dinseyTouristsFed", "dinseyToxicMultiplier", "doctorBagQuestLights", "doctorBagUpgrades", "dreadScroll1", "dreadScroll2", "dreadScroll3", "dreadScroll4", "dreadScroll5", "dreadScroll6", "dreadScroll7", "dreadScroll8", "dripAdventuresSinceAscension", "drippingHallAdventuresSinceAscension", "drippingTreesAdventuresSinceAscension", "drippyBatsUnlocked", "drippyJuice", "drippyOrbsClaimed", "droneSelfDestructChipsUsed", "drunkenSwagger", "edDefeatAbort", "edPoints", "eldritchTentaclesFought", "electricKoolAidEaten", "elfGratitude", "encountersUntilDMTChoice", "encountersUntilYachtzeeChoice", "encountersUntilNEPChoice", "encountersUntilSRChoice", "ensorceleeLevel", "entauntaunedColdRes", "essenceOfAnnoyanceCost", "essenceOfBearCost", "extraRolloverAdventures", "falloutShelterLevel", "familiarSweat", "fingernailsClipped", "fistSkillsKnown", "flyeredML", "fossilB", "fossilD", "fossilN", "fossilP", "fossilS", "fossilW", "fratboysDefeated", "frenchGuardTurtlesFreed", "funGuyMansionKills", "garbageChampagneCharge", "garbageFireProgress", "garbageShirtCharge", "garbageTreeCharge", "garlandUpgrades", "getsYouDrunkTurnsLeft", "ghostPepperTurnsLeft", "gingerDigCount", "gingerLawChoice", "gingerMuscleChoice", "gingerTrainScheduleStudies", "gladiatorBallMovesKnown", "gladiatorBladeMovesKnown", "gladiatorNetMovesKnown", "glitchItemCost", "glitchItemImplementationCount", "glitchItemImplementationLevel", "glitchSwagger", "gloverPoints", "gnasirProgress", "goldenMrAccessories", "gongPath", "gooseDronesRemaining", "goreCollected", "gourdItemCount", "greyYouPoints", "grimoire1Summons", "grimoire2Summons", "grimoire3Summons", "grimstoneCharge", "guardTurtlesFreed", "guideToSafariCost", "guyMadeOfBeesCount", "guzzlrBronzeDeliveries", "guzzlrDeliveryProgress", "guzzlrGoldDeliveries", "guzzlrPlatinumDeliveries", "haciendaLayout", "hallowiener8BitRealm", "hallowienerCoinspiracy", "hareMillisecondsSaved", "hareTurnsUsed", "heavyRainsStartingThunder", "heavyRainsStartingRain", "heavyRainsStartingLightning", "heroDonationBoris", "heroDonationJarlsberg", "heroDonationSneakyPete", "hiddenApartmentProgress", "hiddenBowlingAlleyProgress", "hiddenHospitalProgress", "hiddenOfficeProgress", "hiddenTavernUnlock", "highTopPumped", "hippiesDefeated", "holidayHalsBookCost", "holidaySwagger", "homemadeRobotUpgrades", "homebodylCharges", "hpAutoRecovery", "hpAutoRecoveryTarget", "iceSwagger", "jarlsbergPoints", "juicyGarbageUsed", "jungCharge", "junglePuns", "knownAscensions", "kolhsTotalSchoolSpirited", "lastAnticheeseDay", "lastArcadeAscension", "lastBadMoonReset", "lastBangPotionReset", "lastBattlefieldReset", "lastBeardBuff", "lastBreakfast", "lastCartographyBooPeak", "lastCartographyCastleTop", "lastCartographyDarkNeck", "lastCartographyDefiledNook", "lastCartographyFratHouse", "lastCartographyFratHouseVerge", "lastCartographyGuanoJunction", "lastCartographyHauntedBilliards", "lastCartographyHippyCampVerge", "lastCartographyZeppelinProtesters", "lastCastleGroundUnlock", "lastCastleTopUnlock", "lastCellarReset", "lastChanceThreshold", "lastChasmReset", "lastColosseumRoundWon", "lastCouncilVisit", "lastCounterDay", "lastDesertUnlock", "lastDispensaryOpen", "lastDMTDuplication", "lastDwarfFactoryReset", "lastEVHelmetValue", "lastEVHelmetReset", "lastEmptiedStorage", "lastFilthClearance", "lastGoofballBuy", "lastGuildStoreOpen", "lastGuyMadeOfBeesReset", "lastFratboyCall", "lastFriarCeremonyAscension", "lastFriarsElbowNC", "lastFriarsHeartNC", "lastFriarsNeckNC", "lastHippyCall", "lastIslandUnlock", "lastKeyotronUse", "lastKingLiberation", "lastLightsOutTurn", "lastMushroomPlot", "lastMiningReset", "lastNemesisReset", "lastPaperStripReset", "lastPirateEphemeraReset", "lastPirateInsultReset", "lastPlusSignUnlock", "lastQuartetAscension", "lastQuartetRequest", "lastSecondFloorUnlock", "lastShadowForgeUnlockAdventure", "lastSkateParkReset", "lastStillBeatingSpleen", "lastTavernAscension", "lastTavernSquare", "lastTelescopeReset", "lastTempleAdventures", "lastTempleButtonsUnlock", "lastTempleUnlock", "lastThingWithNoNameDefeated", "lastTowelAscension", "lastTr4pz0rQuest", "lastTrainsetConfiguration", "lastVioletFogMap", "lastVoteMonsterTurn", "lastWartDinseyDefeated", "lastWuTangDefeated", "lastYearbookCameraAscension", "lastZapperWand", "lastZapperWandExplosionDay", "lawOfAveragesCost", "legacyPoints", "libramSummons", "lightsOutAutomation", "louvreDesiredGoal", "louvreGoal", "lovebugsAridDesert", "lovebugsBeachBuck", "lovebugsBooze", "lovebugsChroner", "lovebugsCoinspiracy", "lovebugsCyrpt", "lovebugsFreddy", "lovebugsFunFunds", "lovebugsHoboNickel", "lovebugsItemDrop", "lovebugsMeat", "lovebugsMeatDrop", "lovebugsMoxie", "lovebugsMuscle", "lovebugsMysticality", "lovebugsOilPeak", "lovebugsOrcChasm", "lovebugsPowder", "lovebugsWalmart", "lttQuestDifficulty", "lttQuestStageCount", "manaBurnSummonThreshold", "manaBurningThreshold", "manaBurningTrigger", "manorDrawerCount", "manualOfNumberologyCost", "mapToKokomoCost", "masksUnlocked", "maximizerMRUSize", "maximizerCombinationLimit", "maximizerEquipmentLevel", "maximizerEquipmentScope", "maximizerMaxPrice", "maximizerPriceLevel", "maxManaBurn", "mayflyExperience", "mayoLevel", "meansuckerPrice", "merkinVocabularyMastery", "miniAdvClass", "miniMartinisDrunk", "moleTunnelLevel", "mothershipProgress", "mpAutoRecovery", "mpAutoRecoveryTarget", "munchiesPillsUsed", "mushroomGardenCropLevel", "nanopolymerSpiderWebsUsed", "nextAprilBandTurn", "nextParanormalActivity", "nextQuantumFamiliarOwnerId", "nextQuantumFamiliarTurn", "noobPoints", "noobDeferredPoints", "noodleSummons", "nsContestants1", "nsContestants2", "nsContestants3", "nuclearAutumnPoints", "numericSwagger", "nunsVisits", "oilPeakProgress", "optimalSwagger", "optimisticCandleProgress", "palindomeDudesDefeated", "parasolUsed", "peaceTurkeyIndex", "pendingMapReflections", "pingpongSkill", "pirateRealmPlasticPiratesDefeated", "pirateRealmShipsDestroyed", "pirateRealmStormsEscaped", "pirateSwagger", "plantingDay", "plumberBadgeCost", "plumberCostumeCost", "plumberPoints", "poolSharkCount", "poolSkill", "powerPillProgress", "primaryLabGooIntensity", "prismaticSummons", "procrastinatorLanguageFluency", "promptAboutCrafting", "puzzleChampBonus", "pyramidPosition", "quantumPoints", "reagentSummons", "reanimatorArms", "reanimatorLegs", "reanimatorSkulls", "reanimatorWeirdParts", "reanimatorWings", "recentLocations", "redSnapperProgress", "relayPort", "relocatePygmyJanitor", "relocatePygmyLawyer", "rockinRobinProgress", "romanCandelabraRedCasts", "romanCandelabraBlueCasts", "romanCandelabraYellowCasts", "romanCandelabraGreenCasts", "romanCandelabraPurpleCasts", "ROMOfOptimalityCost", "rumpelstiltskinKidsRescued", "rumpelstiltskinTurnsUsed", "rwbMonsterCount", "safariSwagger", "sausageGrinderUnits", "schoolOfHardKnocksDiplomaCost", "schoolSwagger", "scrapbookCharges", "screechCombats", "scriptMRULength", "seaodesFound", "SeasoningSwagger", "sexChanges", "shenInitiationDay", "shockingLickCharges", "singleFamiliarRun", "skillBurn3", "skillBurn90", "skillBurn153", "skillBurn154", "skillBurn155", "skillBurn236", "skillBurn237", "skillBurn1019", "skillBurn5017", "skillBurn6014", "skillBurn6015", "skillBurn6016", "skillBurn6020", "skillBurn6021", "skillBurn6022", "skillBurn6023", "skillBurn6024", "skillBurn6026", "skillBurn6028", "skillBurn7323", "skillBurn14008", "skillBurn14028", "skillBurn14038", "skillBurn15011", "skillBurn15028", "skillBurn17005", "skillBurn22034", "skillBurn22035", "skillBurn23301", "skillBurn23302", "skillBurn23303", "skillBurn23304", "skillBurn23305", "skillBurn23306", "skillLevel46", "skillLevel47", "skillLevel48", "skillLevel117", "skillLevel118", "skillLevel121", "skillLevel128", "skillLevel134", "skillLevel135", "skillLevel144", "skillLevel180", "skillLevel188", "skillLevel227", "skillLevel7254", "slimelingFullness", "slimelingStacksDropped", "slimelingStacksDue", "smoresEaten", "smutOrcNoncombatProgress", "sneakyPetePoints", "snojoMoxieWins", "snojoMuscleWins", "snojoMysticalityWins", "sourceAgentsDefeated", "sourceEnlightenment", "sourceInterval", "sourcePoints", "sourceTerminalGram", "sourceTerminalPram", "sourceTerminalSpam", "spaceBabyLanguageFluency", "spacePirateLanguageFluency", "spelunkyNextNoncombat", "spelunkySacrifices", "spelunkyWinCount", "spookyPuttyCopiesMade", "spookyVHSTapeMonsterTurn", "statbotUses", "sugarCounter4178", "sugarCounter4179", "sugarCounter4180", "sugarCounter4181", "sugarCounter4182", "sugarCounter4183", "sugarCounter4191", "summonAnnoyanceCost", "sweat", "tacoDanCocktailSauce", "tacoDanFishMeat", "takerSpaceAnchor", "takerSpaceGold", "takerSpaceMast", "takerSpaceRum", "takerSpaceSilk", "takerSpaceSpice", "tavernLayout", "telescopeUpgrades", "tempuraSummons", "timeSpinnerMedals", "timesRested", "tomeSummons", "totalCharitableDonations", "trainsetPosition", "turtleBlessingTurns", "twinPeakProgress", "twoCRSPoints", "unicornHornInflation", "universalSeasoningCost", "usable1HWeapons", "usable1xAccs", "usable2HWeapons", "usable3HWeapons", "usableAccessories", "usableHats", "usableOffhands", "usableOther", "usablePants", "usableShirts", "valueOfAdventure", "valueOfInventory", "valueOfStill", "valueOfTome", "vintnerCharge", "vintnerWineLevel", "violetFogGoal", "walfordBucketProgress", "warehouseProgress", "welcomeBackAdv", "wereProfessorBite", "wereProfessorKick", "wereProfessorLiver", "wereProfessorPoints", "wereProfessorRend", "wereProfessorResearchPoints", "wereProfessorStomach", "wereProfessorTransformTurns", "whetstonesUsed", "wolfPigsEvicted", "wolfTurnsUsed", "writingDesksDefeated", "xoSkeleltonXProgress", "xoSkeleltonOProgress", "yearbookCameraAscensions", "yearbookCameraUpgrades", "youRobotBody", "youRobotBottom", "youRobotLeft", "youRobotPoints", "youRobotRight", "youRobotTop", "zeppelinProtestors", "zigguratLianas", "zombiePoints", "_absintheDrops", "_abstractionDropsCrown", "_aguaDrops", "_xenomorphCharge", "_ancestralRecallCasts", "_antihangoverBonus", "_aprilBandInstruments", "_aprilBandSaxophoneUses", "_aprilBandTomUses", "_aprilBandTubaUses", "_aprilBandStaffUses", "_aprilBandPiccoloUses", "_astralDrops", "_augSkillsCast", "_assertYourAuthorityCast", "_automatedFutureManufactures", "_autumnatonQuests", "_backUpUses", "_badlyRomanticArrows", "_badgerCharge", "_balefulHowlUses", "_banderRunaways", "_bastilleCheese", "_bastilleGames", "_bastilleGameTurn", "_bastilleLastCheese", "_batWingsCauldronUsed", "_batWingsFreeFights", "_batWingsRestUsed", "_batWingsSwoopUsed", "_beanCannonUses", "_bearHugs", "_beerLensDrops", "_bellydancerPickpockets", "_benettonsCasts", "_birdsSoughtToday", "_bookOfFactsWishes", "_bookOfFactsTatters", "_boomBoxFights", "_boomBoxSongsLeft", "_bootStomps", "_boxingGloveArrows", "_brickoEyeSummons", "_brickoFights", "_campAwayCloudBuffs", "_campAwaySmileBuffs", "_candyEggsDeviled", "_candySummons", "_captainHagnkUsed", "_carnieCandyDrops", "_carnivorousPottedPlantWins", "_carrotNoseDrops", "_catBurglarCharge", "_catBurglarHeistsComplete", "_cheerleaderSteam", "_chestXRayUsed", "_chibiAdventures", "_chipBags", "_chocolateCigarsUsed", "_chocolateCoveredPingPongBallsUsed", "_chocolateSculpturesUsed", "_chocolatesUsed", "_chronolithActivations", "_chronolithNextCost", "_cinchUsed", "_cinchoRests", "_circadianRhythmsAdventures", "_clanFortuneConsultUses", "_clipartSummons", "_cloversPurchased", "_coldMedicineConsults", "_coldMedicineEquipmentTaken", "_companionshipCasts", "_cookbookbatCrafting", "_cookbookbatCombatsUntilNewQuest", "_cosmicBowlingSkillsUsed", "_crimbo21ColdResistance", "_cyberFreeFights", "_cyberZone1Turns", "_cyberZone2Turns", "_cyberZone3Turns", "_dailySpecialPrice", "_dartsLeft", "_daycareGymScavenges", "_daycareRecruits", "_deckCardsDrawn", "_deluxeKlawSummons", "_demandSandwich", "_detectiveCasesCompleted", "_disavowed", "_dnaPotionsMade", "_donhosCasts", "_douseFoeUses", "_dreamJarDrops", "_drunkPygmyBanishes", "_edDefeats", "_edLashCount", "_elfGuardCookingUsed", "_elronsCasts", "_enamorangs", "_energyCollected", "_expertCornerCutterUsed", "_extraTimeUsed", "_favorRareSummons", "_feastUsed", "_feelinTheRhythm", "_feelPrideUsed", "_feelExcitementUsed", "_feelHatredUsed", "_feelLonelyUsed", "_feelNervousUsed", "_feelEnvyUsed", "_feelDisappointedUsed", "_feelSuperiorUsed", "_feelLostUsed", "_feelNostalgicUsed", "_feelPeacefulUsed", "_fingertrapArrows", "_fireExtinguisherCharge", "_fragrantHerbsUsed", "_freeBeachWalksUsed", "_frButtonsPressed", "_fudgeWaspFights", "_gapBuffs", "_garbageFireDrops", "_garbageFireDropsCrown", "_genieFightsUsed", "_genieWishesUsed", "_gibbererAdv", "_gibbererCharge", "_gingerbreadCityTurns", "_glarkCableUses", "_glitchMonsterFights", "_gnomeAdv", "_godLobsterFights", "_goldenMoneyCharge", "_gongDrops", "_gothKidCharge", "_gothKidFights", "_greyYouAdventures", "_grimBrotherCharge", "_grimFairyTaleDrops", "_grimFairyTaleDropsCrown", "_grimoireConfiscatorSummons", "_grimoireGeekySummons", "_grimstoneMaskDrops", "_grimstoneMaskDropsCrown", "_grooseCharge", "_grooseDrops", "_grubbyWoolDrops", "_guzzlrDeliveries", "_guzzlrGoldDeliveries", "_guzzlrPlatinumDeliveries", "_hareAdv", "_hareCharge", "_highTopPumps", "_hipsterAdv", "_hoardedCandyDropsCrown", "_hoboUnderlingSummons", "_holidayMultitaskingUsed", "_holoWristDrops", "_holoWristProgress", "_hotAshesDrops", "_hotJellyUses", "_hotTubSoaks", "_humanMuskUses", "_iceballUses", "_inigosCasts", "_ironTricornHeadbuttUsed", "_jerksHealthMagazinesUsed", "_jiggleCheese", "_jiggleCream", "_jiggleLife", "_jiggleSteak", "_jitbCharge", "_juneCleaverAdvs", "_juneCleaverFightsLeft", "_juneCleaverEncounters", "_juneCleaverStench", "_juneCleaverSpooky", "_juneCleaverSleaze", "_juneCleaverHot", "_juneCleaverCold", "_juneCleaverSkips", "_jungDrops", "_kgbClicksUsed", "_kgbDispenserUses", "_kgbTranquilizerDartUses", "_klawSummons", "_kloopCharge", "_kloopDrops", "_kolhsAdventures", "_kolhsSavedByTheBell", "_lastDailyDungeonRoom", "_lastSausageMonsterTurn", "_lastZomboEye", "_latteRefillsUsed", "_lawOfAveragesUsed", "_leafblowerML", "_leafLassosCrafted", "_leafMonstersFought", "_leavesBurned", "_legionJackhammerCrafting", "_llamaCharge", "_longConUsed", "_lovebugsBeachBuck", "_lovebugsChroner", "_lovebugsCoinspiracy", "_lovebugsFreddy", "_lovebugsFunFunds", "_lovebugsHoboNickel", "_lovebugsWalmart", "_loveChocolatesUsed", "_lynyrdSnareUses", "_machineTunnelsAdv", "_macrometeoriteUses", "_mafiaThumbRingAdvs", "_mapToACandyRichBlockDrops", "_mayamRests", "_mayflowerDrops", "_mayflySummons", "_mcHugeLargeAvalancheUses", "_mcHugeLargeSkiPlowUses", "_mcHugeLargeSlashUses", "_mediumSiphons", "_meteoriteAdesUsed", "_meteorShowerUses", "_micrometeoriteUses", "_mildEvilPerpetrated", "_mimicEggsDonated", "_mimicEggsObtained", "_miniKiwiDrops", "_miniMartiniDrops", "_monkeyPawWishesUsed", "_monsterHabitatsFightsLeft", "_monsterHabitatsRecalled", "_monstersMapped", "_mushroomGardenFights", "_nanorhinoCharge", "_navelRunaways", "_neverendingPartyFreeTurns", "_newYouQuestSharpensDone", "_newYouQuestSharpensToDo", "_nextColdMedicineConsult", "_nextQuantumAlignment", "_nightmareFuelCharges", "_noobSkillCount", "_nuclearStockpileUsed", "_oilExtracted", "_oldSchoolCocktailCraftingUsed", "_olfactionsUsed", "_optimisticCandleDropsCrown", "_oreDropsCrown", "_otoscopeUsed", "_oysterEggsFound", "_pantsgivingBanish", "_pantsgivingCount", "_pantsgivingCrumbs", "_pantsgivingFullness", "_pasteDrops", "_peteJukeboxFixed", "_peteJumpedShark", "_petePeeledOut", "_photoBoothEffects", "_photoBoothEquipment", "_pieDrops", "_piePartsCount", "_pirateRealmGold", "_pirateRealmGrog", "_pirateRealmGrub", "_pirateRealmGuns", "_pirateRealmIslandMonstersDefeated", "_pirateRealmSailingTurns", "_pirateRealmShipSpeed", "_pixieCharge", "_pocketProfessorLectures", "_poisonArrows", "_pokeGrowFertilizerDrops", "_poolGames", "_powderedGoldDrops", "_powderedMadnessUses", "_powerfulGloveBatteryPowerUsed", "_powerPillDrops", "_powerPillUses", "_precisionCasts", "_questPartyFairItemsOpened", "_radlibSummons", "_raindohCopiesMade", "_rapidPrototypingUsed", "_raveStealCount", "_reflexHammerUsed", "_resolutionAdv", "_resolutionRareSummons", "_riftletAdv", "_robinEggDrops", "_roboDrops", "_rogueProgramCharge", "_romanticFightsLeft", "_saberForceMonsterCount", "_saberForceUses", "_saberMod", "_saltGrainsConsumed", "_sandwormCharge", "_saplingsPlanted", "_sausageFights", "_sausagesEaten", "_sausagesMade", "_sealFigurineUses", "_sealScreeches", "_sealsSummoned", "_shadowBricksUsed", "_shadowRiftCombats", "_shatteringPunchUsed", "_shortOrderCookCharge", "_shrubCharge", "_slimeVialsHarvested", "_sloppyDinerBeachBucks", "_smilesOfMrA", "_smithsnessSummons", "_snojoFreeFights", "_snojoParts", "_snokebombUsed", "_snowconeSummons", "_snowglobeDrops", "_snowmanHatPlaceUsed", "_snowSuitCount", "_sourceTerminalDigitizeMonsterCount", "_sourceTerminalDigitizeUses", "_sourceTerminalDuplicateUses", "_sourceTerminalEnhanceUses", "_sourceTerminalExtrudes", "_sourceTerminalPortscanUses", "_spaceFurDropsCrown", "_spacegatePlanetIndex", "_spacegateTurnsLeft", "_spaceJellyfishDrops", "_speakeasyDrinksDrunk", "_speakeasyFreeFights", "_spelunkerCharges", "_spelunkingTalesDrops", "_spikolodonSpikeUses", "_spookyJellyUses", "_stackLumpsUses", "_steamCardDrops", "_stickerSummons", "_stinkyCheeseCount", "_stressBallSqueezes", "_sugarSummons", "_surprisinglySweetSlashUsed", "_surprisinglySweetStabUsed", "_sweatOutSomeBoozeUsed", "_taffyRareSummons", "_taffyYellowSummons", "_tearawayPantsAdvs", "_thanksgettingFoodsEaten", "_thingfinderCasts", "_thinknerdPackageDrops", "_thorsPliersCrafting", "_timeHelmetAdv", "_timeSpinnerMinutesUsed", "_tokenDrops", "_transponderDrops", "_turkeyBlastersUsed", "_turkeyBooze", "_turkeyMuscle", "_turkeyMyst", "_turkeyMoxie", "_unaccompaniedMinerUsed", "_unconsciousCollectiveCharge", "_universalSeasoningsUsed", "_universeCalculated", "_universeImploded", "_usedReplicaBatoomerang", "_vampyreCloakeFormUses", "_villainLairProgress", "_vitachocCapsulesUsed", "_vmaskAdv", "_voidFreeFights", "_volcanoItem1", "_volcanoItem2", "_volcanoItem3", "_volcanoItemCount1", "_volcanoItemCount2", "_volcanoItemCount3", "_voteFreeFights", "_VYKEACompanionLevel", "_warbearAutoAnvilCrafting", "_waxGlobDrops", "_whiteRiceDrops", "_witchessFights", "_xoHugsUsed", "_yellowPixelDropsCrown", "_zapCount", "_zombieSmashPocketsUsed", "lastNoncombat15", "lastNoncombat257", "lastNoncombat270", "lastNoncombat273", "lastNoncombat280", "lastNoncombat297", "lastNoncombat322", "lastNoncombat323", "lastNoncombat324", "lastNoncombat341", "lastNoncombat343", "lastNoncombat384", "lastNoncombat386", "lastNoncombat391", "lastNoncombat405", "lastNoncombat406", "lastNoncombat439", "lastNoncombat440", "lastNoncombat441", "lastNoncombat450", "lastNoncombat533", "lastNoncombat539", "lastNoncombat540", "lastNoncombat541", "lastNoncombat588", "lastNoncombat589", "lastNoncombat590", "lastNoncombat591", "lastNoncombat592"];
    monsterProperties = ["beGregariousMonster", "bodyguardChatMonster", "cameraMonster", "chateauMonster", "clumsinessGroveBoss", "crappyCameraMonster", "crudeMonster", "enamorangMonster", "envyfishMonster", "glacierOfJerksBoss", "holdHandsMonster", "iceSculptureMonster", "lastCopyableMonster", "longConMonster", "maelstromOfLoversBoss", "makeFriendsMonster", "merkinLockkeyMonster", "monkeyPointMonster", "motifMonster", "nosyNoseMonster", "olfactedMonster", "photocopyMonster", "rainDohMonster", "romanticTarget", "rufusDesiredEntity", "rwbMonster", "screencappedMonster", "spookyPuttyMonster", "spookyVHSTapeMonster", "stenchCursedMonster", "superficiallyInterestedMonster", "waxMonster", "yearbookCameraTarget", "_cookbookbatQuestMonster", "_gallapagosMonster", "_jiggleCreamedMonster", "_latteMonster", "_monsterHabitatsMonster", "_nanorhinoBanishedMonster", "_newYouQuestMonster", "_prankCardMonster", "_relativityMonster", "_saberForceMonster", "_sourceTerminalDigitizeMonster", "_trickCoinMonster", "_voteMonster"];
    locationProperties = ["autumnatonQuestLocation", "currentJunkyardLocation", "doctorBagQuestLocation", "ghostLocation", "guzzlrQuestLocation", "lastAdventure", "nextAdventure", "nextSpookyravenElizabethRoom", "nextSpookyravenStephenRoom", "rwbLocation", "sourceOracleTarget", "_cookbookbatQuestLastLocation", "_floundryBassLocation", "_floundryCarpLocation", "_floundryCodLocation", "_floundryHatchetfishLocation", "_floundryTroutLocation", "_floundryTunaLocation", "_lastPirateRealmIsland", "_sotParcelLocation"];
    stringProperties = ["autoLogin", "browserBookmarks", "chatFontSize", "combatHotkey0", "combatHotkey1", "combatHotkey2", "combatHotkey3", "combatHotkey4", "combatHotkey5", "combatHotkey6", "combatHotkey7", "combatHotkey8", "combatHotkey9", "commandBufferGCLI", "commandBufferTabbedChat", "commandLineNamespace", "dailyDeedsOptions", "defaultBorderColor", "displayName", "externalEditor", "getBreakfast", "headerStates", "highlightList", "http.proxyHost", "http.proxyPassword", "http.proxyPort", "http.proxyUser", "https.proxyHost", "https.proxyPassword", "https.proxyPort", "https.proxyUser", "initialDesktop", "initialFrames", "lastRelayUpdate", "lastUserAgent", "lastUsername", "logPreferenceChangeFilter", "loginScript", "loginServerName", "loginWindowLogo", "logoutScript", "pingDefaultTestPage", "pingLatest", "pingLoginAbort", "pingLoginCheck", "pingLoginFail", "pingLongest", "pingShortest", "pingTestPage", "previousNotifyList", "previousUpdateVersion", "saveState", "saveStateActive", "scriptList", "swingLookAndFeel", "userAgent", "8BitColor", "afterAdventureScript", "antiScientificMethod", "autoOlfact", "autoPutty", "autumnatonUpgrades", "backupCameraMode", "banishedMonsters", "banishedPhyla", "banishingShoutMonsters", "batmanStats", "batmanZone", "batmanUpgrades", "battleAction", "beachHeadsUnlocked", "beastSkillsAvailable", "beastSkillsKnown", "beforePVPScript", "betweenBattleScript", "boomBoxSong", "breakfastAlways", "breakfastHardcore", "breakfastSoftcore", "buffBotCasting", "buyScript", "cargoPocketsEmptied", "cargoPocketScraps", "chatbotScript", "chatPlayerScript", "chibiName", "choiceAdventureScript", "chosenTrip", "clanFortuneReply1", "clanFortuneReply2", "clanFortuneReply3", "clanFortuneWord1", "clanFortuneWord2", "clanFortuneWord3", "commerceGhostItem", "counterScript", "copperheadClubHazard", "crimbo23ArmoryControl", "crimbo23BarControl", "crimbo23CafeControl", "crimbo23CottageControl", "crimbo23FoundryControl", "crimbotChassis", "crimbotArm", "crimbotPropulsion", "crystalBallPredictions", "csServicesPerformed", "currentAstralTrip", "currentDistillateMods", "currentEasyBountyItem", "currentHardBountyItem", "currentHippyStore", "currentJunkyardTool", "currentLlamaForm", "currentMood", "currentPVPSeason", "currentPvpVictories", "currentSpecialBountyItem", "currentSITSkill", "customCombatScript", "cyrusAdjectives", "defaultFlowerLossMessage", "defaultFlowerWinMessage", "demonName1", "demonName2", "demonName3", "demonName4", "demonName5", "demonName6", "demonName7", "demonName8", "demonName9", "demonName10", "demonName11", "demonName12", "demonName13", "dinseyGatorStenchDamage", "dinseyRollercoasterStats", "doctorBagQuestItem", "dolphinItem", "duckAreasCleared", "duckAreasSelected", "edPiece", "enamorangMonsterTurn", "ensorcelee", "EVEDirections", "everfullDartPerks", "extraCosmeticModifiers", "familiarScript", "forbiddenStores", "gameProBossSpecialPower", "gooseReprocessed", "grimoireSkillsHardcore", "grimoireSkillsSoftcore", "grimstoneMaskPath", "guzzlrQuestClient", "guzzlrQuestBooze", "guzzlrQuestTier", "harvestGardenHardcore", "harvestGardenSoftcore", "hpAutoRecoveryItems", "invalidBuffMessage", "jickSwordModifier", "juneCleaverQueue", "kingLiberatedScript", "lassoTraining", "lastAdventureContainer", "lastAdventureTrail", "lastBangPotion819", "lastBangPotion820", "lastBangPotion821", "lastBangPotion822", "lastBangPotion823", "lastBangPotion824", "lastBangPotion825", "lastBangPotion826", "lastBangPotion827", "lastChanceBurn", "lastChessboard", "lastCombatEnvironments", "lastDwarfDiceRolls", "lastDwarfDigitRunes", "lastDwarfEquipmentRunes", "lastDwarfFactoryItem118", "lastDwarfFactoryItem119", "lastDwarfFactoryItem120", "lastDwarfFactoryItem360", "lastDwarfFactoryItem361", "lastDwarfFactoryItem362", "lastDwarfFactoryItem363", "lastDwarfFactoryItem364", "lastDwarfFactoryItem365", "lastDwarfFactoryItem910", "lastDwarfFactoryItem3199", "lastDwarfOfficeItem3208", "lastDwarfOfficeItem3209", "lastDwarfOfficeItem3210", "lastDwarfOfficeItem3211", "lastDwarfOfficeItem3212", "lastDwarfOfficeItem3213", "lastDwarfOfficeItem3214", "lastDwarfOreRunes", "lastDwarfHopper1", "lastDwarfHopper2", "lastDwarfHopper3", "lastDwarfHopper4", "lastEncounter", "lastMacroError", "lastMessageId", "lastPaperStrip3144", "lastPaperStrip4138", "lastPaperStrip4139", "lastPaperStrip4140", "lastPaperStrip4141", "lastPaperStrip4142", "lastPaperStrip4143", "lastPaperStrip4144", "lastPirateEphemera", "lastPorkoBoard", "lastPorkoPayouts", "lastPorkoExpected", "lastSlimeVial3885", "lastSlimeVial3886", "lastSlimeVial3887", "lastSlimeVial3888", "lastSlimeVial3889", "lastSlimeVial3890", "lastSlimeVial3891", "lastSlimeVial3892", "lastSlimeVial3893", "lastSlimeVial3894", "lastSlimeVial3895", "lastSlimeVial3896", "lastSelectedFaxbot", "lastSuccessfulFaxbot", "latteIngredients", "latteModifier", "latteUnlocks", "ledCandleMode", "libramSkillsHardcore", "libramSkillsSoftcore", "louvreOverride", "lovePotion", "lttQuestName", "maximizerList", "maximizerMRUList", "mayoInMouth", "mayoMinderSetting", "merkinQuestPath", "mimicEggMonsters", "mineLayout1", "mineLayout2", "mineLayout3", "mineLayout4", "mineLayout5", "mineLayout6", "mpAutoRecoveryItems", "muffinOnOrder", "nextDistillateMods", "nextQuantumFamiliarName", "nextQuantumFamiliarOwner", "noncombatForcers", "nsChallenge2", "nsChallenge3", "nsChallenge4", "nsChallenge5", "nsTowerDoorKeysUsed", "oceanAction", "oceanDestination", "parkaMode", "pastaThrall1", "pastaThrall2", "pastaThrall3", "pastaThrall4", "pastaThrall5", "pastaThrall6", "pastaThrall7", "pastaThrall8", "peteMotorbikeTires", "peteMotorbikeGasTank", "peteMotorbikeHeadlight", "peteMotorbikeCowling", "peteMotorbikeMuffler", "peteMotorbikeSeat", "pieStuffing", "plantingDate", "plantingLength", "plantingScript", "plumberCostumeWorn", "pokefamBoosts", "postAscensionScript", "preAscensionScript", "questClumsinessGrove", "questDoctorBag", "questECoBucket", "questESlAudit", "questESlBacteria", "questESlCheeseburger", "questESlCocktail", "questESlDebt", "questESlFish", "questESlMushStash", "questESlSalt", "questESlSprinkles", "questESpClipper", "questESpEVE", "questESpFakeMedium", "questESpGore", "questESpJunglePun", "questESpOutOfOrder", "questESpSerum", "questESpSmokes", "questEStFishTrash", "questEStGiveMeFuel", "questEStNastyBears", "questEStSocialJusticeI", "questEStSocialJusticeII", "questEStSuperLuber", "questEStWorkWithFood", "questEStZippityDooDah", "questEUNewYou", "questF01Primordial", "questF02Hyboria", "questF03Future", "questF04Elves", "questF05Clancy", "questG01Meatcar", "questG02Whitecastle", "questG03Ego", "questG04Nemesis", "questG05Dark", "questG06Delivery", "questG07Myst", "questG08Moxie", "questG09Muscle", "questGlacierOfJerks", "questGuzzlr", "questI01Scapegoat", "questI02Beat", "questL02Larva", "questL03Rat", "questL04Bat", "questL05Goblin", "questL06Friar", "questL07Cyrptic", "questL08Trapper", "questL09Topping", "questL10Garbage", "questL11Black", "questL11Business", "questL11Curses", "questL11Desert", "questL11Doctor", "questL11MacGuffin", "questL11Manor", "questL11Palindome", "questL11Pyramid", "questL11Ron", "questL11Shen", "questL11Spare", "questL11Worship", "questL12HippyFrat", "questL12War", "questL13Final", "questL13Warehouse", "questLTTQuestByWire", "questM01Untinker", "questM02Artist", "questM03Bugbear", "questM05Toot", "questM06Gourd", "questM07Hammer", "questM08Baker", "questM09Rocks", "questM10Azazel", "questM11Postal", "questM12Pirate", "questM13Escape", "questM14Bounty", "questM15Lol", "questM16Temple", "questM17Babies", "questM18Swamp", "questM19Hippy", "questM20Necklace", "questM21Dance", "questM22Shirt", "questM23Meatsmith", "questM24Doc", "questM25Armorer", "questM26Oracle", "questMaelstromOfLovers", "questPAGhost", "questRufus", "questS01OldGuy", "questS02Monkees", "raveCombo1", "raveCombo2", "raveCombo3", "raveCombo4", "raveCombo5", "raveCombo6", "recoveryScript", "relayCounters", "retroCapeSuperhero", "retroCapeWashingInstructions", "royalty", "rufusDesiredArtifact", "rufusDesiredItems", "rufusQuestTarget", "rufusQuestType", "scriptMRUList", "seahorseName", "shadowLabyrinthGoal", "shadowRiftIngress", "shenQuestItem", "shrubGarland", "shrubGifts", "shrubLights", "shrubTopper", "sideDefeated", "sidequestArenaCompleted", "sidequestFarmCompleted", "sidequestJunkyardCompleted", "sidequestLighthouseCompleted", "sidequestNunsCompleted", "sidequestOrchardCompleted", "skateParkStatus", "snowsuit", "sourceTerminalChips", "sourceTerminalEducate1", "sourceTerminalEducate2", "sourceTerminalEnquiry", "sourceTerminalEducateKnown", "sourceTerminalEnhanceKnown", "sourceTerminalEnquiryKnown", "sourceTerminalExtrudeKnown", "spadingData", "spadingScript", "speakeasyName", "spelunkyStatus", "spelunkyUpgrades", "spookyravenRecipeUsed", "stationaryButton1", "stationaryButton2", "stationaryButton3", "stationaryButton4", "stationaryButton5", "streamCrossDefaultTarget", "sweetSynthesisBlacklist", "telescope1", "telescope2", "telescope3", "telescope4", "telescope5", "testudinalTeachings", "textColors", "thanksMessage", "tomeSkillsHardcore", "tomeSkillsSoftcore", "trackVoteMonster", "trainsetConfiguration", "trapperOre", "umbrellaState", "umdLastObtained", "vintnerWineEffect", "vintnerWineName", "vintnerWineType", "violetFogLayout", "volcanoMaze1", "volcanoMaze2", "volcanoMaze3", "volcanoMaze4", "volcanoMaze5", "walfordBucketItem", "warProgress", "watchedPreferences", "wereProfessorAdvancedResearch", "workteaClue", "yourFavoriteBird", "yourFavoriteBirdMods", "youRobotCPUUpgrades", "_automatedFutureSide", "_bastilleBoosts", "_bastilleChoice1", "_bastilleChoice2", "_bastilleChoice3", "_bastilleCurrentStyles", "_bastilleEnemyCastle", "_bastilleEnemyName", "_bastilleLastBattleResults", "_bastilleLastEncounter", "_bastilleStats", "_beachHeadsUsed", "_beachLayout", "_beachMinutes", "_birdOfTheDay", "_birdOfTheDayMods", "_bittycar", "_campAwaySmileBuffSign", "_citizenZone", "_citizenZoneMods", "_cloudTalkMessage", "_cloudTalkSmoker", "_coatOfPaintModifier", "_cookbookbatQuestIngredient", "_currentDartboard", "_cyberZone1Defense", "_cyberZone1Hacker", "_cyberZone1Owner", "_cyberZone2Defense", "_cyberZone2Hacker", "_cyberZone2Owner", "_cyberZone3Defense", "_cyberZone3Hacker", "_cyberZone3Owner", "_dailySpecial", "_deckCardsSeen", "_feastedFamiliars", "_floristPlantsUsed", "_frAreasUnlocked", "_frHoursLeft", "_frMonstersKilled", "_futuristicCollarModifier", "_futuristicHatModifier", "_futuristicShirtModifier", "_horsery", "_horseryCrazyMox", "_horseryCrazyMus", "_horseryCrazyMys", "_horseryCrazyName", "_horseryCurrentName", "_horseryDarkName", "_horseryNormalName", "_horseryPaleName", "_jickJarAvailable", "_jiggleCheesedMonsters", "_lastCombatActions", "_lastCombatStarted", "_locketMonstersFought", "_mayamSymbolsUsed", "_mummeryMods", "_mummeryUses", "_newYouQuestSkill", "_noHatModifier", "_pantogramModifier", "_pirateRealmCrewmate", "_pirateRealmCrewmate1", "_pirateRealmCrewmate2", "_pirateRealmCrewmate3", "_pirateRealmCurio", "_pirateRealmShip", "_pottedPowerPlant", "_questESp", "_questPartyFair", "_questPartyFairProgress", "_questPartyFairQuest", "_questPirateRealm", "_roboDrinks", "_roninStoragePulls", "_savageBeastMods", "_spacegateAnimalLife", "_spacegateCoordinates", "_spacegateGear", "_spacegateHazards", "_spacegateIntelligentLife", "_spacegatePlanetName", "_spacegatePlantLife", "_stolenAccordions", "_tempRelayCounters", "_timeSpinnerFoodAvailable", "_trickOrTreatBlock", "_unknownEasyBountyItem", "_unknownHardBountyItem", "_unknownSpecialBountyItem", "_untakenEasyBountyItem", "_untakenHardBountyItem", "_untakenSpecialBountyItem", "_userMods", "_villainLairColor", "_villainLairKey", "_voteLocal1", "_voteLocal2", "_voteLocal3", "_voteLocal4", "_voteMonster1", "_voteMonster2", "_voteModifier", "_VYKEACompanionType", "_VYKEACompanionRune", "_VYKEACompanionName"];
    numericOrStringProperties = ["statusEngineering", "statusGalley", "statusMedbay", "statusMorgue", "statusNavigation", "statusScienceLab", "statusSonar", "statusSpecialOps", "statusWasteProcessing", "choiceAdventure2", "choiceAdventure3", "choiceAdventure4", "choiceAdventure5", "choiceAdventure6", "choiceAdventure7", "choiceAdventure8", "choiceAdventure9", "choiceAdventure10", "choiceAdventure11", "choiceAdventure12", "choiceAdventure14", "choiceAdventure15", "choiceAdventure16", "choiceAdventure17", "choiceAdventure18", "choiceAdventure19", "choiceAdventure20", "choiceAdventure21", "choiceAdventure22", "choiceAdventure23", "choiceAdventure24", "choiceAdventure25", "choiceAdventure26", "choiceAdventure27", "choiceAdventure28", "choiceAdventure29", "choiceAdventure40", "choiceAdventure41", "choiceAdventure42", "choiceAdventure45", "choiceAdventure46", "choiceAdventure47", "choiceAdventure71", "choiceAdventure72", "choiceAdventure73", "choiceAdventure74", "choiceAdventure75", "choiceAdventure76", "choiceAdventure77", "choiceAdventure86", "choiceAdventure87", "choiceAdventure88", "choiceAdventure89", "choiceAdventure90", "choiceAdventure91", "choiceAdventure105", "choiceAdventure106", "choiceAdventure107", "choiceAdventure108", "choiceAdventure109", "choiceAdventure110", "choiceAdventure111", "choiceAdventure112", "choiceAdventure113", "choiceAdventure114", "choiceAdventure115", "choiceAdventure116", "choiceAdventure117", "choiceAdventure118", "choiceAdventure120", "choiceAdventure123", "choiceAdventure125", "choiceAdventure126", "choiceAdventure127", "choiceAdventure129", "choiceAdventure131", "choiceAdventure132", "choiceAdventure135", "choiceAdventure136", "choiceAdventure137", "choiceAdventure138", "choiceAdventure139", "choiceAdventure140", "choiceAdventure141", "choiceAdventure142", "choiceAdventure143", "choiceAdventure144", "choiceAdventure145", "choiceAdventure146", "choiceAdventure147", "choiceAdventure148", "choiceAdventure149", "choiceAdventure151", "choiceAdventure152", "choiceAdventure153", "choiceAdventure154", "choiceAdventure155", "choiceAdventure156", "choiceAdventure157", "choiceAdventure158", "choiceAdventure159", "choiceAdventure160", "choiceAdventure161", "choiceAdventure162", "choiceAdventure163", "choiceAdventure164", "choiceAdventure165", "choiceAdventure166", "choiceAdventure167", "choiceAdventure168", "choiceAdventure169", "choiceAdventure170", "choiceAdventure171", "choiceAdventure172", "choiceAdventure177", "choiceAdventure178", "choiceAdventure180", "choiceAdventure181", "choiceAdventure182", "choiceAdventure184", "choiceAdventure185", "choiceAdventure186", "choiceAdventure187", "choiceAdventure188", "choiceAdventure189", "choiceAdventure191", "choiceAdventure197", "choiceAdventure198", "choiceAdventure199", "choiceAdventure200", "choiceAdventure201", "choiceAdventure202", "choiceAdventure203", "choiceAdventure204", "choiceAdventure205", "choiceAdventure206", "choiceAdventure207", "choiceAdventure208", "choiceAdventure211", "choiceAdventure212", "choiceAdventure213", "choiceAdventure214", "choiceAdventure215", "choiceAdventure216", "choiceAdventure217", "choiceAdventure218", "choiceAdventure219", "choiceAdventure220", "choiceAdventure221", "choiceAdventure222", "choiceAdventure223", "choiceAdventure224", "choiceAdventure225", "choiceAdventure230", "choiceAdventure272", "choiceAdventure273", "choiceAdventure276", "choiceAdventure277", "choiceAdventure278", "choiceAdventure279", "choiceAdventure280", "choiceAdventure281", "choiceAdventure282", "choiceAdventure283", "choiceAdventure284", "choiceAdventure285", "choiceAdventure286", "choiceAdventure287", "choiceAdventure288", "choiceAdventure289", "choiceAdventure290", "choiceAdventure291", "choiceAdventure292", "choiceAdventure293", "choiceAdventure294", "choiceAdventure295", "choiceAdventure296", "choiceAdventure297", "choiceAdventure298", "choiceAdventure299", "choiceAdventure302", "choiceAdventure303", "choiceAdventure304", "choiceAdventure305", "choiceAdventure306", "choiceAdventure307", "choiceAdventure308", "choiceAdventure309", "choiceAdventure310", "choiceAdventure311", "choiceAdventure317", "choiceAdventure318", "choiceAdventure319", "choiceAdventure320", "choiceAdventure321", "choiceAdventure322", "choiceAdventure326", "choiceAdventure327", "choiceAdventure328", "choiceAdventure329", "choiceAdventure330", "choiceAdventure331", "choiceAdventure332", "choiceAdventure333", "choiceAdventure334", "choiceAdventure335", "choiceAdventure336", "choiceAdventure337", "choiceAdventure338", "choiceAdventure339", "choiceAdventure340", "choiceAdventure341", "choiceAdventure342", "choiceAdventure343", "choiceAdventure344", "choiceAdventure345", "choiceAdventure346", "choiceAdventure347", "choiceAdventure348", "choiceAdventure349", "choiceAdventure350", "choiceAdventure351", "choiceAdventure352", "choiceAdventure353", "choiceAdventure354", "choiceAdventure355", "choiceAdventure356", "choiceAdventure357", "choiceAdventure358", "choiceAdventure360", "choiceAdventure361", "choiceAdventure362", "choiceAdventure363", "choiceAdventure364", "choiceAdventure365", "choiceAdventure366", "choiceAdventure367", "choiceAdventure372", "choiceAdventure376", "choiceAdventure387", "choiceAdventure388", "choiceAdventure389", "choiceAdventure390", "choiceAdventure391", "choiceAdventure392", "choiceAdventure393", "choiceAdventure395", "choiceAdventure396", "choiceAdventure397", "choiceAdventure398", "choiceAdventure399", "choiceAdventure400", "choiceAdventure401", "choiceAdventure402", "choiceAdventure403", "choiceAdventure423", "choiceAdventure424", "choiceAdventure425", "choiceAdventure426", "choiceAdventure427", "choiceAdventure428", "choiceAdventure429", "choiceAdventure430", "choiceAdventure431", "choiceAdventure432", "choiceAdventure433", "choiceAdventure435", "choiceAdventure438", "choiceAdventure439", "choiceAdventure442", "choiceAdventure444", "choiceAdventure445", "choiceAdventure446", "choiceAdventure447", "choiceAdventure448", "choiceAdventure449", "choiceAdventure451", "choiceAdventure452", "choiceAdventure453", "choiceAdventure454", "choiceAdventure455", "choiceAdventure456", "choiceAdventure457", "choiceAdventure458", "choiceAdventure460", "choiceAdventure461", "choiceAdventure462", "choiceAdventure463", "choiceAdventure464", "choiceAdventure465", "choiceAdventure467", "choiceAdventure468", "choiceAdventure469", "choiceAdventure470", "choiceAdventure471", "choiceAdventure472", "choiceAdventure473", "choiceAdventure474", "choiceAdventure475", "choiceAdventure477", "choiceAdventure478", "choiceAdventure480", "choiceAdventure483", "choiceAdventure484", "choiceAdventure485", "choiceAdventure486", "choiceAdventure488", "choiceAdventure489", "choiceAdventure490", "choiceAdventure491", "choiceAdventure496", "choiceAdventure497", "choiceAdventure502", "choiceAdventure503", "choiceAdventure504", "choiceAdventure505", "choiceAdventure506", "choiceAdventure507", "choiceAdventure509", "choiceAdventure510", "choiceAdventure511", "choiceAdventure512", "choiceAdventure513", "choiceAdventure514", "choiceAdventure515", "choiceAdventure517", "choiceAdventure518", "choiceAdventure519", "choiceAdventure521", "choiceAdventure522", "choiceAdventure523", "choiceAdventure527", "choiceAdventure528", "choiceAdventure529", "choiceAdventure530", "choiceAdventure531", "choiceAdventure532", "choiceAdventure533", "choiceAdventure534", "choiceAdventure535", "choiceAdventure536", "choiceAdventure538", "choiceAdventure539", "choiceAdventure542", "choiceAdventure543", "choiceAdventure544", "choiceAdventure546", "choiceAdventure548", "choiceAdventure549", "choiceAdventure550", "choiceAdventure551", "choiceAdventure552", "choiceAdventure553", "choiceAdventure554", "choiceAdventure556", "choiceAdventure557", "choiceAdventure558", "choiceAdventure559", "choiceAdventure560", "choiceAdventure561", "choiceAdventure562", "choiceAdventure563", "choiceAdventure564", "choiceAdventure565", "choiceAdventure566", "choiceAdventure567", "choiceAdventure568", "choiceAdventure569", "choiceAdventure571", "choiceAdventure572", "choiceAdventure573", "choiceAdventure574", "choiceAdventure575", "choiceAdventure576", "choiceAdventure577", "choiceAdventure578", "choiceAdventure579", "choiceAdventure581", "choiceAdventure582", "choiceAdventure583", "choiceAdventure584", "choiceAdventure594", "choiceAdventure595", "choiceAdventure596", "choiceAdventure597", "choiceAdventure598", "choiceAdventure599", "choiceAdventure600", "choiceAdventure603", "choiceAdventure604", "choiceAdventure616", "choiceAdventure634", "choiceAdventure640", "choiceAdventure654", "choiceAdventure655", "choiceAdventure656", "choiceAdventure657", "choiceAdventure658", "choiceAdventure664", "choiceAdventure669", "choiceAdventure670", "choiceAdventure671", "choiceAdventure672", "choiceAdventure673", "choiceAdventure674", "choiceAdventure675", "choiceAdventure676", "choiceAdventure677", "choiceAdventure678", "choiceAdventure679", "choiceAdventure681", "choiceAdventure683", "choiceAdventure684", "choiceAdventure685", "choiceAdventure686", "choiceAdventure687", "choiceAdventure688", "choiceAdventure689", "choiceAdventure690", "choiceAdventure691", "choiceAdventure692", "choiceAdventure693", "choiceAdventure694", "choiceAdventure695", "choiceAdventure696", "choiceAdventure697", "choiceAdventure698", "choiceAdventure700", "choiceAdventure701", "choiceAdventure705", "choiceAdventure706", "choiceAdventure707", "choiceAdventure708", "choiceAdventure709", "choiceAdventure710", "choiceAdventure711", "choiceAdventure712", "choiceAdventure713", "choiceAdventure714", "choiceAdventure715", "choiceAdventure716", "choiceAdventure717", "choiceAdventure721", "choiceAdventure725", "choiceAdventure729", "choiceAdventure733", "choiceAdventure737", "choiceAdventure741", "choiceAdventure745", "choiceAdventure749", "choiceAdventure753", "choiceAdventure771", "choiceAdventure778", "choiceAdventure780", "choiceAdventure781", "choiceAdventure783", "choiceAdventure784", "choiceAdventure785", "choiceAdventure786", "choiceAdventure787", "choiceAdventure788", "choiceAdventure789", "choiceAdventure791", "choiceAdventure793", "choiceAdventure794", "choiceAdventure795", "choiceAdventure796", "choiceAdventure797", "choiceAdventure803", "choiceAdventure805", "choiceAdventure808", "choiceAdventure809", "choiceAdventure813", "choiceAdventure815", "choiceAdventure830", "choiceAdventure832", "choiceAdventure833", "choiceAdventure834", "choiceAdventure835", "choiceAdventure837", "choiceAdventure838", "choiceAdventure839", "choiceAdventure840", "choiceAdventure841", "choiceAdventure842", "choiceAdventure851", "choiceAdventure852", "choiceAdventure853", "choiceAdventure854", "choiceAdventure855", "choiceAdventure856", "choiceAdventure857", "choiceAdventure858", "choiceAdventure866", "choiceAdventure873", "choiceAdventure875", "choiceAdventure876", "choiceAdventure877", "choiceAdventure878", "choiceAdventure879", "choiceAdventure880", "choiceAdventure881", "choiceAdventure882", "choiceAdventure888", "choiceAdventure889", "choiceAdventure918", "choiceAdventure919", "choiceAdventure920", "choiceAdventure921", "choiceAdventure923", "choiceAdventure924", "choiceAdventure925", "choiceAdventure926", "choiceAdventure927", "choiceAdventure928", "choiceAdventure929", "choiceAdventure930", "choiceAdventure931", "choiceAdventure932", "choiceAdventure940", "choiceAdventure941", "choiceAdventure942", "choiceAdventure943", "choiceAdventure944", "choiceAdventure945", "choiceAdventure946", "choiceAdventure950", "choiceAdventure955", "choiceAdventure957", "choiceAdventure958", "choiceAdventure959", "choiceAdventure960", "choiceAdventure961", "choiceAdventure962", "choiceAdventure963", "choiceAdventure964", "choiceAdventure965", "choiceAdventure966", "choiceAdventure970", "choiceAdventure973", "choiceAdventure974", "choiceAdventure975", "choiceAdventure976", "choiceAdventure977", "choiceAdventure979", "choiceAdventure980", "choiceAdventure981", "choiceAdventure982", "choiceAdventure983", "choiceAdventure988", "choiceAdventure989", "choiceAdventure993", "choiceAdventure998", "choiceAdventure1000", "choiceAdventure1003", "choiceAdventure1005", "choiceAdventure1006", "choiceAdventure1007", "choiceAdventure1008", "choiceAdventure1009", "choiceAdventure1010", "choiceAdventure1011", "choiceAdventure1012", "choiceAdventure1013", "choiceAdventure1015", "choiceAdventure1016", "choiceAdventure1017", "choiceAdventure1018", "choiceAdventure1019", "choiceAdventure1020", "choiceAdventure1021", "choiceAdventure1022", "choiceAdventure1023", "choiceAdventure1026", "choiceAdventure1027", "choiceAdventure1028", "choiceAdventure1029", "choiceAdventure1030", "choiceAdventure1031", "choiceAdventure1032", "choiceAdventure1033", "choiceAdventure1034", "choiceAdventure1035", "choiceAdventure1036", "choiceAdventure1037", "choiceAdventure1038", "choiceAdventure1039", "choiceAdventure1040", "choiceAdventure1041", "choiceAdventure1042", "choiceAdventure1044", "choiceAdventure1045", "choiceAdventure1046", "choiceAdventure1048", "choiceAdventure1051", "choiceAdventure1052", "choiceAdventure1053", "choiceAdventure1054", "choiceAdventure1055", "choiceAdventure1056", "choiceAdventure1057", "choiceAdventure1059", "choiceAdventure1060", "choiceAdventure1061", "choiceAdventure1062", "choiceAdventure1065", "choiceAdventure1067", "choiceAdventure1068", "choiceAdventure1069", "choiceAdventure1070", "choiceAdventure1071", "choiceAdventure1073", "choiceAdventure1077", "choiceAdventure1080", "choiceAdventure1081", "choiceAdventure1082", "choiceAdventure1083", "choiceAdventure1084", "choiceAdventure1085", "choiceAdventure1091", "choiceAdventure1094", "choiceAdventure1095", "choiceAdventure1096", "choiceAdventure1097", "choiceAdventure1102", "choiceAdventure1106", "choiceAdventure1107", "choiceAdventure1108", "choiceAdventure1110", "choiceAdventure1114", "choiceAdventure1115", "choiceAdventure1116", "choiceAdventure1118", "choiceAdventure1119", "choiceAdventure1120", "choiceAdventure1121", "choiceAdventure1122", "choiceAdventure1123", "choiceAdventure1171", "choiceAdventure1172", "choiceAdventure1173", "choiceAdventure1174", "choiceAdventure1175", "choiceAdventure1193", "choiceAdventure1195", "choiceAdventure1196", "choiceAdventure1197", "choiceAdventure1198", "choiceAdventure1199", "choiceAdventure1202", "choiceAdventure1203", "choiceAdventure1204", "choiceAdventure1205", "choiceAdventure1206", "choiceAdventure1207", "choiceAdventure1208", "choiceAdventure1209", "choiceAdventure1210", "choiceAdventure1211", "choiceAdventure1212", "choiceAdventure1213", "choiceAdventure1214", "choiceAdventure1215", "choiceAdventure1219", "choiceAdventure1222", "choiceAdventure1223", "choiceAdventure1224", "choiceAdventure1225", "choiceAdventure1226", "choiceAdventure1227", "choiceAdventure1228", "choiceAdventure1229", "choiceAdventure1236", "choiceAdventure1237", "choiceAdventure1238", "choiceAdventure1239", "choiceAdventure1240", "choiceAdventure1241", "choiceAdventure1242", "choiceAdventure1243", "choiceAdventure1244", "choiceAdventure1245", "choiceAdventure1246", "choiceAdventure1247", "choiceAdventure1248", "choiceAdventure1249", "choiceAdventure1250", "choiceAdventure1251", "choiceAdventure1252", "choiceAdventure1253", "choiceAdventure1254", "choiceAdventure1255", "choiceAdventure1256", "choiceAdventure1266", "choiceAdventure1280", "choiceAdventure1281", "choiceAdventure1282", "choiceAdventure1283", "choiceAdventure1284", "choiceAdventure1285", "choiceAdventure1286", "choiceAdventure1287", "choiceAdventure1288", "choiceAdventure1289", "choiceAdventure1290", "choiceAdventure1291", "choiceAdventure1292", "choiceAdventure1293", "choiceAdventure1294", "choiceAdventure1295", "choiceAdventure1296", "choiceAdventure1297", "choiceAdventure1298", "choiceAdventure1299", "choiceAdventure1300", "choiceAdventure1301", "choiceAdventure1302", "choiceAdventure1303", "choiceAdventure1304", "choiceAdventure1305", "choiceAdventure1307", "choiceAdventure1310", "choiceAdventure1312", "choiceAdventure1313", "choiceAdventure1314", "choiceAdventure1315", "choiceAdventure1316", "choiceAdventure1317", "choiceAdventure1318", "choiceAdventure1319", "choiceAdventure1321", "choiceAdventure1322", "choiceAdventure1323", "choiceAdventure1324", "choiceAdventure1325", "choiceAdventure1326", "choiceAdventure1327", "choiceAdventure1328", "choiceAdventure1332", "choiceAdventure1333", "choiceAdventure1335", "choiceAdventure1340", "choiceAdventure1341", "choiceAdventure1345", "choiceAdventure1389", "choiceAdventure1392", "choiceAdventure1397", "choiceAdventure1399", "choiceAdventure1405", "choiceAdventure1411", "choiceAdventure1415", "choiceAdventure1427", "choiceAdventure1428", "choiceAdventure1429", "choiceAdventure1430", "choiceAdventure1431", "choiceAdventure1432", "choiceAdventure1433", "choiceAdventure1434", "choiceAdventure1436", "choiceAdventure1460", "choiceAdventure1461", "choiceAdventure1467", "choiceAdventure1468", "choiceAdventure1469", "choiceAdventure1470", "choiceAdventure1471", "choiceAdventure1472", "choiceAdventure1473", "choiceAdventure1474", "choiceAdventure1475", "choiceAdventure1486", "choiceAdventure1487", "choiceAdventure1488", "choiceAdventure1489", "choiceAdventure1491", "choiceAdventure1494", "choiceAdventure1505", "choiceAdventure1528", "choiceAdventure1534", "choiceAdventure1538", "choiceAdventure1539", "choiceAdventure1540", "choiceAdventure1541", "choiceAdventure1542"];
    familiarProperties = ["commaFamiliar", "nextQuantumFamiliar", "stillsuitFamiliar"];
    statProperties = ["nsChallenge1", "snojoSetting"];
    phylumProperties = ["dnaSyringe", "locketPhylum", "redSnapperPhylum", "_circadianRhythmsPhylum"];
  }
});

// node_modules/libram/dist/propertyTyping.js
function isBooleanProperty(property) {
  return booleanPropertiesSet.has(property);
}
function isNumericProperty(property) {
  return numericPropertiesSet.has(property);
}
function isNumericOrStringProperty(property) {
  return numericOrStringPropertiesSet.has(property);
}
function isStringProperty(property) {
  return stringPropertiesSet.has(property);
}
function isLocationProperty(property) {
  return locationPropertiesSet.has(property);
}
function isMonsterProperty(property) {
  return monsterPropertiesSet.has(property);
}
function isFamiliarProperty(property) {
  return familiarPropertiesSet.has(property);
}
function isStatProperty(property) {
  return statPropertiesSet.has(property);
}
function isPhylumProperty(property) {
  return phylumPropertiesSet.has(property);
}
var booleanPropertiesSet, numericPropertiesSet, numericOrStringPropertiesSet, stringPropertiesSet, locationPropertiesSet, monsterPropertiesSet, familiarPropertiesSet, statPropertiesSet, phylumPropertiesSet;
var init_propertyTyping = __esm({
  "node_modules/libram/dist/propertyTyping.js": function() {
    init_propertyTypes();
    booleanPropertiesSet = new Set(booleanProperties);
    numericPropertiesSet = new Set(numericProperties);
    numericOrStringPropertiesSet = new Set(numericOrStringProperties);
    stringPropertiesSet = new Set(stringProperties);
    locationPropertiesSet = new Set(locationProperties);
    monsterPropertiesSet = new Set(monsterProperties);
    familiarPropertiesSet = new Set(familiarProperties);
    statPropertiesSet = new Set(statProperties);
    phylumPropertiesSet = new Set(phylumProperties);
  }
});

// node_modules/libram/dist/property.js
var property_exports = {};
__export(property_exports, {
  PropertiesManager: function() {
    return PropertiesManager;
  },
  decrement: function() {
    return decrement;
  },
  get: function() {
    return get;
  },
  getBoolean: function() {
    return getBoolean;
  },
  getBounty: function() {
    return getBounty;
  },
  getClass: function() {
    return getClass;
  },
  getCoinmaster: function() {
    return getCoinmaster;
  },
  getCommaSeparated: function() {
    return getCommaSeparated;
  },
  getEffect: function() {
    return getEffect;
  },
  getElement: function() {
    return getElement;
  },
  getFamiliar: function() {
    return getFamiliar;
  },
  getItem: function() {
    return getItem;
  },
  getLocation: function() {
    return getLocation;
  },
  getMonster: function() {
    return getMonster;
  },
  getNumber: function() {
    return getNumber;
  },
  getPhylum: function() {
    return getPhylum;
  },
  getServant: function() {
    return getServant;
  },
  getSkill: function() {
    return getSkill;
  },
  getSlot: function() {
    return getSlot;
  },
  getStat: function() {
    return getStat;
  },
  getString: function() {
    return getString;
  },
  getThrall: function() {
    return getThrall;
  },
  increment: function() {
    return increment;
  },
  set: function() {
    return _set;
  },
  setProperties: function() {
    return setProperties;
  },
  withChoice: function() {
    return withChoice;
  },
  withChoices: function() {
    return withChoices;
  },
  withProperties: function() {
    return withProperties;
  },
  withProperty: function() {
    return withProperty;
  }
});
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty2(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey2(descriptor.key), descriptor);
  }
}
function _createClass2(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties2(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties2(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty2(obj, key, value) {
  key = _toPropertyKey2(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey2(t) {
  var i = _toPrimitive2(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive2(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
function get(property, _default) {
  var value = getString(property);
  if (isBooleanProperty(property)) {
    var _getBoolean;
    return (_getBoolean = getBoolean(property, _default)) !== null && _getBoolean !== void 0 ? _getBoolean : false;
  } else if (isNumericProperty(property)) {
    var _getNumber;
    return (_getNumber = getNumber(property, _default)) !== null && _getNumber !== void 0 ? _getNumber : 0;
  } else if (isNumericOrStringProperty(property)) {
    return value.match(/^\d+$/) ? parseInt(value) : value;
  } else if (isLocationProperty(property)) {
    return getLocation(property, _default);
  } else if (isMonsterProperty(property)) {
    return getMonster(property, _default);
  } else if (isFamiliarProperty(property)) {
    return getFamiliar(property, _default);
  } else if (isStatProperty(property)) {
    return getStat(property, _default);
  } else if (isPhylumProperty(property)) {
    return getPhylum(property, _default);
  } else if (isStringProperty(property)) {
    return value === "" && _default !== void 0 ? _default : value;
  }
  if (_default instanceof import_kolmafia2.Location) {
    return getLocation(property, _default);
  } else if (_default instanceof import_kolmafia2.Monster) {
    return getMonster(property, _default);
  } else if (_default instanceof import_kolmafia2.Familiar) {
    return getFamiliar(property, _default);
  } else if (_default instanceof import_kolmafia2.Stat) {
    return getStat(property, _default);
  } else if (_default instanceof import_kolmafia2.Phylum) {
    return getPhylum(property, _default);
  } else if (typeof _default === "boolean") {
    return value === "true" ? true : value === "false" ? false : _default;
  } else if (typeof _default === "number") {
    return value === "" ? _default : parseInt(value);
  } else if (value === "") {
    return _default === void 0 ? "" : _default;
  } else {
    return value;
  }
}
function _set(property, value) {
  var stringValue = value === null ? "" : value.toString();
  (0, import_kolmafia2.setProperty)(property, stringValue);
  return value;
}
function increment(property) {
  var delta = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var max = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Infinity;
  var value = get(property);
  if (!isNumericProperty(property)) return value;
  var nextValue = Math.min(max, value + delta);
  return _set(property, nextValue);
}
function decrement(property) {
  var delta = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var min2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Infinity;
  var value = get(property);
  if (!isNumericProperty(property)) return value;
  var nextValue = Math.max(min2, value - delta);
  return _set(property, nextValue);
}
function setProperties(properties) {
  for (var _i = 0, _Object$entries = Object.entries(properties); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), prop = _Object$entries$_i[0], value = _Object$entries$_i[1];
    _set(prop, value);
  }
}
function withProperties(properties, callback) {
  var propertiesBackup = Object.fromEntries(Object.entries(properties).map(function(_ref) {
    var _ref2 = _slicedToArray(_ref, 1), prop = _ref2[0];
    return [prop, get(prop)];
  }));
  setProperties(properties);
  try {
    return callback();
  } finally {
    setProperties(propertiesBackup);
  }
}
function withProperty(property, value, callback) {
  return withProperties(_defineProperty2({}, property, value), callback);
}
function withChoices(choices2, callback) {
  var properties = Object.fromEntries(Object.entries(choices2).map(function(_ref3) {
    var _ref4 = _slicedToArray(_ref3, 2), choice = _ref4[0], option = _ref4[1];
    return ["choiceAdventure".concat(choice), option];
  }));
  return withProperties(properties, callback);
}
function withChoice(choice, value, callback) {
  return withChoices(_defineProperty2({}, choice, value), callback);
}
var import_kolmafia2, createPropertyGetter, createMafiaClassPropertyGetter, getString, getCommaSeparated, getBoolean, getNumber, getBounty, getClass, getCoinmaster, getEffect, getElement, getFamiliar, getItem, getLocation, getMonster, getPhylum, getServant, getSkill, getSlot, getStat, getThrall, PropertiesManager;
var init_property = __esm({
  "node_modules/libram/dist/property.js": function() {
    import_kolmafia2 = require("kolmafia");
    init_propertyTyping();
    createPropertyGetter = function(transform2) {
      return function(property, default_) {
        var value = (0, import_kolmafia2.getProperty)(property);
        if (default_ !== void 0 && value === "") {
          return default_;
        }
        return transform2(value, property);
      };
    };
    createMafiaClassPropertyGetter = function(Type, toType) {
      return createPropertyGetter(function(value) {
        if (value === "") return null;
        var v = toType(value);
        return v === Type.none ? null : v;
      });
    };
    getString = createPropertyGetter(function(value) {
      return value;
    });
    getCommaSeparated = createPropertyGetter(function(value) {
      return value.split(/, ?/);
    });
    getBoolean = createPropertyGetter(function(value) {
      return value === "true";
    });
    getNumber = createPropertyGetter(function(value) {
      return Number(value);
    });
    getBounty = createMafiaClassPropertyGetter(import_kolmafia2.Bounty, import_kolmafia2.toBounty);
    getClass = createMafiaClassPropertyGetter(import_kolmafia2.Class, import_kolmafia2.toClass);
    getCoinmaster = createMafiaClassPropertyGetter(import_kolmafia2.Coinmaster, import_kolmafia2.toCoinmaster);
    getEffect = createMafiaClassPropertyGetter(import_kolmafia2.Effect, import_kolmafia2.toEffect);
    getElement = createMafiaClassPropertyGetter(import_kolmafia2.Element, import_kolmafia2.toElement);
    getFamiliar = createMafiaClassPropertyGetter(import_kolmafia2.Familiar, import_kolmafia2.toFamiliar);
    getItem = createMafiaClassPropertyGetter(import_kolmafia2.Item, import_kolmafia2.toItem);
    getLocation = createMafiaClassPropertyGetter(import_kolmafia2.Location, import_kolmafia2.toLocation);
    getMonster = createMafiaClassPropertyGetter(import_kolmafia2.Monster, import_kolmafia2.toMonster);
    getPhylum = createMafiaClassPropertyGetter(import_kolmafia2.Phylum, import_kolmafia2.toPhylum);
    getServant = createMafiaClassPropertyGetter(import_kolmafia2.Servant, import_kolmafia2.toServant);
    getSkill = createMafiaClassPropertyGetter(import_kolmafia2.Skill, import_kolmafia2.toSkill);
    getSlot = createMafiaClassPropertyGetter(import_kolmafia2.Slot, import_kolmafia2.toSlot);
    getStat = createMafiaClassPropertyGetter(import_kolmafia2.Stat, import_kolmafia2.toStat);
    getThrall = createMafiaClassPropertyGetter(import_kolmafia2.Thrall, import_kolmafia2.toThrall);
    PropertiesManager = /* @__PURE__ */ function() {
      function PropertiesManager2() {
        _classCallCheck2(this, PropertiesManager2);
        _defineProperty2(this, "properties", {});
      }
      _createClass2(PropertiesManager2, [{
        key: "storedValues",
        get: function get4() {
          return this.properties;
        }
        /**
         * Sets a collection of properties to the given values, storing the old values.
         *
         * @param propertiesToSet A Properties object, keyed by property name.
         */
      }, {
        key: "set",
        value: function set3(propertiesToSet) {
          for (var _i2 = 0, _Object$entries2 = Object.entries(propertiesToSet); _i2 < _Object$entries2.length; _i2++) {
            var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2), propertyName = _Object$entries2$_i[0], propertyValue = _Object$entries2$_i[1];
            if (!(propertyName in this.properties)) {
              this.properties[propertyName] = (0, import_kolmafia2.propertyExists)(propertyName) ? get(propertyName) : PropertiesManager2.EMPTY_PREFERENCE;
            }
            _set(propertyName, propertyValue);
          }
        }
        /**
         * Sets a collection of choice adventure properties to the given values, storing the old values.
         *
         * @param choicesToSet An object keyed by choice adventure number.
         */
      }, {
        key: "setChoices",
        value: function setChoices(choicesToSet) {
          this.set(Object.fromEntries(Object.entries(choicesToSet).map(function(_ref5) {
            var _ref6 = _slicedToArray(_ref5, 2), choiceNumber = _ref6[0], choiceValue = _ref6[1];
            return ["choiceAdventure".concat(choiceNumber), choiceValue];
          })));
        }
        /**
         * Sets a single choice adventure property to the given value, storing the old value.
         *
         * @param choiceToSet The number of the choice adventure to set the property for.
         * @param value The value to assign to that choice adventure.
         */
      }, {
        key: "setChoice",
        value: function setChoice(choiceToSet, value) {
          this.setChoices(_defineProperty2({}, choiceToSet, value));
        }
        /**
         * Resets the given properties to their original stored value. Does not delete entries from the manager.
         *
         * @param properties Collection of properties to reset.
         */
      }, {
        key: "reset",
        value: function reset() {
          for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {
            properties[_key] = arguments[_key];
          }
          for (var _i3 = 0, _properties = properties; _i3 < _properties.length; _i3++) {
            var property = _properties[_i3];
            if (!(property in this.properties)) continue;
            var value = this.properties[property];
            if (value === PropertiesManager2.EMPTY_PREFERENCE) {
              (0, import_kolmafia2.removeProperty)(property);
            } else {
              _set(property, value);
            }
          }
        }
        /**
         * Iterates over all stored values, setting each property back to its original stored value. Does not delete entries from the manager.
         */
      }, {
        key: "resetAll",
        value: function resetAll() {
          this.reset.apply(this, _toConsumableArray(Object.keys(this.properties)));
        }
        /**
         * Stops storing the original values of inputted properties.
         *
         * @param properties Properties for the manager to forget.
         */
      }, {
        key: "clear",
        value: function clear() {
          for (var _len2 = arguments.length, properties = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            properties[_key2] = arguments[_key2];
          }
          for (var _i4 = 0, _properties2 = properties; _i4 < _properties2.length; _i4++) {
            var property = _properties2[_i4];
            if (this.properties[property]) {
              delete this.properties[property];
            }
          }
        }
        /**
         * Clears all properties.
         */
      }, {
        key: "clearAll",
        value: function clearAll() {
          this.properties = {};
        }
        /**
         * Increases a numeric property to the given value if necessary.
         *
         * @param property The numeric property we want to potentially raise.
         * @param value The minimum value we want that property to have.
         * @returns Whether we needed to change the property.
         */
      }, {
        key: "setMinimumValue",
        value: function setMinimumValue(property, value) {
          if (get(property, 0) < value) {
            this.set(_defineProperty2({}, property, value));
            return true;
          }
          return false;
        }
        /**
         * Decrease a numeric property to the given value if necessary.
         *
         * @param property The numeric property we want to potentially lower.
         * @param value The maximum value we want that property to have.
         * @returns Whether we needed to change the property.
         */
      }, {
        key: "setMaximumValue",
        value: function setMaximumValue(property, value) {
          if (get(property, 0) > value) {
            this.set(_defineProperty2({}, property, value));
            return true;
          }
          return false;
        }
        /**
         * Creates a new PropertiesManager with identical stored values to this one.
         *
         * @returns A new PropertiesManager, with identical stored values to this one.
         */
      }, {
        key: "clone",
        value: function clone() {
          var newGuy = new PropertiesManager2();
          newGuy.properties = this.storedValues;
          return newGuy;
        }
        /**
         * Clamps a numeric property, modulating it up or down to fit within a specified range
         *
         * @param property The numeric property to clamp
         * @param min The lower bound for what we want the property to be allowed to be.
         * @param max The upper bound for what we want the property to be allowed to be.
         * @returns Whether we ended up changing the property or not.
         */
      }, {
        key: "clamp",
        value: function clamp2(property, min2, max) {
          if (max < min2) return false;
          var start = get(property);
          this.setMinimumValue(property, min2);
          this.setMaximumValue(property, max);
          return start !== get(property);
        }
        /**
         * Determines whether this PropertiesManager has identical stored values to another.
         *
         * @param other The PropertiesManager to compare to this one.
         * @returns Whether their StoredValues are identical.
         */
      }, {
        key: "equals",
        value: function equals(other) {
          var thisProps = Object.entries(this.storedValues);
          var otherProps = new Map(Object.entries(other.storedValues));
          if (thisProps.length !== otherProps.size) return false;
          for (var _i5 = 0, _thisProps = thisProps; _i5 < _thisProps.length; _i5++) {
            var _thisProps$_i = _slicedToArray(_thisProps[_i5], 2), propertyName = _thisProps$_i[0], propertyValue = _thisProps$_i[1];
            if (otherProps.get(propertyName) === propertyValue) return false;
          }
          return true;
        }
        /**
         * Merges a PropertiesManager onto this one, letting the input win in the event that both PropertiesManagers have a value stored.
         *
         * @param other The PropertiesManager to be merged onto this one.
         * @returns A new PropertiesManager with stored values from both its parents.
         */
      }, {
        key: "merge",
        value: function merge(other) {
          var newGuy = new PropertiesManager2();
          newGuy.properties = _objectSpread(_objectSpread({}, this.properties), other.properties);
          return newGuy;
        }
        /**
         * Merges an arbitrary collection of PropertiesManagers, letting the rightmost PropertiesManager win in the event of verlap.
         *
         * @param mergees The PropertiesManagers to merge together.
         * @returns A PropertiesManager that is just an amalgam of all the constituents.
         */
      }], [{
        key: "merge",
        value: function merge() {
          for (var _len3 = arguments.length, mergees = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            mergees[_key3] = arguments[_key3];
          }
          if (mergees.length === 0) return new PropertiesManager2();
          return mergees.reduce(function(a, b) {
            return a.merge(b);
          });
        }
      }]);
      return PropertiesManager2;
    }();
    _defineProperty2(PropertiesManager, "EMPTY_PREFERENCE", Symbol("empty preference"));
  }
});

// node_modules/libram/dist/utils.js
function _createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray2(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _slicedToArray2(arr, i) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit2(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr)) return arr;
}
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread2();
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray2(o, minLen);
}
function _iterableToArray2(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray2(arr);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function notNull(value) {
  return value !== null;
}
function notNullish(value) {
  return notNull(value) && value !== void 0;
}
function parseNumber(n) {
  return Number.parseInt(n.replace(/,/g, ""));
}
function clamp(n, min2, max) {
  return Math.max(min2, Math.min(max, n));
}
function chunk(array, chunkSize) {
  var result = [];
  for (var i = 0; i < array.length; i += chunkSize) {
    result.push(array.slice(i, i + chunkSize));
  }
  return result;
}
function arrayToCountedMap(array) {
  if (!Array.isArray(array)) return array;
  var map = /* @__PURE__ */ new Map();
  array.forEach(function(item14) {
    map.set(item14, (map.get(item14) || 0) + 1);
  });
  return map;
}
function countedMapToArray(map) {
  var _ref;
  return (_ref = []).concat.apply(_ref, _toConsumableArray2(_toConsumableArray2(map).map(function(_ref2) {
    var _ref3 = _slicedToArray2(_ref2, 2), item14 = _ref3[0], quantity = _ref3[1];
    return Array(quantity).fill(item14);
  })));
}
function countedMapToString(map) {
  return _toConsumableArray2(map).map(function(_ref4) {
    var _ref5 = _slicedToArray2(_ref4, 2), item14 = _ref5[0], quantity = _ref5[1];
    return "".concat(quantity, " x ").concat(item14);
  }).join(", ");
}
function sum(addends, x) {
  return addends.reduce(function(subtotal, element) {
    return subtotal + (typeof x === "function" ? x(element) : element[x]);
  }, 0);
}
function sumNumbers(addends) {
  return sum(addends, function(x) {
    return x;
  });
}
function arrayContains(item14, array) {
  return array.includes(item14);
}
function setEqual(a, b) {
  var sortedA = _toConsumableArray2(a).sort();
  var sortedB = _toConsumableArray2(b).sort();
  return a.length === b.length && sortedA.every(function(item14, index) {
    return item14 === sortedB[index];
  });
}
function invertMap(map) {
  var returnValue = /* @__PURE__ */ new Map();
  var _iterator = _createForOfIteratorHelper(map), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _step$value = _slicedToArray2(_step.value, 2), key = _step$value[0], value = _step$value[1];
      returnValue.set(value, key);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return returnValue;
}
function splitByCommasWithEscapes(str) {
  var returnValue = [];
  var ignoreNext = false;
  var currentString = "";
  var _iterator2 = _createForOfIteratorHelper(str.split("")), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var char = _step2.value;
      if (char === "\\") {
        ignoreNext = true;
      } else {
        if (char == "," && !ignoreNext) {
          returnValue.push(currentString.trim());
          currentString = "";
        } else {
          currentString += char;
        }
        ignoreNext = false;
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  returnValue.push(currentString.trim());
  return returnValue;
}
function maxBy(array, optimizer) {
  var reverse = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  if (!array.length) throw new Error("Cannot call maxBy on an empty array!");
  if (typeof optimizer === "function") {
    return _toConsumableArray2(array).reduce(function(_ref6, other) {
      var value = _ref6.value, item14 = _ref6.item;
      var otherValue = optimizer(other);
      return value >= otherValue !== reverse ? {
        value: value,
        item: item14
      } : {
        value: otherValue,
        item: other
      };
    }, {
      item: array[0],
      value: optimizer(array[0])
    }).item;
  } else {
    return array.reduce(function(a, b) {
      return a[optimizer] >= b[optimizer] !== reverse ? a : b;
    });
  }
}
function tuple() {
  for (var _len = arguments.length, args2 = new Array(_len), _key = 0; _key < _len; _key++) {
    args2[_key] = arguments[_key];
  }
  return args2;
}
function arrayEquals(left, right) {
  if (left.length !== right.length) return false;
  return left.every(function(element, index) {
    return element === right[index];
  });
}
function undelay(delayedObject) {
  for (var _len2 = arguments.length, args2 = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args2[_key2 - 1] = arguments[_key2];
  }
  return typeof delayedObject === "function" ? delayedObject.apply(void 0, args2) : delayedObject;
}
function makeByXFunction(source) {
  return function(options, alternateSource) {
    var _options$val;
    var val = undelay(alternateSource !== null && alternateSource !== void 0 ? alternateSource : source);
    if ("default" in options) return (_options$val = options[val]) !== null && _options$val !== void 0 ? _options$val : options.default;
    return options[val];
  };
}
function flat(arr) {
  var depth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity;
  var flatArray = [];
  var _iterator3 = _createForOfIteratorHelper(arr), _step3;
  try {
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
      var item14 = _step3.value;
      if (Array.isArray(item14) && depth > 0) {
        var child = flat(item14, depth - 1);
        flatArray = flatArray.concat(child);
      } else {
        flatArray.push(item14);
      }
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  return flatArray;
}
function random(array) {
  return array[Math.floor(Math.random() * array.length)];
}
var tc;
var init_utils = __esm({
  "node_modules/libram/dist/utils.js": function() {
    tc = function(word) {
      return word.charAt(0).toUpperCase() + word.slice(1);
    };
  }
});

// node_modules/libram/dist/template-string.js
var import_kolmafia3, concatTemplateString, handleTypeGetError, createSingleConstant, createPluralConstant, $bounty, $bounties, $class, $classes, $coinmaster, $coinmasters, $effect, $effects, $element, $elements, $familiar, $familiars, $item, $items, $location, $locations, $modifier, $modifiers, $monster, $monsters, $path, $paths, $phylum, $phyla, $servant, $servants, $skill, $skills, $slot, $slots, $stat, $stats, $thrall, $thralls;
var init_template_string = __esm({
  "node_modules/libram/dist/template-string.js": function() {
    import_kolmafia3 = require("kolmafia");
    init_utils();
    concatTemplateString = function concatTemplateString2(literals) {
      for (var _len = arguments.length, placeholders = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        placeholders[_key - 1] = arguments[_key];
      }
      return literals.raw.reduce(function(acc, literal, i) {
        var _placeholders$i;
        return acc + literal + ((_placeholders$i = placeholders[i]) !== null && _placeholders$i !== void 0 ? _placeholders$i : "");
      }, "");
    };
    handleTypeGetError = function(Type, error2) {
      var message = "".concat(error2);
      var match = message.match(RegExp("Bad ".concat(Type.name.toLowerCase(), " value: .*")));
      if (match) {
        (0, import_kolmafia3.print)("".concat(match[0], "; if you're certain that this ").concat(Type.name, " exists and is spelled correctly, please update KoLMafia"), "red");
      } else {
        (0, import_kolmafia3.print)(message);
      }
    };
    createSingleConstant = function(Type, converter) {
      var tagFunction = function tagFunction2(literals) {
        for (var _len2 = arguments.length, placeholders = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          placeholders[_key2 - 1] = arguments[_key2];
        }
        var input = concatTemplateString.apply(void 0, [literals].concat(placeholders));
        try {
          return Type.get(input);
        } catch (error2) {
          handleTypeGetError(Type, error2);
        }
        (0, import_kolmafia3.abort)();
      };
      tagFunction.cls = Type;
      tagFunction.none = Type.none;
      tagFunction.get = function(name) {
        var value = converter(name);
        return value === Type.none ? null : value;
      };
      return tagFunction;
    };
    createPluralConstant = function(Type) {
      var tagFunction = function tagFunction2(literals) {
        for (var _len3 = arguments.length, placeholders = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
          placeholders[_key3 - 1] = arguments[_key3];
        }
        var input = concatTemplateString.apply(void 0, [literals].concat(placeholders));
        if (input === "") {
          return Type.all();
        }
        try {
          return Type.get(splitByCommasWithEscapes(input));
        } catch (error2) {
          handleTypeGetError(Type, error2);
        }
        (0, import_kolmafia3.abort)();
      };
      tagFunction.all = function() {
        return Type.all();
      };
      return tagFunction;
    };
    $bounty = createSingleConstant(import_kolmafia3.Bounty, import_kolmafia3.toBounty);
    $bounties = createPluralConstant(import_kolmafia3.Bounty);
    $class = createSingleConstant(import_kolmafia3.Class, import_kolmafia3.toClass);
    $classes = createPluralConstant(import_kolmafia3.Class);
    $coinmaster = createSingleConstant(import_kolmafia3.Coinmaster, import_kolmafia3.toCoinmaster);
    $coinmasters = createPluralConstant(import_kolmafia3.Coinmaster);
    $effect = createSingleConstant(import_kolmafia3.Effect, import_kolmafia3.toEffect);
    $effects = createPluralConstant(import_kolmafia3.Effect);
    $element = createSingleConstant(import_kolmafia3.Element, import_kolmafia3.toElement);
    $elements = createPluralConstant(import_kolmafia3.Element);
    $familiar = createSingleConstant(import_kolmafia3.Familiar, import_kolmafia3.toFamiliar);
    $familiars = createPluralConstant(import_kolmafia3.Familiar);
    $item = createSingleConstant(import_kolmafia3.Item, import_kolmafia3.toItem);
    $items = createPluralConstant(import_kolmafia3.Item);
    $location = createSingleConstant(import_kolmafia3.Location, import_kolmafia3.toLocation);
    $locations = createPluralConstant(import_kolmafia3.Location);
    $modifier = createSingleConstant(import_kolmafia3.Modifier, import_kolmafia3.toModifier);
    $modifiers = createPluralConstant(import_kolmafia3.Modifier);
    $monster = createSingleConstant(import_kolmafia3.Monster, import_kolmafia3.toMonster);
    $monsters = createPluralConstant(import_kolmafia3.Monster);
    $path = createSingleConstant(import_kolmafia3.Path, import_kolmafia3.toPath);
    $paths = createPluralConstant(import_kolmafia3.Path);
    $phylum = createSingleConstant(import_kolmafia3.Phylum, import_kolmafia3.toPhylum);
    $phyla = createPluralConstant(import_kolmafia3.Phylum);
    $servant = createSingleConstant(import_kolmafia3.Servant, import_kolmafia3.toServant);
    $servants = createPluralConstant(import_kolmafia3.Servant);
    $skill = createSingleConstant(import_kolmafia3.Skill, import_kolmafia3.toSkill);
    $skills = createPluralConstant(import_kolmafia3.Skill);
    $slot = createSingleConstant(import_kolmafia3.Slot, import_kolmafia3.toSlot);
    $slots = createPluralConstant(import_kolmafia3.Slot);
    $stat = createSingleConstant(import_kolmafia3.Stat, import_kolmafia3.toStat);
    $stats = createPluralConstant(import_kolmafia3.Stat);
    $thrall = createSingleConstant(import_kolmafia3.Thrall, import_kolmafia3.toThrall);
    $thralls = createPluralConstant(import_kolmafia3.Thrall);
  }
});

// node_modules/libram/dist/lib.js
function _toConsumableArray3(arr) {
  return _arrayWithoutHoles3(arr) || _iterableToArray3(arr) || _unsupportedIterableToArray3(arr) || _nonIterableSpread3();
}
function _nonIterableSpread3() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray3(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles3(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray3(arr);
}
function _defineProperties3(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey3(descriptor.key), descriptor);
  }
}
function _createClass3(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties3(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties3(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey3(t) {
  var i = _toPrimitive3(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive3(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _classCallCheck3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _callSuper(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
function _wrapNativeSuper(Class5) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper = function _wrapNativeSuper5(Class6) {
    if (Class6 === null || !_isNativeFunction(Class6)) return Class6;
    if (typeof Class6 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class6)) return _cache.get(Class6);
      _cache.set(Class6, Wrapper);
    }
    function Wrapper() {
      return _construct(Class6, arguments, _getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class6.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });
    return _setPrototypeOf(Wrapper, Class6);
  };
  return _wrapNativeSuper(Class5);
}
function _construct(t, e, r) {
  if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && _setPrototypeOf(p, r.prototype), p;
}
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct9() {
    return !!t;
  })();
}
function _isNativeFunction(fn) {
  try {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  } catch (e) {
    return typeof fn === "function";
  }
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf10(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf9(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
function _createForOfIteratorHelper2(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray3(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _slicedToArray3(arr, i) {
  return _arrayWithHoles3(arr) || _iterableToArrayLimit3(arr, i) || _unsupportedIterableToArray3(arr, i) || _nonIterableRest3();
}
function _nonIterableRest3() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray3(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray3(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray3(o, minLen);
}
function _arrayLikeToArray3(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit3(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles3(arr) {
  if (Array.isArray(arr)) return arr;
}
function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function getSongLimit() {
  return 3 + ((0, import_kolmafia4.booleanModifier)("Four Songs") ? 1 : 0) + (0, import_kolmafia4.numericModifier)("Additional Song");
}
function isSong(skillOrEffect) {
  if (skillOrEffect instanceof import_kolmafia4.Effect && skillOrEffect.attributes.includes("song")) {
    return true;
  } else {
    var skill = skillOrEffect instanceof import_kolmafia4.Effect ? (0, import_kolmafia4.toSkill)(skillOrEffect) : skillOrEffect;
    return skill.class === $class(_templateObject || (_templateObject = _taggedTemplateLiteral(["Accordion Thief"]))) && skill.buff;
  }
}
function getActiveEffects() {
  return Object.keys((0, import_kolmafia4.myEffects)()).map(function(e) {
    return import_kolmafia4.Effect.get(e);
  });
}
function getActiveSongs() {
  return getActiveEffects().filter(isSong);
}
function getSongCount() {
  return getActiveSongs().length;
}
function canRememberSong() {
  var quantity = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
  return getSongLimit() - getSongCount() >= quantity;
}
function getMonsterLocations(monster) {
  return import_kolmafia4.Location.all().filter(function(location) {
    return monster.name in (0, import_kolmafia4.appearanceRates)(location);
  });
}
function getRemainingLiver() {
  return (0, import_kolmafia4.inebrietyLimit)() - (0, import_kolmafia4.myInebriety)();
}
function getRemainingStomach() {
  return (0, import_kolmafia4.fullnessLimit)() - (0, import_kolmafia4.myFullness)();
}
function getRemainingSpleen() {
  return (0, import_kolmafia4.spleenLimit)() - (0, import_kolmafia4.mySpleenUse)();
}
function have(thing) {
  var quantity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  if (thing instanceof import_kolmafia4.Effect) {
    return (0, import_kolmafia4.haveEffect)(thing) >= quantity;
  }
  if (thing instanceof import_kolmafia4.Familiar) {
    return (0, import_kolmafia4.haveFamiliar)(thing);
  }
  if (thing instanceof import_kolmafia4.Item) {
    return (0, import_kolmafia4.availableAmount)(thing) >= quantity;
  }
  if (thing instanceof import_kolmafia4.Servant) {
    return (0, import_kolmafia4.haveServant)(thing);
  }
  if (thing instanceof import_kolmafia4.Skill) {
    return (0, import_kolmafia4.haveSkill)(thing);
  }
  if (thing instanceof import_kolmafia4.Thrall) {
    var thrall = (0, import_kolmafia4.myThrall)();
    return thrall.id === thing.id && thrall.level >= quantity;
  }
  return false;
}
function haveInCampground(item14) {
  return Object.keys((0, import_kolmafia4.getCampground)()).map(function(i) {
    return import_kolmafia4.Item.get(i);
  }).includes(item14);
}
function haveCounter(counterName) {
  var minTurns = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var maxTurns = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 500;
  return (0, import_kolmafia4.getCounters)(counterName, minTurns, maxTurns) === counterName;
}
function haveWandererCounter(wanderer) {
  if (deterministicWanderers.includes(wanderer)) {
    return haveCounter(wanderer);
  }
  var begin = wanderer + " window begin";
  var end = wanderer + " window end";
  return haveCounter(begin) || haveCounter(end);
}
function isVoteWandererNow() {
  return (0, import_kolmafia4.totalTurnsPlayed)() % 11 === 1 && get("lastVoteMonsterTurn") < (0, import_kolmafia4.totalTurnsPlayed)();
}
function isWandererNow(wanderer) {
  if (deterministicWanderers.includes(wanderer)) {
    return haveCounter(wanderer, 0, 0);
  }
  if (wanderer === Wanderer.Kramco) {
    return true;
  }
  if (wanderer === Wanderer.Vote) {
    return isVoteWandererNow();
  }
  if (wanderer === Wanderer.Familiar) {
    return get("_hipsterAdv") < 7;
  }
  var begin = wanderer + " window begin";
  var end = wanderer + " window end";
  return !haveCounter(begin, 1) && haveCounter(end);
}
function getKramcoWandererChance() {
  var fights = get("_sausageFights");
  var lastFight = get("_lastSausageMonsterTurn");
  var totalTurns = (0, import_kolmafia4.totalTurnsPlayed)();
  if (fights < 1) {
    return lastFight === totalTurns && (0, import_kolmafia4.myTurncount)() < 1 ? 0.5 : 1;
  }
  var turnsSinceLastFight = totalTurns - lastFight;
  return Math.min(1, (turnsSinceLastFight + 1) / (5 + fights * 3 + Math.pow(Math.max(0, fights - 5), 3)));
}
function getFamiliarWandererChance() {
  var totalFights = get("_hipsterAdv");
  var probability = [0.5, 0.4, 0.3, 0.2];
  if (totalFights < 4) {
    return probability[totalFights];
  }
  return totalFights > 7 ? 0 : 0.1;
}
function getWandererChance(wanderer) {
  if (deterministicWanderers.includes(wanderer)) {
    return haveCounter(wanderer, 0, 0) ? 1 : 0;
  }
  if (wanderer === Wanderer.Kramco) {
    getKramcoWandererChance();
  }
  if (wanderer === Wanderer.Vote) {
    return isVoteWandererNow() ? 1 : 0;
  }
  if (wanderer === Wanderer.Familiar) {
    getFamiliarWandererChance();
  }
  var begin = wanderer + " window begin";
  var end = wanderer + " window end";
  if (haveCounter(begin, 1, 100)) {
    return 0;
  }
  var counters = get("relayCounters");
  var re = new RegExp("(\\d+):" + end);
  var matches = counters.match(re);
  if (matches && matches.length === 2) {
    var window = Number.parseInt(matches[1]) - (0, import_kolmafia4.myTurncount)();
    return 1 / window;
  }
  return 0;
}
function isCurrentFamiliar(familiar10) {
  return (0, import_kolmafia4.myFamiliar)() === familiar10;
}
function getFoldGroup(item14) {
  var cache = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  if (cache) {
    var cached = foldGroupCache.get(item14);
    if (cached !== void 0) return cached;
  }
  var result = Object.entries((0, import_kolmafia4.getRelated)(item14, "fold")).sort(function(_ref, _ref2) {
    var _ref3 = _slicedToArray3(_ref, 2), a = _ref3[1];
    var _ref4 = _slicedToArray3(_ref2, 2), b = _ref4[1];
    return a - b;
  }).map(function(_ref5) {
    var _ref6 = _slicedToArray3(_ref5, 1), i = _ref6[0];
    return import_kolmafia4.Item.get(i);
  });
  var _iterator = _createForOfIteratorHelper2(result), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var fold = _step.value;
      foldGroupCache.set(fold, result);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return result;
}
function getZapGroup(item14) {
  return Object.keys((0, import_kolmafia4.getRelated)(item14, "zap")).map(function(i) {
    return import_kolmafia4.Item.get(i);
  });
}
function multiSplit(prop, outerDelimiter, innerDelimiter, mappers) {
  var initialSplit = get(prop).split(outerDelimiter).filter(Boolean);
  var multiDimensionalArray = outerDelimiter === innerDelimiter ? chunk(initialSplit, mappers.length) : initialSplit.map(function(entry) {
    return entry.split(innerDelimiter);
  });
  return multiDimensionalArray.map(function(tup) {
    return mappers.map(function(func, index) {
      return func(tup[index]);
    });
  });
}
function getBanishedMonsters() {
  return new Map(multiSplit("banishedMonsters", ":", ":", [import_kolmafia4.toMonster, banishSource, Number]).map(function(_ref7) {
    var _ref8 = _slicedToArray3(_ref7, 2), monster = _ref8[0], source = _ref8[1];
    return [source, monster];
  }));
}
function canUse(item14) {
  var path3 = (0, import_kolmafia4.myPath)();
  if (path3 !== import_kolmafia4.Path.get("Nuclear Autumn")) {
    if ($items(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["Shrieking Weasel holo-record, Power-Guy 2000 holo-record, Lucky Strikes holo-record, EMD holo-record, Superdrifter holo-record, The Pigs holo-record, Drunk Uncles holo-record"]))).includes(item14)) {
      return false;
    }
  }
  if (path3 === import_kolmafia4.Path.get("G-Lover")) {
    if (!item14.name.toLowerCase().includes("g")) return false;
  }
  if (path3 === import_kolmafia4.Path.get("Bees Hate You")) {
    if (item14.name.toLowerCase().includes("b")) return false;
  }
  return true;
}
function noneToNull(thing) {
  var type = import_kolmafia4.MafiaClasses.find(function(t) {
    return thing instanceof t;
  });
  return type && thing === type.none ? null : thing;
}
function getRange(range) {
  var _range$match$slice$ma, _range$match;
  var _ref9 = (_range$match$slice$ma = (_range$match = range.match(/^(-?\d+)(?:-(-?\d+))?$/)) === null || _range$match === void 0 ? void 0 : _range$match.slice(1, 3).map(function(v) {
    return parseInt(v);
  })) !== null && _range$match$slice$ma !== void 0 ? _range$match$slice$ma : [0], _ref10 = _slicedToArray3(_ref9, 2), lower = _ref10[0], upper = _ref10[1];
  return [lower, Number.isNaN(upper) || upper === void 0 ? lower : upper];
}
function getAverage(range) {
  var _getRange = getRange(range), _getRange2 = _slicedToArray3(_getRange, 2), min2 = _getRange2[0], max = _getRange2[1];
  return (min2 + max) / 2;
}
function getAverageAdventures(item14) {
  return getAverage(item14.adventures);
}
function uneffect(effect2) {
  return (0, import_kolmafia4.cliExecute)("uneffect ".concat(effect2.name));
}
function getPlayerIdFromName(name) {
  var onMissing = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "throw";
  var playerId = (0, import_kolmafia4.getPlayerId)(name);
  if (playerId === name) {
    if (onMissing === "throw") {
      throw new Error("Player not found: ".concat(name));
    }
    return null;
  }
  return parseInt(playerId);
}
function getPlayerNameFromId(id) {
  var onMissing = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "throw";
  var playerName = (0, import_kolmafia4.getPlayerName)(id);
  if (playerName === id.toString()) {
    if (onMissing === "throw") {
      throw new Error("Player not found: ".concat(playerName));
    }
    return null;
  }
  return playerName;
}
function getPlayerFromIdOrName(idOrName) {
  var onMissing = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "throw";
  if (typeof idOrName === "number") {
    var name = getPlayerNameFromId(idOrName, onMissing);
    if (name === null) return null;
    return {
      name: name,
      id: idOrName
    };
  } else {
    var id = getPlayerIdFromName(idOrName, onMissing);
    if (id === null) return null;
    var _name = (0, import_kolmafia4.getPlayerName)(id);
    return {
      name: _name,
      id: id
    };
  }
}
function questStep(questName) {
  var stringStep = get(questName);
  if (stringStep === "unstarted") return -1;
  else if (stringStep === "started") return 0;
  else if (stringStep === "finished" || stringStep === "") return 999;
  else {
    if (stringStep.substring(0, 4) !== "step") {
      throw new Error("Quest state parsing error.");
    }
    return parseInt(stringStep.substring(4), 10);
  }
}
function ensureEffect(ef) {
  var turns2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  if ((0, import_kolmafia4.haveEffect)(ef) < turns2) {
    if (ef.default === null) {
      throw new EnsureError(ef, "No default action");
    }
    if (!(0, import_kolmafia4.cliExecute)(ef.default) || (0, import_kolmafia4.haveEffect)(ef) === 0) {
      throw new EnsureError(ef);
    }
  }
}
function getSaleValue() {
  for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {
    items[_key] = arguments[_key];
  }
  return items.map(function(item14) {
    if (valueMap.has(item14)) return valueMap.get(item14) || 0;
    if (item14.discardable) {
      valueMap.set(item14, (0, import_kolmafia4.mallPrice)(item14) > Math.max(2 * (0, import_kolmafia4.autosellPrice)(item14), 100) ? MALL_VALUE_MODIFIER * (0, import_kolmafia4.mallPrice)(item14) : (0, import_kolmafia4.autosellPrice)(item14));
    } else {
      valueMap.set(item14, (0, import_kolmafia4.mallPrice)(item14) > 100 ? MALL_VALUE_MODIFIER * (0, import_kolmafia4.mallPrice)(item14) : 0);
    }
    return valueMap.get(item14) || 0;
  }).reduce(function(s, price2) {
    return s + price2;
  }, 0) / items.length;
}
function findLeprechaunMultiplier(familiar10) {
  if (familiar10 === $familiar(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["Mutant Cactus Bud"])))) {
    return (0, import_kolmafia4.numericModifier)(familiar10, "Leprechaun Effectiveness", 1, $item.none);
  }
  if (familiar10 === $familiar(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["Reanimated Reanimator"])))) return 0;
  var meatBonus = (0, import_kolmafia4.numericModifier)(familiar10, "Meat Drop", 1, $item.none);
  if (meatBonus === 0) return 0;
  return Math.pow(Math.sqrt(meatBonus / 2 + 55 / 4 + 3) - Math.sqrt(55) / 2, 2);
}
function findFairyMultiplier(familiar10) {
  if (familiar10 === $familiar(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["Mutant Fire Ant"])))) {
    return (0, import_kolmafia4.numericModifier)(familiar10, "Fairy Effectiveness", 1, $item.none);
  }
  if (familiar10 === $familiar(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["Reanimated Reanimator"])))) return 0;
  var itemBonus = (0, import_kolmafia4.numericModifier)(familiar10, "Item Drop", 1, $item.none);
  if (itemBonus === 0) return 0;
  if (familiar10 === $familiar(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["Jill-of-All-Trades"])))) return 1.5;
  return Math.pow(Math.sqrt(itemBonus + 55 / 4 + 3) - Math.sqrt(55) / 2, 2);
}
function getTodaysHolidayWanderers() {
  return (0, import_kolmafia4.holiday)().split("/").flatMap(function(holiday3) {
    var _holidayWanderers$get;
    return (_holidayWanderers$get = holidayWanderers.get(holiday3)) !== null && _holidayWanderers$get !== void 0 ? _holidayWanderers$get : [];
  });
}
function canVisitUrl() {
  if ((0, import_kolmafia4.currentRound)()) {
    logger_default.debug("Current round is ".concat((0, import_kolmafia4.currentRound)(), "; you're in combat."));
    return false;
  }
  if ((0, import_kolmafia4.inMultiFight)()) {
    logger_default.debug("You're in a multifight.");
    return false;
  }
  if ((0, import_kolmafia4.choiceFollowsFight)()) {
    logger_default.debug("A choice follows this fight.");
    return false;
  }
  if ((0, import_kolmafia4.handlingChoice)()) {
    logger_default.debug("You're currently in a choice adventure");
    return false;
  }
  return true;
}
function damageTakenByElement(baseDamage, element) {
  if (baseDamage < 0) return 1;
  var res = (0, import_kolmafia4.elementalResistance)(element);
  return Math.max(1, Math.ceil(baseDamage - baseDamage * res / 100));
}
function telescope() {
  return Object.fromEntries(Object.entries({
    statContest: telescopeStats.get(get("telescope1")),
    elementContest: telescopeElements.get(get("telescope2")),
    hedge1: hedgeTrap1.get(get("telescope3")),
    hedge2: hedgeTrap2.get(get("telescope4")),
    hedge3: hedgeTrap3.get(get("telescope5"))
  }).filter(function(_ref11) {
    var _ref12 = _slicedToArray3(_ref11, 2), value = _ref12[1];
    return value;
  }));
}
function examine(thing) {
  var url = thing instanceof import_kolmafia4.Item ? "desc_item.php?whichitem=".concat(thing.descid) : thing instanceof import_kolmafia4.Familiar ? "desc_familiar.php?which=".concat(thing.id) : thing instanceof import_kolmafia4.Effect ? "desc_effect.php?whicheffect=".concat(thing.descid) : "desc_skill.php?whichskill=".concat(thing.id);
  return (0, import_kolmafia4.visitUrl)(url);
}
function directlyUse(item14) {
  return (0, import_kolmafia4.visitUrl)("inv_use.php?which=3&whichitem=".concat(item14.id, "&pwd"));
}
function unequip(thing) {
  if (thing instanceof import_kolmafia4.Slot) return (0, import_kolmafia4.equip)(thing, $item.none);
  var failedSlots = import_kolmafia4.Slot.all().filter(function(s) {
    if ((0, import_kolmafia4.equippedItem)(s) !== thing) return false;
    return !unequip(thing);
  });
  if (failedSlots.length) logger_default.debug("Failed to unequip ".concat(thing, " from slots ").concat(failedSlots.join(", ")));
  return failedSlots.length === 0;
}
function gameDay() {
  var _todayToString$match;
  var _map = ((_todayToString$match = (0, import_kolmafia4.todayToString)().match(/(\d{4})(\d{2})(\d{2})/)) !== null && _todayToString$match !== void 0 ? _todayToString$match : []).map(Number), _map2 = _slicedToArray3(_map, 4), year = _map2[1], month = _map2[2], day = _map2[3];
  return new Date(year, month - 1, day, 0, 0, 0);
}
function freeCrafts() {
  var type = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "all";
  var effectCrafts = function(effect2) {
    return Math.floor((0, import_kolmafia4.haveEffect)(effect2) / 5);
  };
  var all2 = (have($skill(_templateObject37 || (_templateObject37 = _taggedTemplateLiteral(["Rapid Prototyping"])))) ? 5 - get("_rapidPrototypingUsed") : 0) + (have($skill(_templateObject38 || (_templateObject38 = _taggedTemplateLiteral(["Expert Corner-Cutter"])))) ? 5 - get("_expertCornerCutterUsed") : 0) + effectCrafts($effect(_templateObject39 || (_templateObject39 = _taggedTemplateLiteral(["Inigo's Incantation of Inspiration"])))) + effectCrafts($effect(_templateObject40 || (_templateObject40 = _taggedTemplateLiteral(["Craft Tea"])))) + effectCrafts($effect(_templateObject41 || (_templateObject41 = _taggedTemplateLiteral(["Cooking Concentrate"]))));
  var food = type === "food" ? 5 - get("_cookbookbatCrafting") : 0;
  var smith = type === "smith" ? 5 - get("_thorsPliersCrafting") : 0;
  var booze = 0;
  return all2 + food + smith + booze;
}
function realmAvailable(identifier) {
  if (identifier === "fantasy") {
    return get("_frToday") || get("frAlways");
  } else if (identifier === "pirate") {
    return get("_prToday") || get("prAlways");
  }
  return get("_".concat(identifier, "AirportToday")) || get("".concat(identifier, "AirportAlways"));
}
function realmCurrency(realm) {
  switch (realm) {
    case "sleaze":
      return $item(_templateObject42 || (_templateObject42 = _taggedTemplateLiteral(["Beach Buck"])));
    case "spooky":
      return $item(_templateObject43 || (_templateObject43 = _taggedTemplateLiteral(["Coinspiracy"])));
    case "stench":
      return $item(_templateObject44 || (_templateObject44 = _taggedTemplateLiteral(["FunFunds\u2122"])));
    case "cold":
      return $item(_templateObject45 || (_templateObject45 = _taggedTemplateLiteral(["Wal-Mart gift certificate"])));
    case "hot":
      return $item(_templateObject46 || (_templateObject46 = _taggedTemplateLiteral(["Volcoino"])));
    case "fantasy":
      return $item(_templateObject47 || (_templateObject47 = _taggedTemplateLiteral(["Rubee\u2122"])));
    default:
      return null;
  }
}
function lgrCurrencies() {
  return realmTypes.filter(function(realm) {
    return realmAvailable(realm) && !(realm === "hot" && get("_luckyGoldRingVolcoino"));
  }).map(realmCurrency).filter(notNull);
}
function getCombatFlags() {
  var flags = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [].concat(ACCOUNT_COMBAT_FLAGS);
  var accountPage = (0, import_kolmafia4.visitUrl)("account.php?tab=combat");
  return flags.map(function(flag) {
    return {
      flag: flag,
      value: (0, import_kolmafia4.xpath)(accountPage, '//*[@id="opt_flag_'.concat(flag, "\"]/label/input[@type='checkbox']@checked"))[0] === "checked"
    };
  });
}
function setCombatFlags() {
  for (var _len2 = arguments.length, flags = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    flags[_key2] = arguments[_key2];
  }
  return (0, import_kolmafia4.visitUrl)("account.php?".concat(([].concat(_toConsumableArray3(flags.flatMap(function(_ref13) {
    var flag = _ref13.flag, value = _ref13.value;
    return ["actions[]=flag_".concat(flag), "flag_".concat(flag, "=").concat(Number(value))];
  })), ["action=Update", "am=1", "ajax=1", "pwd"]).join("&"), true)));
}
function withCombatFlags(action) {
  for (var _len3 = arguments.length, flags = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    flags[_key3 - 1] = arguments[_key3];
  }
  var initialValues = getCombatFlags(flags.map(function(_ref14) {
    var flag = _ref14.flag;
    return flag;
  }));
  try {
    return action();
  } finally {
    setCombatFlags.apply(void 0, _toConsumableArray3(initialValues));
  }
}
function haveIntrinsic(effect2) {
  return (0, import_kolmafia4.haveEffect)(effect2) >= 2147483647;
}
function extractItems(text) {
  return new Map(Object.entries((0, import_kolmafia4.extractItems)(text)).map(function(_ref15) {
    var _ref16 = _slicedToArray3(_ref15, 2), itemName = _ref16[0], quantity = _ref16[1];
    return [import_kolmafia4.Item.get(itemName), quantity];
  }));
}
function makeScalerCalcFunction(cache, pattern) {
  return function(monster) {
    var _pattern$exec$, _pattern$exec;
    var current2 = cache.get(monster);
    if (current2 !== void 0) return (0, import_kolmafia4.monsterEval)(current2);
    var result = (_pattern$exec$ = (_pattern$exec = pattern.exec(monster.attributes)) === null || _pattern$exec === void 0 ? void 0 : _pattern$exec[1]) !== null && _pattern$exec$ !== void 0 ? _pattern$exec$ : "0";
    cache.set(monster, result);
    return (0, import_kolmafia4.monsterEval)(result);
  };
}
function withBatch(action) {
  (0, import_kolmafia4.batchOpen)();
  try {
    return action();
  } finally {
    (0, import_kolmafia4.batchClose)();
  }
}
function totalFamiliarWeight() {
  var familiar10 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia4.myFamiliar)();
  var considerAdjustment = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  return clamp((0, import_kolmafia4.familiarWeight)(familiar10), have($effect(_templateObject48 || (_templateObject48 = _taggedTemplateLiteral(["Fidoxene"])))) ? 20 : 0, Infinity) + familiar10.soupWeight + (considerAdjustment ? (0, import_kolmafia4.weightAdjustment)() : 0) + (familiar10.feasted ? 10 : 0);
}
function getFamiliarTags(familiar10) {
  return familiar10.attributes.split("; ").filter(Boolean);
}
var import_kolmafia4, _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27, _templateObject28, _templateObject29, _templateObject30, _templateObject31, _templateObject32, _templateObject33, _templateObject34, _templateObject35, _templateObject36, _templateObject37, _templateObject38, _templateObject39, _templateObject40, _templateObject41, _templateObject42, _templateObject43, _templateObject44, _templateObject45, _templateObject46, _templateObject47, _templateObject48, Wanderer, deterministicWanderers, foldGroupCache, banishSource, EnsureError, valueMap, MALL_VALUE_MODIFIER, Environment, holidayWanderers, telescopeStats, telescopeElements, hedgeTrap1, hedgeTrap2, hedgeTrap3, byStat, byClass, realmTypes, ACCOUNT_COMBAT_FLAGS, scalerRates, scalerCaps, SCALE_RATE_PATTERN, SCALE_CAP_PATTERN, getScalingRate, getScalingCap, makeBulkFunction, bulkAutosell, bulkPutCloset, bulkPutDisplay, bulkPutStash, bulkTakeCloset, bulkTakeDisplay, bulkTakeShop, bulkTakeStash, bulkTakeStorage, bulkPutShop, bulkSell, bulkRepriceShop, familiarTags;
var init_lib = __esm({
  "node_modules/libram/dist/lib.js": function() {
    import_kolmafia4 = require("kolmafia");
    init_logger();
    init_property();
    init_template_string();
    init_utils();
    (function(Wanderer2) {
      Wanderer2["Digitize"] = "Digitize Monster";
      Wanderer2["Enamorang"] = "Enamorang Monster";
      Wanderer2["Familiar"] = "Familiar";
      Wanderer2["Holiday"] = "Holiday Monster";
      Wanderer2["Kramco"] = "Kramco";
      Wanderer2["Nemesis"] = "Nemesis Assassin";
      Wanderer2["Portscan"] = "portscan.edu";
      Wanderer2["Romantic"] = "Romantic Monster";
      Wanderer2["Vote"] = "Vote Monster";
    })(Wanderer || (Wanderer = {}));
    deterministicWanderers = [Wanderer.Digitize, Wanderer.Portscan];
    foldGroupCache = /* @__PURE__ */ new Map();
    banishSource = function(banisher) {
      if (banisher.toLowerCase() === "saber force") return $skill(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Use the Force"])));
      if (banisher.toLowerCase() === "nanorhino") return $skill(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["Unleash Nanites"])));
      var item14 = (0, import_kolmafia4.toItem)(banisher);
      if ($items(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["none, training scroll:  Snokebomb, tomayohawk-style reflex hammer"]))).includes(item14)) {
        return (0, import_kolmafia4.toSkill)(banisher);
      }
      return item14;
    };
    EnsureError = /* @__PURE__ */ function(_Error) {
      _inherits(EnsureError2, _Error);
      function EnsureError2(cause, reason) {
        var _this;
        _classCallCheck3(this, EnsureError2);
        _this = _callSuper(this, EnsureError2, ["Failed to ensure ".concat(cause.name, "!").concat(reason ? " ".concat(reason) : "")]);
        _this.name = "Ensure Error";
        return _this;
      }
      return _createClass3(EnsureError2);
    }(/* @__PURE__ */ _wrapNativeSuper(Error));
    valueMap = /* @__PURE__ */ new Map();
    MALL_VALUE_MODIFIER = 0.9;
    Environment = {
      Outdoor: "outdoor",
      Indoor: "indoor",
      Underground: "underground",
      Underwater: "underwater"
    };
    holidayWanderers = /* @__PURE__ */ new Map([["El Dia De Los Muertos Borrachos", $monsters(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["Novia Cad\xE1ver, Novio Cad\xE1ver, Padre Cad\xE1ver, Persona Inocente Cad\xE1ver"])))], ["Feast of Boris", $monsters(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral(["Candied Yam Golem, Malevolent Tofurkey, Possessed Can of Cranberry Sauce, Stuffing Golem"])))], ["Talk Like a Pirate Day", $monsters(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral(["ambulatory pirate, migratory pirate, peripatetic pirate"])))]]);
    telescopeStats = /* @__PURE__ */ new Map([["standing around flexing their muscles and using grip exercisers", $stat(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral(["Muscle"])))], ["sitting around playing chess and solving complicated-looking logic puzzles", $stat(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral(["Mysticality"])))], ["all wearing sunglasses and dancing", $stat(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral(["Moxie"])))]]);
    telescopeElements = /* @__PURE__ */ new Map([["people, all of whom appear to be on fire", $element(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral(["hot"])))], ["people, surrounded by a cloud of eldritch mist", $element(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral(["spooky"])))], ["greasy-looking people furtively skulking around", $element(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral(["sleaze"])))], ["people, surrounded by garbage and clouds of flies", $element(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral(["stench"])))], ["people, clustered around a group of igloos", $element(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral(["cold"])))]]);
    hedgeTrap1 = /* @__PURE__ */ new Map([["smoldering bushes on the outskirts of a hedge maze", $element(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral(["hot"])))], ["creepy-looking black bushes on the outskirts of a hedge maze", $element(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral(["spooky"])))], ["purplish, greasy-looking hedges", $element(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral(["sleaze"])))], ["nasty-looking, dripping green bushes on the outskirts of a hedge maze", $element(_templateObject25 || (_templateObject25 = _taggedTemplateLiteral(["stench"])))], ["frost-rimed bushes on the outskirts of a hedge maze", $element(_templateObject26 || (_templateObject26 = _taggedTemplateLiteral(["cold"])))]]);
    hedgeTrap2 = /* @__PURE__ */ new Map([["smoke rising from deeper within the maze", $element(_templateObject27 || (_templateObject27 = _taggedTemplateLiteral(["hot"])))], ["a miasma of eldritch vapors rising from deeper within the maze", $element(_templateObject28 || (_templateObject28 = _taggedTemplateLiteral(["spooky"])))], ["a greasy purple cloud hanging over the center of the maze", $element(_templateObject29 || (_templateObject29 = _taggedTemplateLiteral(["sleaze"])))], ["a cloud of green gas hovering over the maze", $element(_templateObject30 || (_templateObject30 = _taggedTemplateLiteral(["stench"])))], ["wintry mists rising from deeper within the maze", $element(_templateObject31 || (_templateObject31 = _taggedTemplateLiteral(["cold"])))]]);
    hedgeTrap3 = /* @__PURE__ */ new Map([["with lava slowly oozing out of it", $element(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral(["hot"])))], ["surrounded by creepy black mist", $element(_templateObject33 || (_templateObject33 = _taggedTemplateLiteral(["spooky"])))], ["that occasionally vomits out a greasy ball of hair", $element(_templateObject34 || (_templateObject34 = _taggedTemplateLiteral(["sleaze"])))], ["disgorging a really surprising amount of sewage", $element(_templateObject35 || (_templateObject35 = _taggedTemplateLiteral(["stench"])))], ["occasionally disgorging a bunch of ice cubes", $element(_templateObject36 || (_templateObject36 = _taggedTemplateLiteral(["cold"])))]]);
    byStat = makeByXFunction(function() {
      return (0, import_kolmafia4.myPrimestat)().toString();
    });
    byClass = makeByXFunction(function() {
      return (0, import_kolmafia4.myClass)().toString();
    });
    realmTypes = ["spooky", "stench", "hot", "cold", "sleaze", "fantasy", "pirate"];
    ACCOUNT_COMBAT_FLAGS = ["aabosses", "wowbar", "bothcombatinterf", "compactmanuel", "eternalmrj", "disablelovebugs", "boringdarts"];
    scalerRates = /* @__PURE__ */ new Map();
    scalerCaps = /* @__PURE__ */ new Map();
    SCALE_RATE_PATTERN = /Scale: (?:\[([^\]]*)\]|(\d*))/;
    SCALE_CAP_PATTERN = /Cap: (?:\[([^\]]*)\]|(\d*))/;
    getScalingRate = makeScalerCalcFunction(scalerRates, SCALE_RATE_PATTERN);
    getScalingCap = makeScalerCalcFunction(scalerCaps, SCALE_CAP_PATTERN);
    makeBulkFunction = function(action) {
      return function(items) {
        (0, import_kolmafia4.batchOpen)();
        var _iterator2 = _createForOfIteratorHelper2(items.entries()), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var _step2$value = _slicedToArray3(_step2.value, 2), item14 = _step2$value[0], quantity = _step2$value[1];
            action(quantity, item14);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
        return (0, import_kolmafia4.batchClose)();
      };
    };
    bulkAutosell = makeBulkFunction(import_kolmafia4.autosell);
    bulkPutCloset = makeBulkFunction(import_kolmafia4.putCloset);
    bulkPutDisplay = makeBulkFunction(import_kolmafia4.putDisplay);
    bulkPutStash = makeBulkFunction(import_kolmafia4.putStash);
    bulkTakeCloset = makeBulkFunction(import_kolmafia4.takeCloset);
    bulkTakeDisplay = makeBulkFunction(import_kolmafia4.takeDisplay);
    bulkTakeShop = makeBulkFunction(import_kolmafia4.takeShop);
    bulkTakeStash = makeBulkFunction(import_kolmafia4.takeStash);
    bulkTakeStorage = makeBulkFunction(import_kolmafia4.takeStorage);
    bulkPutShop = function(items) {
      (0, import_kolmafia4.batchOpen)();
      var _iterator3 = _createForOfIteratorHelper2(items.entries()), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var _step3$value = _slicedToArray3(_step3.value, 2), item14 = _step3$value[0], _step3$value$ = _step3$value[1], quantity = _step3$value$.quantity, limit = _step3$value$.limit, price2 = _step3$value$.price;
          if (quantity) {
            (0, import_kolmafia4.putShop)(price2, limit !== null && limit !== void 0 ? limit : 0, quantity, item14);
          } else {
            (0, import_kolmafia4.putShop)(price2, limit !== null && limit !== void 0 ? limit : 0, item14);
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      return (0, import_kolmafia4.batchClose)();
    };
    bulkSell = function(coinmaster, items) {
      (0, import_kolmafia4.batchOpen)();
      var _iterator4 = _createForOfIteratorHelper2(items.entries()), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var _step4$value = _slicedToArray3(_step4.value, 2), item14 = _step4$value[0], quantity = _step4$value[1];
          (0, import_kolmafia4.sell)(coinmaster, quantity, item14);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return (0, import_kolmafia4.batchClose)();
    };
    bulkRepriceShop = function(items) {
      (0, import_kolmafia4.batchOpen)();
      var _iterator5 = _createForOfIteratorHelper2(items.entries()), _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          var _step5$value = _slicedToArray3(_step5.value, 2), item14 = _step5$value[0], _step5$value$ = _step5$value[1], limit = _step5$value$.limit, price2 = _step5$value$.price;
          if (limit) {
            (0, import_kolmafia4.repriceShop)(price2, limit, item14);
          } else {
            (0, import_kolmafia4.repriceShop)(price2, item14);
          }
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
      return (0, import_kolmafia4.batchClose)();
    };
    familiarTags = Object.freeze(["animal", "insect", "haseyes", "haswings", "fast", "bite", "flies", "hashands", "wearsclothes", "organic", "vegetable", "hovers", "edible", "food", "sentient", "cute", "mineral", "polygonal", "object", "undead", "cantalk", "evil", "orb", "spooky", "sleaze", "aquatic", "swims", "isclothes", "phallic", "stench", "hot", "hasbeak", "haslegs", "robot", "technological", "hard", "cold", "hasbones", "hasclaws", "reallyevil", "good", "person", "humanoid", "animatedart", "software", "pokefam", "hasshell", "hasstinger"]);
  }
});

// node_modules/libram/dist/overlappingNames.js
var overlappingItemNames, overlappingSkillNames;
var init_overlappingNames = __esm({
  "node_modules/libram/dist/overlappingNames.js": function() {
    overlappingItemNames = ["spider web", "really sticky spider web", "dictionary", "NG", "Cloaca-Cola", "yo-yo", "top", "ball", "kite", "yo", "red potion", "blue potion", "bowling ball", "adder", "red button", "pile of sand", "mushroom", "deluxe mushroom"];
    overlappingSkillNames = ["Shoot", "Thrust-Smack", "Headbutt", "Toss", "Knife in the Dark", "Sing", "Disarm", "LIGHT", "BURN", "Extract", "Meteor Shower", "Snipe", "Bite", "Kick", "Howl", "Cleave", "Boil", "Slice", "Rainbow"];
  }
});

// node_modules/libram/dist/combat.js
function _get() {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get = Reflect.get.bind();
  } else {
    _get = function _get3(target, property, receiver) {
      var base = _superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);
      if (desc.get) {
        return desc.get.call(arguments.length < 3 ? target : receiver);
      }
      return desc.value;
    };
  }
  return _get.apply(this, arguments);
}
function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = _getPrototypeOf2(object);
    if (object === null) break;
  }
  return object;
}
function _createForOfIteratorHelper3(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray4(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _toConsumableArray4(arr) {
  return _arrayWithoutHoles4(arr) || _iterableToArray4(arr) || _unsupportedIterableToArray4(arr) || _nonIterableSpread4();
}
function _nonIterableSpread4() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray4(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray4(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray4(o, minLen);
}
function _iterableToArray4(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles4(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray4(arr);
}
function _arrayLikeToArray4(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _defineProperty3(obj, key, value) {
  key = _toPropertyKey4(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _defineProperties4(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey4(descriptor.key), descriptor);
  }
}
function _createClass4(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties4(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties4(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey4(t) {
  var i = _toPrimitive4(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive4(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _classCallCheck4(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _callSuper2(t, o, e) {
  return o = _getPrototypeOf2(o), _possibleConstructorReturn2(t, _isNativeReflectConstruct2() ? Reflect.construct(o, e || [], _getPrototypeOf2(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn2(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized2(self);
}
function _assertThisInitialized2(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _inherits2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass) _setPrototypeOf2(subClass, superClass);
}
function _wrapNativeSuper2(Class5) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper2 = function _wrapNativeSuper5(Class6) {
    if (Class6 === null || !_isNativeFunction2(Class6)) return Class6;
    if (typeof Class6 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class6)) return _cache.get(Class6);
      _cache.set(Class6, Wrapper);
    }
    function Wrapper() {
      return _construct2(Class6, arguments, _getPrototypeOf2(this).constructor);
    }
    Wrapper.prototype = Object.create(Class6.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });
    return _setPrototypeOf2(Wrapper, Class6);
  };
  return _wrapNativeSuper2(Class5);
}
function _construct2(t, e, r) {
  if (_isNativeReflectConstruct2()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && _setPrototypeOf2(p, r.prototype), p;
}
function _isNativeReflectConstruct2() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct2 = function _isNativeReflectConstruct9() {
    return !!t;
  })();
}
function _isNativeFunction2(fn) {
  try {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  } catch (e) {
    return typeof fn === "function";
  }
}
function _setPrototypeOf2(o, p) {
  _setPrototypeOf2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf10(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf2(o, p);
}
function _getPrototypeOf2(o) {
  _getPrototypeOf2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf9(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf2(o);
}
function getMacroId() {
  var name = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : MACRO_NAME;
  var query = '//select[@name="macroid"]/option[text()="'.concat(name, '"]/@value');
  var macroText = (0, import_kolmafia5.visitUrl)("account_combatmacros.php");
  var macroMatches = (0, import_kolmafia5.xpath)(macroText, query);
  if (macroMatches.length === 0) {
    (0, import_kolmafia5.visitUrl)("account_combatmacros.php?action=new");
    var newMacroText = (0, import_kolmafia5.visitUrl)("account_combatmacros.php?macroid=0&name=".concat(name, "&macrotext=abort&action=save"));
    macroMatches = (0, import_kolmafia5.xpath)(newMacroText, query);
  }
  if (macroMatches.length === 0) {
    if ((0, import_kolmafia5.xpath)(macroText, '//select[@name="macroid"]/option').length >= 100) {
      throw new InvalidMacroError("Please delete at least one existing macro to make some space for Libram");
    }
    throw new InvalidMacroError("Could not find or create macro ".concat(name));
  }
  return parseInt(macroMatches[0], 10);
}
function itemOrNameToItem(itemOrName) {
  return typeof itemOrName === "string" ? import_kolmafia5.Item.get(itemOrName) : itemOrName;
}
function itemOrItemsBallsMacroName(itemOrItems) {
  if (Array.isArray(itemOrItems)) {
    return itemOrItems.map(itemOrItemsBallsMacroName).join(", ");
  } else {
    var item14 = itemOrNameToItem(itemOrItems);
    return !overlappingItemNames.includes(item14.name) ? item14.name : item14.id.toFixed(0);
  }
}
function itemOrItemsBallsMacroPredicate(itemOrItems) {
  if (Array.isArray(itemOrItems)) {
    if (itemOrItems[0] === itemOrItems[1]) return "hastwocombatitems ".concat(itemOrItemsBallsMacroName(itemOrItems[0]));
    return itemOrItems.map(itemOrItemsBallsMacroPredicate).join(" && ");
  } else {
    return "hascombatitem ".concat(itemOrItemsBallsMacroName(itemOrItems));
  }
}
function skillOrNameToSkill(skillOrName) {
  if (typeof skillOrName === "string") {
    return import_kolmafia5.Skill.get(skillOrName);
  } else {
    return skillOrName;
  }
}
function skillBallsMacroName(skillOrName) {
  var skill = skillOrNameToSkill(skillOrName);
  return skill.name.match(/^[A-Za-z ]+$/) && !overlappingSkillNames.includes(skill.name) ? skill.name : skill.id;
}
function adventureMacro(loc, macro) {
  macro.save();
  (0, import_kolmafia5.setAutoAttack)(0);
  try {
    (0, import_kolmafia5.adv1)(loc, 0, "");
    while ((0, import_kolmafia5.inMultiFight)()) (0, import_kolmafia5.runCombat)();
    if ((0, import_kolmafia5.choiceFollowsFight)()) (0, import_kolmafia5.visitUrl)("choice.php");
  } finally {
    Macro.clearSaved();
  }
}
function adventureMacroAuto(loc, autoMacro) {
  var _nextMacro;
  var nextMacro = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
  nextMacro = (_nextMacro = nextMacro) !== null && _nextMacro !== void 0 ? _nextMacro : Macro.abort();
  autoMacro.setAutoAttack();
  nextMacro.save();
  try {
    (0, import_kolmafia5.adv1)(loc, 0, "");
    while ((0, import_kolmafia5.inMultiFight)()) (0, import_kolmafia5.runCombat)();
    if ((0, import_kolmafia5.choiceFollowsFight)()) (0, import_kolmafia5.visitUrl)("choice.php");
  } finally {
    Macro.clearSaved();
  }
}
var import_kolmafia5, MACRO_NAME, InvalidMacroError, Macro, StrictMacro;
var init_combat = __esm({
  "node_modules/libram/dist/combat.js": function() {
    import_kolmafia5 = require("kolmafia");
    init_lib();
    init_overlappingNames();
    init_property();
    MACRO_NAME = "Script Autoattack Macro";
    InvalidMacroError = /* @__PURE__ */ function(_Error) {
      _inherits2(InvalidMacroError2, _Error);
      function InvalidMacroError2() {
        _classCallCheck4(this, InvalidMacroError2);
        return _callSuper2(this, InvalidMacroError2, arguments);
      }
      return _createClass4(InvalidMacroError2);
    }(/* @__PURE__ */ _wrapNativeSuper2(Error));
    Macro = /* @__PURE__ */ function() {
      function Macro2() {
        _classCallCheck4(this, Macro2);
        _defineProperty3(this, "components", []);
        _defineProperty3(this, "name", MACRO_NAME);
      }
      _createClass4(Macro2, [{
        key: "toString",
        value: (
          /**
           * Convert macro to string.
           *
           * @returns BALLS macro
           */
          function toString() {
            return (this.components.join(";") + ";").replace(/;;+/g, ";");
          }
        )
        /**
         * Gives your macro a new name to be used when saving an autoattack.
         *
         * @param name The name to be used when saving as an autoattack.
         * @returns The macro in question
         */
      }, {
        key: "rename",
        value: function rename(name) {
          this.name = name;
          return this;
        }
        /**
         * Creates a new Macro with a name other than the default name.
         *
         * @param name The name to assign this macro.
         * @returns A new Macro with the assigned name.
         */
      }, {
        key: "save",
        value: (
          /**
           * Save a macro to a Mafia property for use in a consult script.
           */
          function save() {
            _set(Macro2.SAVED_MACRO_PROPERTY, this.toString());
          }
        )
        /**
         * Load a saved macro from the Mafia property.
         *
         * @returns Loaded macro text
         */
      }, {
        key: "step",
        value: (
          /**
           * Statefully add one or several steps to a macro.
           *
           * @param nextSteps The steps to add to the macro.
           * @returns {Macro} This object itself.
           */
          function step2() {
            var _ref, _this$components;
            for (var _len = arguments.length, nextSteps = new Array(_len), _key = 0; _key < _len; _key++) {
              nextSteps[_key] = arguments[_key];
            }
            var nextStepsStrings = (_ref = []).concat.apply(_ref, _toConsumableArray4(nextSteps.map(function(x) {
              return x instanceof Macro2 ? x.components : [x];
            })));
            (_this$components = this.components).push.apply(_this$components, _toConsumableArray4(nextStepsStrings.filter(Boolean)));
            return this;
          }
        )
        /**
         * Statefully add one or several steps to a macro.
         *
         * @param nextSteps The steps to add to the macro.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "submit",
        value: (
          /**
           * Submit the built macro to KoL. Only works inside combat.
           *
           * @returns Contents of the fight page after macro submission
           */
          function submit2() {
            var final = this.toString();
            return (0, import_kolmafia5.visitUrl)("fight.php?action=macro&macrotext=".concat((0, import_kolmafia5.urlEncode)(final)), true, true);
          }
        )
        /**
         * Set this macro as a KoL native autoattack.
         */
      }, {
        key: "setAutoAttack",
        value: function setAutoAttack3() {
          var id = Macro2.cachedMacroIds.get(this.name);
          if (id === void 0) {
            id = getMacroId(this.name);
            Macro2.cachedMacroIds.set(this.name, id);
          }
          if ((0, import_kolmafia5.getAutoAttack)() === 99e6 + id && this.toString() === Macro2.cachedAutoAttacks.get(this.name)) {
            return;
          }
          (0, import_kolmafia5.visitUrl)("account_combatmacros.php?macroid=".concat(id, "&name=").concat((0, import_kolmafia5.urlEncode)(this.name), "&macrotext=").concat((0, import_kolmafia5.urlEncode)(this.toString()), "&action=save"), true, true);
          (0, import_kolmafia5.visitUrl)("account.php?am=1&action=autoattack&value=".concat(99e6 + id, "&ajax=1"));
          Macro2.cachedAutoAttacks.set(this.name, this.toString());
        }
        /**
         * Renames the macro, then sets it as an autoattack.
         *
         * @param name The name to save the macro under as an autoattack.
         */
      }, {
        key: "setAutoAttackAs",
        value: function setAutoAttackAs(name) {
          this.name = name;
          this.setAutoAttack();
        }
        /**
         * Clear all cached autoattacks, and delete all stored macros server-side.
         */
      }, {
        key: "abort",
        value: (
          /**
           * Add an "abort" step to this macro.
           *
           * @returns {Macro} This object itself.
           */
          function abort2() {
            return this.step("abort");
          }
        )
        /**
         * Create a new macro with an "abort" step.
         *
         * @returns {Macro} This object itself.
         */
      }, {
        key: "abortWithWarning",
        value: (
          /**
           * Adds an "abort" step to this macro, with a warning message to print
           *
           * @param warning The warning message to print
           * @returns  {Macro} This object itself.
           */
          function abortWithWarning(warning) {
            return this.step('abort "'.concat(warning, '"'));
          }
        )
        /**
         * Create a new macro with an "abort" step to this macro, with a warning message to print
         *
         * @param warning The warning message to print
         * @returns {Macro} This object itself.
         */
      }, {
        key: "runaway",
        value: (
          /**
           * Add a "runaway" step to this macro.
           *
           * @returns {Macro} This object itself.
           */
          function runaway() {
            return this.step("runaway");
          }
        )
        /**
         * Create a new macro with an "runaway" step.
         *
         * @returns {Macro} This object itself.
         */
      }, {
        key: "if_",
        value: (
          /**
           * Add an "if" statement to this macro.
           *
           * @param condition The BALLS condition for the if statement.
           * @param ifTrue Continuation if the condition is true.
           * @returns {Macro} This object itself.
           */
          function if_(condition, ifTrue) {
            return this.step("if ".concat(Macro2.makeBALLSPredicate(condition))).step(ifTrue).step("endif");
          }
        )
        /**
         * Create a new macro with an "if" statement.
         *
         * @param condition The BALLS condition for the if statement.
         * @param ifTrue Continuation if the condition is true.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "ifNot",
        value: (
          /**
           * Add an "if" statement to this macro, inverting the condition.
           *
           * @param condition The BALLS condition for the if statement.
           * @param ifTrue Continuation if the condition is true.
           * @returns {Macro} This object itself.
           */
          function ifNot(condition, ifTrue) {
            return this.if_("!".concat(Macro2.makeBALLSPredicate(condition)), ifTrue);
          }
        )
        /**
         * Create a new macro with an "if" statement, inverting the condition.
         *
         * @param condition The BALLS condition for the if statement.
         * @param ifTrue Continuation if the condition is true.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "while_",
        value: (
          /**
           * Add a "while" statement to this macro.
           *
           * @param condition The BALLS condition for the while statement.
           * @param contents Loop to repeat while the condition is true.
           * @returns {Macro} This object itself.
           */
          function while_(condition, contents) {
            return this.step("while ".concat(Macro2.makeBALLSPredicate(condition))).step(contents).step("endwhile");
          }
        )
        /**
         * Create a new macro with a "while" statement.
         *
         * @param condition The BALLS condition for the while statement.
         * @param contents Loop to repeat while the condition is true.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "externalIf",
        value: (
          /**
           * Conditionally add a step to a macro based on a condition evaluated at the time of building the macro.
           *
           * @param condition The JS condition.
           * @param ifTrue Continuation to add if the condition is true.
           * @param ifFalse Optional input to turn this into an if...else statement.
           * @returns {Macro} This object itself.
           */
          function externalIf(condition, ifTrue, ifFalse) {
            if (condition) return this.step(ifTrue);
            else if (ifFalse) return this.step(ifFalse);
            else return this;
          }
        )
        /**
         * Create a new macro with a condition evaluated at the time of building the macro.
         *
         * @param condition The JS condition.
         * @param ifTrue Continuation to add if the condition is true.
         * @param ifFalse Optional input to turn this into an if...else statement.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "repeat",
        value: (
          /**
           * Add a repeat step to the macro.
           *
           * @param condition The BALLS condition for the repeat statement, optional.
           * @returns {Macro} This object itself.
           */
          function repeat(condition) {
            return condition === void 0 ? this.step("repeat") : this.step("repeat ".concat(Macro2.makeBALLSPredicate(condition)));
          }
        )
        /**
         * Add one or more skill cast steps to the macro.
         *
         * @param skills Skills to cast.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "skill",
        value: function skill() {
          for (var _len2 = arguments.length, skills3 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            skills3[_key2] = arguments[_key2];
          }
          return this.step.apply(this, _toConsumableArray4(skills3.map(function(skill2) {
            return "skill ".concat(skillBallsMacroName(skill2));
          })));
        }
        /**
         * Create a new macro with one or more skill cast steps.
         *
         * @param skills Skills to cast.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "trySkill",
        value: (
          /**
           * Add one or more skill cast steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try casting.
           * @returns {Macro} This object itself.
           */
          function trySkill() {
            for (var _len3 = arguments.length, skills3 = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
              skills3[_key3] = arguments[_key3];
            }
            return this.step.apply(this, _toConsumableArray4(skills3.map(function(skillOrName) {
              return skillOrNameToSkill(skillOrName);
            }).map(function(skill) {
              return Macro2.if_(Macro2.makeBALLSPredicate(skill), Macro2.skill(skill));
            })));
          }
        )
        /**
         * Create a new macro with one or more skill cast steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try casting.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "trySkillRepeat",
        value: (
          /**
           * Add one or more skill-cast-and-repeat steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try repeatedly casting.
           * @returns {Macro} This object itself.
           */
          function trySkillRepeat() {
            for (var _len4 = arguments.length, skills3 = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
              skills3[_key4] = arguments[_key4];
            }
            return this.step.apply(this, _toConsumableArray4(skills3.map(function(skillOrName) {
              return skillOrNameToSkill(skillOrName);
            }).map(function(skill) {
              return Macro2.if_(Macro2.makeBALLSPredicate(skill), Macro2.skill(skill).repeat(skill));
            })));
          }
        )
        /**
         * Create a new macro with one or more skill-cast-and-repeat steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try repeatedly casting.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "item",
        value: (
          /**
           * Add one or more item steps to the macro.
           *
           * @param items Items to use. Pass a tuple [item1, item2] to funksling.
           * @returns {Macro} This object itself.
           */
          function item14() {
            for (var _len5 = arguments.length, items = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
              items[_key5] = arguments[_key5];
            }
            return this.step.apply(this, _toConsumableArray4(items.map(function(itemOrItems) {
              return "use ".concat(itemOrItemsBallsMacroName(itemOrItems));
            })));
          }
        )
        /**
         * Create a new macro with one or more item steps.
         *
         * @param items Items to use. Pass a tuple [item1, item2] to funksling.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "tryItem",
        value: (
          /**
           * Add one or more item steps to the macro, where each step checks to see if you have the item first.
           *
           * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
           * @returns {Macro} This object itself.
           */
          function tryItem() {
            for (var _len6 = arguments.length, items = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
              items[_key6] = arguments[_key6];
            }
            return this.step.apply(this, _toConsumableArray4(items.map(function(item14) {
              return Macro2.if_(itemOrItemsBallsMacroPredicate(item14), Macro2.item(item14));
            })));
          }
        )
        /**
         * Create a new macro with one or more item steps, where each step checks to see if you have the item first.
         *
         * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "attack",
        value: (
          /**
           * Add an attack step to the macro.
           *
           * @returns {Macro} This object itself.
           */
          function attack() {
            return this.step("attack");
          }
        )
        /**
         * Create a new macro with an attack step.
         *
         * @returns {Macro} This object itself.
         */
      }, {
        key: "ifHolidayWanderer",
        value: (
          /**
           * Create an if_ statement based on what holiday of loathing it currently is. On non-holidays, returns the original macro, unmutated.
           *
           * @param macro The macro to place in the if_ statement
           * @returns This macro with supplied macro wapped in if statement matching holiday wanderers
           */
          function ifHolidayWanderer(macro) {
            var todaysWanderers = getTodaysHolidayWanderers();
            if (todaysWanderers.length === 0) return this;
            return this.if_(todaysWanderers.map(function(monster) {
              return "monsterid ".concat(monster.id);
            }).join(" || "), macro);
          }
        )
        /**
         * Create a new macro starting with an ifHolidayWanderer step.
         *
         * @param macro The macro to place inside the if_ statement
         * @returns New macro with supplied macro wrapped in if statement matching holiday wanderers
         */
      }, {
        key: "ifNotHolidayWanderer",
        value: (
          /**
           * Create an if_ statement based on what holiday of loathing it currently is. On non-holidays, returns the original macro, with the input macro appended.
           *
           * @param macro The macro to place in the if_ statement.
           * @returns This macro with supplied macro wrapped in if statement matching monsters that are not holiday wanderers
           */
          function ifNotHolidayWanderer(macro) {
            var todaysWanderers = getTodaysHolidayWanderers();
            if (todaysWanderers.length === 0) return this.step(macro);
            return this.if_(todaysWanderers.map(function(monster) {
              return "!monsterid ".concat(monster.id);
            }).join(" && "), macro);
          }
        )
        /**
         * Create a new macro starting with an ifNotHolidayWanderer step.
         *
         * @param macro The macro to place inside the if_ statement
         * @returns New macro with supplied macro wrapped in if statement matching monsters that are not holiday wanderers
         */
      }], [{
        key: "rename",
        value: function rename(name) {
          return new this().rename(name);
        }
      }, {
        key: "load",
        value: function load() {
          var _this;
          return (_this = new this()).step.apply(_this, _toConsumableArray4(get(Macro2.SAVED_MACRO_PROPERTY).split(";")));
        }
        /**
         * Clear the saved macro in the Mafia property.
         */
      }, {
        key: "clearSaved",
        value: function clearSaved() {
          (0, import_kolmafia5.removeProperty)(Macro2.SAVED_MACRO_PROPERTY);
        }
      }, {
        key: "step",
        value: function step2() {
          var _this2;
          return (_this2 = new this()).step.apply(_this2, arguments);
        }
      }, {
        key: "clearAutoAttackMacros",
        value: function clearAutoAttackMacros() {
          var _iterator = _createForOfIteratorHelper3(Macro2.cachedAutoAttacks.keys()), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var _Macro$cachedMacroIds;
              var name = _step.value;
              var id = (_Macro$cachedMacroIds = Macro2.cachedMacroIds.get(name)) !== null && _Macro$cachedMacroIds !== void 0 ? _Macro$cachedMacroIds : getMacroId(name);
              (0, import_kolmafia5.visitUrl)("account_combatmacros.php?macroid=".concat(id, "&action=edit&what=Delete&confirm=1"));
              Macro2.cachedAutoAttacks.delete(name);
              Macro2.cachedMacroIds.delete(name);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        }
      }, {
        key: "abort",
        value: function abort2() {
          return new this().abort();
        }
      }, {
        key: "abortWithWarning",
        value: function abortWithWarning(warning) {
          return new this().abortWithWarning(warning);
        }
      }, {
        key: "runaway",
        value: function runaway() {
          return new this().runaway();
        }
        /**
         *
         * @param condition The BALLS condition or a type to make a condition for (Monster, Item, Skill, etc.)
         * @returns {string} The BALLS condition string
         */
      }, {
        key: "makeBALLSPredicate",
        value: function makeBALLSPredicate(condition) {
          if (condition instanceof import_kolmafia5.Monster) {
            return "monsterid ".concat(condition.id);
          } else if (condition instanceof Array) {
            if (condition[0] instanceof import_kolmafia5.Item) return itemOrItemsBallsMacroPredicate(condition);
            return "(".concat(condition.map(function(entry) {
              return Macro2.makeBALLSPredicate(entry);
            }).join(" || "), ")");
          } else if (condition instanceof import_kolmafia5.Effect) {
            return "haseffect ".concat(condition.id);
          } else if (condition instanceof import_kolmafia5.Skill) {
            return condition.combat ? "hasskill ".concat(skillBallsMacroName(condition)) : "knowsskill ".concat(condition.id);
          } else if (condition instanceof import_kolmafia5.Item) {
            if (!condition.combat) {
              throw new InvalidMacroError("Item ".concat(condition, " cannot be made a valid BALLS predicate (it is not combat-usable)"));
            }
            return "hascombatitem ".concat(itemOrItemsBallsMacroName(condition));
          } else if (condition instanceof import_kolmafia5.Location) {
            var snarfblat = condition.id;
            if (snarfblat < 1) {
              throw new InvalidMacroError("Location ".concat(condition, " cannot be made a valid BALLS predicate (it has no location id)"));
            }
            return "snarfblat ".concat(snarfblat);
          } else if (condition instanceof import_kolmafia5.Class) {
            if (condition.id > 6) {
              throw new InvalidMacroError("Class ".concat(condition, " cannot be made a valid BALLS predicate (it is not a standard class)"));
            }
            return condition.toString().replaceAll(" ", "").toLowerCase();
          } else if (condition instanceof import_kolmafia5.Stat) {
            return "".concat(condition.toString().toLowerCase(), "class");
          } else if (condition instanceof import_kolmafia5.Phylum) {
            return "monsterphylum ".concat(condition);
          } else if (condition instanceof import_kolmafia5.Element) {
            return "monsterelement ".concat(condition);
          }
          return condition;
        }
      }, {
        key: "if_",
        value: function if_(condition, ifTrue) {
          return new this().if_(condition, ifTrue);
        }
      }, {
        key: "ifNot",
        value: function ifNot(condition, ifTrue) {
          return new this().ifNot(condition, ifTrue);
        }
      }, {
        key: "while_",
        value: function while_(condition, contents) {
          return new this().while_(condition, contents);
        }
      }, {
        key: "externalIf",
        value: function externalIf(condition, ifTrue, ifFalse) {
          return new this().externalIf(condition, ifTrue, ifFalse);
        }
      }, {
        key: "skill",
        value: function skill() {
          var _this3;
          return (_this3 = new this()).skill.apply(_this3, arguments);
        }
      }, {
        key: "trySkill",
        value: function trySkill() {
          var _this4;
          return (_this4 = new this()).trySkill.apply(_this4, arguments);
        }
      }, {
        key: "trySkillRepeat",
        value: function trySkillRepeat() {
          var _this5;
          return (_this5 = new this()).trySkillRepeat.apply(_this5, arguments);
        }
      }, {
        key: "item",
        value: function item14() {
          var _this6;
          return (_this6 = new this()).item.apply(_this6, arguments);
        }
      }, {
        key: "tryItem",
        value: function tryItem() {
          var _this7;
          return (_this7 = new this()).tryItem.apply(_this7, arguments);
        }
      }, {
        key: "attack",
        value: function attack() {
          return new this().attack();
        }
      }, {
        key: "ifHolidayWanderer",
        value: function ifHolidayWanderer(macro) {
          return new this().ifHolidayWanderer(macro);
        }
      }, {
        key: "ifNotHolidayWanderer",
        value: function ifNotHolidayWanderer(macro) {
          return new this().ifNotHolidayWanderer(macro);
        }
      }]);
      return Macro2;
    }();
    _defineProperty3(Macro, "SAVED_MACRO_PROPERTY", "libram_savedMacro");
    _defineProperty3(Macro, "cachedMacroIds", /* @__PURE__ */ new Map());
    _defineProperty3(Macro, "cachedAutoAttacks", /* @__PURE__ */ new Map());
    StrictMacro = /* @__PURE__ */ function(_Macro2) {
      _inherits2(StrictMacro2, _Macro2);
      function StrictMacro2() {
        _classCallCheck4(this, StrictMacro2);
        return _callSuper2(this, StrictMacro2, arguments);
      }
      _createClass4(StrictMacro2, [{
        key: "skill",
        value: (
          /**
           * Add one or more skill cast steps to the macro.
           *
           * @param skills Skills to cast.
           * @returns {StrictMacro} This object itself.
           */
          function skill() {
            var _get22;
            for (var _len7 = arguments.length, skills3 = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
              skills3[_key7] = arguments[_key7];
            }
            return (_get22 = _get(_getPrototypeOf2(StrictMacro2.prototype), "skill", this)).call.apply(_get22, [this].concat(skills3));
          }
        )
        /**
         * Create a new macro with one or more skill cast steps.
         *
         * @param skills Skills to cast.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "item",
        value: (
          /**
           * Add one or more item steps to the macro.
           *
           * @param items Items to use. Pass a tuple [item1, item2] to funksling.
           * @returns {StrictMacro} This object itself.
           */
          function item14() {
            var _get3;
            for (var _len8 = arguments.length, items = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
              items[_key8] = arguments[_key8];
            }
            return (_get3 = _get(_getPrototypeOf2(StrictMacro2.prototype), "item", this)).call.apply(_get3, [this].concat(items));
          }
        )
        /**
         * Create a new macro with one or more item steps.
         *
         * @param items Items to use. Pass a tuple [item1, item2] to funksling.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "trySkill",
        value: (
          /**
           * Add one or more skill cast steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try casting.
           * @returns {StrictMacro} This object itself.
           */
          function trySkill() {
            var _get4;
            for (var _len9 = arguments.length, skills3 = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
              skills3[_key9] = arguments[_key9];
            }
            return (_get4 = _get(_getPrototypeOf2(StrictMacro2.prototype), "trySkill", this)).call.apply(_get4, [this].concat(skills3));
          }
        )
        /**
         * Create a new macro with one or more skill cast steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try casting.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "tryItem",
        value: (
          /**
           * Add one or more item steps to the macro, where each step checks to see if you have the item first.
           *
           * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
           * @returns {StrictMacro} This object itself.
           */
          function tryItem() {
            var _get5;
            for (var _len10 = arguments.length, items = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
              items[_key10] = arguments[_key10];
            }
            return (_get5 = _get(_getPrototypeOf2(StrictMacro2.prototype), "tryItem", this)).call.apply(_get5, [this].concat(items));
          }
        )
        /**
         * Create a new macro with one or more item steps, where each step checks to see if you have the item first.
         *
         * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "trySkillRepeat",
        value: (
          /**
           * Add one or more skill-cast-and-repeat steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try repeatedly casting.
           * @returns {StrictMacro} This object itself.
           */
          function trySkillRepeat() {
            var _get6;
            for (var _len11 = arguments.length, skills3 = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {
              skills3[_key11] = arguments[_key11];
            }
            return (_get6 = _get(_getPrototypeOf2(StrictMacro2.prototype), "trySkillRepeat", this)).call.apply(_get6, [this].concat(skills3));
          }
        )
        /**
         * Create a new macro with one or more skill-cast-and-repeat steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try repeatedly casting.
         * @returns {StrictMacro} This object itself.
         */
      }], [{
        key: "skill",
        value: function skill() {
          var _this8;
          return (_this8 = new this()).skill.apply(_this8, arguments);
        }
      }, {
        key: "item",
        value: function item14() {
          var _this9;
          return (_this9 = new this()).item.apply(_this9, arguments);
        }
      }, {
        key: "trySkill",
        value: function trySkill() {
          var _this10;
          return (_this10 = new this()).trySkill.apply(_this10, arguments);
        }
      }, {
        key: "tryItem",
        value: function tryItem() {
          var _this11;
          return (_this11 = new this()).tryItem.apply(_this11, arguments);
        }
      }, {
        key: "trySkillRepeat",
        value: function trySkillRepeat() {
          var _this12;
          return (_this12 = new this()).trySkillRepeat.apply(_this12, arguments);
        }
      }]);
      return StrictMacro2;
    }(Macro);
  }
});

// node_modules/libram/dist/maximize.js
function _slicedToArray4(arr, i) {
  return _arrayWithHoles4(arr) || _iterableToArrayLimit4(arr, i) || _unsupportedIterableToArray5(arr, i) || _nonIterableRest4();
}
function _nonIterableRest4() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit4(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles4(arr) {
  if (Array.isArray(arr)) return arr;
}
function _classPrivateFieldInitSpec(obj, privateMap, value) {
  _checkPrivateRedeclaration(obj, privateMap);
  privateMap.set(obj, value);
}
function _checkPrivateRedeclaration(obj, privateCollection) {
  if (privateCollection.has(obj)) {
    throw new TypeError("Cannot initialize the same private elements twice on an object");
  }
}
function _classPrivateFieldGet(s, a) {
  return s.get(_assertClassBrand(s, a));
}
function _classPrivateFieldSet(s, a, r) {
  return s.set(_assertClassBrand(s, a), r), r;
}
function _assertClassBrand(e, t, n) {
  if ("function" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;
  throw new TypeError("Private element is not present on this object");
}
function _defineProperties5(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey5(descriptor.key), descriptor);
  }
}
function _createClass5(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties5(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties5(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _classCallCheck5(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _createForOfIteratorHelper4(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray5(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _taggedTemplateLiteral2(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function ownKeys2(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys2(Object(t), true).forEach(function(r2) {
      _defineProperty4(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys2(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty4(obj, key, value) {
  key = _toPropertyKey5(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey5(t) {
  var i = _toPrimitive5(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive5(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _toConsumableArray5(arr) {
  return _arrayWithoutHoles5(arr) || _iterableToArray5(arr) || _unsupportedIterableToArray5(arr) || _nonIterableSpread5();
}
function _nonIterableSpread5() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray5(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray5(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray5(o, minLen);
}
function _iterableToArray5(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles5(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray5(arr);
}
function _arrayLikeToArray5(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function toMaximizerName(_ref) {
  var name = _ref.name, id = _ref.id;
  return name.includes(";") ? "\xB6".concat(id) : name;
}
function mergeMaximizeOptions(defaultOptions, addendums) {
  var _addendums$updateOnFa, _addendums$updateOnCa, _addendums$updateOnLo, _addendums$useOutfitC, _addendums$forceEquip, _addendums$preventEqu, _addendums$bonusEquip, _addendums$onlySlot, _addendums$preventSlo, _addendums$forceUpdat, _addendums$modes;
  return {
    updateOnFamiliarChange: (_addendums$updateOnFa = addendums.updateOnFamiliarChange) !== null && _addendums$updateOnFa !== void 0 ? _addendums$updateOnFa : defaultOptions.updateOnFamiliarChange,
    updateOnCanEquipChanged: (_addendums$updateOnCa = addendums.updateOnCanEquipChanged) !== null && _addendums$updateOnCa !== void 0 ? _addendums$updateOnCa : defaultOptions.updateOnCanEquipChanged,
    updateOnLocationChange: (_addendums$updateOnLo = addendums.updateOnLocationChange) !== null && _addendums$updateOnLo !== void 0 ? _addendums$updateOnLo : defaultOptions.updateOnLocationChange,
    useOutfitCaching: (_addendums$useOutfitC = addendums.useOutfitCaching) !== null && _addendums$useOutfitC !== void 0 ? _addendums$useOutfitC : defaultOptions.useOutfitCaching,
    forceEquip: [].concat(_toConsumableArray5(defaultOptions.forceEquip), _toConsumableArray5((_addendums$forceEquip = addendums.forceEquip) !== null && _addendums$forceEquip !== void 0 ? _addendums$forceEquip : [])),
    preventEquip: [].concat(_toConsumableArray5(defaultOptions.preventEquip), _toConsumableArray5((_addendums$preventEqu = addendums.preventEquip) !== null && _addendums$preventEqu !== void 0 ? _addendums$preventEqu : [])).filter(function(item14) {
      var _addendums$forceEquip2;
      return !defaultOptions.forceEquip.includes(item14) && !((_addendums$forceEquip2 = addendums.forceEquip) !== null && _addendums$forceEquip2 !== void 0 && _addendums$forceEquip2.includes(item14));
    }),
    bonusEquip: new Map([].concat(_toConsumableArray5(defaultOptions.bonusEquip), _toConsumableArray5((_addendums$bonusEquip = addendums.bonusEquip) !== null && _addendums$bonusEquip !== void 0 ? _addendums$bonusEquip : []))),
    onlySlot: (_addendums$onlySlot = addendums.onlySlot) !== null && _addendums$onlySlot !== void 0 ? _addendums$onlySlot : defaultOptions.onlySlot,
    preventSlot: [].concat(_toConsumableArray5(defaultOptions.preventSlot), _toConsumableArray5((_addendums$preventSlo = addendums.preventSlot) !== null && _addendums$preventSlo !== void 0 ? _addendums$preventSlo : [])),
    forceUpdate: (_addendums$forceUpdat = addendums.forceUpdate) !== null && _addendums$forceUpdat !== void 0 ? _addendums$forceUpdat : defaultOptions.forceUpdate,
    modes: _objectSpread2(_objectSpread2({}, defaultOptions.modes), (_addendums$modes = addendums.modes) !== null && _addendums$modes !== void 0 ? _addendums$modes : {})
  };
}
function setDefaultMaximizeOptions(options) {
  Object.assign(defaultMaximizeOptions, options);
}
function getCurrentModes() {
  var modes = {};
  var _iterator = _createForOfIteratorHelper4(modeableCommands), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var key = _step.value;
      if ((0, import_kolmafia6.haveEquipped)(modeableItems[key])) {
        modes[key] = modeableState[key]();
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return modes;
}
function applyModes(modes) {
  var _iterator2 = _createForOfIteratorHelper4(modeableCommands), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var command = _step2.value;
      if ((0, import_kolmafia6.haveEquipped)(modeableItems[command]) && modes[command] !== void 0) {
        if (modeableState[command]() !== modes[command]) {
          (0, import_kolmafia6.cliExecute)(command + " " + modes[command]);
        }
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
}
function saveOutfit(name) {
  (0, import_kolmafia6.cliExecute)("outfit save ".concat(name));
}
function canEquipItemCount() {
  var stats = $stats(_templateObject92 || (_templateObject92 = _taggedTemplateLiteral2(["Muscle, Mysticality, Moxie"]))).map(function(stat) {
    return Math.min((0, import_kolmafia6.myBasestat)(stat), 300);
  });
  if (stats.every(function(value, index) {
    return value === cachedStats[index];
  })) {
    return cachedCanEquipItemCount;
  }
  cachedStats = stats;
  cachedCanEquipItemCount = import_kolmafia6.Item.all().filter(function(item14) {
    return (0, import_kolmafia6.canEquip)(item14);
  }).length;
  return cachedCanEquipItemCount;
}
function checkCache(cacheKey, options) {
  var entry = cachedObjectives[cacheKey];
  if (!entry) {
    return null;
  }
  if (options.updateOnFamiliarChange && (0, import_kolmafia6.myFamiliar)() !== entry.familiar) {
    logger_default.warning("Equipment found in maximize cache but familiar is different.");
    return null;
  }
  if (options.updateOnCanEquipChanged && entry.canEquipItemCount !== canEquipItemCount()) {
    logger_default.warning("Equipment found in maximize cache but equippable item list is out of date.");
    return null;
  }
  return entry;
}
function applyCached(entry, options) {
  var outfitName = options.useOutfitCaching ? outfitCache.get(entry) : void 0;
  if (outfitName) {
    if (!(0, import_kolmafia6.isWearingOutfit)(outfitName)) {
      (0, import_kolmafia6.outfit)(outfitName);
    }
    var familiarEquip = entry.equipment.get($slot(_templateObject102 || (_templateObject102 = _taggedTemplateLiteral2(["familiar"]))));
    if (familiarEquip) (0, import_kolmafia6.equip)($slot(_templateObject112 || (_templateObject112 = _taggedTemplateLiteral2(["familiar"]))), familiarEquip);
  } else {
    var _iterator3 = _createForOfIteratorHelper4(entry.equipment), _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
        var _step3$value = _slicedToArray4(_step3.value, 2), slot = _step3$value[0], item14 = _step3$value[1];
        if ((0, import_kolmafia6.equippedItem)(slot) !== item14 && (0, import_kolmafia6.availableAmount)(item14) > 0) {
          (0, import_kolmafia6.equip)(slot, item14);
        }
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    if (verifyCached(entry) && options.useOutfitCaching) {
      var _outfitName = outfitCache.insert(entry);
      logger_default.info("Saving equipment to outfit ".concat(_outfitName, "."));
      saveOutfit(_outfitName);
    }
  }
  if ((0, import_kolmafia6.equippedAmount)($item(_templateObject122 || (_templateObject122 = _taggedTemplateLiteral2(["Crown of Thrones"])))) > 0 && entry.rider.get($item(_templateObject132 || (_templateObject132 = _taggedTemplateLiteral2(["Crown of Thrones"]))))) {
    (0, import_kolmafia6.enthroneFamiliar)(entry.rider.get($item(_templateObject142 || (_templateObject142 = _taggedTemplateLiteral2(["Crown of Thrones"])))) || $familiar.none);
  }
  if ((0, import_kolmafia6.equippedAmount)($item(_templateObject152 || (_templateObject152 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) > 0 && entry.rider.get($item(_templateObject162 || (_templateObject162 = _taggedTemplateLiteral2(["Buddy Bjorn"]))))) {
    (0, import_kolmafia6.bjornifyFamiliar)(entry.rider.get($item(_templateObject172 || (_templateObject172 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) || $familiar.none);
  }
  applyModes(_objectSpread2(_objectSpread2({}, entry.modes), options.modes));
}
function verifyCached(entry) {
  var warn2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  var success = true;
  var _iterator4 = _createForOfIteratorHelper4(slotStructure), _step4;
  try {
    for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
      var slotGroup = _step4.value;
      var desiredSlots = slotGroup.map(function(slot) {
        var _entry$equipment$get;
        return [slot, (_entry$equipment$get = entry.equipment.get(slot)) !== null && _entry$equipment$get !== void 0 ? _entry$equipment$get : null];
      }).filter(function(_ref2) {
        var _ref3 = _slicedToArray4(_ref2, 2), item14 = _ref3[1];
        return item14 !== null;
      });
      var desiredSet = desiredSlots.map(function(_ref4) {
        var _ref5 = _slicedToArray4(_ref4, 2), item14 = _ref5[1];
        return item14;
      });
      var equippedSet = desiredSlots.map(function(_ref6) {
        var _ref7 = _slicedToArray4(_ref6, 1), slot = _ref7[0];
        return (0, import_kolmafia6.equippedItem)(slot);
      });
      if (!setEqual(desiredSet, equippedSet)) {
        if (warn2) {
          logger_default.warning("Failed to apply cached ".concat(desiredSet.join(", "), " in ").concat(slotGroup.join(", "), "."));
        }
        success = false;
      }
    }
  } catch (err) {
    _iterator4.e(err);
  } finally {
    _iterator4.f();
  }
  if ((0, import_kolmafia6.equippedAmount)($item(_templateObject252 || (_templateObject252 = _taggedTemplateLiteral2(["Crown of Thrones"])))) > 0 && entry.rider.get($item(_templateObject262 || (_templateObject262 = _taggedTemplateLiteral2(["Crown of Thrones"]))))) {
    if (entry.rider.get($item(_templateObject272 || (_templateObject272 = _taggedTemplateLiteral2(["Crown of Thrones"])))) !== (0, import_kolmafia6.myEnthronedFamiliar)()) {
      if (warn2) {
        logger_default.warning("Failed to apply ".concat(entry.rider.get($item(_templateObject282 || (_templateObject282 = _taggedTemplateLiteral2(["Crown of Thrones"])))), " in ").concat($item(_templateObject292 || (_templateObject292 = _taggedTemplateLiteral2(["Crown of Thrones"]))), "."));
      }
      success = false;
    }
  }
  if ((0, import_kolmafia6.equippedAmount)($item(_templateObject302 || (_templateObject302 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) > 0 && entry.rider.get($item(_templateObject312 || (_templateObject312 = _taggedTemplateLiteral2(["Buddy Bjorn"]))))) {
    if (entry.rider.get($item(_templateObject322 || (_templateObject322 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) !== (0, import_kolmafia6.myBjornedFamiliar)()) {
      if (warn2) {
        logger_default.warning("Failed to apply".concat(entry.rider.get($item(_templateObject332 || (_templateObject332 = _taggedTemplateLiteral2(["Buddy Bjorn"])))), " in ").concat($item(_templateObject342 || (_templateObject342 = _taggedTemplateLiteral2(["Buddy Bjorn"]))), "."));
      }
      success = false;
    }
  }
  return success;
}
function saveCached(cacheKey, options) {
  var equipment = /* @__PURE__ */ new Map();
  var rider = /* @__PURE__ */ new Map();
  var _iterator5 = _createForOfIteratorHelper4(cachedSlots), _step5;
  try {
    for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
      var _slot2 = _step5.value;
      equipment.set(_slot2, (0, import_kolmafia6.equippedItem)(_slot2));
    }
  } catch (err) {
    _iterator5.e(err);
  } finally {
    _iterator5.f();
  }
  if ((0, import_kolmafia6.equippedAmount)($item(_templateObject352 || (_templateObject352 = _taggedTemplateLiteral2(["card sleeve"])))) > 0) {
    equipment.set($slot(_templateObject362 || (_templateObject362 = _taggedTemplateLiteral2(["card-sleeve"]))), (0, import_kolmafia6.equippedItem)($slot(_templateObject372 || (_templateObject372 = _taggedTemplateLiteral2(["card-sleeve"])))));
  }
  if ((0, import_kolmafia6.equippedAmount)($item(_templateObject382 || (_templateObject382 = _taggedTemplateLiteral2(["Crown of Thrones"])))) > 0) {
    rider.set($item(_templateObject392 || (_templateObject392 = _taggedTemplateLiteral2(["Crown of Thrones"]))), (0, import_kolmafia6.myEnthronedFamiliar)());
  }
  if ((0, import_kolmafia6.equippedAmount)($item(_templateObject402 || (_templateObject402 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) > 0) {
    rider.set($item(_templateObject412 || (_templateObject412 = _taggedTemplateLiteral2(["Buddy Bjorn"]))), (0, import_kolmafia6.myBjornedFamiliar)());
  }
  if (options.preventSlot && options.preventSlot.length > 0) {
    var _iterator6 = _createForOfIteratorHelper4(options.preventSlot), _step6;
    try {
      for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
        var slot = _step6.value;
        equipment.delete(slot);
      }
    } catch (err) {
      _iterator6.e(err);
    } finally {
      _iterator6.f();
    }
    if (options.preventSlot.includes($slot(_templateObject422 || (_templateObject422 = _taggedTemplateLiteral2(["buddy-bjorn"]))))) {
      rider.delete($item(_templateObject432 || (_templateObject432 = _taggedTemplateLiteral2(["Buddy Bjorn"]))));
    }
    if (options.preventSlot.includes($slot(_templateObject442 || (_templateObject442 = _taggedTemplateLiteral2(["crown-of-thrones"]))))) {
      rider.delete($item(_templateObject452 || (_templateObject452 = _taggedTemplateLiteral2(["Crown of Thrones"]))));
    }
  }
  if (options.onlySlot && options.onlySlot.length > 0) {
    var _iterator7 = _createForOfIteratorHelper4(import_kolmafia6.Slot.all()), _step7;
    try {
      for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
        var _slot = _step7.value;
        if (!options.onlySlot.includes(_slot)) {
          equipment.delete(_slot);
        }
      }
    } catch (err) {
      _iterator7.e(err);
    } finally {
      _iterator7.f();
    }
    if (!options.onlySlot.includes($slot(_templateObject462 || (_templateObject462 = _taggedTemplateLiteral2(["buddy-bjorn"]))))) {
      rider.delete($item(_templateObject472 || (_templateObject472 = _taggedTemplateLiteral2(["Buddy Bjorn"]))));
    }
    if (!options.onlySlot.includes($slot(_templateObject482 || (_templateObject482 = _taggedTemplateLiteral2(["crown-of-thrones"]))))) {
      rider.delete($item(_templateObject492 || (_templateObject492 = _taggedTemplateLiteral2(["Crown of Thrones"]))));
    }
  }
  var entry = new CacheEntry(equipment, rider, (0, import_kolmafia6.myFamiliar)(), canEquipItemCount(), _objectSpread2(_objectSpread2({}, getCurrentModes()), options.modes));
  cachedObjectives[cacheKey] = entry;
  if (options.useOutfitCaching) {
    var outfitName = outfitCache.insert(entry);
    logger_default.info("Saving equipment to outfit ".concat(outfitName, "."));
    saveOutfit(outfitName);
  }
}
function maximizeCached(objectives) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var fullOptions = mergeMaximizeOptions(defaultMaximizeOptions, options);
  var forceEquip = fullOptions.forceEquip, preventEquip = fullOptions.preventEquip, bonusEquip = fullOptions.bonusEquip, onlySlot = fullOptions.onlySlot, preventSlot = fullOptions.preventSlot, forceUpdate = fullOptions.forceUpdate;
  var objective = _toConsumableArray5(new Set([].concat(_toConsumableArray5(objectives.sort()), _toConsumableArray5(forceEquip.map(function(item14) {
    return '"equip '.concat(toMaximizerName(item14), '"');
  }).sort()), _toConsumableArray5(preventEquip.map(function(item14) {
    return '-"equip '.concat(toMaximizerName(item14), '"');
  }).sort()), _toConsumableArray5(onlySlot.map(function(slot) {
    return "".concat(slot);
  }).sort()), _toConsumableArray5(preventSlot.map(function(slot) {
    return "-".concat(slot);
  }).sort()), _toConsumableArray5(Array.from(bonusEquip.entries()).filter(function(_ref8) {
    var _ref9 = _slicedToArray4(_ref8, 2), bonus = _ref9[1];
    return bonus !== 0;
  }).map(function(_ref10) {
    var _ref11 = _slicedToArray4(_ref10, 2), item14 = _ref11[0], bonus = _ref11[1];
    return "".concat(Math.round(bonus * 100) / 100, ' "bonus ').concat(toMaximizerName(item14), '"');
  }).sort())))).join(", ");
  var untouchedSlots = cachedSlots.filter(function(slot) {
    return preventSlot.includes(slot) || onlySlot.length > 0 && !onlySlot.includes(slot);
  });
  var cacheKey = [objective].concat(_toConsumableArray5(untouchedSlots.map(function(slot) {
    return "".concat(slot, ":").concat((0, import_kolmafia6.equippedItem)(slot));
  }).sort()), [have($effect(_templateObject50 || (_templateObject50 = _taggedTemplateLiteral2(["Offhand Remarkable"])))), options.updateOnLocationChange && (0, import_kolmafia6.myLocation)()]).join("; ");
  var cacheEntry = checkCache(cacheKey, fullOptions);
  if (cacheEntry && !forceUpdate) {
    if (verifyCached(cacheEntry, false)) return true;
    logger_default.info("Equipment found in maximize cache, equipping...");
    applyCached(cacheEntry, fullOptions);
    if (verifyCached(cacheEntry)) {
      logger_default.info("Equipped cached ".concat(cacheKey));
      return true;
    }
    logger_default.warning("Maximize cache application failed, maximizing...");
  }
  var result = (0, import_kolmafia6.maximize)(objective, false);
  saveCached(cacheKey, fullOptions);
  return result;
}
function mergeOptionalOptions(optionsA, optionsB) {
  for (var _len = arguments.length, keys = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    keys[_key - 2] = arguments[_key];
  }
  return keys.reduce(function(current2, key) {
    return _objectSpread2(_objectSpread2({}, current2), (optionsA[key] || optionsB[key]) === void 0 ? {} : _defineProperty4({}, key, optionsA[key] || optionsB[key]));
  }, {});
}
function clearMaximizerCache() {
  outfitCache.clear();
  for (var member in cachedObjectives) delete cachedObjectives[member];
}
var import_kolmafia6, _templateObject49, _templateObject210, _templateObject310, _templateObject410, _templateObject52, _templateObject62, _templateObject72, _templateObject82, _templateObject92, _templateObject102, _templateObject112, _templateObject122, _templateObject132, _templateObject142, _templateObject152, _templateObject162, _templateObject172, _templateObject182, _templateObject192, _templateObject202, _templateObject212, _templateObject222, _templateObject232, _templateObject242, _templateObject252, _templateObject262, _templateObject272, _templateObject282, _templateObject292, _templateObject302, _templateObject312, _templateObject322, _templateObject332, _templateObject342, _templateObject352, _templateObject362, _templateObject372, _templateObject382, _templateObject392, _templateObject402, _templateObject412, _templateObject422, _templateObject432, _templateObject442, _templateObject452, _templateObject462, _templateObject472, _templateObject482, _templateObject492, _templateObject50, defaultMaximizeOptions, modeableCommands, modeableItems, modeableState, cachedSlots, CacheEntry, _outfitSlots, _useHistory, _maxSize, OutfitLRUCache, cachedObjectives, outfitCache, cachedStats, cachedCanEquipItemCount, slotStructure, _maximizeParameters, _maximizeOptions, Requirement;
var init_maximize = __esm({
  "node_modules/libram/dist/maximize.js": function() {
    import_kolmafia6 = require("kolmafia");
    init_lib();
    init_logger();
    init_template_string();
    init_utils();
    defaultMaximizeOptions = {
      updateOnFamiliarChange: true,
      updateOnCanEquipChanged: true,
      updateOnLocationChange: false,
      useOutfitCaching: true,
      forceEquip: [],
      preventEquip: [],
      bonusEquip: /* @__PURE__ */ new Map(),
      onlySlot: [],
      preventSlot: [],
      forceUpdate: false,
      modes: {}
    };
    modeableCommands = ["backupcamera", "umbrella", "snowsuit", "edpiece", "retrocape", "parka", "jillcandle"];
    modeableItems = {
      backupcamera: $item(_templateObject49 || (_templateObject49 = _taggedTemplateLiteral2(["backup camera"]))),
      umbrella: $item(_templateObject210 || (_templateObject210 = _taggedTemplateLiteral2(["unbreakable umbrella"]))),
      snowsuit: $item(_templateObject310 || (_templateObject310 = _taggedTemplateLiteral2(["Snow Suit"]))),
      edpiece: $item(_templateObject410 || (_templateObject410 = _taggedTemplateLiteral2(["The Crown of Ed the Undying"]))),
      retrocape: $item(_templateObject52 || (_templateObject52 = _taggedTemplateLiteral2(["unwrapped knock-off retro superhero cape"]))),
      parka: $item(_templateObject62 || (_templateObject62 = _taggedTemplateLiteral2(["Jurassic Parka"]))),
      jillcandle: $item(_templateObject72 || (_templateObject72 = _taggedTemplateLiteral2(["LED candle"])))
    };
    modeableState = {
      backupcamera: function() {
        return (0, import_kolmafia6.getProperty)("backupCameraMode");
      },
      umbrella: function() {
        return (0, import_kolmafia6.getProperty)("umbrellaState");
      },
      snowsuit: function() {
        return (0, import_kolmafia6.getProperty)("snowsuit");
      },
      edpiece: function() {
        return (0, import_kolmafia6.getProperty)("edPiece");
      },
      retrocape: function() {
        return (0, import_kolmafia6.getProperty)("retroCapeSuperhero") + " " + (0, import_kolmafia6.getProperty)("retroCapeWashingInstructions");
      },
      parka: function() {
        return (0, import_kolmafia6.getProperty)("parkaMode");
      },
      jillcandle: function() {
        return (0, import_kolmafia6.getProperty)("ledCandleMode");
      }
    };
    cachedSlots = $slots(_templateObject82 || (_templateObject82 = _taggedTemplateLiteral2(["hat, weapon, off-hand, back, shirt, pants, acc1, acc2, acc3, familiar"])));
    CacheEntry = /* @__PURE__ */ _createClass5(function CacheEntry2(equipment, rider, familiar10, canEquipItemCount2, modes) {
      _classCallCheck5(this, CacheEntry2);
      _defineProperty4(this, "equipment", void 0);
      _defineProperty4(this, "rider", void 0);
      _defineProperty4(this, "familiar", void 0);
      _defineProperty4(this, "canEquipItemCount", void 0);
      _defineProperty4(this, "modes", void 0);
      this.equipment = equipment;
      this.rider = rider;
      this.familiar = familiar10;
      this.canEquipItemCount = canEquipItemCount2;
      this.modes = modes;
    });
    _outfitSlots = /* @__PURE__ */ new WeakMap();
    _useHistory = /* @__PURE__ */ new WeakMap();
    _maxSize = /* @__PURE__ */ new WeakMap();
    OutfitLRUCache = /* @__PURE__ */ function() {
      function OutfitLRUCache2(maxSize) {
        _classCallCheck5(this, OutfitLRUCache2);
        _classPrivateFieldInitSpec(this, _outfitSlots, []);
        _classPrivateFieldInitSpec(this, _useHistory, []);
        _classPrivateFieldInitSpec(this, _maxSize, void 0);
        _classPrivateFieldSet(_maxSize, this, maxSize);
      }
      _createClass5(OutfitLRUCache2, [{
        key: "checkConsistent",
        value: function checkConsistent() {
          if (_classPrivateFieldGet(_useHistory, this).length !== _classPrivateFieldGet(_outfitSlots, this).length || !_toConsumableArray5(_classPrivateFieldGet(_useHistory, this)).sort().every(function(value, index) {
            return value === index;
          })) {
            throw new Error("Outfit cache consistency failed.");
          }
        }
      }, {
        key: "promote",
        value: function promote(index) {
          _classPrivateFieldSet(_useHistory, this, [index].concat(_toConsumableArray5(_classPrivateFieldGet(_useHistory, this).filter(function(i) {
            return i !== index;
          }))));
          this.checkConsistent();
        }
      }, {
        key: "get",
        value: function get4(key) {
          var index = _classPrivateFieldGet(_outfitSlots, this).indexOf(key);
          if (index < 0) return void 0;
          this.promote(index);
          return "".concat(OutfitLRUCache2.OUTFIT_PREFIX, " ").concat(index);
        }
      }, {
        key: "insert",
        value: function insert(key) {
          var lastUseIndex = void 0;
          if (_classPrivateFieldGet(_outfitSlots, this).length >= _classPrivateFieldGet(_maxSize, this)) {
            lastUseIndex = _classPrivateFieldGet(_useHistory, this).pop();
            if (lastUseIndex === void 0) {
              throw new Error("Outfit cache consistency failed.");
            }
            _classPrivateFieldGet(_useHistory, this).splice(0, 0, lastUseIndex);
            _classPrivateFieldGet(_outfitSlots, this)[lastUseIndex] = key;
            this.checkConsistent();
            return "".concat(OutfitLRUCache2.OUTFIT_PREFIX, " ").concat(lastUseIndex);
          } else {
            var index = _classPrivateFieldGet(_outfitSlots, this).push(key) - 1;
            _classPrivateFieldGet(_useHistory, this).splice(0, 0, index);
            this.checkConsistent();
            return "".concat(OutfitLRUCache2.OUTFIT_PREFIX, " ").concat(index);
          }
        }
      }, {
        key: "clear",
        value: function clear() {
          _classPrivateFieldSet(_outfitSlots, this, []);
          _classPrivateFieldSet(_useHistory, this, []);
        }
      }]);
      return OutfitLRUCache2;
    }();
    _defineProperty4(OutfitLRUCache, "OUTFIT_PREFIX", "Script Outfit");
    cachedObjectives = {};
    outfitCache = new OutfitLRUCache(6);
    cachedStats = [0, 0, 0];
    cachedCanEquipItemCount = 0;
    slotStructure = [$slots(_templateObject182 || (_templateObject182 = _taggedTemplateLiteral2(["hat"]))), $slots(_templateObject192 || (_templateObject192 = _taggedTemplateLiteral2(["back"]))), $slots(_templateObject202 || (_templateObject202 = _taggedTemplateLiteral2(["shirt"]))), $slots(_templateObject212 || (_templateObject212 = _taggedTemplateLiteral2(["weapon, off-hand"]))), $slots(_templateObject222 || (_templateObject222 = _taggedTemplateLiteral2(["pants"]))), $slots(_templateObject232 || (_templateObject232 = _taggedTemplateLiteral2(["acc1, acc2, acc3"]))), $slots(_templateObject242 || (_templateObject242 = _taggedTemplateLiteral2(["familiar"])))];
    _maximizeParameters = /* @__PURE__ */ new WeakMap();
    _maximizeOptions = /* @__PURE__ */ new WeakMap();
    Requirement = /* @__PURE__ */ function() {
      function Requirement2(maximizeParameters, maximizeOptions) {
        _classCallCheck5(this, Requirement2);
        _classPrivateFieldInitSpec(this, _maximizeParameters, void 0);
        _classPrivateFieldInitSpec(this, _maximizeOptions, void 0);
        _classPrivateFieldSet(_maximizeParameters, this, maximizeParameters);
        _classPrivateFieldSet(_maximizeOptions, this, maximizeOptions);
      }
      _createClass5(Requirement2, [{
        key: "maximizeParameters",
        get: function get4() {
          return _classPrivateFieldGet(_maximizeParameters, this);
        }
      }, {
        key: "maximizeOptions",
        get: function get4() {
          return _classPrivateFieldGet(_maximizeOptions, this);
        }
        /**
         * Merges two requirements, concanating relevant arrays. Typically used in static form.
         *
         * @param other Requirement to merge with.
         * @returns A new merged Requirement
         */
      }, {
        key: "merge",
        value: function merge(other) {
          var _optionsA$forceEquip, _other$maximizeOption, _optionsA$preventEqui, _other$maximizeOption3, _optionsA$bonusEquip$, _optionsA$bonusEquip, _optionsB$bonusEquip$, _optionsB$bonusEquip, _optionsA$onlySlot, _optionsB$onlySlot, _optionsA$preventSlot, _optionsB$preventSlot;
          var optionsA = this.maximizeOptions;
          var optionsB = other.maximizeOptions;
          var optionalBooleans = mergeOptionalOptions(optionsA, optionsB, "updateOnFamiliarChange", "updateOnCanEquipChanged", "updateOnLocationChange", "forceUpdate");
          return new Requirement2([].concat(_toConsumableArray5(this.maximizeParameters), _toConsumableArray5(other.maximizeParameters)), _objectSpread2(_objectSpread2({}, optionalBooleans), {}, {
            forceEquip: [].concat(_toConsumableArray5((_optionsA$forceEquip = optionsA.forceEquip) !== null && _optionsA$forceEquip !== void 0 ? _optionsA$forceEquip : []), _toConsumableArray5((_other$maximizeOption = other.maximizeOptions.forceEquip) !== null && _other$maximizeOption !== void 0 ? _other$maximizeOption : [])).filter(function(x) {
              var _other$maximizeOption2;
              return !((_other$maximizeOption2 = other.maximizeOptions.preventEquip) !== null && _other$maximizeOption2 !== void 0 && _other$maximizeOption2.includes(x));
            }),
            preventEquip: [].concat(_toConsumableArray5((_optionsA$preventEqui = optionsA.preventEquip) !== null && _optionsA$preventEqui !== void 0 ? _optionsA$preventEqui : []), _toConsumableArray5((_other$maximizeOption3 = other.maximizeOptions.preventEquip) !== null && _other$maximizeOption3 !== void 0 ? _other$maximizeOption3 : [])).filter(function(x) {
              var _other$maximizeOption4;
              return !((_other$maximizeOption4 = other.maximizeOptions.forceEquip) !== null && _other$maximizeOption4 !== void 0 && _other$maximizeOption4.includes(x));
            }),
            bonusEquip: new Map([].concat(_toConsumableArray5((_optionsA$bonusEquip$ = (_optionsA$bonusEquip = optionsA.bonusEquip) === null || _optionsA$bonusEquip === void 0 ? void 0 : _optionsA$bonusEquip.entries()) !== null && _optionsA$bonusEquip$ !== void 0 ? _optionsA$bonusEquip$ : []), _toConsumableArray5((_optionsB$bonusEquip$ = (_optionsB$bonusEquip = optionsB.bonusEquip) === null || _optionsB$bonusEquip === void 0 ? void 0 : _optionsB$bonusEquip.entries()) !== null && _optionsB$bonusEquip$ !== void 0 ? _optionsB$bonusEquip$ : []))),
            onlySlot: [].concat(_toConsumableArray5((_optionsA$onlySlot = optionsA.onlySlot) !== null && _optionsA$onlySlot !== void 0 ? _optionsA$onlySlot : []), _toConsumableArray5((_optionsB$onlySlot = optionsB.onlySlot) !== null && _optionsB$onlySlot !== void 0 ? _optionsB$onlySlot : [])),
            preventSlot: [].concat(_toConsumableArray5((_optionsA$preventSlot = optionsA.preventSlot) !== null && _optionsA$preventSlot !== void 0 ? _optionsA$preventSlot : []), _toConsumableArray5((_optionsB$preventSlot = optionsB.preventSlot) !== null && _optionsB$preventSlot !== void 0 ? _optionsB$preventSlot : []))
          }));
        }
        /**
         * Merges a set of requirements together, starting with an empty requirement.
         *
         * @param allRequirements Requirements to merge
         * @returns Merged requirements
         */
      }, {
        key: "maximize",
        value: (
          /**
           * Runs maximizeCached, using the maximizeParameters and maximizeOptions contained by this requirement.
           *
           * @returns Whether the maximize call succeeded.
           */
          function maximize2() {
            return maximizeCached(this.maximizeParameters, this.maximizeOptions);
          }
        )
        /**
         * Merges requirements, and then runs maximizeCached on the combined requirement.
         *
         * @param requirements Requirements to maximize on
         */
      }], [{
        key: "merge",
        value: function merge(allRequirements) {
          return allRequirements.reduce(function(x, y) {
            return x.merge(y);
          }, new Requirement2([], {}));
        }
      }, {
        key: "maximize",
        value: function maximize2() {
          for (var _len2 = arguments.length, requirements = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            requirements[_key2] = arguments[_key2];
          }
          Requirement2.merge(requirements).maximize();
        }
      }]);
      return Requirement2;
    }();
  }
});

// node_modules/libram/dist/actions/ActionSource.js
function _classCallCheck6(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties6(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey6(descriptor.key), descriptor);
  }
}
function _createClass6(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties6(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties6(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toConsumableArray6(arr) {
  return _arrayWithoutHoles6(arr) || _iterableToArray6(arr) || _unsupportedIterableToArray6(arr) || _nonIterableSpread6();
}
function _nonIterableSpread6() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray6(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray6(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray6(o, minLen);
}
function _iterableToArray6(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles6(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray6(arr);
}
function _arrayLikeToArray6(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function ownKeys3(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread3(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys3(Object(t), true).forEach(function(r2) {
      _defineProperty5(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys3(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty5(obj, key, value) {
  key = _toPropertyKey6(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey6(t) {
  var i = _toPrimitive6(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive6(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function mergeConstraints() {
  for (var _len = arguments.length, allConstraints = new Array(_len), _key = 0; _key < _len; _key++) {
    allConstraints[_key] = arguments[_key];
  }
  var familiars = allConstraints.map(function(constraints) {
    return constraints.familiar;
  }).filter(Boolean);
  if (familiars.length > 1) {
    return null;
  }
  var familiar10 = familiars.find(function(familiar11) {
    return familiar11;
  });
  return _objectSpread3(_objectSpread3({
    equipmentRequirements: function() {
      return Requirement.merge(_toConsumableArray6(allConstraints.map(function(constraints) {
        var _constraints$equipmen, _constraints$equipmen2;
        return (_constraints$equipmen = (_constraints$equipmen2 = constraints.equipmentRequirements) === null || _constraints$equipmen2 === void 0 ? void 0 : _constraints$equipmen2.call(constraints)) !== null && _constraints$equipmen !== void 0 ? _constraints$equipmen : new Requirement([], {});
      })));
    },
    preparation: function() {
      var success = true;
      for (var _i = 0, _allConstraints = allConstraints; _i < _allConstraints.length; _i++) {
        var constraints = _allConstraints[_i];
        success = success && (!constraints.preparation || constraints.preparation());
      }
      return success;
    }
  }, familiar10 ? {
    familiar: familiar10
  } : {}), {}, {
    cost: function() {
      return sum(allConstraints, function(constraints) {
        var _constraints$cost, _constraints$cost2;
        return (_constraints$cost = (_constraints$cost2 = constraints.cost) === null || _constraints$cost2 === void 0 ? void 0 : _constraints$cost2.call(constraints)) !== null && _constraints$cost !== void 0 ? _constraints$cost : 0;
      });
    }
  });
}
function filterAction(action, constraints) {
  var _constraints$requireF, _constraints$requireU, _constraints$noFamili, _constraints$noRequir, _constraints$noPrepar, _constraints$maximumC, _constraints$maximumC2;
  return action.available() && (constraints.allowedAction === void 0 || constraints.allowedAction(action)) && !((_constraints$requireF = constraints.requireFamiliar) !== null && _constraints$requireF !== void 0 && _constraints$requireF.call(constraints) && !action.constraints.familiar) && !((_constraints$requireU = constraints.requireUnlimited) !== null && _constraints$requireU !== void 0 && _constraints$requireU.call(constraints) && !action.isUnlimited()) && !((_constraints$noFamili = constraints.noFamiliar) !== null && _constraints$noFamili !== void 0 && _constraints$noFamili.call(constraints) && action.constraints.familiar) && !((_constraints$noRequir = constraints.noRequirements) !== null && _constraints$noRequir !== void 0 && _constraints$noRequir.call(constraints) && action.constraints.equipmentRequirements) && !((_constraints$noPrepar = constraints.noPreparation) !== null && _constraints$noPrepar !== void 0 && _constraints$noPrepar.call(constraints) && action.constraints.preparation) && action.cost() <= ((_constraints$maximumC = (_constraints$maximumC2 = constraints.maximumCost) === null || _constraints$maximumC2 === void 0 ? void 0 : _constraints$maximumC2.call(constraints)) !== null && _constraints$maximumC !== void 0 ? _constraints$maximumC : 0);
}
function findActionSource(actions) {
  var constraints = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var validActions = actions.filter(function(actions2) {
    return filterAction(actions2, constraints);
  });
  if (validActions.length < 1) return null;
  return validActions.reduce(function(a, b) {
    return a.cost() <= b.cost() ? a : b;
  });
}
function actionSourcesAvailable(actions) {
  var constraints = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return sum(actions.filter(function(action) {
    return filterAction(action, constraints !== null && constraints !== void 0 ? constraints : {});
  }), function(action) {
    return action.potential();
  });
}
var import_kolmafia7, ActionSource;
var init_ActionSource = __esm({
  "node_modules/libram/dist/actions/ActionSource.js": function() {
    import_kolmafia7 = require("kolmafia");
    init_combat();
    init_maximize();
    init_utils();
    ActionSource = /* @__PURE__ */ function() {
      function ActionSource2(source, potential, macro) {
        var constraints = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
        _classCallCheck6(this, ActionSource2);
        _defineProperty5(this, "source", void 0);
        _defineProperty5(this, "potential", void 0);
        _defineProperty5(this, "macro", void 0);
        _defineProperty5(this, "constraints", void 0);
        this.source = source;
        this.potential = potential;
        this.macro = macro;
        this.constraints = constraints;
      }
      _createClass6(ActionSource2, [{
        key: "name",
        value: function name() {
          return this.source.toString();
        }
        /**
         * @returns Whether the action is available.
         */
      }, {
        key: "available",
        value: function available6() {
          return this.potential() > 0;
        }
        /**
         * @returns Cost in meat per usage of the action.
         */
      }, {
        key: "cost",
        value: function cost() {
          return this.constraints.cost ? this.constraints.cost() : 0;
        }
        /**
         * @returns Whether the action costs 0 meat to use.
         */
      }, {
        key: "isFree",
        value: function isFree() {
          return !this.cost || this.cost() === 0;
        }
        /**
         * @returns Whether unlimited uses of the action are available.
         */
      }, {
        key: "isUnlimited",
        value: function isUnlimited() {
          return this.potential() === Infinity;
        }
        /**
         * Create a compound action source with merged constraints.
         *
         * @param others Other actions to have available.
         * @returns Merged constraints, or null if they are inconsistent.
         */
      }, {
        key: "merge",
        value: function merge() {
          for (var _len2 = arguments.length, others = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            others[_key2] = arguments[_key2];
          }
          var actions = [this].concat(others);
          var constraints = mergeConstraints.apply(void 0, _toConsumableArray6(actions.map(function(action) {
            return action.constraints;
          })));
          if (constraints === null) {
            return null;
          }
          return new ActionSource2(actions.flatMap(function(action) {
            return action.source;
          }), function() {
            return sum(actions, function(action) {
              return action.potential();
            });
          }, Macro.step.apply(Macro, _toConsumableArray6(actions.map(function(action) {
            return action.macro;
          }))), constraints);
        }
        /**
         * Perform all preparation necessary to make this action available.
         *
         * @param otherRequirements Any other equipment requirements.
         * @returns Whether preparation succeeded.
         */
      }, {
        key: "prepare",
        value: function prepare(otherRequirements) {
          var _this$constraints$fam, _this$constraints;
          if ((_this$constraints$fam = (_this$constraints = this.constraints).familiar) !== null && _this$constraints$fam !== void 0 && _this$constraints$fam.call(_this$constraints)) {
            if (!(0, import_kolmafia7.useFamiliar)(this.constraints.familiar())) return false;
          }
          if (this.constraints.equipmentRequirements) {
            var requirement = otherRequirements ? otherRequirements.merge(this.constraints.equipmentRequirements()) : this.constraints.equipmentRequirements();
            if (!requirement.maximize()) return false;
          }
          if (this.constraints.preparation) return this.constraints.preparation();
          return true;
        }
        /**
         * Perform all preparation necessary to make this action available.
         * Throws an error if preparation fails.
         *
         * @param otherRequirements Any other equipment requirements.
         */
      }, {
        key: "ensure",
        value: function ensure(otherRequirements) {
          if (!this.prepare(otherRequirements)) {
            throw new Error("Failed to prepare action ".concat(this.name(), "."));
          }
        }
      }]);
      return ActionSource2;
    }();
    _defineProperty5(ActionSource, "defaultPriceFunction", function(item14) {
      return (0, import_kolmafia7.mallPrice)(item14) > 0 ? (0, import_kolmafia7.mallPrice)(item14) : Infinity;
    });
  }
});

// node_modules/libram/dist/resources/2017/AsdonMartin.js
var AsdonMartin_exports = {};
__export(AsdonMartin_exports, {
  Driving: function() {
    return Driving;
  },
  drive: function() {
    return drive;
  },
  fillTo: function() {
    return fillTo;
  },
  fillWithInventoryTo: function() {
    return fillWithInventoryTo;
  },
  have: function() {
    return have2;
  },
  insertFuel: function() {
    return insertFuel;
  },
  installed: function() {
    return installed;
  },
  isFuelItem: function() {
    return isFuelItem;
  }
});
function _slicedToArray5(arr, i) {
  return _arrayWithHoles5(arr) || _iterableToArrayLimit5(arr, i) || _unsupportedIterableToArray7(arr, i) || _nonIterableRest5();
}
function _nonIterableRest5() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray7(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray7(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray7(o, minLen);
}
function _arrayLikeToArray7(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit5(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles5(arr) {
  if (Array.isArray(arr)) return arr;
}
function _taggedTemplateLiteral3(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function installed() {
  return (0, import_kolmafia8.getWorkshed)() === $item(_templateObject51 || (_templateObject51 = _taggedTemplateLiteral3(["Asdon Martin keyfob (on ring)"])));
}
function have2() {
  return installed() || have($item(_templateObject211 || (_templateObject211 = _taggedTemplateLiteral3(["Asdon Martin keyfob (on ring)"]))));
}
function priceTooOld(item14) {
  return (0, import_kolmafia8.historicalPrice)(item14) === 0 || (0, import_kolmafia8.historicalAge)(item14) >= 7;
}
function historicalPriceOrMax(item14) {
  var historical = (0, import_kolmafia8.historicalPrice)(item14);
  return historical < 0 ? 999999999 : historical;
}
function mallPriceOrMax(item14) {
  var mall = (0, import_kolmafia8.mallPrice)(item14);
  return mall < 0 ? 999999999 : mall;
}
function price(item14, priceAge) {
  switch (priceAge) {
    case PriceAge.HISTORICAL: {
      var historical = historicalPriceOrMax(item14);
      return historical === 0 ? mallPriceOrMax(item14) : historical;
    }
    case PriceAge.RECENT:
      return priceTooOld(item14) ? mallPriceOrMax(item14) : historicalPriceOrMax(item14);
    case PriceAge.TODAY:
      return mallPriceOrMax(item14);
  }
}
function inventoryItems() {
  return import_kolmafia8.Item.all().filter(isFuelItem).filter(function(item14) {
    return have(item14) && [100, (0, import_kolmafia8.autosellPrice)(item14)].includes(price(item14, PriceAge.RECENT));
  });
}
function calculateFuelUnitCost(it) {
  var priceAge = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : PriceAge.RECENT;
  var units = getAverageAdventures(it);
  return price(it, priceAge) / units;
}
function isFuelItem(it) {
  return !(0, import_kolmafia8.isNpcItem)(it) && it.fullness + it.inebriety > 0 && getAverageAdventures(it) > 0 && it.tradeable && it.discardable && !fuelSkiplist.includes(it);
}
function getBestFuels() {
  var allFuel = import_kolmafia8.Item.all().filter(isFuelItem);
  if (allFuel.filter(function(item14) {
    return (0, import_kolmafia8.historicalPrice)(item14) === 0;
  }).length > 100) {
    (0, import_kolmafia8.mallPrices)("food");
    (0, import_kolmafia8.mallPrices)("booze");
  }
  var keyHistorical = function(item14) {
    return calculateFuelUnitCost(item14, PriceAge.HISTORICAL);
  };
  allFuel.sort(function(x, y) {
    return keyHistorical(x) - keyHistorical(y);
  });
  var bestUnitCost = keyHistorical(allFuel[0]);
  var firstBadIndex = allFuel.findIndex(function(item14) {
    return keyHistorical(item14) > 5 * bestUnitCost;
  });
  var potentialFuel = firstBadIndex > 0 ? allFuel.slice(0, firstBadIndex) : allFuel;
  if (potentialFuel.filter(function(item14) {
    return priceTooOld(item14);
  }).length > 100) {
    (0, import_kolmafia8.mallPrices)("food");
    (0, import_kolmafia8.mallPrices)("booze");
  }
  var key1 = function(item14) {
    return -getAverageAdventures(item14);
  };
  var key2 = function(item14) {
    return calculateFuelUnitCost(item14, PriceAge.RECENT);
  };
  potentialFuel.sort(function(x, y) {
    return key1(x) - key1(y);
  });
  potentialFuel.sort(function(x, y) {
    return key2(x) - key2(y);
  });
  var candidates = potentialFuel.slice(0, 10);
  var key3 = function(item14) {
    return calculateFuelUnitCost(item14, PriceAge.TODAY);
  };
  candidates.sort(function(x, y) {
    return key3(x) - key3(y);
  });
  if (calculateFuelUnitCost(candidates[0], PriceAge.TODAY) > 100) {
    throw new Error("Could not identify any fuel with efficiency better than 100 meat per fuel. This means something went wrong.");
  }
  return candidates;
}
function insertFuel(it) {
  var quantity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var result = (0, import_kolmafia8.visitUrl)("campground.php?action=fuelconvertor&pwd&qty=".concat(quantity, "&iid=").concat(it.id, "&go=Convert%21"));
  return result.includes("The display updates with a");
}
function fillTo(targetUnits) {
  if (!installed()) return false;
  while ((0, import_kolmafia8.getFuel)() < targetUnits) {
    var _ref = (0, import_kolmafia8.canInteract)() ? getBestFuels() : [$item(_templateObject411 || (_templateObject411 = _taggedTemplateLiteral3(["loaf of soda bread"]))), void 0], _ref2 = _slicedToArray5(_ref, 2), bestFuel = _ref2[0], secondBest = _ref2[1];
    var count = Math.ceil(targetUnits / getAverageAdventures(bestFuel));
    var ceiling = void 0;
    if (secondBest) {
      var efficiencyOfSecondBest = (0, import_kolmafia8.mallPrice)(secondBest) / getAverageAdventures(secondBest);
      ceiling = Math.ceil(efficiencyOfSecondBest * getAverageAdventures(bestFuel));
    }
    if (!(0, import_kolmafia8.canInteract)()) (0, import_kolmafia8.retrieveItem)(count, bestFuel);
    else if (ceiling) (0, import_kolmafia8.buy)(count, bestFuel, ceiling);
    else (0, import_kolmafia8.buy)(count, bestFuel);
    if (!insertFuel(bestFuel, Math.min((0, import_kolmafia8.itemAmount)(bestFuel), count))) {
      throw new Error("Failed to fuel Asdon Martin.");
    }
  }
  return (0, import_kolmafia8.getFuel)() >= targetUnits;
}
function fillWithBestInventoryItem(targetUnits) {
  var options = inventoryItems().sort(function(a, b) {
    return getAverageAdventures(b) / (0, import_kolmafia8.autosellPrice)(b) - getAverageAdventures(a) / (0, import_kolmafia8.autosellPrice)(a);
  });
  if (options.length === 0) return false;
  var best = options[0];
  if ((0, import_kolmafia8.autosellPrice)(best) / getAverageAdventures(best) > 100) return false;
  var amountToUse = clamp(Math.ceil(targetUnits / getAverageAdventures(best)), 0, (0, import_kolmafia8.itemAmount)(best));
  return insertFuel(best, amountToUse);
}
function fillWithInventoryTo(targetUnits) {
  if (!installed()) return false;
  var continueFuelingFromInventory = true;
  while ((0, import_kolmafia8.getFuel)() < targetUnits && continueFuelingFromInventory) {
    continueFuelingFromInventory && (continueFuelingFromInventory = fillWithBestInventoryItem(targetUnits));
  }
  return fillTo(targetUnits);
}
function drive(style) {
  var turns2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var preferInventory = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  if (!Object.values(Driving).includes(style)) return false;
  if (!installed()) return false;
  if ((0, import_kolmafia8.haveEffect)(style) >= turns2) return true;
  var fuelNeeded = 37 * Math.ceil((turns2 - (0, import_kolmafia8.haveEffect)(style)) / 30);
  (preferInventory ? fillWithInventoryTo : fillTo)(fuelNeeded);
  while ((0, import_kolmafia8.getFuel)() >= 37 && (0, import_kolmafia8.haveEffect)(style) < turns2) {
    (0, import_kolmafia8.cliExecute)("asdonmartin drive ".concat(style.name.replace("Driving ", "")));
  }
  return (0, import_kolmafia8.haveEffect)(style) >= turns2;
}
var import_kolmafia8, _templateObject51, _templateObject211, _templateObject311, _templateObject411, _templateObject53, _templateObject63, _templateObject73, _templateObject83, _templateObject93, _templateObject103, _templateObject113, _templateObject123, _templateObject133, PriceAge, fuelSkiplist, Driving;
var init_AsdonMartin = __esm({
  "node_modules/libram/dist/resources/2017/AsdonMartin.js": function() {
    import_kolmafia8 = require("kolmafia");
    init_lib();
    init_template_string();
    init_utils();
    (function(PriceAge2) {
      PriceAge2[PriceAge2["HISTORICAL"] = 0] = "HISTORICAL";
      PriceAge2[PriceAge2["RECENT"] = 1] = "RECENT";
      PriceAge2[PriceAge2["TODAY"] = 2] = "TODAY";
    })(PriceAge || (PriceAge = {}));
    fuelSkiplist = $items(_templateObject311 || (_templateObject311 = _taggedTemplateLiteral3(['cup of "tea", thermos of "whiskey", Lucky Lindy, Bee\'s Knees, Sockdollager, Ish Kabibble, Hot Socks, Phonus Balonus, Flivver, Sloppy Jalopy, glass of "milk"'])));
    Driving = {
      Obnoxiously: $effect(_templateObject53 || (_templateObject53 = _taggedTemplateLiteral3(["Driving Obnoxiously"]))),
      Stealthily: $effect(_templateObject63 || (_templateObject63 = _taggedTemplateLiteral3(["Driving Stealthily"]))),
      Wastefully: $effect(_templateObject73 || (_templateObject73 = _taggedTemplateLiteral3(["Driving Wastefully"]))),
      Safely: $effect(_templateObject83 || (_templateObject83 = _taggedTemplateLiteral3(["Driving Safely"]))),
      Recklessly: $effect(_templateObject93 || (_templateObject93 = _taggedTemplateLiteral3(["Driving Recklessly"]))),
      Intimidatingly: $effect(_templateObject103 || (_templateObject103 = _taggedTemplateLiteral3(["Driving Intimidatingly"]))),
      Quickly: $effect(_templateObject113 || (_templateObject113 = _taggedTemplateLiteral3(["Driving Quickly"]))),
      Observantly: $effect(_templateObject123 || (_templateObject123 = _taggedTemplateLiteral3(["Driving Observantly"]))),
      Waterproofly: $effect(_templateObject133 || (_templateObject133 = _taggedTemplateLiteral3(["Driving Waterproofly"])))
    };
  }
});

// node_modules/libram/dist/actions/Banish.js
function _toConsumableArray7(arr) {
  return _arrayWithoutHoles7(arr) || _iterableToArray7(arr) || _unsupportedIterableToArray8(arr) || _nonIterableSpread7();
}
function _nonIterableSpread7() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray8(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray8(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray8(o, minLen);
}
function _iterableToArray7(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles7(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray8(arr);
}
function _arrayLikeToArray8(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral4(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function tryFindBanish(constraints) {
  var source = findActionSource(banishSources, constraints);
  if (source && asdonMartinSource.available()) {
    source = asdonMartinSource.merge(source);
  }
  return source;
}
function ensureBanish(constraints) {
  var source = tryFindBanish(constraints);
  if (!source) {
    throw new Error("Failed to ensure Banish source");
  }
  return source;
}
var import_kolmafia9, _templateObject54, _templateObject213, _templateObject313, _templateObject413, _templateObject55, _templateObject64, _templateObject74, _templateObject84, _templateObject94, _templateObject104, _templateObject114, _templateObject124, _templateObject134, _templateObject143, _templateObject153, _templateObject163, _templateObject173, _templateObject183, _templateObject193, _templateObject203, _templateObject214, _templateObject223, _templateObject233, _templateObject243, _templateObject253, _templateObject263, _templateObject273, _templateObject283, _templateObject293, _templateObject303, _templateObject314, _templateObject323, _templateObject333, _templateObject343, _templateObject353, _templateObject363, _templateObject373, _templateObject383, _templateObject393, _templateObject403, _templateObject414, _templateObject423, _templateObject433, _templateObject443, scrapbookChargesLastUpdated, asdonMartinSource, banishSources;
var init_Banish = __esm({
  "node_modules/libram/dist/actions/Banish.js": function() {
    import_kolmafia9 = require("kolmafia");
    init_combat();
    init_lib();
    init_maximize();
    init_property();
    init_AsdonMartin();
    init_template_string();
    init_ActionSource();
    scrapbookChargesLastUpdated = get("_lastCombatStarted");
    asdonMartinSource = new ActionSource($skill(_templateObject54 || (_templateObject54 = _taggedTemplateLiteral4(["Asdon Martin: Spring-Loaded Front Bumper"]))), function() {
      if (!installed()) return 0;
      var banishes = get("banishedMonsters").split(":");
      var bumperIndex = banishes.map(function(string) {
        return string.toLowerCase();
      }).indexOf("spring-loaded front bumper");
      if (bumperIndex === -1) return 1;
      return (0, import_kolmafia9.myTurncount)() - parseInt(banishes[bumperIndex + 1]) > 30 ? 1 : 0;
    }, Macro.trySkill($skill(_templateObject213 || (_templateObject213 = _taggedTemplateLiteral4(["Asdon Martin: Spring-Loaded Front Bumper"])))), {
      preparation: function() {
        return fillTo(50);
      }
    });
    banishSources = [
      // Free limited sources
      new ActionSource($skill(_templateObject313 || (_templateObject313 = _taggedTemplateLiteral4(["Snokebomb"]))), function() {
        return have($skill(_templateObject413 || (_templateObject413 = _taggedTemplateLiteral4(["Snokebomb"])))) ? 3 - get("_snokebombUsed") : 0;
      }, Macro.skill($skill(_templateObject55 || (_templateObject55 = _taggedTemplateLiteral4(["Snokebomb"])))), {
        preparation: function() {
          return (0, import_kolmafia9.restoreMp)(50);
        }
      }),
      new ActionSource($skill(_templateObject64 || (_templateObject64 = _taggedTemplateLiteral4(["Emotionally Chipped"]))), function() {
        return have($skill(_templateObject74 || (_templateObject74 = _taggedTemplateLiteral4(["Emotionally Chipped"])))) ? 3 - get("_feelHatredUsed") : 0;
      }, Macro.skill($skill(_templateObject84 || (_templateObject84 = _taggedTemplateLiteral4(["Feel Hatred"]))))),
      new ActionSource($item(_templateObject94 || (_templateObject94 = _taggedTemplateLiteral4(["Kremlin's Greatest Briefcase"]))), function() {
        return have($item(_templateObject104 || (_templateObject104 = _taggedTemplateLiteral4(["Kremlin's Greatest Briefcase"])))) ? 3 - get("_kgbTranquilizerDartUses") : 0;
      }, Macro.skill($skill(_templateObject114 || (_templateObject114 = _taggedTemplateLiteral4(["KGB tranquilizer dart"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject124 || (_templateObject124 = _taggedTemplateLiteral4(["Kremlin's Greatest Briefcase"])))
          });
        }
      }),
      new ActionSource($item(_templateObject134 || (_templateObject134 = _taggedTemplateLiteral4(["latte lovers member's mug"]))), function() {
        return have($item(_templateObject143 || (_templateObject143 = _taggedTemplateLiteral4(["latte lovers member's mug"])))) && !get("_latteBanishUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject153 || (_templateObject153 = _taggedTemplateLiteral4(["Throw Latte on Opponent"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject163 || (_templateObject163 = _taggedTemplateLiteral4(["latte lovers member's mug"])))
          });
        }
      }),
      new ActionSource($item(_templateObject173 || (_templateObject173 = _taggedTemplateLiteral4(["Lil' Doctor\u2122 bag"]))), function() {
        return have($item(_templateObject183 || (_templateObject183 = _taggedTemplateLiteral4(["Lil' Doctor\u2122 bag"])))) ? 3 - get("_reflexHammerUsed") : 0;
      }, Macro.skill($skill(_templateObject193 || (_templateObject193 = _taggedTemplateLiteral4(["Reflex Hammer"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject203 || (_templateObject203 = _taggedTemplateLiteral4(["Lil' Doctor\u2122 bag"])))
          });
        }
      }),
      new ActionSource($item(_templateObject214 || (_templateObject214 = _taggedTemplateLiteral4(["mafia middle finger ring"]))), function() {
        return have($item(_templateObject223 || (_templateObject223 = _taggedTemplateLiteral4(["mafia middle finger ring"])))) && (0, import_kolmafia9.canEquip)($item(_templateObject233 || (_templateObject233 = _taggedTemplateLiteral4(["mafia middle finger ring"])))) && !get("_mafiaMiddleFingerRingUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject243 || (_templateObject243 = _taggedTemplateLiteral4(["Show them your ring"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject253 || (_templateObject253 = _taggedTemplateLiteral4(["mafia middle finger ring"])))
          });
        }
      }),
      new ActionSource($item(_templateObject263 || (_templateObject263 = _taggedTemplateLiteral4(["V for Vivala mask"]))), function() {
        return have($item(_templateObject273 || (_templateObject273 = _taggedTemplateLiteral4(["V for Vivala mask"])))) && !get("_vmaskBanisherUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject283 || (_templateObject283 = _taggedTemplateLiteral4(["Creepy Grin"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject293 || (_templateObject293 = _taggedTemplateLiteral4(["V for Vivala mask"])))
          });
        },
        preparation: function() {
          return (0, import_kolmafia9.restoreMp)(30);
        }
      }),
      new ActionSource($item(_templateObject303 || (_templateObject303 = _taggedTemplateLiteral4(["stinky cheese eye"]))), function() {
        return getFoldGroup($item(_templateObject314 || (_templateObject314 = _taggedTemplateLiteral4(["stinky cheese eye"])))).some(function(item14) {
          return have(item14);
        }) && !get("_stinkyCheeseBanisherUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject323 || (_templateObject323 = _taggedTemplateLiteral4(["Give Your Opponent the Stinkeye"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject333 || (_templateObject333 = _taggedTemplateLiteral4(["stinky cheese eye"])))
          });
        },
        preparation: function() {
          if (!have($item(_templateObject343 || (_templateObject343 = _taggedTemplateLiteral4(["stinky cheese eye"]))))) {
            (0, import_kolmafia9.cliExecute)("fold stinky cheese eye");
          }
          return have($item(_templateObject353 || (_templateObject353 = _taggedTemplateLiteral4(["stinky cheese eye"]))));
        }
      }),
      new ActionSource($skill(_templateObject363 || (_templateObject363 = _taggedTemplateLiteral4(["Show your boring familiar pictures"]))), function() {
        if (have($item(_templateObject373 || (_templateObject373 = _taggedTemplateLiteral4(["familiar scrapbook"]))))) {
          if (scrapbookChargesLastUpdated !== get("_lastCombatStarted")) {
            (0, import_kolmafia9.visitUrl)("desc_item.php?whichitem=463063785");
            scrapbookChargesLastUpdated = get("_lastCombatStarted");
          }
          return Math.floor(get("scrapbookCharges") / 100);
        }
        return 0;
      }, Macro.skill($skill(_templateObject383 || (_templateObject383 = _taggedTemplateLiteral4(["Show your boring familiar pictures"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject393 || (_templateObject393 = _taggedTemplateLiteral4(["familiar scrapbook"])))
          });
        }
      }),
      new ActionSource($item(_templateObject403 || (_templateObject403 = _taggedTemplateLiteral4(["human musk"]))), function() {
        return Math.max(0, 3 - get("_humanMuskUses"));
      }, Macro.item($item(_templateObject414 || (_templateObject414 = _taggedTemplateLiteral4(["human musk"])))), {
        preparation: function() {
          return (0, import_kolmafia9.retrieveItem)($item(_templateObject423 || (_templateObject423 = _taggedTemplateLiteral4(["human musk"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject433 || (_templateObject433 = _taggedTemplateLiteral4(["human musk"]))));
        }
      })
    ].concat(_toConsumableArray7($items(_templateObject443 || (_templateObject443 = _taggedTemplateLiteral4(["Louder Than Bomb, divine champagne popper, tennis ball"]))).map(function(item14) {
      return new ActionSource(item14, function() {
        return Infinity;
      }, Macro.item(item14), {
        preparation: function() {
          return (0, import_kolmafia9.retrieveItem)(item14);
        },
        cost: function() {
          return ActionSource.defaultPriceFunction(item14);
        }
      });
    })));
  }
});

// node_modules/libram/dist/actions/FreeKill.js
function _taggedTemplateLiteral5(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray8(arr) {
  return _arrayWithoutHoles8(arr) || _iterableToArray8(arr) || _unsupportedIterableToArray9(arr) || _nonIterableSpread8();
}
function _nonIterableSpread8() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray9(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray9(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray9(o, minLen);
}
function _iterableToArray8(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles8(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray9(arr);
}
function _arrayLikeToArray9(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function tryFindFreeKill(constraints) {
  return findActionSource(freeKillSources, constraints);
}
function ensureFreeKill(constraints) {
  var source = tryFindFreeKill(constraints);
  if (!source) {
    throw new Error("Failed to ensure Free Kill source");
  }
  return source;
}
var import_kolmafia10, _templateObject56, _templateObject215, _templateObject315, _templateObject415, _templateObject57, _templateObject65, _templateObject75, _templateObject85, _templateObject95, _templateObject105, _templateObject115, _templateObject125, _templateObject135, _templateObject144, _templateObject154, _templateObject164, _templateObject174, _templateObject184, _templateObject194, _templateObject204, _templateObject216, _templateObject224, _templateObject234, _templateObject244, _templateObject254, _templateObject264, _templateObject274, _templateObject284, _templateObject294, _templateObject304, _templateObject316, _templateObject324, _templateObject334, _templateObject344, _templateObject354, _templateObject364, _templateObject374, _templateObject384, _templateObject394, _templateObject404, _templateObject416, _templateObject424, _templateObject434, _templateObject444, _templateObject453, freeKillSources;
var init_FreeKill = __esm({
  "node_modules/libram/dist/actions/FreeKill.js": function() {
    import_kolmafia10 = require("kolmafia");
    init_combat();
    init_lib();
    init_maximize();
    init_property();
    init_AsdonMartin();
    init_template_string();
    init_ActionSource();
    freeKillSources = [
      // Free limited sources
      new ActionSource($skill(_templateObject56 || (_templateObject56 = _taggedTemplateLiteral5(["Gingerbread Mob Hit"]))), function() {
        return !get("_gingerbreadMobHitUsed") && have($skill(_templateObject215 || (_templateObject215 = _taggedTemplateLiteral5(["Gingerbread Mob Hit"])))) ? 1 : 0;
      }, Macro.skill($skill(_templateObject315 || (_templateObject315 = _taggedTemplateLiteral5(["Gingerbread Mob Hit"])))), {
        preparation: function() {
          return (0, import_kolmafia10.restoreMp)(30);
        }
      }),
      new ActionSource($skill(_templateObject415 || (_templateObject415 = _taggedTemplateLiteral5(["Shattering Punch"]))), function() {
        return have($skill(_templateObject57 || (_templateObject57 = _taggedTemplateLiteral5(["Shattering Punch"])))) ? 3 - get("_shatteringPunchUsed") : 0;
      }, Macro.skill($skill(_templateObject65 || (_templateObject65 = _taggedTemplateLiteral5(["Shattering Punch"])))), {
        preparation: function() {
          return (0, import_kolmafia10.restoreMp)(30);
        }
      }),
      new ActionSource($item(_templateObject75 || (_templateObject75 = _taggedTemplateLiteral5(["replica bat-oomerang"]))), function() {
        return have($item(_templateObject85 || (_templateObject85 = _taggedTemplateLiteral5(["replica bat-oomerang"])))) ? 3 - get("_usedReplicaBatoomerang") : 0;
      }, Macro.item($item(_templateObject95 || (_templateObject95 = _taggedTemplateLiteral5(["replica bat-oomerang"]))))),
      new ActionSource($item(_templateObject105 || (_templateObject105 = _taggedTemplateLiteral5(["The Jokester's gun"]))), function() {
        return !get("_firedJokestersGun") && have($item(_templateObject115 || (_templateObject115 = _taggedTemplateLiteral5(["The Jokester's gun"])))) && (0, import_kolmafia10.canEquip)($item(_templateObject125 || (_templateObject125 = _taggedTemplateLiteral5(["The Jokester's gun"])))) ? 1 : 0;
      }, Macro.skill($skill(_templateObject135 || (_templateObject135 = _taggedTemplateLiteral5(["Fire the Jokester's Gun"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject144 || (_templateObject144 = _taggedTemplateLiteral5(["The Jokester's gun"])))
          });
        }
      }),
      new ActionSource($item(_templateObject154 || (_templateObject154 = _taggedTemplateLiteral5(["Lil' Doctor\u2122 bag"]))), function() {
        return have($item(_templateObject164 || (_templateObject164 = _taggedTemplateLiteral5(["Lil' Doctor\u2122 bag"])))) ? 3 - get("_chestXRayUsed") : 0;
      }, Macro.skill($skill(_templateObject174 || (_templateObject174 = _taggedTemplateLiteral5(["Chest X-Ray"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject184 || (_templateObject184 = _taggedTemplateLiteral5(["Lil' Doctor\u2122 bag"])))
          });
        }
      }),
      new ActionSource($skill(_templateObject194 || (_templateObject194 = _taggedTemplateLiteral5(["Asdon Martin: Missile Launcher"]))), function() {
        return !get("_missileLauncherUsed") && installed() ? 1 : 0;
      }, Macro.skill($skill(_templateObject204 || (_templateObject204 = _taggedTemplateLiteral5(["Asdon Martin: Missile Launcher"])))), {
        preparation: function() {
          return fillTo(100);
        }
      }),
      // Heavy Rains
      new ActionSource($skill(_templateObject216 || (_templateObject216 = _taggedTemplateLiteral5(["Lightning Strike"]))), function() {
        return have($skill(_templateObject224 || (_templateObject224 = _taggedTemplateLiteral5(["Lightning Strike"])))) ? Math.floor((0, import_kolmafia10.myLightning)() / 20) : 0;
      }, Macro.skill($skill(_templateObject234 || (_templateObject234 = _taggedTemplateLiteral5(["Lightning Strike"]))))),
      // Expensive limited sources
      new ActionSource($item(_templateObject244 || (_templateObject244 = _taggedTemplateLiteral5(["powdered madness"]))), function() {
        return 5 - get("_powderedMadnessUses");
      }, Macro.item($item(_templateObject254 || (_templateObject254 = _taggedTemplateLiteral5(["powdered madness"])))), {
        preparation: function() {
          return (0, import_kolmafia10.retrieveItem)($item(_templateObject264 || (_templateObject264 = _taggedTemplateLiteral5(["powdered madness"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject274 || (_templateObject274 = _taggedTemplateLiteral5(["powdered madness"]))));
        }
      }),
      new ActionSource($familiar(_templateObject284 || (_templateObject284 = _taggedTemplateLiteral5(["Puck Man"]))), function() {
        return have($familiar(_templateObject294 || (_templateObject294 = _taggedTemplateLiteral5(["Puck Man"])))) ? 20 - get("_powerPillUses") : 0;
      }, Macro.item($item(_templateObject304 || (_templateObject304 = _taggedTemplateLiteral5(["power pill"])))), {
        familiar: function() {
          return $familiar(_templateObject316 || (_templateObject316 = _taggedTemplateLiteral5(["Puck Man"])));
        },
        preparation: function() {
          return (0, import_kolmafia10.retrieveItem)($item(_templateObject324 || (_templateObject324 = _taggedTemplateLiteral5(["power pill"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject334 || (_templateObject334 = _taggedTemplateLiteral5(["power pill"]))));
        }
      }),
      new ActionSource($familiar(_templateObject344 || (_templateObject344 = _taggedTemplateLiteral5(["Ms. Puck Man"]))), function() {
        return have($familiar(_templateObject354 || (_templateObject354 = _taggedTemplateLiteral5(["Ms. Puck Man"])))) ? 20 - get("_powerPillUses") : 0;
      }, Macro.item($item(_templateObject364 || (_templateObject364 = _taggedTemplateLiteral5(["power pill"])))), {
        familiar: function() {
          return $familiar(_templateObject374 || (_templateObject374 = _taggedTemplateLiteral5(["Ms. Puck Man"])));
        },
        preparation: function() {
          return (0, import_kolmafia10.retrieveItem)($item(_templateObject384 || (_templateObject384 = _taggedTemplateLiteral5(["power pill"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject394 || (_templateObject394 = _taggedTemplateLiteral5(["power pill"]))));
        }
      }),
      // Expensive unlimited sources
      new ActionSource($skill(_templateObject404 || (_templateObject404 = _taggedTemplateLiteral5(["Shocking Lick"]))), function() {
        return Infinity;
      }, Macro.skill($skill(_templateObject416 || (_templateObject416 = _taggedTemplateLiteral5(["Shocking Lick"])))), {
        preparation: function() {
          if (get("shockingLickCharges") === 0 && (0, import_kolmafia10.retrieveItem)($item(_templateObject424 || (_templateObject424 = _taggedTemplateLiteral5(["battery (9-Volt)"]))))) {
            (0, import_kolmafia10.use)($item(_templateObject434 || (_templateObject434 = _taggedTemplateLiteral5(["battery (9-Volt)"]))));
          }
          return get("shockingLickCharges") > 0;
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject444 || (_templateObject444 = _taggedTemplateLiteral5(["battery (AAA)"])))) * 4;
        }
      })
    ].concat(_toConsumableArray8($items(_templateObject453 || (_templateObject453 = _taggedTemplateLiteral5(["Daily Affirmation: Think Win-Lose, superduperheated metal"]))).map(function(item14) {
      return new ActionSource(item14, function() {
        return Infinity;
      }, Macro.item(item14), {
        preparation: function() {
          return (0, import_kolmafia10.retrieveItem)(item14);
        },
        cost: function() {
          return ActionSource.defaultPriceFunction(item14);
        }
      });
    })));
  }
});

// node_modules/libram/dist/resources/2009/Bandersnatch.js
var Bandersnatch_exports = {};
__export(Bandersnatch_exports, {
  canRunaway: function() {
    return canRunaway;
  },
  couldRunaway: function() {
    return couldRunaway;
  },
  getMaxRunaways: function() {
    return getMaxRunaways;
  },
  getRemainingRunaways: function() {
    return getRemainingRunaways;
  },
  getRunaways: function() {
    return getRunaways;
  },
  have: function() {
    return have3;
  },
  prepareRunaway: function() {
    return prepareRunaway;
  }
});
function _createForOfIteratorHelper5(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray10(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray10(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray10(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray10(o, minLen);
}
function _arrayLikeToArray10(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral6(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have3() {
  return have(familiar);
}
function getRunaways() {
  return get("_banderRunaways");
}
function getMaxRunaways() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return Math.floor(totalFamiliarWeight(familiar, considerWeightAdjustment) / 5);
}
function getRemainingRunaways() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return Math.max(0, getMaxRunaways(considerWeightAdjustment) - getRunaways());
}
function couldRunaway() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return have3() && getRemainingRunaways(considerWeightAdjustment) > 0;
}
function canRunaway() {
  return isCurrentFamiliar(familiar) && couldRunaway() && have(odeEffect);
}
function prepareRunaway(songsToRemove) {
  if (!have(odeEffect)) {
    if (!have(odeSkill)) {
      return false;
    }
    if (!canRememberSong()) {
      var activeSongs = getActiveSongs();
      var _iterator = _createForOfIteratorHelper5(songsToRemove), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var song2 = _step.value;
          if (activeSongs.includes(song2) && uneffect(song2)) {
            break;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    if (!(0, import_kolmafia11.useSkill)(odeSkill)) {
      return false;
    }
  }
  return (0, import_kolmafia11.useFamiliar)(familiar);
}
var import_kolmafia11, _templateObject58, _templateObject217, _templateObject317, familiar, odeSkill, odeEffect;
var init_Bandersnatch = __esm({
  "node_modules/libram/dist/resources/2009/Bandersnatch.js": function() {
    import_kolmafia11 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    familiar = $familiar(_templateObject58 || (_templateObject58 = _taggedTemplateLiteral6(["Frumious Bandersnatch"])));
    odeSkill = $skill(_templateObject217 || (_templateObject217 = _taggedTemplateLiteral6(["The Ode to Booze"])));
    odeEffect = $effect(_templateObject317 || (_templateObject317 = _taggedTemplateLiteral6(["Ode to Booze"])));
  }
});

// node_modules/libram/dist/resources/2011/StompingBoots.js
var StompingBoots_exports = {};
__export(StompingBoots_exports, {
  canRunaway: function() {
    return canRunaway2;
  },
  couldRunaway: function() {
    return couldRunaway2;
  },
  getMaxRunaways: function() {
    return getMaxRunaways2;
  },
  getRemainingRunaways: function() {
    return getRemainingRunaways2;
  },
  getRunaways: function() {
    return getRunaways2;
  },
  have: function() {
    return have4;
  },
  prepareRunaway: function() {
    return prepareRunaway2;
  }
});
function _taggedTemplateLiteral7(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have4() {
  return have(familiar2);
}
function getRunaways2() {
  return get("_banderRunaways");
}
function getMaxRunaways2() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return Math.floor(totalFamiliarWeight(familiar2, considerWeightAdjustment) / 5);
}
function getRemainingRunaways2() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return Math.max(0, getMaxRunaways2(considerWeightAdjustment) - getRunaways2());
}
function couldRunaway2() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return have4() && getRemainingRunaways2(considerWeightAdjustment) > 0;
}
function canRunaway2() {
  return isCurrentFamiliar(familiar2) && couldRunaway2();
}
function prepareRunaway2() {
  return (0, import_kolmafia12.useFamiliar)(familiar2);
}
var import_kolmafia12, _templateObject59, familiar2;
var init_StompingBoots = __esm({
  "node_modules/libram/dist/resources/2011/StompingBoots.js": function() {
    import_kolmafia12 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    familiar2 = $familiar(_templateObject59 || (_templateObject59 = _taggedTemplateLiteral7(["Pair of Stomping Boots"])));
  }
});

// node_modules/libram/dist/actions/FreeRun.js
function _toConsumableArray9(arr) {
  return _arrayWithoutHoles9(arr) || _iterableToArray9(arr) || _unsupportedIterableToArray11(arr) || _nonIterableSpread9();
}
function _nonIterableSpread9() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray11(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray11(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray11(o, minLen);
}
function _iterableToArray9(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles9(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray11(arr);
}
function _arrayLikeToArray11(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral8(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function tryFindFreeRun(constraints) {
  var source = findActionSource(freeRunSources, constraints);
  return source;
}
function ensureFreeRun(constraints) {
  var source = tryFindFreeRun(constraints);
  if (!source) {
    throw new Error("Failed to ensure Free Run source");
  }
  return source;
}
var import_kolmafia13, _templateObject60, _templateObject218, _templateObject318, _templateObject417, _templateObject510, _templateObject66, _templateObject76, _templateObject86, _templateObject96, _templateObject106, _templateObject116, _templateObject126, _templateObject136, _templateObject145, _templateObject155, _templateObject165, _templateObject175, _templateObject185, _templateObject195, _templateObject205, _templateObject219, _templateObject225, _templateObject235, _templateObject245, _templateObject255, everythingLooksGreen, freeRunSources;
var init_FreeRun = __esm({
  "node_modules/libram/dist/actions/FreeRun.js": function() {
    import_kolmafia13 = require("kolmafia");
    init_combat();
    init_lib();
    init_maximize();
    init_property();
    init_Bandersnatch();
    init_StompingBoots();
    init_template_string();
    init_ActionSource();
    everythingLooksGreen = function everythingLooksGreen2() {
      var otherClause = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : function() {
        return true;
      };
      return function() {
        return otherClause() && !have($effect(_templateObject60 || (_templateObject60 = _taggedTemplateLiteral8(["Everything Looks Green"])))) ? 1 : 0;
      };
    };
    freeRunSources = [
      // Free unlimited source
      new ActionSource($item(_templateObject218 || (_templateObject218 = _taggedTemplateLiteral8(["spring shoes"]))), everythingLooksGreen(function() {
        return have($item(_templateObject318 || (_templateObject318 = _taggedTemplateLiteral8(["spring shoes"]))));
      }), Macro.skill($skill(_templateObject417 || (_templateObject417 = _taggedTemplateLiteral8(["Spring Away"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject510 || (_templateObject510 = _taggedTemplateLiteral8(["spring shoes"])))
          });
        }
      }),
      // Free limited sources
      new ActionSource($familiar(_templateObject66 || (_templateObject66 = _taggedTemplateLiteral8(["Frumious Bandersnatch"]))), function() {
        return (have($effect(_templateObject76 || (_templateObject76 = _taggedTemplateLiteral8(["Ode to Booze"])))) || getSongCount() < getSongLimit()) && couldRunaway() ? getRemainingRunaways() : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement(["Familiar Weight"], {});
        },
        preparation: function() {
          ensureEffect($effect(_templateObject86 || (_templateObject86 = _taggedTemplateLiteral8(["Ode to Booze"]))));
          return have($effect(_templateObject96 || (_templateObject96 = _taggedTemplateLiteral8(["Ode to Booze"]))));
        },
        familiar: function() {
          return $familiar(_templateObject106 || (_templateObject106 = _taggedTemplateLiteral8(["Frumious Bandersnatch"])));
        }
      }),
      new ActionSource($familiar(_templateObject116 || (_templateObject116 = _taggedTemplateLiteral8(["Pair of Stomping Boots"]))), function() {
        return couldRunaway2() ? getRemainingRunaways2() : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement(["Familiar Weight"], {});
        },
        familiar: function() {
          return $familiar(_templateObject126 || (_templateObject126 = _taggedTemplateLiteral8(["Pair of Stomping Boots"])));
        }
      }),
      new ActionSource($item(_templateObject136 || (_templateObject136 = _taggedTemplateLiteral8(["navel ring of navel gazing"]))), function() {
        return have($item(_templateObject145 || (_templateObject145 = _taggedTemplateLiteral8(["navel ring of navel gazing"])))) ? Math.max(0, 3 - get("_navelRunaways")) : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject155 || (_templateObject155 = _taggedTemplateLiteral8(["navel ring of navel gazing"])))
          });
        }
      }),
      new ActionSource($item(_templateObject165 || (_templateObject165 = _taggedTemplateLiteral8(["Greatest American Pants"]))), function() {
        return have($item(_templateObject175 || (_templateObject175 = _taggedTemplateLiteral8(["Greatest American Pants"])))) ? Math.max(0, 3 - get("_navelRunaways")) : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject185 || (_templateObject185 = _taggedTemplateLiteral8(["Greatest American Pants"])))
          });
        }
      }),
      new ActionSource($item(_templateObject195 || (_templateObject195 = _taggedTemplateLiteral8(["peppermint parasol"]))), function() {
        return Math.max(0, 3 - get("_navelRunaways"));
      }, Macro.item($item(_templateObject205 || (_templateObject205 = _taggedTemplateLiteral8(["peppermint parasol"])))), {
        preparation: function() {
          return (0, import_kolmafia13.retrieveItem)($item(_templateObject219 || (_templateObject219 = _taggedTemplateLiteral8(["peppermint parasol"]))));
        },
        cost: function() {
          return Math.min(ActionSource.defaultPriceFunction($item(_templateObject225 || (_templateObject225 = _taggedTemplateLiteral8(["peppermint sprout"])))) * 5, ActionSource.defaultPriceFunction($item(_templateObject235 || (_templateObject235 = _taggedTemplateLiteral8(["peppermint parasol"]))))) / 10;
        }
        // Breaks after 10 successful runaways.
      })
    ].concat(_toConsumableArray9($items(_templateObject245 || (_templateObject245 = _taggedTemplateLiteral8(["green smoke bomb, tattered scrap of paper, GOTO, T.U.R.D.S. Key"]))).map(function(item14) {
      return new ActionSource(item14, everythingLooksGreen(), Macro.item(item14), {
        preparation: function() {
          return (0, import_kolmafia13.retrieveItem)(item14);
        },
        cost: function() {
          return ActionSource.defaultPriceFunction(item14);
        }
      });
    })), _toConsumableArray9($items(_templateObject255 || (_templateObject255 = _taggedTemplateLiteral8(["fish-oil smoke bomb, giant eraser"]))).map(function(item14) {
      return new ActionSource(item14, function() {
        return !have(item14) ? 0 : 1;
      }, Macro.item(item14), {
        preparation: function() {
          return have(item14);
        },
        cost: function() {
          return 0;
        }
      });
    })));
  }
});

// node_modules/libram/dist/actions/index.js
var init_actions = __esm({
  "node_modules/libram/dist/actions/index.js": function() {
    init_ActionSource();
    init_Banish();
    init_FreeKill();
    init_FreeRun();
  }
});

// node_modules/libram/dist/moonSign.js
function signNameToId(moon) {
  return MoonSigns.indexOf(moon) + 1;
}
function signIdToName(id) {
  return MoonSigns[id - 1] || "None";
}
var MoonSigns;
var init_moonSign = __esm({
  "node_modules/libram/dist/moonSign.js": function() {
    MoonSigns = ["Mongoose", "Wallaby", "Vole", "Platypus", "Opossum", "Marmot", "Wombat", "Blender", "Packrat"];
  }
});

// node_modules/libram/dist/resources/2006/CommaChameleon.js
var CommaChameleon_exports = {};
__export(CommaChameleon_exports, {
  currentFamiliar: function() {
    return currentFamiliar;
  },
  have: function() {
    return have5;
  },
  transform: function() {
    return transform;
  }
});
function _taggedTemplateLiteral9(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have5() {
  return have(familiar3);
}
function transform(fam) {
  if (currentFamiliar() === fam) {
    return true;
  }
  var equipment = (0, import_kolmafia14.familiarEquipment)(fam);
  if (equipment !== $item.none) return false;
  if (!have(equipment)) return false;
  (0, import_kolmafia14.visitUrl)("inv_equip.php?which=2&action=equip&whichitem=".concat((0, import_kolmafia14.toInt)(equipment), "&pwd"));
  return true;
}
function currentFamiliar() {
  return get("commaFamiliar");
}
var import_kolmafia14, _templateObject61, familiar3;
var init_CommaChameleon = __esm({
  "node_modules/libram/dist/resources/2006/CommaChameleon.js": function() {
    init_template_string();
    init_lib();
    import_kolmafia14 = require("kolmafia");
    init_dist();
    familiar3 = $familiar(_templateObject61 || (_templateObject61 = _taggedTemplateLiteral9(["Comma Chameleon"])));
  }
});

// node_modules/libram/dist/resources/2008/Stickers.js
var Stickers_exports = {};
__export(Stickers_exports, {
  currentStickers: function() {
    return currentStickers;
  },
  foldWeapon: function() {
    return foldWeapon;
  },
  have: function() {
    return have6;
  },
  makeSword: function() {
    return makeSword;
  },
  setStickers: function() {
    return setStickers;
  },
  stickers: function() {
    return stickers;
  },
  weapon: function() {
    return weapon;
  }
});
function _taggedTemplateLiteral10(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have6() {
  return (0, import_kolmafia15.haveSkill)($skill(_templateObject77 || (_templateObject77 = _taggedTemplateLiteral10(["Summon Stickers"]))));
}
function weapon() {
  var _find;
  return (_find = $items(_templateObject87 || (_templateObject87 = _taggedTemplateLiteral10(["scratch 'n' sniff sword, scratch 'n' sniff crossbow"]))).find(function(i) {
    return (0, import_kolmafia15.availableAmount)(i);
  })) !== null && _find !== void 0 ? _find : null;
}
function makeSword(sticker) {
  if (weapon()) return;
  (0, import_kolmafia15.visitUrl)("bedazzle.php?action=juststick&sticker=".concat(stickers[sticker].id, "&pwd"));
}
function foldWeapon(mode) {
  var currentWep = weapon();
  if (!currentWep) return false;
  if (weapons[mode] === currentWep) return true;
  (0, import_kolmafia15.visitUrl)("bedazzle.php?action=fold&pwd");
  return weapons[mode] === currentWep;
}
function currentStickers() {
  return $slots(_templateObject117 || (_templateObject117 = _taggedTemplateLiteral10(["sticker1, sticker2, sticker3"]))).map(function(s) {
    return (0, import_kolmafia15.equippedItem)(s);
  });
}
function setStickers() {
  for (var _len = arguments.length, options = new Array(_len), _key = 0; _key < _len; _key++) {
    options[_key] = arguments[_key];
  }
  var _loop = function _loop2() {
    var s = _options[_i];
    if (s) (0, import_kolmafia15.retrieveItem)(stickers[s], options.filter(function(x) {
      return x === s;
    }).length);
  };
  for (var _i = 0, _options = options; _i < _options.length; _i++) {
    _loop();
  }
  (0, import_kolmafia15.visitUrl)("bedazzle.php");
  var start = currentStickers();
  for (var i = 0; i <= 2; i++) {
    var sticker = options[i];
    if (!sticker) continue;
    var item14 = stickers[sticker];
    if (start[i] === item14) continue;
    (0, import_kolmafia15.visitUrl)("bedazzle.php?action=peel&slot=".concat(i + 1, "&pwd"));
    (0, import_kolmafia15.visitUrl)("bedazzle.php?action=stick&slot=".concat(i + 1, "&sticker=").concat(item14.id, "&pwd"));
  }
  return currentStickers();
}
var import_kolmafia15, _templateObject67, _templateObject220, _templateObject319, _templateObject418, _templateObject511, _templateObject68, _templateObject77, _templateObject87, _templateObject97, _templateObject107, _templateObject117, stickers, weapons;
var init_Stickers = __esm({
  "node_modules/libram/dist/resources/2008/Stickers.js": function() {
    import_kolmafia15 = require("kolmafia");
    init_template_string();
    stickers = {
      unicorn: $item(_templateObject67 || (_templateObject67 = _taggedTemplateLiteral10(["scratch 'n' sniff unicorn sticker"]))),
      apple: $item(_templateObject220 || (_templateObject220 = _taggedTemplateLiteral10(["scratch 'n' sniff apple sticker"]))),
      UPC: $item(_templateObject319 || (_templateObject319 = _taggedTemplateLiteral10(["scratch 'n' sniff UPC sticker"]))),
      wrestler: $item(_templateObject418 || (_templateObject418 = _taggedTemplateLiteral10(["scratch 'n' sniff wrestler sticker"]))),
      dragon: $item(_templateObject511 || (_templateObject511 = _taggedTemplateLiteral10(["scratch 'n' sniff dragon sticker"]))),
      rockband: $item(_templateObject68 || (_templateObject68 = _taggedTemplateLiteral10(["scratch 'n' sniff rock band sticker"])))
    };
    weapons = {
      sword: $item(_templateObject97 || (_templateObject97 = _taggedTemplateLiteral10(["scratch 'n' sniff sword"]))),
      crossbow: $item(_templateObject107 || (_templateObject107 = _taggedTemplateLiteral10(["scratch 'n' sniff crossbow"])))
    };
  }
});

// node_modules/libram/dist/resources/2009/SpookyPutty.js
var SpookyPutty_exports = {};
__export(SpookyPutty_exports, {
  getSpookyPuttySheetCopiesMade: function() {
    return getSpookyPuttySheetCopiesMade;
  },
  getSpookyPuttySheetMonster: function() {
    return getSpookyPuttySheetMonster;
  },
  have: function() {
    return have7;
  },
  prepareSpookyPuttySheet: function() {
    return prepareSpookyPuttySheet;
  },
  useSpookyPuttySheet: function() {
    return useSpookyPuttySheet;
  }
});
function _taggedTemplateLiteral11(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have7() {
  return getFoldGroup(sheet).some(function(item14) {
    return have(item14);
  });
}
function getSpookyPuttySheetCopiesMade() {
  return Math.max(0, get("spookyPuttyCopiesMade"));
}
function prepareSpookyPuttySheet() {
  if (!have7()) return false;
  if (have(sheet)) return true;
  return (0, import_kolmafia16.cliExecute)("fold Spooky putty sheet");
}
function getSpookyPuttySheetMonster() {
  return get("spookyPuttyMonster");
}
function useSpookyPuttySheet() {
  return (0, import_kolmafia16.use)(sheet);
}
var import_kolmafia16, _templateObject69, sheet;
var init_SpookyPutty = __esm({
  "node_modules/libram/dist/resources/2009/SpookyPutty.js": function() {
    import_kolmafia16 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    sheet = $item(_templateObject69 || (_templateObject69 = _taggedTemplateLiteral11(["Spooky Putty sheet"])));
  }
});

// node_modules/libram/dist/resources/2010/CrownOfThrones.js
var CrownOfThrones_exports = {};
__export(CrownOfThrones_exports, {
  createModifierValueFunction: function() {
    return createModifierValueFunction;
  },
  createRiderMode: function() {
    return createRiderMode;
  },
  getModifier: function() {
    return getModifier;
  },
  hasRiderMode: function() {
    return hasRiderMode;
  },
  pickRider: function() {
    return pickRider;
  },
  ridingFamiliars: function() {
    return ridingFamiliars;
  },
  valueRider: function() {
    return valueRider;
  }
});
function ownKeys4(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread4(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys4(Object(t), true).forEach(function(r2) {
      _defineProperty6(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys4(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty6(obj, key, value) {
  key = _toPropertyKey7(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey7(t) {
  var i = _toPrimitive7(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive7(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _toConsumableArray10(arr) {
  return _arrayWithoutHoles10(arr) || _iterableToArray10(arr) || _unsupportedIterableToArray12(arr) || _nonIterableSpread10();
}
function _nonIterableSpread10() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray12(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray12(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray12(o, minLen);
}
function _iterableToArray10(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles10(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray12(arr);
}
function _arrayLikeToArray12(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral12(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function valueRider(rider, modifierValueFunction, dropsValueFunction) {
  var ignoreLimitedDrops = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
  var dropValue = !rider.dropPredicate || rider.dropPredicate() && !ignoreLimitedDrops ? rider.probability * (typeof rider.drops === "number" ? rider.drops : dropsValueFunction(rider.drops)) : 0;
  var modifierValue = modifierValueFunction(rider.familiar);
  return dropValue + modifierValue;
}
function createRiderMode(name, details) {
  return riderModes.set(name, _objectSpread4(_objectSpread4({}, DEFAULTS), details));
}
function hasRiderMode(name) {
  return riderModes.has(name);
}
function pickRider(mode) {
  var modeData = riderModes.get(mode);
  if (!modeData) return null;
  var modifierValueFunction = modeData.modifierValueFunction, dropsValueFunction = modeData.dropsValueFunction, ignoreLimitedDrops = modeData.ignoreLimitedDrops, excludeCurrentFamiliar = modeData.excludeCurrentFamiliar;
  if (!riderLists.has(mode)) {
    riderLists.set(mode, FULL_RIDING_LIST.filter(function(_ref2) {
      var familiar10 = _ref2.familiar;
      return have(familiar10);
    }).map(function(rider) {
      return _objectSpread4(_objectSpread4({}, rider), {}, {
        value: valueRider(rider, modifierValueFunction, dropsValueFunction, ignoreLimitedDrops)
      });
    }).sort(function(_ref3, _ref4) {
      var a = _ref3.value;
      var b = _ref4.value;
      return b - a;
    }));
  }
  var list = riderLists.get(mode);
  if (list) {
    var riderToReturn = list.find(function(_ref5) {
      var _dropPredicate;
      var dropPredicate = _ref5.dropPredicate, familiar10 = _ref5.familiar;
      return ((_dropPredicate = dropPredicate === null || dropPredicate === void 0 ? void 0 : dropPredicate()) !== null && _dropPredicate !== void 0 ? _dropPredicate : true) && (!excludeCurrentFamiliar || (0, import_kolmafia17.myFamiliar)() !== familiar10);
    });
    return riderToReturn !== null && riderToReturn !== void 0 ? riderToReturn : null;
  }
  return null;
}
function getModifier(modifier, familiar10) {
  return (0, import_kolmafia17.numericModifier)("Throne:".concat(familiar10), modifier);
}
function createModifierValueFunction(modifiers, functions) {
  return function(familiar10) {
    return sum(modifiers, function(modifier) {
      return functions[modifier](getModifier(modifier, familiar10));
    });
  };
}
var import_kolmafia17, _templateObject70, _templateObject221, _templateObject320, _templateObject419, _templateObject512, _templateObject610, _templateObject78, _templateObject88, _templateObject98, _templateObject108, _templateObject118, _templateObject127, _templateObject137, _templateObject146, _templateObject156, _templateObject166, _templateObject176, _templateObject186, _templateObject196, _templateObject206, _templateObject2110, _templateObject226, _templateObject236, _templateObject246, _templateObject256, _templateObject265, _templateObject275, _templateObject285, _templateObject295, _templateObject305, _templateObject3110, _templateObject325, _templateObject335, _templateObject345, _templateObject355, _templateObject365, _templateObject375, _templateObject385, _templateObject395, _templateObject405, _templateObject4110, _templateObject425, _templateObject435, _templateObject445, _templateObject454, _templateObject463, _templateObject473, _templateObject483, _templateObject493, _templateObject502, _templateObject513, _templateObject522, _templateObject532, _templateObject542, _templateObject552, _templateObject562, _templateObject572, _templateObject582, _templateObject592, _templateObject602, _templateObject612, _templateObject622, _templateObject632, _templateObject642, _templateObject652, _templateObject662, _templateObject672, _templateObject682, _templateObject692, _templateObject702, _templateObject71, _templateObject722, _templateObject732, _templateObject742, _templateObject752, _templateObject762, _templateObject772, _templateObject782, _templateObject79, _templateObject80, _templateObject81, _templateObject822, _templateObject832, _templateObject842, _templateObject852, _templateObject862, _templateObject872, _templateObject882, _templateObject89, _templateObject90, _templateObject91, _templateObject922, _templateObject932, _templateObject942, _templateObject952, _templateObject962, _templateObject972, _templateObject982, _templateObject99, _templateObject100, _templateObject101, ridingFamiliars, FULL_RIDING_LIST, riderModes, DEFAULTS, riderLists;
var init_CrownOfThrones = __esm({
  "node_modules/libram/dist/resources/2010/CrownOfThrones.js": function() {
    import_kolmafia17 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    ridingFamiliars = [{
      familiar: $familiar(_templateObject70 || (_templateObject70 = _taggedTemplateLiteral12(["Puck Man"]))),
      drops: $items(_templateObject221 || (_templateObject221 = _taggedTemplateLiteral12(["yellow pixel"]))),
      probability: 0.25,
      dropPredicate: function() {
        return get("_yellowPixelDropsCrown") < 25;
      }
    }, {
      familiar: $familiar(_templateObject320 || (_templateObject320 = _taggedTemplateLiteral12(["Ms. Puck Man"]))),
      drops: $items(_templateObject419 || (_templateObject419 = _taggedTemplateLiteral12(["yellow pixel"]))),
      probability: 0.25,
      dropPredicate: function() {
        return get("_yellowPixelDropsCrown") < 25;
      }
    }, {
      familiar: $familiar(_templateObject512 || (_templateObject512 = _taggedTemplateLiteral12(["Grimstone Golem"]))),
      drops: $items(_templateObject610 || (_templateObject610 = _taggedTemplateLiteral12(["grimstone mask"]))),
      probability: 0.5,
      dropPredicate: function() {
        return get("_grimstoneMaskDropsCrown") < 1;
      }
    }, {
      familiar: $familiar(_templateObject78 || (_templateObject78 = _taggedTemplateLiteral12(["Knob Goblin Organ Grinder"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject88 || (_templateObject88 = _taggedTemplateLiteral12(["Happy Medium"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject98 || (_templateObject98 = _taggedTemplateLiteral12(["Garbage Fire"]))),
      drops: $items(_templateObject108 || (_templateObject108 = _taggedTemplateLiteral12(["burning newspaper"]))),
      probability: 0.5,
      dropPredicate: function() {
        return get("_garbageFireDropsCrown") < 3;
      }
    }, {
      familiar: $familiar(_templateObject118 || (_templateObject118 = _taggedTemplateLiteral12(["Machine Elf"]))),
      drops: $items(_templateObject127 || (_templateObject127 = _taggedTemplateLiteral12(["abstraction: sensation, abstraction: thought, abstraction: action, abstraction: category, abstraction: perception, abstraction: purpose"]))),
      probability: 0.2,
      dropPredicate: function() {
        return get("_abstractionDropsCrown") < 25;
      }
    }, {
      familiar: $familiar(_templateObject137 || (_templateObject137 = _taggedTemplateLiteral12(["Trick-or-Treating Tot"]))),
      drops: $items(_templateObject146 || (_templateObject146 = _taggedTemplateLiteral12(["hoarded candy wad"]))),
      probability: 0.5,
      dropPredicate: function() {
        return get("_hoardedCandyDropsCrown") < 3;
      }
    }, {
      familiar: $familiar(_templateObject156 || (_templateObject156 = _taggedTemplateLiteral12(["Warbear Drone"]))),
      drops: $items(_templateObject166 || (_templateObject166 = _taggedTemplateLiteral12(["warbear whosit"]))),
      probability: 1 / 4.5
    }, {
      familiar: $familiar(_templateObject176 || (_templateObject176 = _taggedTemplateLiteral12(["Li'l Xenomorph"]))),
      drops: $items(_templateObject186 || (_templateObject186 = _taggedTemplateLiteral12(["lunar isotope"]))),
      probability: 0.05
    }, {
      familiar: $familiar(_templateObject196 || (_templateObject196 = _taggedTemplateLiteral12(["Pottery Barn Owl"]))),
      drops: $items(_templateObject206 || (_templateObject206 = _taggedTemplateLiteral12(["volcanic ash"]))),
      probability: 0.1
    }, {
      familiar: $familiar(_templateObject2110 || (_templateObject2110 = _taggedTemplateLiteral12(["Grim Brother"]))),
      drops: $items(_templateObject226 || (_templateObject226 = _taggedTemplateLiteral12(["grim fairy tale"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_grimFairyTaleDropsCrown") < 2;
      }
    }, {
      familiar: $familiar(_templateObject236 || (_templateObject236 = _taggedTemplateLiteral12(["Optimistic Candle"]))),
      drops: $items(_templateObject246 || (_templateObject246 = _taggedTemplateLiteral12(["glob of melted wax"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_optimisticCandleDropsCrown") < 3;
      }
    }, {
      familiar: $familiar(_templateObject256 || (_templateObject256 = _taggedTemplateLiteral12(["Adventurous Spelunker"]))),
      drops: $items(_templateObject265 || (_templateObject265 = _taggedTemplateLiteral12(["teflon ore, velcro ore, vinyl ore, cardboard ore, styrofoam ore, bubblewrap ore"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_oreDropsCrown") < 6;
      }
    }, {
      familiar: $familiar(_templateObject275 || (_templateObject275 = _taggedTemplateLiteral12(["Twitching Space Critter"]))),
      drops: $items(_templateObject285 || (_templateObject285 = _taggedTemplateLiteral12(["space beast fur"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_spaceFurDropsCrown") < 1;
      }
    }, {
      familiar: $familiar(_templateObject295 || (_templateObject295 = _taggedTemplateLiteral12(["Party Mouse"]))),
      drops: 50,
      probability: 0.05
    }, {
      familiar: $familiar(_templateObject305 || (_templateObject305 = _taggedTemplateLiteral12(["Yule Hound"]))),
      drops: $items(_templateObject3110 || (_templateObject3110 = _taggedTemplateLiteral12(["candy cane"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject325 || (_templateObject325 = _taggedTemplateLiteral12(["Gluttonous Green Ghost"]))),
      drops: $items(_templateObject335 || (_templateObject335 = _taggedTemplateLiteral12(["bean burrito, enchanted bean burrito, jumping bean burrito"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject345 || (_templateObject345 = _taggedTemplateLiteral12(["Reassembled Blackbird"]))),
      drops: $items(_templateObject355 || (_templateObject355 = _taggedTemplateLiteral12(["blackberry"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject365 || (_templateObject365 = _taggedTemplateLiteral12(["Reconstituted Crow"]))),
      drops: $items(_templateObject375 || (_templateObject375 = _taggedTemplateLiteral12(["blackberry"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject385 || (_templateObject385 = _taggedTemplateLiteral12(["Hunchbacked Minion"]))),
      drops: /* @__PURE__ */ new Map([[$item(_templateObject395 || (_templateObject395 = _taggedTemplateLiteral12(["disembodied brain"]))), 0.02], [$item(_templateObject405 || (_templateObject405 = _taggedTemplateLiteral12(["skeleton bone"]))), 0.98]]),
      probability: 1
    }, {
      familiar: $familiar(_templateObject4110 || (_templateObject4110 = _taggedTemplateLiteral12(["Reanimated Reanimator"]))),
      drops: $items(_templateObject425 || (_templateObject425 = _taggedTemplateLiteral12(["hot wing, broken skull"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject435 || (_templateObject435 = _taggedTemplateLiteral12(["Attention-Deficit Demon"]))),
      drops: $items(_templateObject445 || (_templateObject445 = _taggedTemplateLiteral12(["chorizo brownies, white chocolate and tomato pizza, carob chunk noodles"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject454 || (_templateObject454 = _taggedTemplateLiteral12(["Piano Cat"]))),
      drops: $items(_templateObject463 || (_templateObject463 = _taggedTemplateLiteral12(["beertini, papaya slung, salty slug, tomato daiquiri"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject473 || (_templateObject473 = _taggedTemplateLiteral12(["Golden Monkey"]))),
      drops: $items(_templateObject483 || (_templateObject483 = _taggedTemplateLiteral12(["gold nuggets"]))),
      probability: 0.5
    }, {
      familiar: $familiar(_templateObject493 || (_templateObject493 = _taggedTemplateLiteral12(["Robot Reindeer"]))),
      drops: $items(_templateObject502 || (_templateObject502 = _taggedTemplateLiteral12(["candy cane, eggnog, fruitcake, gingerbread bugbear"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject513 || (_templateObject513 = _taggedTemplateLiteral12(["Stocking Mimic"]))),
      drops: $items(_templateObject522 || (_templateObject522 = _taggedTemplateLiteral12(["Angry Farmer candy, Cold Hots candy, Rock Pops, Tasty Fun Good rice candy, Wint-O-Fresh mint"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject532 || (_templateObject532 = _taggedTemplateLiteral12(["BRICKO chick"]))),
      drops: $items(_templateObject542 || (_templateObject542 = _taggedTemplateLiteral12(["BRICKO brick"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject552 || (_templateObject552 = _taggedTemplateLiteral12(["Cotton Candy Carnie"]))),
      drops: $items(_templateObject562 || (_templateObject562 = _taggedTemplateLiteral12(["cotton candy pinch"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject572 || (_templateObject572 = _taggedTemplateLiteral12(["Untamed Turtle"]))),
      drops: $items(_templateObject582 || (_templateObject582 = _taggedTemplateLiteral12(["snailmail bits, turtlemail bits, turtle wax"]))),
      probability: 0.35
    }, {
      familiar: $familiar(_templateObject592 || (_templateObject592 = _taggedTemplateLiteral12(["Astral Badger"]))),
      drops: $items(_templateObject602 || (_templateObject602 = _taggedTemplateLiteral12(["spooky mushroom, Knob mushroom, Knoll mushroom"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject612 || (_templateObject612 = _taggedTemplateLiteral12(["Green Pixie"]))),
      drops: $items(_templateObject622 || (_templateObject622 = _taggedTemplateLiteral12(["bottle of tequila"]))),
      probability: 0.2
    }, {
      familiar: $familiar(_templateObject632 || (_templateObject632 = _taggedTemplateLiteral12(["Angry Goat"]))),
      drops: $items(_templateObject642 || (_templateObject642 = _taggedTemplateLiteral12(["goat cheese pizza"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject652 || (_templateObject652 = _taggedTemplateLiteral12(["Adorable Seal Larva"]))),
      drops: $items(_templateObject662 || (_templateObject662 = _taggedTemplateLiteral12(["stench nuggets, spooky nuggets, hot nuggets, cold nuggets, sleaze nuggets"]))),
      probability: 0.35
    }, {
      familiar: $familiar(_templateObject672 || (_templateObject672 = _taggedTemplateLiteral12(["Ancient Yuletide Troll"]))),
      drops: $items(_templateObject682 || (_templateObject682 = _taggedTemplateLiteral12(["candy cane, eggnog, fruitcake, gingerbread bugbear"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject692 || (_templateObject692 = _taggedTemplateLiteral12(["Sweet Nutcracker"]))),
      drops: $items(_templateObject702 || (_templateObject702 = _taggedTemplateLiteral12(["candy cane, eggnog, fruitcake, gingerbread bugbear"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject71 || (_templateObject71 = _taggedTemplateLiteral12(["Casagnova Gnome"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject722 || (_templateObject722 = _taggedTemplateLiteral12(["Coffee Pixie"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject732 || (_templateObject732 = _taggedTemplateLiteral12(["Dancing Frog"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject742 || (_templateObject742 = _taggedTemplateLiteral12(["Grouper Groupie"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject752 || (_templateObject752 = _taggedTemplateLiteral12(["Hand Turkey"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject762 || (_templateObject762 = _taggedTemplateLiteral12(["Hippo Ballerina"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject772 || (_templateObject772 = _taggedTemplateLiteral12(["Jitterbug"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject782 || (_templateObject782 = _taggedTemplateLiteral12(["Leprechaun"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject79 || (_templateObject79 = _taggedTemplateLiteral12(["Obtuse Angel"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject80 || (_templateObject80 = _taggedTemplateLiteral12(["Psychedelic Bear"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject81 || (_templateObject81 = _taggedTemplateLiteral12(["Robortender"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject822 || (_templateObject822 = _taggedTemplateLiteral12(["Ghost of Crimbo Commerce"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject832 || (_templateObject832 = _taggedTemplateLiteral12(["Hobo Monkey"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject842 || (_templateObject842 = _taggedTemplateLiteral12(["Rockin' Robin"]))),
      drops: 60,
      probability: 1
    }, {
      familiar: $familiar(_templateObject852 || (_templateObject852 = _taggedTemplateLiteral12(["Feral Kobold"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject862 || (_templateObject862 = _taggedTemplateLiteral12(["Oily Woim"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject872 || (_templateObject872 = _taggedTemplateLiteral12(["Cat Burglar"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject882 || (_templateObject882 = _taggedTemplateLiteral12(["Misshapen Animal Skeleton"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject89 || (_templateObject89 = _taggedTemplateLiteral12(["Gelatinous Cubeling"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject90 || (_templateObject90 = _taggedTemplateLiteral12(["Frozen Gravy Fairy"]))),
      drops: $items(_templateObject91 || (_templateObject91 = _taggedTemplateLiteral12(["cold nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject922 || (_templateObject922 = _taggedTemplateLiteral12(["Stinky Gravy Fairy"]))),
      drops: $items(_templateObject932 || (_templateObject932 = _taggedTemplateLiteral12(["stench nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject942 || (_templateObject942 = _taggedTemplateLiteral12(["Sleazy Gravy Fairy"]))),
      drops: $items(_templateObject952 || (_templateObject952 = _taggedTemplateLiteral12(["sleaze nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject962 || (_templateObject962 = _taggedTemplateLiteral12(["Spooky Gravy Fairy"]))),
      drops: $items(_templateObject972 || (_templateObject972 = _taggedTemplateLiteral12(["spooky nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject982 || (_templateObject982 = _taggedTemplateLiteral12(["Mini Kiwi"]))),
      drops: $items(_templateObject99 || (_templateObject99 = _taggedTemplateLiteral12(["mini kiwi"]))),
      probability: 0.08
    }, {
      familiar: $familiar(_templateObject100 || (_templateObject100 = _taggedTemplateLiteral12(["Flaming Gravy Fairy"]))),
      // drops a hot nugget every combat, 5 of which can be used to make a hot wad
      drops: $items(_templateObject101 || (_templateObject101 = _taggedTemplateLiteral12(["hot nuggets"]))),
      probability: 1
    }];
    FULL_RIDING_LIST = [].concat(ridingFamiliars, _toConsumableArray10(import_kolmafia17.Familiar.all().filter(function(f) {
      return !ridingFamiliars.some(function(_ref) {
        var familiar10 = _ref.familiar;
        return familiar10 === f;
      });
    }).map(function(familiar10) {
      return {
        familiar: familiar10,
        drops: 0,
        probability: 1
      };
    })));
    riderModes = /* @__PURE__ */ new Map();
    DEFAULTS = {
      modifierValueFunction: function() {
        return 0;
      },
      dropsValueFunction: function() {
        return 0;
      },
      ignoreLimitedDrops: false,
      excludeCurrentFamiliar: true
    };
    riderLists = /* @__PURE__ */ new Map();
  }
});

// node_modules/libram/dist/resources/2010/LookingGlass.js
var LookingGlass_exports = {};
__export(LookingGlass_exports, {
  findTeaPartyHatLength: function() {
    return findTeaPartyHatLength;
  },
  findTeaPartyHats: function() {
    return findTeaPartyHats;
  },
  haveTeaPartyHat: function() {
    return haveTeaPartyHat;
  },
  tryTeaPartyBuff: function() {
    return tryTeaPartyBuff;
  }
});
function _taggedTemplateLiteral13(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function validTeaPartyHat(item14, characters) {
  if ((0, import_kolmafia18.toSlot)(item14) !== $slot(_templateObject321 || (_templateObject321 = _taggedTemplateLiteral13(["hat"]))) || !(0, import_kolmafia18.canEquip)(item14)) {
    return false;
  } else if (characters <= 5) {
    return item14.nameLength <= 5;
  } else if (characters >= 30) {
    return item14.nameLength >= 30;
  }
  return characters === item14.nameLength;
}
function findTeaPartyHatLength(effect2) {
  var effectId = effect2.id;
  if (effectId < firstTeaPartyEffect.id || effectId > lastTeaPartyEffect.id) {
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  }
  return Math.floor(effectId - firstTeaPartyEffect.id + 5);
}
function findTeaPartyHats(effect2) {
  var characters = findTeaPartyHatLength(effect2);
  if (!characters) {
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  }
  return import_kolmafia18.Item.all().filter(function(item14) {
    return validTeaPartyHat(item14, characters);
  });
}
function haveTeaPartyHat(effect2) {
  var characters = findTeaPartyHatLength(effect2);
  if (!characters) {
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  }
  return import_kolmafia18.Item.all().find(function(item14) {
    return validTeaPartyHat(item14, characters) && have(item14);
  }) !== void 0;
}
function tryTeaPartyBuff(effect2) {
  if (get("_madTeaParty")) {
    return false;
  }
  var characters = findTeaPartyHatLength(effect2);
  if (!characters) {
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  }
  if (!haveTeaPartyHat(effect2)) {
    return false;
  }
  ensureEffect($effect(_templateObject420 || (_templateObject420 = _taggedTemplateLiteral13(["Down the Rabbit Hole"]))));
  if (!have($effect(_templateObject514 || (_templateObject514 = _taggedTemplateLiteral13(["Down the Rabbit Hole"]))))) {
    return false;
  }
  var turns2 = (0, import_kolmafia18.haveEffect)(effect2);
  (0, import_kolmafia18.cliExecute)("hatter ".concat(characters));
  return have(effect2) && (0, import_kolmafia18.haveEffect)(effect2) > turns2;
}
var import_kolmafia18, _templateObject109, _templateObject227, _templateObject321, _templateObject420, _templateObject514, firstTeaPartyEffect, lastTeaPartyEffect;
var init_LookingGlass = __esm({
  "node_modules/libram/dist/resources/2010/LookingGlass.js": function() {
    import_kolmafia18 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    firstTeaPartyEffect = $effect(_templateObject109 || (_templateObject109 = _taggedTemplateLiteral13(["Assaulted with Pepper"])));
    lastTeaPartyEffect = $effect(_templateObject227 || (_templateObject227 = _taggedTemplateLiteral13(["Oleaginous Soles"])));
  }
});

// node_modules/libram/dist/Copier.js
function _defineProperties7(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey8(descriptor.key), descriptor);
  }
}
function _createClass7(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties7(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties7(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _classCallCheck7(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperty7(obj, key, value) {
  key = _toPropertyKey8(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey8(t) {
  var i = _toPrimitive8(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive8(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var Copier;
var init_Copier = __esm({
  "node_modules/libram/dist/Copier.js": function() {
    Copier = /* @__PURE__ */ _createClass7(function Copier2(couldCopy, prepare, canCopy, copiedMonster, fightCopy) {
      _classCallCheck7(this, Copier2);
      _defineProperty7(this, "couldCopy", void 0);
      _defineProperty7(this, "prepare", void 0);
      _defineProperty7(this, "canCopy", void 0);
      _defineProperty7(this, "copiedMonster", void 0);
      _defineProperty7(this, "fightCopy", null);
      this.couldCopy = couldCopy;
      this.prepare = prepare;
      this.canCopy = canCopy;
      this.copiedMonster = copiedMonster;
      if (fightCopy) this.fightCopy = fightCopy;
    });
  }
});

// node_modules/libram/dist/resources/2011/ObtuseAngel.js
var ObtuseAngel_exports = {};
__export(ObtuseAngel_exports, {
  BadlyRomanticArrow: function() {
    return BadlyRomanticArrow;
  },
  canUseBadlyRomanticArrow: function() {
    return canUseBadlyRomanticArrow;
  },
  couldUseBadlyRomanticArrow: function() {
    return couldUseBadlyRomanticArrow;
  },
  getBadlyRomanticArrowMonster: function() {
    return getBadlyRomanticArrowMonster;
  },
  getBadlyRomanticArrowUses: function() {
    return getBadlyRomanticArrowUses;
  },
  have: function() {
    return have8;
  },
  haveBadlyRomanticArrowUsesRemaining: function() {
    return haveBadlyRomanticArrowUsesRemaining;
  },
  prepareBadlyRomanticArrow: function() {
    return prepareBadlyRomanticArrow;
  }
});
function _taggedTemplateLiteral14(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have8() {
  return have(familiar4);
}
function getBadlyRomanticArrowUses() {
  return Math.max(0, get("_badlyRomanticArrows"));
}
function haveBadlyRomanticArrowUsesRemaining() {
  return getBadlyRomanticArrowUses() === 0;
}
function couldUseBadlyRomanticArrow() {
  return have8() && haveBadlyRomanticArrowUsesRemaining();
}
function prepareBadlyRomanticArrow() {
  return (0, import_kolmafia19.useFamiliar)(familiar4);
}
function canUseBadlyRomanticArrow() {
  return isCurrentFamiliar(familiar4) && haveBadlyRomanticArrowUsesRemaining();
}
function getBadlyRomanticArrowMonster() {
  return get("romanticTarget");
}
var import_kolmafia19, _templateObject110, familiar4, BadlyRomanticArrow;
var init_ObtuseAngel = __esm({
  "node_modules/libram/dist/resources/2011/ObtuseAngel.js": function() {
    import_kolmafia19 = require("kolmafia");
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    familiar4 = $familiar(_templateObject110 || (_templateObject110 = _taggedTemplateLiteral14(["Obtuse Angel"])));
    BadlyRomanticArrow = new Copier(function() {
      return couldUseBadlyRomanticArrow();
    }, function() {
      return prepareBadlyRomanticArrow();
    }, function() {
      return canUseBadlyRomanticArrow();
    }, function() {
      return getBadlyRomanticArrowMonster();
    });
  }
});

// node_modules/libram/dist/resources/2012/RainDoh.js
var RainDoh_exports = {};
__export(RainDoh_exports, {
  getRainDohBlackBoxCopiesMade: function() {
    return getRainDohBlackBoxCopiesMade;
  },
  getRainDohBlackBoxMonster: function() {
    return getRainDohBlackBoxMonster;
  },
  have: function() {
    return have9;
  },
  useRainDohBlackBox: function() {
    return useRainDohBlackBox;
  }
});
function _taggedTemplateLiteral15(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have9() {
  return getFoldGroup(box).some(function(item14) {
    return have(item14);
  });
}
function getRainDohBlackBoxCopiesMade() {
  return Math.max(0, get("_raindohCopiesMade"));
}
function getRainDohBlackBoxMonster() {
  return get("rainDohMonster");
}
function useRainDohBlackBox() {
  return (0, import_kolmafia20.use)(box);
}
var import_kolmafia20, _templateObject111, box;
var init_RainDoh = __esm({
  "node_modules/libram/dist/resources/2012/RainDoh.js": function() {
    import_kolmafia20 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    box = $item(_templateObject111 || (_templateObject111 = _taggedTemplateLiteral15(["Rain-Doh black box"])));
  }
});

// node_modules/libram/dist/resources/2012/ReagnimatedGnome.js
var ReagnimatedGnome_exports = {};
__export(ReagnimatedGnome_exports, {
  bodyParts: function() {
    return bodyParts;
  },
  choosePart: function() {
    return choosePart;
  },
  chosenParts: function() {
    return chosenParts;
  },
  expectedAdvsPerCombat: function() {
    return expectedAdvsPerCombat;
  },
  have: function() {
    return have10;
  }
});
function _taggedTemplateLiteral16(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have10() {
  return have($familiar(_templateObject119 || (_templateObject119 = _taggedTemplateLiteral16(["Reagnimated Gnome"]))));
}
function chosenParts() {
  return Object.values(bodyParts).filter(function(part) {
    return have(part);
  });
}
function choosePart(part) {
  if (!have10()) return false;
  if (have(bodyParts[part])) return true;
  (0, import_kolmafia21.visitUrl)("arena.php");
  (0, import_kolmafia21.runChoice)(4);
  return chosenParts().includes(bodyParts[part]);
}
function expectedAdvsPerCombat(weight) {
  return Math.min(0.01 + weight / 1e3 * 0.99, 1);
}
var import_kolmafia21, _templateObject119, _templateObject228, _templateObject326, _templateObject421, _templateObject515, _templateObject611, bodyParts;
var init_ReagnimatedGnome = __esm({
  "node_modules/libram/dist/resources/2012/ReagnimatedGnome.js": function() {
    import_kolmafia21 = require("kolmafia");
    init_lib();
    init_template_string();
    bodyParts = {
      ears: $item(_templateObject228 || (_templateObject228 = _taggedTemplateLiteral16(["gnomish swimmer's ears"]))),
      lung: $item(_templateObject326 || (_templateObject326 = _taggedTemplateLiteral16(["gnomish coal miner's lung"]))),
      elbow: $item(_templateObject421 || (_templateObject421 = _taggedTemplateLiteral16(["gnomish tennis elbow"]))),
      kgnee: $item(_templateObject515 || (_templateObject515 = _taggedTemplateLiteral16(["gnomish housemaid's kgnee"]))),
      foot: $item(_templateObject611 || (_templateObject611 = _taggedTemplateLiteral16(["gnomish athlete's foot"])))
    };
  }
});

// node_modules/libram/dist/modifierTypes.js
var stringModifiers, stringModifiersSet, booleanModifiers, booleanModifiersSet, numericModifiers, numericModifiersSet;
var init_modifierTypes = __esm({
  "node_modules/libram/dist/modifierTypes.js": function() {
    stringModifiers = ["Class", "Intrinsic Effect", "Equalize", "Wiki Name", "Modifiers", "Outfit", "Stat Tuning", "Effect", "Equips On", "Familiar Effect", "Jiggle", "Equalize Muscle", "Equalize Mysticality", "Equalize Moxie", "Avatar", "Rollover Effect", "Skill", "Floor Buffed Muscle", "Floor Buffed Mysticality", "Floor Buffed Moxie", "Plumber Stat", "Recipe", "Evaluated Modifiers"];
    stringModifiersSet = new Set(stringModifiers);
    booleanModifiers = ["Softcore Only", "Single Equip", "Always Fumble", "Never Fumble", "Weakens Monster", "Free Pull", "Variable", "Nonstackable Watch", "Cold Immunity", "Hot Immunity", "Sleaze Immunity", "Spooky Immunity", "Stench Immunity", "Cold Vulnerability", "Hot Vulnerability", "Sleaze Vulnerability", "Spooky Vulnerability", "Stench Vulnerability", "Moxie Controls MP", "Moxie May Control MP", "Four Songs", "Adventure Randomly", "Adventure Underwater", "Underwater Familiar", "Generic", "Unarmed", "No Pull", "Lasts Until Rollover", "Alters Page Text", "Attacks Can't Miss", "Pirate", "Blind", "Breakable", "Drops Items", "Drops Meat", "Volleyball or Sombrero", "Extra Pickpocket", "Negative Status Resist"];
    booleanModifiersSet = new Set(booleanModifiers);
    numericModifiers = ["Familiar Weight", "Monster Level", "Combat Rate", "Initiative", "Experience", "Item Drop", "Meat Drop", "Damage Absorption", "Damage Reduction", "Cold Resistance", "Hot Resistance", "Sleaze Resistance", "Spooky Resistance", "Stench Resistance", "Mana Cost", "Moxie", "Moxie Percent", "Muscle", "Muscle Percent", "Mysticality", "Mysticality Percent", "Maximum HP", "Maximum HP Percent", "Maximum MP", "Maximum MP Percent", "Weapon Damage", "Ranged Damage", "Spell Damage", "Spell Damage Percent", "Cold Damage", "Hot Damage", "Sleaze Damage", "Spooky Damage", "Stench Damage", "Cold Spell Damage", "Hot Spell Damage", "Sleaze Spell Damage", "Spooky Spell Damage", "Stench Spell Damage", "Underwater Combat Rate", "Fumble", "HP Regen Min", "HP Regen Max", "MP Regen Min", "MP Regen Max", "Adventures", "Familiar Weight Percent", "Weapon Damage Percent", "Ranged Damage Percent", "Stackable Mana Cost", "Hobo Power", "Base Resting HP", "Resting HP Percent", "Bonus Resting HP", "Base Resting MP", "Resting MP Percent", "Bonus Resting MP", "Critical Hit Percent", "PvP Fights", "Volleyball", "Sombrero", "Leprechaun", "Fairy", "Meat Drop Penalty", "Hidden Familiar Weight", "Item Drop Penalty", "Initiative Penalty", "Food Drop", "Booze Drop", "Hat Drop", "Weapon Drop", "Offhand Drop", "Shirt Drop", "Pants Drop", "Accessory Drop", "Volleyball Effectiveness", "Sombrero Effectiveness", "Leprechaun Effectiveness", "Fairy Effectiveness", "Familiar Weight Cap", "Slime Resistance", "Slime Hates It", "Spell Critical Percent", "Muscle Experience", "Mysticality Experience", "Moxie Experience", "Effect Duration", "Candy Drop", "DB Combat Damage", "Sombrero Bonus", "Familiar Experience", "Sporadic Meat Drop", "Sporadic Item Drop", "Meat Bonus", "Pickpocket Chance", "Combat Mana Cost", "Muscle Experience Percent", "Mysticality Experience Percent", "Moxie Experience Percent", "Minstrel Level", "Muscle Limit", "Mysticality Limit", "Moxie Limit", "Song Duration", "Prismatic Damage", "Smithsness", "Supercold Resistance", "Reduce Enemy Defense", "Pool Skill", "Familiar Damage", "Gear Drop", "Maximum Hooch", "Water Level", "Crimbot Outfit Power", "Familiar Tuning Muscle", "Familiar Tuning Mysticality", "Familiar Tuning Moxie", "Random Monster Modifiers", "Luck", "Othello Skill", "Disco Style", "Rollover Effect Duration", "Sixgun Damage", "Fishing Skill", "Additional Song", "Sprinkle Drop", "Absorb Adventures", "Absorb Stats", "Rubee Drop", "Kruegerand Drop", "WarBear Armor Penetration", "Maximum PP", "Plumber Power", "Drippy Damage", "Drippy Resistance", "Energy", "Scrap", "Familiar Action Bonus", "Water", "Spleen Drop", "Potion Drop", "Sauce Spell Damage", "Monster Level Percent", "Food Fairy", "Booze Fairy", "Candy Fairy", "Food Fairy Effectiveness", "Booze Fairy Effectiveness", "Candy Fairy Effectiveness", "Damage Aura", "Sporadic Damage Aura", "Thorns", "Sporadic Thorns", "Stomach Capacity", "Liver Capacity", "Spleen Capacity", "Free Rests", "Leaves", "Elf Warfare Effectiveness", "Pirate Warfare Effectiveness", "MPC Drop", "Piece of Twelve Drop", "Combat Item Damage Percent", "Avoid Attack", "Damage vs. Bugbears", "Damage vs. Werewolves", "Damage vs. Zombies", "Damage vs. Ghosts", "Damage vs. Vampires", "Damage vs. Skeletons", "Damage vs. Undead"];
    numericModifiersSet = new Set(numericModifiers);
  }
});

// node_modules/libram/dist/modifier.js
function _slicedToArray6(arr, i) {
  return _arrayWithHoles6(arr) || _iterableToArrayLimit6(arr, i) || _unsupportedIterableToArray13(arr, i) || _nonIterableRest6();
}
function _nonIterableRest6() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray13(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray13(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray13(o, minLen);
}
function _arrayLikeToArray13(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit6(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles6(arr) {
  if (Array.isArray(arr)) return arr;
}
function ownKeys5(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread5(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys5(Object(t), true).forEach(function(r2) {
      _defineProperty8(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys5(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty8(obj, key, value) {
  key = _toPropertyKey9(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey9(t) {
  var i = _toPrimitive9(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive9(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function isBooleanModifier(modifier) {
  return booleanModifiersSet.has(modifier);
}
function isNumericModifier(modifier) {
  return numericModifiersSet.has(modifier);
}
function isStringModifier(modifier) {
  return stringModifiersSet.has(modifier);
}
function get2(name, subject) {
  if (isBooleanModifier(name)) {
    return subject === void 0 ? (0, import_kolmafia22.booleanModifier)(name) : (0, import_kolmafia22.booleanModifier)(subject, name);
  }
  if (isNumericModifier(name)) {
    return subject === void 0 ? (0, import_kolmafia22.numericModifier)(name) : (0, import_kolmafia22.numericModifier)(subject, name);
  }
  if (isStringModifier(name)) {
    return subject === void 0 ? (0, import_kolmafia22.stringModifier)(name) : (0, import_kolmafia22.stringModifier)(subject, name);
  }
}
function pairwiseMerge(modifiers1, modifiers2) {
  var returnValue = _objectSpread5(_objectSpread5({}, modifiers1), modifiers2);
  for (var modifier in modifiers1) {
    if (Array.from(Object.values(modifiers2)).includes(modifier)) {
      if (isNumericModifier(modifier)) {
        var _modifiers1$modifier, _modifiers2$modifier;
        returnValue[modifier] = ((_modifiers1$modifier = modifiers1[modifier]) !== null && _modifiers1$modifier !== void 0 ? _modifiers1$modifier : 0) + ((_modifiers2$modifier = modifiers2[modifier]) !== null && _modifiers2$modifier !== void 0 ? _modifiers2$modifier : 0);
      }
      if (isBooleanModifier(modifier)) {
        var _modifiers1$modifier2, _modifiers2$modifier2;
        returnValue[modifier] = ((_modifiers1$modifier2 = modifiers1[modifier]) !== null && _modifiers1$modifier2 !== void 0 ? _modifiers1$modifier2 : false) || ((_modifiers2$modifier2 = modifiers2[modifier]) !== null && _modifiers2$modifier2 !== void 0 ? _modifiers2$modifier2 : false);
      }
    }
  }
  return returnValue;
}
function mergeModifiers() {
  for (var _len = arguments.length, modifierss = new Array(_len), _key = 0; _key < _len; _key++) {
    modifierss[_key] = arguments[_key];
  }
  return modifierss.reduce(function(a, b) {
    return pairwiseMerge(a, b);
  }, {});
}
function getTotalModifier(modifier) {
  for (var _len2 = arguments.length, subjects = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    subjects[_key2 - 1] = arguments[_key2];
  }
  return sum(subjects, function(subject) {
    return get2(modifier, subject);
  });
}
function parseModifiers(pref) {
  var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref$numeric = _ref.numeric, numeric = _ref$numeric === void 0 ? Number : _ref$numeric, _ref$str = _ref.str, str = _ref$str === void 0 ? String : _ref$str, _ref$bool = _ref.bool, bool = _ref$bool === void 0 ? function(val) {
    return val === "true";
  } : _ref$bool;
  return Object.entries((0, import_kolmafia22.splitModifiers)((0, import_kolmafia22.getProperty)(pref))).reduce(function(acc, _ref2) {
    var _ref3 = _slicedToArray6(_ref2, 2), key = _ref3[0], value = _ref3[1];
    return _objectSpread5(_objectSpread5({}, acc), {}, _defineProperty8({}, key, isBooleanModifier(key) ? bool(value) : isNumericModifier(key) ? numeric(value) : str(value)));
  }, {});
}
var import_kolmafia22;
var init_modifier = __esm({
  "node_modules/libram/dist/modifier.js": function() {
    import_kolmafia22 = require("kolmafia");
    init_modifierTypes();
    init_utils();
  }
});

// node_modules/libram/dist/resources/2013/Florist.js
var Florist_exports = {};
__export(Florist_exports, {
  AloeGuvnor: function() {
    return AloeGuvnor;
  },
  ArcticMoss: function() {
    return ArcticMoss;
  },
  Artichoker: function() {
    return Artichoker;
  },
  BamBoo: function() {
    return BamBoo;
  },
  BlusteryPuffball: function() {
    return BlusteryPuffball;
  },
  CannedSpinach: function() {
    return CannedSpinach;
  },
  CeleryStalker: function() {
    return CeleryStalker;
  },
  Chillterelle: function() {
    return Chillterelle;
  },
  Crookweed: function() {
    return Crookweed;
  },
  DeadlyCinnamon: function() {
    return DeadlyCinnamon;
  },
  DisLichen: function() {
    return DisLichen;
  },
  Duckweed: function() {
    return Duckweed;
  },
  ElectricEelgrass: function() {
    return ElectricEelgrass;
  },
  FoulToadstool: function() {
    return FoulToadstool;
  },
  HornOfPlenty: function() {
    return HornOfPlenty;
  },
  Impatiens: function() {
    return Impatiens;
  },
  Kelptomaniac: function() {
    return Kelptomaniac;
  },
  LettuceSpray: function() {
    return LettuceSpray;
  },
  LooseMorels: function() {
    return LooseMorels;
  },
  MaxHeadshroom: function() {
    return MaxHeadshroom;
  },
  OrcaOrchid: function() {
    return OrcaOrchid;
  },
  PitcherPlant: function() {
    return PitcherPlant;
  },
  Portlybella: function() {
    return Portlybella;
  },
  RabidDogwood: function() {
    return RabidDogwood;
  },
  RadishRadish: function() {
    return RadishRadish;
  },
  RedFern: function() {
    return RedFern;
  },
  Rutabeggar: function() {
    return Rutabeggar;
  },
  Sargassum: function() {
    return Sargassum;
  },
  SeltzerWatercress: function() {
    return SeltzerWatercress;
  },
  ShuffleTruffle: function() {
    return ShuffleTruffle;
  },
  SkunkCabbage: function() {
    return SkunkCabbage;
  },
  SmokeRa: function() {
    return SmokeRa;
  },
  Snori: function() {
    return Snori;
  },
  Spankton: function() {
    return Spankton;
  },
  SpiderPlant: function() {
    return SpiderPlant;
  },
  StealingMagnolia: function() {
    return StealingMagnolia;
  },
  SubSeaRose: function() {
    return SubSeaRose;
  },
  UpSeaDaisy: function() {
    return UpSeaDaisy;
  },
  WarLily: function() {
    return WarLily;
  },
  WizardsWig: function() {
    return WizardsWig;
  },
  all: function() {
    return all;
  },
  flowersAvailableFor: function() {
    return flowersAvailableFor;
  },
  flowersIn: function() {
    return flowersIn;
  },
  have: function() {
    return have11;
  },
  isFull: function() {
    return isFull;
  }
});
function _toConsumableArray11(arr) {
  return _arrayWithoutHoles11(arr) || _iterableToArray11(arr) || _unsupportedIterableToArray14(arr) || _nonIterableSpread11();
}
function _nonIterableSpread11() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray14(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray14(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray14(o, minLen);
}
function _iterableToArray11(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles11(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray14(arr);
}
function _arrayLikeToArray14(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck8(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties8(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey10(descriptor.key), descriptor);
  }
}
function _createClass8(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties8(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties8(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty9(obj, key, value) {
  key = _toPropertyKey10(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey10(t) {
  var i = _toPrimitive10(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive10(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function have11() {
  return (0, import_kolmafia23.floristAvailable)();
}
function toFlower(name) {
  var _all$find;
  return (_all$find = all.find(function(flower) {
    return name === flower.name;
  })) !== null && _all$find !== void 0 ? _all$find : null;
}
function flowersIn(location) {
  var returnValue = [];
  Flower.plantNamesInZone(location).map(toFlower).forEach(function(flower) {
    if (flower) returnValue.push(flower);
  });
  return returnValue;
}
function flowersAvailableFor() {
  var _get6;
  var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (_get6 = get("lastAdventure")) !== null && _get6 !== void 0 ? _get6 : $location.none;
  return all.filter(function(flower) {
    return flower.available(location);
  });
}
function isFull() {
  var _get7;
  var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (_get7 = get("lastAdventure")) !== null && _get7 !== void 0 ? _get7 : $location.none;
  return flowersIn(location).length === 3;
}
var import_kolmafia23, Flower, RabidDogwood, Rutabeggar, RadishRadish, Artichoker, SmokeRa, SkunkCabbage, DeadlyCinnamon, CeleryStalker, LettuceSpray, SeltzerWatercress, WarLily, StealingMagnolia, CannedSpinach, Impatiens, SpiderPlant, RedFern, BamBoo, ArcticMoss, AloeGuvnor, PitcherPlant, BlusteryPuffball, HornOfPlenty, WizardsWig, ShuffleTruffle, DisLichen, LooseMorels, FoulToadstool, Chillterelle, Portlybella, MaxHeadshroom, Spankton, Kelptomaniac, Crookweed, ElectricEelgrass, Duckweed, OrcaOrchid, Sargassum, SubSeaRose, Snori, UpSeaDaisy, all;
var init_Florist = __esm({
  "node_modules/libram/dist/resources/2013/Florist.js": function() {
    import_kolmafia23 = require("kolmafia");
    init_modifier();
    init_property();
    init_template_string();
    init_utils();
    Flower = /* @__PURE__ */ function() {
      function Flower2(name, id, environment, modifier) {
        var territorial = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
        _classCallCheck8(this, Flower2);
        _defineProperty9(this, "name", void 0);
        _defineProperty9(this, "id", void 0);
        _defineProperty9(this, "environment", void 0);
        _defineProperty9(this, "modifier", void 0);
        _defineProperty9(this, "territorial", void 0);
        this.name = name;
        this.id = id;
        this.environment = environment;
        this.modifier = modifier;
        this.territorial = territorial;
      }
      _createClass8(Flower2, [{
        key: "isPlantedHere",
        value: function isPlantedHere() {
          var _get3, _Flower$plantNamesInZ;
          var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (_get3 = get("lastAdventure")) !== null && _get3 !== void 0 ? _get3 : $location.none;
          var plantedHere = (_Flower$plantNamesInZ = Flower2.plantNamesInZone(location)) === null || _Flower$plantNamesInZ === void 0 ? void 0 : _Flower$plantNamesInZ.includes(this.name);
          return plantedHere !== void 0 && plantedHere;
        }
      }, {
        key: "available",
        value: function available6() {
          var _get22;
          var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (_get22 = get("lastAdventure")) !== null && _get22 !== void 0 ? _get22 : $location.none;
          return this.environment === location.environment && !get("_floristPlantsUsed").includes(this.name) && !this.isPlantedHere(location);
        }
      }, {
        key: "dig",
        value: function dig() {
          if (!this.isPlantedHere()) return false;
          var flowers = Flower2.plantNamesInZone();
          if (!flowers[2]) return false;
          var plantNumber = flowers.indexOf(this.name);
          Flower2.visit();
          (0, import_kolmafia23.runChoice)(2, "plnti=".concat(plantNumber));
          return !this.isPlantedHere();
        }
      }, {
        key: "plant",
        value: function plant() {
          if (this.isPlantedHere()) return true;
          if (isFull()) return false;
          Flower2.visit();
          (0, import_kolmafia23.runChoice)(1, "plant=".concat(this.id));
          return this.isPlantedHere();
        }
      }], [{
        key: "visit",
        value: function visit() {
          (0, import_kolmafia23.visitUrl)("place.php?whichplace=forestvillage&action=fv_friar");
        }
      }, {
        key: "plantNamesInZone",
        value: function plantNamesInZone() {
          var _get3, _getFloristPlants$loc;
          var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (_get3 = get("lastAdventure")) !== null && _get3 !== void 0 ? _get3 : $location.none;
          return (_getFloristPlants$loc = (0, import_kolmafia23.getFloristPlants)()[location.toString()]) !== null && _getFloristPlants$loc !== void 0 ? _getFloristPlants$loc : [];
        }
      }, {
        key: "plantsInZone",
        value: function plantsInZone() {
          var _get4;
          var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (_get4 = get("lastAdventure")) !== null && _get4 !== void 0 ? _get4 : $location.none;
          return this.plantNamesInZone(location).map(function(flowerName) {
            return toFlower(flowerName);
          }).filter(notNull);
        }
      }, {
        key: "modifiersInZone",
        value: function modifiersInZone() {
          var _get5;
          var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (_get5 = get("lastAdventure")) !== null && _get5 !== void 0 ? _get5 : $location.none;
          var plants = this.plantsInZone(location);
          if (!plants) return {};
          var modifiers = plants.map(function(plant) {
            return plant.modifier;
          }).map(function(modifier) {
            return typeof modifier === "string" ? {} : modifier;
          });
          return mergeModifiers.apply(void 0, _toConsumableArray11(modifiers));
        }
      }]);
      return Flower2;
    }();
    RabidDogwood = new Flower("Rabid Dogwood", 1, "outdoor", {
      "Monster Level": 30
    }, true);
    Rutabeggar = new Flower("Rutabeggar", 2, "outdoor", {
      "Item Drop": 25
    }, true);
    RadishRadish = new Flower("Rad-ish Radish", 3, "outdoor", {
      "Moxie Experience": 5
    }, true);
    Artichoker = new Flower("Artichoker", 4, "outdoor", "Delevels Enemy");
    SmokeRa = new Flower("Smoke-ra", 5, "outdoor", "Blocks Attacks");
    SkunkCabbage = new Flower("Skunk Cabbage", 6, "outdoor", {
      "Stench Damage": 12.5
    });
    DeadlyCinnamon = new Flower("Deadly Cinnamon", 7, "outdoor", {
      "Hot Damage": 12.5
    });
    CeleryStalker = new Flower("Celery Stalker", 8, "outdoor", {
      "Spooky Damage": 12.5
    });
    LettuceSpray = new Flower("Lettus Spray", 9, "outdoor", {
      "HP Regen Min": 10,
      "HP Regen Max": 29
    });
    SeltzerWatercress = new Flower("Seltzer Watercress", 10, "outdoor", {
      "MP Regen Min": 5,
      "MP Regen Max": 15
    });
    WarLily = new Flower("War Lily", 11, "indoor", {
      "Monster Level": 30
    }, true);
    StealingMagnolia = new Flower("Stealing Magnolia", 12, "indoor", {
      "Item Drop": 25
    }, true);
    CannedSpinach = new Flower("Canned Spinach", 13, "indoor", {
      "Muscle Experience": 5
    }, true);
    Impatiens = new Flower("Impatiens", 14, "indoor", {
      Initiative: 25
    });
    SpiderPlant = new Flower("Spider Plant", 15, "indoor", "Poison");
    RedFern = new Flower("Red Fern", 16, "indoor", "Delevels Enemy");
    BamBoo = new Flower("BamBOO!", 17, "indoor", {
      "Spooky Damage": 12.5
    });
    ArcticMoss = new Flower("Arctic Moss", 18, "indoor", {
      "Cold Damage": 12.5
    });
    AloeGuvnor = new Flower("Aloe Guv'nor", 19, "indoor", {
      "HP Regen Min": 10,
      "HP Regen Max": 30
    });
    PitcherPlant = new Flower("Pitcher Plant", 20, "indoor", {
      "MP Regen Min": 5,
      "MP Regen Max": 15
    });
    BlusteryPuffball = new Flower("Blustery Puffball", 21, "underground", {
      "Monster Level": 30
    }, true);
    HornOfPlenty = new Flower("Horn of Plenty", 22, "underground", {
      "Item Drop": 25
    }, true);
    WizardsWig = new Flower("Wizard's Wig", 23, "underground", {
      "Mysticality Experience": 5
    }, true);
    ShuffleTruffle = new Flower("Shuffle Truffle", 24, "underground", {
      Initiative: 25
    });
    DisLichen = new Flower("Dis Lichen", 25, "underground", "Delevels Enemy");
    LooseMorels = new Flower("Loose Morels", 26, "underground", {
      "Sleaze Damage": 12.5
    });
    FoulToadstool = new Flower("Foul Toadstool", 27, "underground", {
      "Stench Damage": 12.5
    });
    Chillterelle = new Flower("Chillterelle", 28, "underground", {
      "Cold Damage": 12.5
    });
    Portlybella = new Flower("Portlybella", 29, "underground", {
      "HP Regen Min": 10,
      "HP Regen Max": 30
    });
    MaxHeadshroom = new Flower("Max Headshroom", 30, "underground", {
      "MP Regen Min": 5,
      "MP Regen Max": 15
    });
    Spankton = new Flower("Spankton", 31, "underwater", "Delevels Enemy", true);
    Kelptomaniac = new Flower("Kelptomaniac", 32, "underwater", {
      "Item Drop": 40
    }, true);
    Crookweed = new Flower("Crookweed", 33, "underwater", {
      "Meat Drop": 60
    }, true);
    ElectricEelgrass = new Flower("Electric Eelgrass", 34, "underwater", "Blocks Attacks");
    Duckweed = new Flower("Duckweed", 35, "underwater", "Blocks Attacks");
    OrcaOrchid = new Flower("Orca Orchid", 36, "underwater", {
      "Weapon Damage": 12.5
    });
    Sargassum = new Flower("Sargassum", 37, "underwater", {
      "Stench Damage": 12.5
    });
    SubSeaRose = new Flower("Sub-Sea Rose", 38, "underwater", {
      "Cold Damage": 12.5
    });
    Snori = new Flower("Snori", 39, "underwater", {
      "HP Regen Min": 20,
      "HP Regen Max": 30,
      "MP Regen Min": 10,
      "MP Regen Max": 20
    });
    UpSeaDaisy = new Flower("Up Sea Daisy", 40, "underwater", {
      Experience: 30
    });
    all = Object.freeze([RabidDogwood, Rutabeggar, RadishRadish, Artichoker, SmokeRa, SkunkCabbage, DeadlyCinnamon, CeleryStalker, LettuceSpray, SeltzerWatercress, WarLily, StealingMagnolia, CannedSpinach, Impatiens, SpiderPlant, RedFern, BamBoo, ArcticMoss, AloeGuvnor, PitcherPlant, BlusteryPuffball, HornOfPlenty, WizardsWig, ShuffleTruffle, DisLichen, LooseMorels, FoulToadstool, Chillterelle, Portlybella, MaxHeadshroom, Spankton, Kelptomaniac, Crookweed, ElectricEelgrass, Duckweed, OrcaOrchid, Sargassum, SubSeaRose, Snori, UpSeaDaisy]);
  }
});

// node_modules/libram/dist/resources/2013/JungMan.js
var JungMan_exports = {};
__export(JungMan_exports, {
  JAR_ITEMS: function() {
    return JAR_ITEMS;
  },
  Jar: function() {
    return Jar;
  },
  canJickJar: function() {
    return canJickJar;
  },
  have: function() {
    return have12;
  },
  makeJar: function() {
    return makeJar;
  }
});
function _slicedToArray7(arr, i) {
  return _arrayWithHoles7(arr) || _iterableToArrayLimit7(arr, i) || _unsupportedIterableToArray15(arr, i) || _nonIterableRest7();
}
function _nonIterableRest7() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray15(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray15(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray15(o, minLen);
}
function _arrayLikeToArray15(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit7(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles7(arr) {
  if (Array.isArray(arr)) return arr;
}
function _defineProperty10(obj, key, value) {
  key = _toPropertyKey11(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey11(t) {
  var i = _toPrimitive11(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive11(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral17(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have12() {
  return (0, import_kolmafia24.haveFamiliar)(familiar5);
}
function getJungUrl(jar) {
  var _PLACES$jar = _slicedToArray7(PLACES[jar], 2), page = _PLACES$jar[0], answer = _PLACES$jar[1];
  var question = page === "showplayer" ? "who" : "which".concat(page);
  var params = [["action", "jung"], ["whichperson", jar]];
  if (answer) params.push([question, answer]);
  return "".concat(page, ".php?").concat(params.map(function(pair) {
    return pair.join("=");
  }).join("&"));
}
function canJickJar() {
  if (get("_jickJarAvailable") === "unknown") (0, import_kolmafia24.visitUrl)("showplayer.php?who=1");
  return get("_jickJarAvailable") === "true" && !get("_psychoJarFilled");
}
function makeJar(jar) {
  if (jar === Jar.JICK && !canJickJar()) return false;
  var result = (0, import_kolmafia24.visitUrl)(getJungUrl(jar));
  return result.includes("You open up the jar and look into the patient's eyes.");
}
var import_kolmafia24, _templateObject120, _templateObject229, _templateObject327, _templateObject426, _templateObject516, _templateObject613, _templateObject710, _templateObject810, familiar5, Jar, PLACES, JAR_ITEMS;
var init_JungMan = __esm({
  "node_modules/libram/dist/resources/2013/JungMan.js": function() {
    import_kolmafia24 = require("kolmafia");
    init_property();
    init_template_string();
    familiar5 = $familiar(_templateObject120 || (_templateObject120 = _taggedTemplateLiteral17(["Angry Jung Man"])));
    (function(Jar2) {
      Jar2["SUSPICIOUS_GUY"] = "susguy";
      Jar2["GOURD_CAPTAIN"] = "gourdcaptain";
      Jar2["CRACKPOT_MYSTIC"] = "mystic";
      Jar2["OLD_MAN"] = "oldman";
      Jar2["PRETENTIOUS_ARTIST"] = "artist";
      Jar2["MEATSMITH"] = "meatsmith";
      Jar2["JICK"] = "jick";
    })(Jar || (Jar = {}));
    PLACES = _defineProperty10(_defineProperty10(_defineProperty10(_defineProperty10(_defineProperty10(_defineProperty10(_defineProperty10({}, Jar.PRETENTIOUS_ARTIST, ["place", "town_wrong"]), Jar.GOURD_CAPTAIN, ["place", "town_right"]), Jar.CRACKPOT_MYSTIC, ["shop", "mystic"]), Jar.OLD_MAN, ["place", "sea_oldman"]), Jar.MEATSMITH, ["shop", "meatsmith"]), Jar.JICK, ["showplayer", "1"]), Jar.SUSPICIOUS_GUY, ["tavern"]);
    JAR_ITEMS = _defineProperty10(_defineProperty10(_defineProperty10(_defineProperty10(_defineProperty10(_defineProperty10(_defineProperty10({}, Jar.SUSPICIOUS_GUY, $item(_templateObject229 || (_templateObject229 = _taggedTemplateLiteral17(["jar of psychoses (The Suspicious-Looking Guy)"])))), Jar.GOURD_CAPTAIN, $item(_templateObject327 || (_templateObject327 = _taggedTemplateLiteral17(["jar of psychoses (The Captain of the Gourd)"])))), Jar.CRACKPOT_MYSTIC, $item(_templateObject426 || (_templateObject426 = _taggedTemplateLiteral17(["jar of psychoses (The Crackpot Mystic)"])))), Jar.OLD_MAN, $item(_templateObject516 || (_templateObject516 = _taggedTemplateLiteral17(["jar of psychoses (The Old Man)"])))), Jar.PRETENTIOUS_ARTIST, $item(_templateObject613 || (_templateObject613 = _taggedTemplateLiteral17(["jar of psychoses (The Pretentious Artist)"])))), Jar.MEATSMITH, $item(_templateObject710 || (_templateObject710 = _taggedTemplateLiteral17(["jar of psychoses (The Meatsmith)"])))), Jar.JICK, $item(_templateObject810 || (_templateObject810 = _taggedTemplateLiteral17(["jar of psychoses (Jick)"]))));
  }
});

// node_modules/libram/dist/resources/2014/ConspiracyIsland.js
var ConspiracyIsland_exports = {};
__export(ConspiracyIsland_exports, {
  QUESTS: function() {
    return QUESTS;
  },
  activateOmega: function() {
    return activateOmega;
  },
  activateProtocol: function() {
    return activateProtocol;
  },
  completedOneTimeQuests: function() {
    return completedOneTimeQuests;
  },
  getOmega: function() {
    return getOmega;
  },
  getQuest: function() {
    return getQuest;
  },
  turnInQuest: function() {
    return turnInQuest;
  }
});
function _taggedTemplateLiteral18(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck9(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties9(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey12(descriptor.key), descriptor);
  }
}
function _createClass9(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties9(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties9(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty11(obj, key, value) {
  key = _toPropertyKey12(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey12(t) {
  var i = _toPrimitive12(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive12(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function completedOneTimeQuests() {
  return QUESTS.filter(function(q) {
    return q.isOneTime();
  }).every(function(q) {
    return q.isFinished();
  });
}
function activateProtocol(protocol) {
  (0, import_kolmafia25.visitUrl)("place.php?whichplace=airport_spooky_bunker&action=si_controlpanel");
  (0, import_kolmafia25.runChoice)(protocol);
}
function getOmega() {
  return get("controlPanelOmega");
}
function activateOmega() {
  var completeAllQuests = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  if (get("_controlPanelUsed")) {
    return;
  }
  for (var i = 1; i <= 9; i++) {
    var active = get("controlPanel".concat(i), false);
    if (!active) {
      activateProtocol(i);
      break;
    }
  }
  if (getOmega() < 99 || !completedOneTimeQuests() && completeAllQuests) return;
  activateProtocol(1);
  activateProtocol(10);
}
function visitRadio() {
  return (0, import_kolmafia25.visitUrl)("place.php?whichplace=airport_spooky&action=airport2_radio");
}
function getQuest() {
  var accept = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  var active = QUESTS.find(function(q) {
    return q.isActive();
  });
  if (active) return active;
  if (!accept) return null;
  var _loop = function _loop2() {
    var _QUESTS$find;
    var page = visitRadio();
    if (!(0, import_kolmafia25.handlingChoice)()) return {
      v: null
    };
    if (page.includes("try again tomorrow")) return {
      v: null
    };
    var quest = get("_questESp");
    if (quest !== "") return {
      v: (_QUESTS$find = QUESTS.find(function(q) {
        return q.prop === quest;
      })) !== null && _QUESTS$find !== void 0 ? _QUESTS$find : null
    };
  }, _ret;
  for (var i = 0; i < 11; i++) {
    _ret = _loop();
    if (_ret) return _ret.v;
  }
  return null;
}
function turnInQuest() {
  var quest = getQuest();
  if (!(quest !== null && quest !== void 0 && quest.isReadyToTurnIn())) return false;
  visitRadio();
  (0, import_kolmafia25.runChoice)(1);
  return quest.isFinished();
}
var import_kolmafia25, _templateObject121, _templateObject230, _templateObject328, _templateObject427, _templateObject517, _templateObject614, _templateObject711, _templateObject811, _templateObject910, _templateObject1010, _templateObject1110, ConspiracyQuest, QUESTS;
var init_ConspiracyIsland = __esm({
  "node_modules/libram/dist/resources/2014/ConspiracyIsland.js": function() {
    import_kolmafia25 = require("kolmafia");
    init_lib();
    init_maximize();
    init_property();
    init_template_string();
    ConspiracyQuest = /* @__PURE__ */ function() {
      function ConspiracyQuest2(prop, reward, complete, location, requirements) {
        _classCallCheck9(this, ConspiracyQuest2);
        _defineProperty11(this, "prop", void 0);
        _defineProperty11(this, "reward", void 0);
        _defineProperty11(this, "complete", void 0);
        _defineProperty11(this, "location", void 0);
        _defineProperty11(this, "requirements", void 0);
        this.prop = prop;
        this.reward = reward;
        this.complete = complete;
        this.location = location;
        this.requirements = requirements !== null && requirements !== void 0 ? requirements : new Requirement([], {});
      }
      _createClass9(ConspiracyQuest2, [{
        key: "isOneTime",
        value: function isOneTime() {
          return this.reward !== 30;
        }
      }, {
        key: "isStarted",
        value: function isStarted() {
          return questStep(this.prop) >= 0;
        }
      }, {
        key: "isFinished",
        value: function isFinished() {
          return questStep(this.prop) === 999;
        }
      }, {
        key: "isActive",
        value: function isActive() {
          return this.isStarted() && !this.isFinished();
        }
      }, {
        key: "isReadyToTurnIn",
        value: function isReadyToTurnIn() {
          return questStep(this.prop) === this.complete;
        }
      }]);
      return ConspiracyQuest2;
    }();
    QUESTS = [new ConspiracyQuest("questESpClipper", 20, 1, $location(_templateObject121 || (_templateObject121 = _taggedTemplateLiteral18(["The Mansion of Dr. Weirdeaux"])))), new ConspiracyQuest("questESpEVE", 30, 1, $location(_templateObject230 || (_templateObject230 = _taggedTemplateLiteral18(["The Secret Government Laboratory"])))), new ConspiracyQuest("questESpFakeMedium", 30, 1, $location(_templateObject328 || (_templateObject328 = _taggedTemplateLiteral18(["The Secret Government Laboratory"])))), new ConspiracyQuest("questESpGore", 20, 2, $location(_templateObject427 || (_templateObject427 = _taggedTemplateLiteral18(["The Secret Government Laboratory"]))), new Requirement(["Meat Drop"], {
      forceEquip: [$item(_templateObject517 || (_templateObject517 = _taggedTemplateLiteral18(["gore bucket"])))]
    })), new ConspiracyQuest("questESpJunglePun", 20, 2, $location(_templateObject614 || (_templateObject614 = _taggedTemplateLiteral18(["The Deep Dark Jungle"]))), new Requirement(["Mysticality"], {
      forceEquip: [$item(_templateObject711 || (_templateObject711 = _taggedTemplateLiteral18(["encrypted micro-cassette recorder"])))]
    })), new ConspiracyQuest("questESpOutOfOrder", 30, 2, $location(_templateObject811 || (_templateObject811 = _taggedTemplateLiteral18(["The Deep Dark Jungle"]))), new Requirement(["Initiative"], {
      forceEquip: [$item(_templateObject910 || (_templateObject910 = _taggedTemplateLiteral18(["GPS-tracking wristwatch"])))]
    })), new ConspiracyQuest("questESpSerum", 30, 1, $location(_templateObject1010 || (_templateObject1010 = _taggedTemplateLiteral18(["The Mansion of Dr. Weirdeaux"])))), new ConspiracyQuest("questESpSmokes", 30, 1, $location(_templateObject1110 || (_templateObject1110 = _taggedTemplateLiteral18(["The Deep Dark Jungle"]))))];
  }
});

// node_modules/libram/dist/resources/2014/CrimboShrub.js
var CrimboShrub_exports = {};
__export(CrimboShrub_exports, {
  decorate: function() {
    return decorate;
  },
  have: function() {
    return have13;
  }
});
function _taggedTemplateLiteral19(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have13() {
  return have($familiar(_templateObject128 || (_templateObject128 = _taggedTemplateLiteral19(["Crimbo Shrub"]))));
}
function isDecoratedWith(topper, lights, garland, gifts) {
  var decorations = [get("shrubTopper"), get("shrubLights"), get("shrubGarland"), get("shrubGifts")].map(function(x) {
    return Prefs[x];
  });
  return [topper, lights, garland, gifts].every(function(x, i) {
    return x === decorations[i];
  });
}
function decorate(topper, lights, garland, gifts) {
  if (!have13()) return false;
  if (get("_shrubDecorated")) return isDecoratedWith(topper, lights, garland, gifts);
  if (!have($item(_templateObject231 || (_templateObject231 = _taggedTemplateLiteral19(["box of old Crimbo decorations"]))))) {
    (0, import_kolmafia26.useFamiliar)($familiar(_templateObject329 || (_templateObject329 = _taggedTemplateLiteral19(["Crimbo Shrub"]))));
  }
  directlyUse($item(_templateObject428 || (_templateObject428 = _taggedTemplateLiteral19(["box of old Crimbo decorations"]))));
  (0, import_kolmafia26.visitUrl)("choice.php?whichchoice=999&pwd=&option=1&topper=".concat(Toppers[topper], "&lights=").concat(Lights[lights], "&garland=").concat(Garland[garland], "&gift=").concat(Gifts[gifts]));
  return isDecoratedWith(topper, lights, garland, gifts);
}
var import_kolmafia26, _templateObject128, _templateObject231, _templateObject329, _templateObject428, Toppers, Lights, Garland, Gifts, Prefs;
var init_CrimboShrub = __esm({
  "node_modules/libram/dist/resources/2014/CrimboShrub.js": function() {
    import_kolmafia26 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    Toppers = {
      Muscle: 1,
      Mysticality: 2,
      Moxie: 3
    };
    Lights = {
      "Prismatic Damage": 1,
      "Hot Damage": 2,
      "Cold Damage": 3,
      "Stench Damage": 4,
      "Spooky Damage": 5,
      "Sleaze Damage": 6
    };
    Garland = {
      "HP Regen": 1,
      "PvP Fights": 2,
      Blocking: 3
    };
    Gifts = {
      "Yellow Ray": 1,
      "Red Ray": 2,
      Gifts: 3
    };
    Prefs = {
      Muscle: "Muscle",
      Mysticality: "Mysticality",
      Moxie: "Moxie",
      Prismatic: "Prismatic Damage",
      Hot: "Hot Damage",
      Cold: "Cold Damage",
      Stench: "Stench Damage",
      Spooky: "Spooky Damage",
      Sleaze: "Sleaze Damage",
      HP: "HP Regen",
      PvP: "PvP Fights",
      blocking: "Blocking",
      yellow: "Yellow Ray",
      meat: "Red Ray",
      gifts: "Gifts"
    };
  }
});

// node_modules/libram/dist/resources/2014/DNALab.js
var DNALab_exports = {};
__export(DNALab_exports, {
  getEffect: function() {
    return getEffect2;
  },
  getTonic: function() {
    return getTonic;
  },
  have: function() {
    return have14;
  },
  hybridize: function() {
    return hybridize;
  },
  installed: function() {
    return installed2;
  },
  isHybridized: function() {
    return isHybridized;
  },
  makeTonic: function() {
    return makeTonic;
  },
  phylumFor: function() {
    return phylumFor;
  },
  tonicsLeft: function() {
    return tonicsLeft;
  }
});
function _slicedToArray8(arr, i) {
  return _arrayWithHoles8(arr) || _iterableToArrayLimit8(arr, i) || _unsupportedIterableToArray16(arr, i) || _nonIterableRest8();
}
function _nonIterableRest8() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray16(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray16(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray16(o, minLen);
}
function _arrayLikeToArray16(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit8(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles8(arr) {
  if (Array.isArray(arr)) return arr;
}
function _taggedTemplateLiteral20(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have14() {
  return have(lab) || (0, import_kolmafia27.getWorkshed)() === lab;
}
function installed2() {
  return (0, import_kolmafia27.getWorkshed)() === lab;
}
function isHybridized(tonic) {
  if (!tonic) return installed2() && get("_dnaHybrid");
  var tonicEffect = tonic instanceof import_kolmafia27.Effect ? tonic : tonic instanceof import_kolmafia27.Phylum ? getEffect2(tonic) : (0, import_kolmafia27.toEffect)(get2("Effect", tonic));
  return tonicEffects.includes(tonicEffect) && (0, import_kolmafia27.haveEffect)(tonicEffect) === 2147483647;
}
function getTonic(phylum) {
  var _phylaTonics$get;
  return (_phylaTonics$get = phylaTonics.get(phylum)) !== null && _phylaTonics$get !== void 0 ? _phylaTonics$get : $item.none;
}
function getEffect2(phylum) {
  var _phylaEffects$get;
  return (_phylaEffects$get = phylaEffects.get(phylum)) !== null && _phylaEffects$get !== void 0 ? _phylaEffects$get : $effect.none;
}
function phylumFor(dnatype) {
  if (dnatype instanceof import_kolmafia27.Effect) {
    var phylumPair = Array.from(phylaEffects.entries()).find(function(_ref) {
      var _ref2 = _slicedToArray8(_ref, 2), effect2 = _ref2[1];
      return effect2 === dnatype;
    });
    return phylumPair ? phylumPair[0] : null;
  } else {
    var _phylumPair = Array.from(phylaTonics.entries()).find(function(_ref3) {
      var _ref4 = _slicedToArray8(_ref3, 2), tonic = _ref4[1];
      return tonic === dnatype;
    });
    return _phylumPair ? _phylumPair[0] : null;
  }
}
function hybridize() {
  if (get("_dnaHybrid")) return false;
  if (!installed2()) return false;
  var currentSyringe = get("dnaSyringe");
  if (!currentSyringe) return false;
  var tonicPotion = getTonic(currentSyringe);
  var expectedEffect = (0, import_kolmafia27.toEffect)(get2("Effect", tonicPotion));
  (0, import_kolmafia27.cliExecute)("camp dnainject");
  return isHybridized(expectedEffect);
}
function makeTonic() {
  var amount2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
  if (!installed2()) return false;
  var currentSyringe = get("dnaSyringe");
  if (!currentSyringe) return false;
  var tonicPotion = getTonic(currentSyringe);
  var amountToMake = clamp(amount2, 0, tonicsLeft());
  var startingAmount = (0, import_kolmafia27.itemAmount)(tonicPotion);
  (0, import_kolmafia27.cliExecute)("camp dnapotion ".concat(amountToMake));
  return (0, import_kolmafia27.itemAmount)(tonicPotion) - startingAmount === amountToMake;
}
function tonicsLeft() {
  return clamp(3 - get("_dnaPotionsMade"), 0, 3);
}
var import_kolmafia27, _templateObject129, _templateObject237, _templateObject330, _templateObject429, _templateObject518, _templateObject615, _templateObject712, _templateObject812, _templateObject911, _templateObject1011, _templateObject1111, _templateObject1210, _templateObject138, _templateObject147, _templateObject157, _templateObject167, _templateObject177, _templateObject187, _templateObject197, _templateObject207, _templateObject2111, _templateObject2210, _templateObject238, _templateObject247, _templateObject257, _templateObject266, _templateObject276, _templateObject286, _templateObject296, _templateObject306, _templateObject3111, _templateObject3210, _templateObject336, _templateObject346, _templateObject356, _templateObject366, _templateObject376, _templateObject386, _templateObject396, _templateObject406, _templateObject4111, _templateObject4210, _templateObject436, _templateObject446, _templateObject455, _templateObject464, _templateObject474, _templateObject484, _templateObject494, _templateObject503, _templateObject519, _templateObject523, _templateObject533, _templateObject543, _templateObject553, _templateObject563, _templateObject573, _templateObject583, _templateObject593, _templateObject603, _templateObject616, _templateObject623, _templateObject633, _templateObject643, _templateObject653, _templateObject663, _templateObject673, _templateObject683, _templateObject693, _templateObject703, _templateObject713, _templateObject723, _templateObject733, _templateObject743, _templateObject753, _templateObject763, _templateObject773, _templateObject783, _templateObject792, _templateObject802, _templateObject813, _templateObject823, _templateObject833, _templateObject843, _templateObject853, lab, phylaEffects, phylaTonics, tonicEffects;
var init_DNALab = __esm({
  "node_modules/libram/dist/resources/2014/DNALab.js": function() {
    import_kolmafia27 = require("kolmafia");
    init_lib();
    init_modifier();
    init_property();
    init_template_string();
    init_utils();
    lab = $item(_templateObject129 || (_templateObject129 = _taggedTemplateLiteral20(["Little Geneticist DNA-Splicing Lab"])));
    phylaEffects = /* @__PURE__ */ new Map([[$phylum(_templateObject237 || (_templateObject237 = _taggedTemplateLiteral20(["beast"]))), $effect(_templateObject330 || (_templateObject330 = _taggedTemplateLiteral20(["Human-Beast Hybrid"])))], [$phylum(_templateObject429 || (_templateObject429 = _taggedTemplateLiteral20(["bug"]))), $effect(_templateObject518 || (_templateObject518 = _taggedTemplateLiteral20(["Human-Insect Hybrid"])))], [$phylum(_templateObject615 || (_templateObject615 = _taggedTemplateLiteral20(["constellation"]))), $effect(_templateObject712 || (_templateObject712 = _taggedTemplateLiteral20(["Human-Constellation Hybrid"])))], [$phylum(_templateObject812 || (_templateObject812 = _taggedTemplateLiteral20(["construct"]))), $effect(_templateObject911 || (_templateObject911 = _taggedTemplateLiteral20(["Human-Machine Hybrid"])))], [$phylum(_templateObject1011 || (_templateObject1011 = _taggedTemplateLiteral20(["demon"]))), $effect(_templateObject1111 || (_templateObject1111 = _taggedTemplateLiteral20(["Human-Demon Hybrid"])))], [$phylum(_templateObject1210 || (_templateObject1210 = _taggedTemplateLiteral20(["dude"]))), $effect(_templateObject138 || (_templateObject138 = _taggedTemplateLiteral20(["Human-Human Hybrid"])))], [$phylum(_templateObject147 || (_templateObject147 = _taggedTemplateLiteral20(["elemental"]))), $effect(_templateObject157 || (_templateObject157 = _taggedTemplateLiteral20(["Human-Elemental Hybrid"])))], [$phylum(_templateObject167 || (_templateObject167 = _taggedTemplateLiteral20(["elf"]))), $effect(_templateObject177 || (_templateObject177 = _taggedTemplateLiteral20(["Human-Elf Hybrid"])))], [$phylum(_templateObject187 || (_templateObject187 = _taggedTemplateLiteral20(["fish"]))), $effect(_templateObject197 || (_templateObject197 = _taggedTemplateLiteral20(["Human-Fish Hybrid"])))], [$phylum(_templateObject207 || (_templateObject207 = _taggedTemplateLiteral20(["goblin"]))), $effect(_templateObject2111 || (_templateObject2111 = _taggedTemplateLiteral20(["Human-Goblin Hybrid"])))], [$phylum(_templateObject2210 || (_templateObject2210 = _taggedTemplateLiteral20(["hippy"]))), $effect(_templateObject238 || (_templateObject238 = _taggedTemplateLiteral20(["Human-Hobo Hybrid"])))], [$phylum(_templateObject247 || (_templateObject247 = _taggedTemplateLiteral20(["horror"]))), $effect(_templateObject257 || (_templateObject257 = _taggedTemplateLiteral20(["Human-Horror Hybrid"])))], [$phylum(_templateObject266 || (_templateObject266 = _taggedTemplateLiteral20(["humanoid"]))), $effect(_templateObject276 || (_templateObject276 = _taggedTemplateLiteral20(["Human-Humanoid Hybrid"])))], [$phylum(_templateObject286 || (_templateObject286 = _taggedTemplateLiteral20(["mer-kin"]))), $effect(_templateObject296 || (_templateObject296 = _taggedTemplateLiteral20(["Human-Mer-kin Hybrid"])))], [$phylum(_templateObject306 || (_templateObject306 = _taggedTemplateLiteral20(["orc"]))), $effect(_templateObject3111 || (_templateObject3111 = _taggedTemplateLiteral20(["Human-Orc Hybrid"])))], [$phylum(_templateObject3210 || (_templateObject3210 = _taggedTemplateLiteral20(["penguin"]))), $effect(_templateObject336 || (_templateObject336 = _taggedTemplateLiteral20(["Human-Penguin Hybrid"])))], [$phylum(_templateObject346 || (_templateObject346 = _taggedTemplateLiteral20(["pirate"]))), $effect(_templateObject356 || (_templateObject356 = _taggedTemplateLiteral20(["Human-Pirate Hybrid"])))], [$phylum(_templateObject366 || (_templateObject366 = _taggedTemplateLiteral20(["plant"]))), $effect(_templateObject376 || (_templateObject376 = _taggedTemplateLiteral20(["Human-Plant Hybrid"])))], [$phylum(_templateObject386 || (_templateObject386 = _taggedTemplateLiteral20(["slime"]))), $effect(_templateObject396 || (_templateObject396 = _taggedTemplateLiteral20(["Human-Slime Hybrid"])))], [$phylum(_templateObject406 || (_templateObject406 = _taggedTemplateLiteral20(["undead"]))), $effect(_templateObject4111 || (_templateObject4111 = _taggedTemplateLiteral20(["Human-Undead Hybrid"])))], [$phylum(_templateObject4210 || (_templateObject4210 = _taggedTemplateLiteral20(["weird"]))), $effect(_templateObject436 || (_templateObject436 = _taggedTemplateLiteral20(["Human-Weird Thing Hybrid"])))]]);
    phylaTonics = /* @__PURE__ */ new Map([[$phylum(_templateObject446 || (_templateObject446 = _taggedTemplateLiteral20(["beast"]))), $item(_templateObject455 || (_templateObject455 = _taggedTemplateLiteral20(["Gene Tonic: Beast"])))], [$phylum(_templateObject464 || (_templateObject464 = _taggedTemplateLiteral20(["bug"]))), $item(_templateObject474 || (_templateObject474 = _taggedTemplateLiteral20(["Gene Tonic: Insect"])))], [$phylum(_templateObject484 || (_templateObject484 = _taggedTemplateLiteral20(["constellation"]))), $item(_templateObject494 || (_templateObject494 = _taggedTemplateLiteral20(["Gene Tonic: Constellation"])))], [$phylum(_templateObject503 || (_templateObject503 = _taggedTemplateLiteral20(["construct"]))), $item(_templateObject519 || (_templateObject519 = _taggedTemplateLiteral20(["Gene Tonic: Construct"])))], [$phylum(_templateObject523 || (_templateObject523 = _taggedTemplateLiteral20(["demon"]))), $item(_templateObject533 || (_templateObject533 = _taggedTemplateLiteral20(["Gene Tonic: Demon"])))], [$phylum(_templateObject543 || (_templateObject543 = _taggedTemplateLiteral20(["dude"]))), $item(_templateObject553 || (_templateObject553 = _taggedTemplateLiteral20(["Gene Tonic: Humanoid"])))], [$phylum(_templateObject563 || (_templateObject563 = _taggedTemplateLiteral20(["elemental"]))), $item(_templateObject573 || (_templateObject573 = _taggedTemplateLiteral20(["Gene Tonic: Elemental"])))], [$phylum(_templateObject583 || (_templateObject583 = _taggedTemplateLiteral20(["elf"]))), $item(_templateObject593 || (_templateObject593 = _taggedTemplateLiteral20(["Gene Tonic: Elf"])))], [$phylum(_templateObject603 || (_templateObject603 = _taggedTemplateLiteral20(["fish"]))), $item(_templateObject616 || (_templateObject616 = _taggedTemplateLiteral20(["Gene Tonic: Fish"])))], [$phylum(_templateObject623 || (_templateObject623 = _taggedTemplateLiteral20(["goblin"]))), $item(_templateObject633 || (_templateObject633 = _taggedTemplateLiteral20(["Gene Tonic: Goblin"])))], [$phylum(_templateObject643 || (_templateObject643 = _taggedTemplateLiteral20(["hippy"]))), $item(_templateObject653 || (_templateObject653 = _taggedTemplateLiteral20(["Gene Tonic: Hobo"])))], [$phylum(_templateObject663 || (_templateObject663 = _taggedTemplateLiteral20(["horror"]))), $item(_templateObject673 || (_templateObject673 = _taggedTemplateLiteral20(["Gene Tonic: Horror"])))], [$phylum(_templateObject683 || (_templateObject683 = _taggedTemplateLiteral20(["humanoid"]))), $item(_templateObject693 || (_templateObject693 = _taggedTemplateLiteral20(["Gene Tonic: Humanoid"])))], [$phylum(_templateObject703 || (_templateObject703 = _taggedTemplateLiteral20(["mer-kin"]))), $item(_templateObject713 || (_templateObject713 = _taggedTemplateLiteral20(["Gene Tonic: Mer-kin"])))], [$phylum(_templateObject723 || (_templateObject723 = _taggedTemplateLiteral20(["orc"]))), $item(_templateObject733 || (_templateObject733 = _taggedTemplateLiteral20(["Gene Tonic: Orc"])))], [$phylum(_templateObject743 || (_templateObject743 = _taggedTemplateLiteral20(["penguin"]))), $item(_templateObject753 || (_templateObject753 = _taggedTemplateLiteral20(["Gene Tonic: Penguin"])))], [$phylum(_templateObject763 || (_templateObject763 = _taggedTemplateLiteral20(["pirate"]))), $item(_templateObject773 || (_templateObject773 = _taggedTemplateLiteral20(["Gene Tonic: Pirate"])))], [$phylum(_templateObject783 || (_templateObject783 = _taggedTemplateLiteral20(["plant"]))), $item(_templateObject792 || (_templateObject792 = _taggedTemplateLiteral20(["Gene Tonic: Plant"])))], [$phylum(_templateObject802 || (_templateObject802 = _taggedTemplateLiteral20(["slime"]))), $item(_templateObject813 || (_templateObject813 = _taggedTemplateLiteral20(["Gene Tonic: Slime"])))], [$phylum(_templateObject823 || (_templateObject823 = _taggedTemplateLiteral20(["undead"]))), $item(_templateObject833 || (_templateObject833 = _taggedTemplateLiteral20(["Gene Tonic: Undead"])))], [$phylum(_templateObject843 || (_templateObject843 = _taggedTemplateLiteral20(["weird"]))), $item(_templateObject853 || (_templateObject853 = _taggedTemplateLiteral20(["Gene Tonic: Weird"])))]]);
    tonicEffects = Array.from(phylaEffects.values());
  }
});

// node_modules/libram/dist/resources/2014/WinterGarden.js
var WinterGarden_exports = {};
__export(WinterGarden_exports, {
  UnfinishedIceSculpture: function() {
    return UnfinishedIceSculpture;
  },
  couldUseUnfinishedIceSculpture: function() {
    return couldUseUnfinishedIceSculpture;
  },
  getUnfinishedIceSculptureMonster: function() {
    return getUnfinishedIceSculptureMonster;
  },
  have: function() {
    return have15;
  },
  haveUnfinishedIceSculpture: function() {
    return haveUnfinishedIceSculpture;
  },
  isUnfinishedIceSculptureUsed: function() {
    return isUnfinishedIceSculptureUsed;
  }
});
function _taggedTemplateLiteral21(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have15() {
  return haveInCampground($item(_templateObject130 || (_templateObject130 = _taggedTemplateLiteral21(["packet of winter seeds"]))));
}
function haveUnfinishedIceSculpture() {
  return have($item(_templateObject239 || (_templateObject239 = _taggedTemplateLiteral21(["unfinished ice sculpture"]))));
}
function isUnfinishedIceSculptureUsed() {
  return get("_iceSculptureUsed");
}
function couldUseUnfinishedIceSculpture() {
  return have($item(_templateObject331 || (_templateObject331 = _taggedTemplateLiteral21(["unfinished ice sculpture"])))) && !have($item(_templateObject430 || (_templateObject430 = _taggedTemplateLiteral21(["ice sculpture"]))));
}
function getUnfinishedIceSculptureMonster() {
  return get("iceSculptureMonster");
}
var _templateObject130, _templateObject239, _templateObject331, _templateObject430, UnfinishedIceSculpture;
var init_WinterGarden = __esm({
  "node_modules/libram/dist/resources/2014/WinterGarden.js": function() {
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    UnfinishedIceSculpture = new Copier(function() {
      return couldUseUnfinishedIceSculpture();
    }, null, function() {
      return couldUseUnfinishedIceSculpture();
    }, function() {
      return getUnfinishedIceSculptureMonster();
    });
  }
});

// node_modules/libram/dist/resources/2015/BarrelShrine.js
var BarrelShrine_exports = {};
__export(BarrelShrine_exports, {
  have: function() {
    return have16;
  },
  smashParty: function() {
    return smashParty;
  }
});
function _taggedTemplateLiteral22(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have16() {
  return get("barrelShrineUnlocked");
}
function smashParty() {
  if (!have16()) return;
  var total = sum(BARRELS, import_kolmafia28.availableAmount);
  if (total <= 0) return;
  (0, import_kolmafia28.visitUrl)("inv_use.php?pwd&whichitem=8568&choice=1");
  for (var i = 0; i < total / 100; i++) {
    (0, import_kolmafia28.runChoice)(2);
  }
}
var import_kolmafia28, _templateObject131, BARRELS;
var init_BarrelShrine = __esm({
  "node_modules/libram/dist/resources/2015/BarrelShrine.js": function() {
    import_kolmafia28 = require("kolmafia");
    init_property();
    init_template_string();
    init_utils();
    BARRELS = $items(_templateObject131 || (_templateObject131 = _taggedTemplateLiteral22(["little firkin, normal barrel, big tun, weathered barrel, dusty barrel, disintegrating barrel, moist barrel, rotting barrel, mouldering barrel, barnacled barrel"])));
  }
});

// node_modules/libram/dist/resources/2015/ChateauMantegna.js
var ChateauMantegna_exports = {};
__export(ChateauMantegna_exports, {
  ceilings: function() {
    return ceilings;
  },
  changeCeiling: function() {
    return changeCeiling;
  },
  changeDesk: function() {
    return changeDesk;
  },
  changeNightstand: function() {
    return changeNightstand;
  },
  desks: function() {
    return desks;
  },
  fightPainting: function() {
    return fightPainting;
  },
  getCeiling: function() {
    return getCeiling;
  },
  getDesk: function() {
    return getDesk;
  },
  getNightstand: function() {
    return getNightstand;
  },
  have: function() {
    return have17;
  },
  nightstands: function() {
    return nightstands;
  },
  paintingFought: function() {
    return paintingFought;
  },
  paintingMonster: function() {
    return paintingMonster;
  }
});
function have17() {
  return get("chateauAvailable");
}
function paintingMonster() {
  return get("chateauMonster");
}
function paintingFought() {
  return get("_chateauMonsterFought");
}
function fightPainting() {
  (0, import_kolmafia29.visitUrl)("place.php?whichplace=chateau&action=chateau_painting", false);
  return import_kolmafia29.runCombat.apply(void 0, arguments);
}
function getDesk() {
  var _desks$find;
  return (_desks$find = desks.find(function(desk) {
    return Object.keys((0, import_kolmafia29.getChateau)()).includes(desk);
  })) !== null && _desks$find !== void 0 ? _desks$find : null;
}
function getCeiling() {
  var _ceilings$find;
  return (_ceilings$find = ceilings.find(function(ceiling) {
    return Object.keys((0, import_kolmafia29.getChateau)()).includes(ceiling);
  })) !== null && _ceilings$find !== void 0 ? _ceilings$find : null;
}
function getNightstand() {
  var _nightstands$find;
  return (_nightstands$find = nightstands.find(function(nightstand) {
    return Object.keys((0, import_kolmafia29.getChateau)()).includes(nightstand);
  })) !== null && _nightstands$find !== void 0 ? _nightstands$find : null;
}
function changeDesk(desk) {
  if (getDesk() === desk) return true;
  if (!desks.includes(desk)) return false;
  (0, import_kolmafia29.buy)(import_kolmafia29.Item.get(desk));
  return getDesk() === desk;
}
function changeCeiling(ceiling) {
  if (getCeiling() === ceiling) return true;
  if (!ceilings.includes(ceiling)) return false;
  (0, import_kolmafia29.buy)(import_kolmafia29.Item.get(ceiling));
  return getCeiling() === ceiling;
}
function changeNightstand(nightstand) {
  if (getNightstand() === nightstand) return true;
  if (!nightstands.includes(nightstand)) return false;
  (0, import_kolmafia29.buy)(import_kolmafia29.Item.get(nightstand));
  return getNightstand() === nightstand;
}
var import_kolmafia29, desks, ceilings, nightstands;
var init_ChateauMantegna = __esm({
  "node_modules/libram/dist/resources/2015/ChateauMantegna.js": function() {
    import_kolmafia29 = require("kolmafia");
    init_property();
    desks = ["fancy stationery set", "Swiss piggy bank", "continental juice bar"];
    ceilings = ["antler chandelier", "ceiling fan", "artificial skylight"];
    nightstands = ["foreign language tapes", "bowl of potpourri", "electric muscle stimulator"];
  }
});

// node_modules/libram/dist/resources/2015/DeckOfEveryCard.js
var DeckOfEveryCard_exports = {};
__export(DeckOfEveryCard_exports, {
  cards: function() {
    return cards;
  },
  cheatCard: function() {
    return cheatCard;
  },
  getCardsDrawn: function() {
    return getCardsDrawn;
  },
  getCardsSeen: function() {
    return getCardsSeen;
  },
  getRemainingCheats: function() {
    return getRemainingCheats;
  },
  getRemainingDraws: function() {
    return getRemainingDraws;
  },
  have: function() {
    return have18;
  }
});
function _taggedTemplateLiteral23(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have18() {
  return have($item(_templateObject139 || (_templateObject139 = _taggedTemplateLiteral23(["Deck of Every Card"]))));
}
function getCardsDrawn() {
  return clamp(get("_deckCardsDrawn"), 0, 15);
}
function getRemainingDraws() {
  return 15 - getCardsDrawn();
}
function getRemainingCheats() {
  return Math.floor(getRemainingDraws() / 5);
}
function getCardsSeen() {
  return get("_deckCardsSeen") ? get("_deckCardsSeen").split("|") : [];
}
function cheatCard(card) {
  if (getCardsSeen().includes(card)) return true;
  if (getRemainingDraws() < 5) return false;
  return (0, import_kolmafia30.cliExecute)("cheat ".concat(card));
}
var import_kolmafia30, _templateObject139, cards;
var init_DeckOfEveryCard = __esm({
  "node_modules/libram/dist/resources/2015/DeckOfEveryCard.js": function() {
    import_kolmafia30 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    cards = Object.freeze(["X of Clubs", "X of Diamonds", "X of Hearts", "X of Spades", "X of Papayas", "X of Kumquats", "X of Salads", "X of Cups", "X of Coins", "X of Swords", "X of Wands", "XVI - The Tower", "Professor Plum", "Spare Tire", "Extra Tank", "Sheep", "Year of Plenty", "Mine", "Laboratory", "Plains", "Swamp", "Mountain", "Forest", "Island", "Lead Pipe", "Rope", "Wrench", "Candlestick", "Knife", "Revolver", "Gift Card", "1952 Mickey Mantle", "XXI - The World", "III - The Empress", "VI - The Lovers", "Healing Salve", "Dark Ritual", "Lightning Bolt", "Giant Growth", "Ancestral Recall", "XI - Strength", "I - The Magician", "0 - The Fool", "X - The Wheel of Fortune", "The Race Card", "Green Card", "IV - The Emperor", "IX - The Hermit", "Werewolf", "The Hive", "XVII - The Star", "VII - The Chariot", "XV - The Devil", "V - The Hierophant", "Fire Elemental", "Christmas Card", "Go Fish", "Goblin Sapper", "II - The High Priestess", "XIV - Temperance", "XVIII - The Moon", "Hunky Fireman Card", "Aquarius Horoscope", "XII - The Hanged Man", "Suit Warehouse Discount Card", "Pirate Birthday Card", "Plantable Greeting Card", "Slimer Trading Card", "XIII - Death", "Unstable Portal"]);
  }
});

// node_modules/libram/dist/resources/2015/Dinseylandfill.js
var Dinseylandfill_exports = {};
__export(Dinseylandfill_exports, {
  acceptQuest: function() {
    return acceptQuest;
  },
  activeQuest: function() {
    return activeQuest;
  },
  available: function() {
    return available;
  },
  canFightWartDinsey: function() {
    return canFightWartDinsey;
  },
  coasterNextTurn: function() {
    return coasterNextTurn;
  },
  disposeGarbage: function() {
    return disposeGarbage;
  },
  foughtWartDinseyThisLife: function() {
    return foughtWartDinseyThisLife;
  },
  hasActiveQuest: function() {
    return hasActiveQuest;
  },
  hasDisposedGarbage: function() {
    return hasDisposedGarbage;
  },
  hasQuest: function() {
    return hasQuest;
  },
  have: function() {
    return have19;
  },
  keyCardsLocations: function() {
    return keyCardsLocations;
  },
  questComplete: function() {
    return questComplete;
  },
  quests: function() {
    return quests;
  },
  turnInQuest: function() {
    return turnInQuest2;
  }
});
function _createForOfIteratorHelper6(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray17(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray17(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray17(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray17(o, minLen);
}
function _arrayLikeToArray17(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral24(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck10(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties10(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey13(descriptor.key), descriptor);
  }
}
function _createClass10(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties10(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties10(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty12(obj, key, value) {
  key = _toPropertyKey13(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey13(t) {
  var i = _toPrimitive13(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive13(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function have19() {
  return get("stenchAirportAlways");
}
function available() {
  return have19() || get("_stenchAirportToday");
}
function disposeGarbage() {
  if (hasDisposedGarbage()) {
    return false;
  }
  if (!hasDisposedGarbage() && have($item(_templateObject178 || (_templateObject178 = _taggedTemplateLiteral24(["bag of park garbage"]))))) {
    (0, import_kolmafia31.visitUrl)(maintUrl);
    (0, import_kolmafia31.runChoice)(6);
  }
  return hasDisposedGarbage();
}
function hasQuest() {
  return quests.some(function(q) {
    return q.currentQuest();
  });
}
function activeQuest() {
  return quests.find(function(q) {
    return q.currentQuest();
  }) || BLANK_QUEST;
}
function questComplete() {
  var quest = activeQuest();
  return quest !== BLANK_QUEST && get(quest.questStateProperty) === "finished";
}
function hasActiveQuest() {
  return hasQuest() && !questComplete();
}
function acceptQuest(priority) {
  var _quests$find$priority, _quests$find;
  if (hasQuest()) {
    return false;
  }
  var page = (0, import_kolmafia31.visitUrl)(kioskUrl);
  var choice = 6;
  var at = (0, import_kolmafia31.indexOf)(page, "Available Assignments");
  if (at == -1) {
    return false;
  }
  var jobs = [];
  quests.forEach(function(quest2) {
    jobs.push(quest2.name);
  });
  var priorityNum = typeof priority === "string" ? (_quests$find$priority = (_quests$find = quests.find(function(q) {
    return q.name === priority;
  })) === null || _quests$find === void 0 ? void 0 : _quests$find.priority) !== null && _quests$find$priority !== void 0 ? _quests$find$priority : 7 : priority;
  var availableJobs = [];
  var jobChoices = [["none", 999]];
  var _iterator = _createForOfIteratorHelper6(quests), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var quest = _step.value;
      var job = quest.name;
      var jobAt = (0, import_kolmafia31.indexOf)(page, job, at);
      if (jobAt != -1) {
        availableJobs.push(quest);
        jobChoices.push([job, jobAt]);
        break;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var bestJob = availableJobs.sort(function(a, b) {
    return a.priority - b.priority;
  })[0];
  var sortedChoices = jobChoices.sort(function(a, b) {
    return a[1] - b[1];
  });
  if (bestJob.priority <= priorityNum) {
    for (var index in sortedChoices) {
      var jobName = sortedChoices[index][0];
      if (jobName === bestJob.name) {
        choice = parseInt(index) + 1;
        break;
      }
    }
  }
  (0, import_kolmafia31.runChoice)(choice);
  return hasQuest();
}
function turnInQuest2() {
  if (questComplete()) {
    if (activeQuest().name === "racism") _set("questEStSocialJusticeI", "unstarted");
    (0, import_kolmafia31.visitUrl)(kioskUrl);
    (0, import_kolmafia31.runChoice)(3);
  }
}
function canFightWartDinsey() {
  return Array.from(keyCardsLocations.keys()).every(function(keycard) {
    return have(keycard);
  }) && !foughtWartDinseyThisLife() && getRemainingLiver() >= 0 && (0, import_kolmafia31.myAdventures)() > 0;
}
function coasterNextTurn() {
  return get("dinseyRollercoasterNext");
}
function foughtWartDinseyThisLife() {
  return get("lastWartDinseyDefeated") === (0, import_kolmafia31.myAscensions)();
}
function hasDisposedGarbage() {
  return get("_dinseyGarbageDisposed");
}
var import_kolmafia31, _templateObject140, _templateObject240, _templateObject337, _templateObject431, _templateObject520, _templateObject617, _templateObject714, _templateObject814, _templateObject912, _templateObject1012, _templateObject1112, _templateObject1211, _templateObject1310, _templateObject148, _templateObject158, _templateObject168, _templateObject178, _templateObject188, _templateObject198, _templateObject208, _templateObject2112, _templateObject2211, _templateObject2310, _templateObject248, _templateObject258, _templateObject267, _templateObject277, QuestData, kioskUrl, maintUrl, quests, BLANK_QUEST, keyCardsLocations;
var init_Dinseylandfill = __esm({
  "node_modules/libram/dist/resources/2015/Dinseylandfill.js": function() {
    import_kolmafia31 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    QuestData = /* @__PURE__ */ function() {
      function QuestData2(name, priority, questNameKiosk, questNameQuestLog, questStateProperty, questProgressProperty, questProgressLimit, canUseWanderers, requiredItem, questLocation) {
        _classCallCheck10(this, QuestData2);
        _defineProperty12(this, "name", void 0);
        _defineProperty12(this, "priority", void 0);
        _defineProperty12(this, "questNameKiosk", void 0);
        _defineProperty12(this, "questNameQuestLog", void 0);
        _defineProperty12(this, "questStateProperty", void 0);
        _defineProperty12(this, "questProgressProperty", void 0);
        _defineProperty12(this, "questProgressLimit", void 0);
        _defineProperty12(this, "canUseWanderers", void 0);
        _defineProperty12(this, "requiredItem", void 0);
        _defineProperty12(this, "questLocation", void 0);
        this.name = name;
        this.priority = priority;
        this.questNameKiosk = questNameKiosk;
        this.questNameQuestLog = questNameQuestLog;
        this.questStateProperty = questStateProperty;
        this.questProgressProperty = questProgressProperty;
        this.questProgressLimit = questProgressLimit;
        this.canUseWanderers = canUseWanderers;
        this.requiredItem = requiredItem;
        this.questLocation = questLocation;
      }
      _createClass10(QuestData2, [{
        key: "currentQuest",
        value: function currentQuest() {
          return get(this.questStateProperty) !== "unstarted";
        }
      }]);
      return QuestData2;
    }();
    kioskUrl = "place.php?whichplace=airport_stench&action=airport3_kiosk";
    maintUrl = "place.php?whichplace=airport_stench&action=airport3_tunnels";
    quests = [new QuestData("lube", 1, "Track Maintenance", "Super Luber", "questEStSuperLuber", "", 0, false, $item(_templateObject140 || (_templateObject140 = _taggedTemplateLiteral24(["lube-shoes"]))), $location(_templateObject240 || (_templateObject240 = _taggedTemplateLiteral24(["Barf Mountain"])))), new QuestData("fuel", 0, "Electrical Maintenance", "Give Me Fuel", "questEStGiveMeFuel", "", 0, false, $item(_templateObject337 || (_templateObject337 = _taggedTemplateLiteral24(["none"]))), $location(_templateObject431 || (_templateObject431 = _taggedTemplateLiteral24(["The Toxic Teacups"])))), new QuestData("sexism", 2, "Sexism Reduction", "Social Justice Adventurer I", "questEStSocialJusticeI", "dinseySocialJusticeIProgress", 15, true, $item(_templateObject520 || (_templateObject520 = _taggedTemplateLiteral24(["none"]))), $location(_templateObject617 || (_templateObject617 = _taggedTemplateLiteral24(["Pirates of the Garbage Barges"])))), new QuestData("racism", 3, "Racism Reduction", "Social Justice Adventurer II", "questEStSocialJusticeII", "dinseySocialJusticeIIProgress", 15, true, $item(_templateObject714 || (_templateObject714 = _taggedTemplateLiteral24(["none"]))), $location(_templateObject814 || (_templateObject814 = _taggedTemplateLiteral24(["Uncle Gator's Country Fun-Time Liquid Waste Sluice"])))), new QuestData("fun", 4, "Compulsory Fun", "Whistling Zippity-Doo-Dah", "questEStZippityDooDah", "dinseyFunProgress", 15, true, $item(_templateObject912 || (_templateObject912 = _taggedTemplateLiteral24(["Dinsey mascot mask"]))), $location(_templateObject1012 || (_templateObject1012 = _taggedTemplateLiteral24(["The Toxic Teacups"])))), new QuestData("trash", 6, "Waterway Debris Removal", "Teach a Man to Fish Trash", "questEStFishTrash", "dinseyFilthLevel", 0, true, $item(_templateObject1112 || (_templateObject1112 = _taggedTemplateLiteral24(["trash net"]))), $location(_templateObject1211 || (_templateObject1211 = _taggedTemplateLiteral24(["Pirates of the Garbage Barges"])))), new QuestData("bear", 5, "Bear Removal", "Nasty, Nasty Bears", "questEStNastyBears", "dinseyNastyBearsDefeated", 8, false, $item(_templateObject1310 || (_templateObject1310 = _taggedTemplateLiteral24(["none"]))), $location(_templateObject148 || (_templateObject148 = _taggedTemplateLiteral24(["Uncle Gator's Country Fun-Time Liquid Waste Sluice"])))), new QuestData("food", 7, "Guest Sustenance Assurance", "Will Work With Food", "questEStWorkWithFood", "dinseyTouristsFed", 30, false, $item(_templateObject158 || (_templateObject158 = _taggedTemplateLiteral24(["none"]))), $location(_templateObject168 || (_templateObject168 = _taggedTemplateLiteral24(["Barf Mountain"]))))];
    BLANK_QUEST = new QuestData("", -1, "", "", "", "", -1, false, $item(_templateObject188 || (_templateObject188 = _taggedTemplateLiteral24(["none"]))), $location(_templateObject198 || (_templateObject198 = _taggedTemplateLiteral24(["none"]))));
    keyCardsLocations = /* @__PURE__ */ new Map([[$item(_templateObject208 || (_templateObject208 = _taggedTemplateLiteral24(["keycard \u03B1"]))), $location(_templateObject2112 || (_templateObject2112 = _taggedTemplateLiteral24(["Barf Mountain"])))], [$item(_templateObject2211 || (_templateObject2211 = _taggedTemplateLiteral24(["keycard \u03B2"]))), $location(_templateObject2310 || (_templateObject2310 = _taggedTemplateLiteral24(["Pirates of the Garbage Barges"])))], [$item(_templateObject248 || (_templateObject248 = _taggedTemplateLiteral24(["keycard \u03B3"]))), $location(_templateObject258 || (_templateObject258 = _taggedTemplateLiteral24(["The Toxic Teacups"])))], [$item(_templateObject267 || (_templateObject267 = _taggedTemplateLiteral24(["keycard \u03B4"]))), $location(_templateObject277 || (_templateObject277 = _taggedTemplateLiteral24(["Uncle Gator's Country Fun-Time Liquid Waste Sluice"])))]]);
  }
});

// node_modules/libram/dist/resources/2015/MayoClinic.js
var MayoClinic_exports = {};
__export(MayoClinic_exports, {
  Mayo: function() {
    return Mayo;
  },
  have: function() {
    return have20;
  },
  installed: function() {
    return installed3;
  },
  setMayoMinder: function() {
    return setMayoMinder;
  }
});
function _taggedTemplateLiteral25(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function installed3() {
  return (0, import_kolmafia32.getWorkshed)() === $item(_templateObject521 || (_templateObject521 = _taggedTemplateLiteral25(["portable Mayo Clinic"])));
}
function have20() {
  return have($item(_templateObject618 || (_templateObject618 = _taggedTemplateLiteral25(["portable Mayo Clinic"])))) || installed3();
}
function setMayoMinder(mayo) {
  var quantity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  if ((0, import_kolmafia32.getWorkshed)() !== $item(_templateObject715 || (_templateObject715 = _taggedTemplateLiteral25(["portable Mayo Clinic"])))) return false;
  if (!Object.values(Mayo).includes(mayo)) {
    logger_default.error("Invalid mayo selected");
    return false;
  }
  if (get("mayoInMouth") && get("mayoInMouth") !== mayo.name) {
    logger_default.error("Currently have incorrect mayo in mouth");
    return false;
  }
  (0, import_kolmafia32.retrieveItem)(quantity, mayo);
  if (!have($item(_templateObject815 || (_templateObject815 = _taggedTemplateLiteral25(["Mayo Minder\u2122"]))))) (0, import_kolmafia32.buy)($item(_templateObject913 || (_templateObject913 = _taggedTemplateLiteral25(["Mayo Minder\u2122"]))));
  if (get("mayoMinderSetting") !== mayo.name) {
    withChoice(1076, mayo.id - 8260, function() {
      return (0, import_kolmafia32.use)($item(_templateObject1013 || (_templateObject1013 = _taggedTemplateLiteral25(["Mayo Minder\u2122"]))));
    });
  }
  return get("mayoMinderSetting") === mayo.name;
}
var import_kolmafia32, _templateObject141, _templateObject241, _templateObject338, _templateObject437, _templateObject521, _templateObject618, _templateObject715, _templateObject815, _templateObject913, _templateObject1013, Mayo;
var init_MayoClinic = __esm({
  "node_modules/libram/dist/resources/2015/MayoClinic.js": function() {
    import_kolmafia32 = require("kolmafia");
    init_lib();
    init_logger();
    init_property();
    init_template_string();
    Mayo = {
      nex: $item(_templateObject141 || (_templateObject141 = _taggedTemplateLiteral25(["Mayonex"]))),
      diol: $item(_templateObject241 || (_templateObject241 = _taggedTemplateLiteral25(["Mayodiol"]))),
      zapine: $item(_templateObject338 || (_templateObject338 = _taggedTemplateLiteral25(["Mayozapine"]))),
      flex: $item(_templateObject437 || (_templateObject437 = _taggedTemplateLiteral25(["Mayoflex"])))
    };
  }
});

// node_modules/libram/dist/resources/2016/GingerBread.js
var GingerBread_exports = {};
__export(GingerBread_exports, {
  LOCATIONS: function() {
    return LOCATIONS;
  },
  available: function() {
    return available2;
  },
  availableLocations: function() {
    return availableLocations;
  },
  canJudgeFudge: function() {
    return canJudgeFudge;
  },
  getMidnightChoiceId: function() {
    return getMidnightChoiceId;
  },
  getNoonChoiceId: function() {
    return getNoonChoiceId;
  },
  minutesToMidnight: function() {
    return minutesToMidnight;
  },
  minutesToNoon: function() {
    return minutesToNoon;
  }
});
function _taggedTemplateLiteral26(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function available2() {
  return (get("gingerbreadCityAvailable") || get("_gingerbreadCityToday")) && turns() < availableTurns();
}
function turns() {
  return get("_gingerbreadCityTurns") + (get("_gingerbreadClockAdvanced") ? 5 : 0);
}
function availableTurns() {
  return 20 + (get("gingerExtraAdventures") ? 10 : 0);
}
function minutesToMidnight() {
  return 19 - turns();
}
function minutesToNoon() {
  return 9 - turns();
}
function availableLocations() {
  return LOCATIONS.filter(function(l) {
    return (0, import_kolmafia33.canAdventure)(l);
  });
}
function getNoonChoiceId(location) {
  var _NOONS$get;
  return (_NOONS$get = NOONS.get(location)) !== null && _NOONS$get !== void 0 ? _NOONS$get : 0;
}
function getMidnightChoiceId(location) {
  var _MIDNIGHTS$get;
  return (_MIDNIGHTS$get = MIDNIGHTS.get(location)) !== null && _MIDNIGHTS$get !== void 0 ? _MIDNIGHTS$get : 0;
}
function canJudgeFudge() {
  if (minutesToNoon() >= 0) {
    return true;
  }
  if (minutesToMidnight() >= 0 && get("_gingerbreadColumnDestroyed")) {
    return true;
  }
  return false;
}
var import_kolmafia33, _templateObject149, _templateObject249, _templateObject339, _templateObject438, _templateObject524, _templateObject619, _templateObject716, _templateObject816, _templateObject914, LOCATIONS, NOONS, MIDNIGHTS;
var init_GingerBread = __esm({
  "node_modules/libram/dist/resources/2016/GingerBread.js": function() {
    import_kolmafia33 = require("kolmafia");
    init_property();
    init_template_string();
    LOCATIONS = Object.freeze($locations(_templateObject149 || (_templateObject149 = _taggedTemplateLiteral26(["Gingerbread Civic Center, Gingerbread Train Station, Gingerbread Industrial Zone, Gingerbread Upscale Retail District, Gingerbread Sewers"]))));
    NOONS = /* @__PURE__ */ new Map([[$location(_templateObject249 || (_templateObject249 = _taggedTemplateLiteral26(["Gingerbread Train Station"]))), 1204], [$location(_templateObject339 || (_templateObject339 = _taggedTemplateLiteral26(["Gingerbread Civic Center"]))), 1202], [$location(_templateObject438 || (_templateObject438 = _taggedTemplateLiteral26(["Gingerbread Industrial Zone"]))), 1206], [$location(_templateObject524 || (_templateObject524 = _taggedTemplateLiteral26(["Gingerbread Upscale Retail District"]))), 1208]]);
    MIDNIGHTS = /* @__PURE__ */ new Map([[$location(_templateObject619 || (_templateObject619 = _taggedTemplateLiteral26(["Gingerbread Train Station"]))), 1205], [$location(_templateObject716 || (_templateObject716 = _taggedTemplateLiteral26(["Gingerbread Civic Center"]))), 1203], [$location(_templateObject816 || (_templateObject816 = _taggedTemplateLiteral26(["Gingerbread Industrial Zone"]))), 1207], [$location(_templateObject914 || (_templateObject914 = _taggedTemplateLiteral26(["Gingerbread Upscale Retail District"]))), 1209]]);
  }
});

// node_modules/libram/dist/resources/2016/SourceTerminal.js
var SourceTerminal_exports = {};
__export(SourceTerminal_exports, {
  Buffs: function() {
    return Buffs;
  },
  Digitize: function() {
    return Digitize;
  },
  Items: function() {
    return Items;
  },
  RolloverBuffs: function() {
    return RolloverBuffs;
  },
  Skills: function() {
    return Skills;
  },
  canDigitize: function() {
    return canDigitize;
  },
  couldDigitize: function() {
    return couldDigitize;
  },
  duplicateUsesRemaining: function() {
    return duplicateUsesRemaining;
  },
  educate: function() {
    return educate;
  },
  enhance: function() {
    return enhance;
  },
  enhanceBuffDuration: function() {
    return enhanceBuffDuration;
  },
  enhanceUsesRemaining: function() {
    return enhanceUsesRemaining;
  },
  enquiry: function() {
    return enquiry;
  },
  enquiryBuffDuration: function() {
    return enquiryBuffDuration;
  },
  extrude: function() {
    return extrude;
  },
  getChips: function() {
    return getChips;
  },
  getDigitizeMonster: function() {
    return getDigitizeMonster;
  },
  getDigitizeMonsterCount: function() {
    return getDigitizeMonsterCount;
  },
  getDigitizeUses: function() {
    return getDigitizeUses;
  },
  getDigitizeUsesRemaining: function() {
    return getDigitizeUsesRemaining;
  },
  getDuplicateUses: function() {
    return getDuplicateUses;
  },
  getEnhanceUses: function() {
    return getEnhanceUses;
  },
  getMaximumDigitizeUses: function() {
    return getMaximumDigitizeUses;
  },
  getPortscanUses: function() {
    return getPortscanUses;
  },
  getSkills: function() {
    return getSkills;
  },
  have: function() {
    return have21;
  },
  isCurrentSkill: function() {
    return isCurrentSkill;
  },
  maximumDuplicateUses: function() {
    return maximumDuplicateUses;
  },
  maximumEnhanceUses: function() {
    return maximumEnhanceUses;
  },
  prepareDigitize: function() {
    return prepareDigitize;
  }
});
function _createForOfIteratorHelper7(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray18(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray18(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray18(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray18(o, minLen);
}
function _arrayLikeToArray18(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral27(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have21() {
  return haveInCampground(item);
}
function enhance(buff) {
  if (!Object.values(Buffs).includes(buff)) {
    return false;
  }
  return (0, import_kolmafia34.cliExecute)("terminal enhance ".concat(buff.name));
}
function enquiry(rolloverBuff) {
  if (!Object.values(RolloverBuffs).includes(rolloverBuff)) {
    return false;
  }
  return (0, import_kolmafia34.cliExecute)("terminal enquiry ".concat(rolloverBuff.name));
}
function educate(skills3) {
  var skillsArray = Array.isArray(skills3) ? skills3.slice(0, 2) : [skills3];
  if (arrayEquals(skillsArray, getSkills())) return true;
  var _iterator = _createForOfIteratorHelper7(skillsArray), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var skill = _step.value;
      if (!Object.values(Skills).includes(skill)) return false;
      (0, import_kolmafia34.cliExecute)("terminal educate ".concat(skill.name.toLowerCase(), ".edu"));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return true;
}
function getSkills() {
  return ["sourceTerminalEducate1", "sourceTerminalEducate2"].map(function(p) {
    return get(p);
  }).filter(Boolean).map(function(s) {
    return import_kolmafia34.Skill.get(s.slice(0, -4));
  });
}
function isCurrentSkill(skills3) {
  var currentSkills = getSkills();
  var skillsArray = Array.isArray(skills3) ? skills3.slice(0, 2) : [skills3];
  return skillsArray.every(function(skill) {
    return currentSkills.includes(skill);
  });
}
function extrude(item14) {
  var fileName = Items.get(item14);
  if (!fileName) return false;
  return (0, import_kolmafia34.cliExecute)("terminal extrude ".concat(fileName));
}
function getChips() {
  return get("sourceTerminalChips").split(",");
}
function getDigitizeUses() {
  return get("_sourceTerminalDigitizeUses");
}
function getDigitizeMonster() {
  return get("_sourceTerminalDigitizeMonster");
}
function getDigitizeMonsterCount() {
  return get("_sourceTerminalDigitizeMonsterCount");
}
function getMaximumDigitizeUses() {
  var chips = getChips();
  return 1 + (chips.includes("TRAM") ? 1 : 0) + (chips.includes("TRIGRAM") ? 1 : 0);
}
function getDigitizeUsesRemaining() {
  return getMaximumDigitizeUses() - getDigitizeUses();
}
function couldDigitize() {
  return getDigitizeUses() < getMaximumDigitizeUses();
}
function prepareDigitize() {
  if (!isCurrentSkill(Skills.Digitize)) {
    return educate(Skills.Digitize);
  }
  return true;
}
function canDigitize() {
  return couldDigitize() && getSkills().includes(Skills.Digitize);
}
function getDuplicateUses() {
  return get("_sourceTerminalDuplicateUses");
}
function getEnhanceUses() {
  return get("_sourceTerminalEnhanceUses");
}
function getPortscanUses() {
  return get("_sourceTerminalPortscanUses");
}
function maximumDuplicateUses() {
  return (0, import_kolmafia34.myPath)() === import_kolmafia34.Path.get("The Source") ? 5 : 1;
}
function duplicateUsesRemaining() {
  return maximumDuplicateUses() - getDuplicateUses();
}
function maximumEnhanceUses() {
  return 1 + getChips().filter(function(chip) {
    return ["CRAM", "SCRAM"].includes(chip);
  }).length;
}
function enhanceUsesRemaining() {
  return maximumEnhanceUses() - getEnhanceUses();
}
function enhanceBuffDuration() {
  return 25 + get("sourceTerminalPram") * 5 + (getChips().includes("INGRAM") ? 25 : 0);
}
function enquiryBuffDuration() {
  return 50 + 10 * get("sourceTerminalGram") + (getChips().includes("DIAGRAM") ? 50 : 0);
}
var import_kolmafia34, _templateObject150, _templateObject250, _templateObject340, _templateObject439, _templateObject525, _templateObject620, _templateObject717, _templateObject817, _templateObject915, _templateObject1014, _templateObject1113, _templateObject1212, _templateObject1311, _templateObject1410, _templateObject159, _templateObject169, _templateObject179, _templateObject189, _templateObject199, _templateObject209, _templateObject2113, _templateObject2212, _templateObject2311, _templateObject2410, _templateObject259, _templateObject268, _templateObject278, item, Buffs, RolloverBuffs, Skills, Items, Digitize;
var init_SourceTerminal = __esm({
  "node_modules/libram/dist/resources/2016/SourceTerminal.js": function() {
    import_kolmafia34 = require("kolmafia");
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item = $item(_templateObject150 || (_templateObject150 = _taggedTemplateLiteral27(["Source terminal"])));
    Buffs = {
      Items: $effect(_templateObject250 || (_templateObject250 = _taggedTemplateLiteral27(["items.enh"]))),
      Meat: $effect(_templateObject340 || (_templateObject340 = _taggedTemplateLiteral27(["meat.enh"]))),
      Init: $effect(_templateObject439 || (_templateObject439 = _taggedTemplateLiteral27(["init.enh"]))),
      Critical: $effect(_templateObject525 || (_templateObject525 = _taggedTemplateLiteral27(["critical.enh"]))),
      Damage: $effect(_templateObject620 || (_templateObject620 = _taggedTemplateLiteral27(["damage.enh"]))),
      Substats: $effect(_templateObject717 || (_templateObject717 = _taggedTemplateLiteral27(["substats.enh"])))
    };
    RolloverBuffs = {
      /** +5 Familiar Weight */
      Familiar: $effect(_templateObject817 || (_templateObject817 = _taggedTemplateLiteral27(["familiar.enq"]))),
      /** +25 ML */
      Monsters: $effect(_templateObject915 || (_templateObject915 = _taggedTemplateLiteral27(["monsters.enq"]))),
      /** +5 Prismatic Resistance */
      Protect: $effect(_templateObject1014 || (_templateObject1014 = _taggedTemplateLiteral27(["protect.enq"]))),
      /** +100% Muscle, +100% Mysticality, +100% Moxie */
      Stats: $effect(_templateObject1113 || (_templateObject1113 = _taggedTemplateLiteral27(["stats.enq"])))
    };
    Skills = {
      /** Collect Source essence from enemies once per combat */
      Extract: $skill(_templateObject1212 || (_templateObject1212 = _taggedTemplateLiteral27(["Extract"]))),
      /** Stagger and create a wandering monster 1-3 times per day */
      Digitize: $skill(_templateObject1311 || (_templateObject1311 = _taggedTemplateLiteral27(["Digitize"]))),
      /** Stagger and deal 25% of enemy HP in damage once per combat */
      Compress: $skill(_templateObject1410 || (_templateObject1410 = _taggedTemplateLiteral27(["Compress"]))),
      /** Double monster's HP, attack, defence, attacks per round and item drops once per fight and once per day (five in The Source) */
      Duplicate: $skill(_templateObject159 || (_templateObject159 = _taggedTemplateLiteral27(["Duplicate"]))),
      /** Causes government agent/Source Agent wanderer next turn once per combat and three times per day */
      Portscan: $skill(_templateObject169 || (_templateObject169 = _taggedTemplateLiteral27(["Portscan"]))),
      /** Increase Max MP by 100% and recover 1000 MP once per combat with a 30 turn cooldown */
      Turbo: $skill(_templateObject179 || (_templateObject179 = _taggedTemplateLiteral27(["Turbo"])))
    };
    Items = /* @__PURE__ */ new Map([[$item(_templateObject189 || (_templateObject189 = _taggedTemplateLiteral27(["browser cookie"]))), "food.ext"], [$item(_templateObject199 || (_templateObject199 = _taggedTemplateLiteral27(["hacked gibson"]))), "booze.ext"], [$item(_templateObject209 || (_templateObject209 = _taggedTemplateLiteral27(["Source shades"]))), "goggles.ext"], [$item(_templateObject2113 || (_templateObject2113 = _taggedTemplateLiteral27(["Source terminal GRAM chip"]))), "gram.ext"], [$item(_templateObject2212 || (_templateObject2212 = _taggedTemplateLiteral27(["Source terminal PRAM chip"]))), "pram.ext"], [$item(_templateObject2311 || (_templateObject2311 = _taggedTemplateLiteral27(["Source terminal SPAM chip"]))), "spam.ext"], [$item(_templateObject2410 || (_templateObject2410 = _taggedTemplateLiteral27(["Source terminal CRAM chip"]))), "cram.ext"], [$item(_templateObject259 || (_templateObject259 = _taggedTemplateLiteral27(["Source terminal DRAM chip"]))), "dram.ext"], [$item(_templateObject268 || (_templateObject268 = _taggedTemplateLiteral27(["Source terminal TRAM chip"]))), "tram.ext"], [$item(_templateObject278 || (_templateObject278 = _taggedTemplateLiteral27(["software bug"]))), "familiar.ext"]]);
    Digitize = new Copier(function() {
      return couldDigitize();
    }, function() {
      return prepareDigitize();
    }, function() {
      return canDigitize();
    }, function() {
      return getDigitizeMonster();
    });
  }
});

// node_modules/libram/dist/resources/2016/Witchess.js
var Witchess_exports = {};
__export(Witchess_exports, {
  fightPiece: function() {
    return fightPiece;
  },
  fightsDone: function() {
    return fightsDone;
  },
  have: function() {
    return have22;
  },
  pieces: function() {
    return pieces;
  }
});
function _taggedTemplateLiteral28(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have22() {
  return haveInCampground(item2);
}
function fightsDone() {
  return get("_witchessFights");
}
function fightPiece(piece) {
  if (!pieces.includes(piece)) throw new Error("That is not a valid piece.");
  if (!(0, import_kolmafia35.visitUrl)("campground.php?action=witchess").includes("whichchoice value=1181")) {
    throw new Error("Failed to open Witchess.");
  }
  if (!(0, import_kolmafia35.runChoice)(1).includes("whichchoice=1182")) {
    throw new Error("Failed to visit shrink ray.");
  }
  if (!(0, import_kolmafia35.visitUrl)("choice.php?option=1&pwd=".concat((0, import_kolmafia35.myHash)(), "&whichchoice=1182&piece=").concat(piece.id), false).includes(piece.name)) {
    throw new Error("Failed to start fight.");
  }
  for (var _len = arguments.length, combatParams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    combatParams[_key - 1] = arguments[_key];
  }
  return import_kolmafia35.runCombat.apply(void 0, combatParams);
}
var import_kolmafia35, _templateObject151, item2, pieces;
var init_Witchess = __esm({
  "node_modules/libram/dist/resources/2016/Witchess.js": function() {
    import_kolmafia35 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item2 = $item(_templateObject151 || (_templateObject151 = _taggedTemplateLiteral28(["Witchess Set"])));
    pieces = import_kolmafia35.Monster.get(["Witchess Pawn", "Witchess Knight", "Witchess Bishop", "Witchess Rook", "Witchess Queen", "Witchess King", "Witchess Witch", "Witchess Ox"]);
  }
});

// node_modules/libram/dist/resources/2017/Horsery.js
var Horsery_exports = {};
__export(Horsery_exports, {
  changeHorse: function() {
    return changeHorse;
  },
  crazyHorseStats: function() {
    return crazyHorseStats;
  },
  current: function() {
    return current;
  },
  have: function() {
    return have23;
  }
});
function have23() {
  return get("horseryAvailable");
}
function current() {
  var horse = get("_horsery");
  return horse ? horse.split(" ")[0] : null;
}
function changeHorse(horse) {
  if (horse === current()) return true;
  if (!have23()) return false;
  (0, import_kolmafia36.cliExecute)("horsery ".concat(horse));
  return current() === horse;
}
function crazyHorseStats() {
  if (!have23()) return {};
  if (!get("_horseryCrazyName")) {
    (0, import_kolmafia36.visitUrl)("place.php?whichplace=town_right&action=town_horsery");
  }
  return {
    "Mysticality Percent": Number(get("_horseryCrazyMys")),
    "Muscle Percent": Number(get("_horseryCrazyMus")),
    "Moxie Percent": Number(get("_horseryCrazyMox"))
  };
}
var import_kolmafia36;
var init_Horsery = __esm({
  "node_modules/libram/dist/resources/2017/Horsery.js": function() {
    import_kolmafia36 = require("kolmafia");
    init_property();
  }
});

// node_modules/libram/dist/resources/2017/MummingTrunk.js
var MummingTrunk_exports = {};
__export(MummingTrunk_exports, {
  currentCostumes: function() {
    return currentCostumes;
  }
});
function _slicedToArray9(arr, i) {
  return _arrayWithHoles9(arr) || _iterableToArrayLimit9(arr, i) || _unsupportedIterableToArray19(arr, i) || _nonIterableRest9();
}
function _nonIterableRest9() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray19(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray19(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray19(o, minLen);
}
function _arrayLikeToArray19(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit9(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles9(arr) {
  if (Array.isArray(arr)) return arr;
}
function currentCostumes() {
  return new Map(Object.entries((0, import_kolmafia37.splitModifiers)(get("_mummeryMods"))).map(function(_ref) {
    var _ref2 = _slicedToArray9(_ref, 2), modifier = _ref2[0], value = _ref2[1];
    if (!isNumericModifier(modifier)) return null;
    var matcher = value.match(MUMMERY_MODS_PATTERN);
    if (!matcher) return null;
    return [import_kolmafia37.Familiar.get(matcher[2]), [modifier, Number(matcher[1])]];
  }).filter(notNull));
}
var import_kolmafia37, MUMMERY_MODS_PATTERN;
var init_MummingTrunk = __esm({
  "node_modules/libram/dist/resources/2017/MummingTrunk.js": function() {
    import_kolmafia37 = require("kolmafia");
    init_property();
    init_utils();
    init_modifier();
    MUMMERY_MODS_PATTERN = /\[(\d*)\*fam\(([^)]*)\)/;
  }
});

// node_modules/libram/dist/resources/2017/Pantogram.js
var Pantogram_exports = {};
__export(Pantogram_exports, {
  findRequirements: function() {
    return findRequirements;
  },
  have: function() {
    return have24;
  },
  havePants: function() {
    return havePants;
  },
  makePants: function() {
    return makePants;
  },
  makePantsFromObject: function() {
    return makePantsFromObject;
  }
});
function _slicedToArray10(arr, i) {
  return _arrayWithHoles10(arr) || _iterableToArrayLimit10(arr, i) || _unsupportedIterableToArray20(arr, i) || _nonIterableRest10();
}
function _nonIterableRest10() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray20(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray20(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray20(o, minLen);
}
function _arrayLikeToArray20(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit10(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles10(arr) {
  if (Array.isArray(arr)) return arr;
}
function _defineProperty13(obj, key, value) {
  key = _toPropertyKey14(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey14(t) {
  var i = _toPrimitive14(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive14(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral29(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have24() {
  return have(pantogram);
}
function havePants() {
  return have(pants);
}
function getLeftSacPair(mod) {
  return LeftSacrifice[mod];
}
function getMiddleSacPair(mod) {
  return MiddleSacrifice[mod];
}
function getRightSacPair(mod) {
  return RightSacrifice[mod];
}
function findRequirements(modifiers) {
  var leftSac = modifiers.leftSac, rightSac = modifiers.rightSac, middleSac = modifiers.middleSac;
  var returnValue = /* @__PURE__ */ new Map();
  if (leftSac) {
    var _getLeftSacPair = getLeftSacPair(leftSac), _getLeftSacPair2 = _slicedToArray10(_getLeftSacPair, 2), sacrifice = _getLeftSacPair2[0], quantity = _getLeftSacPair2[1];
    if (sacrifice instanceof import_kolmafia38.Item) {
      returnValue.set(sacrifice, quantity);
    }
  }
  if (rightSac) {
    var _getRightSacPair = getRightSacPair(rightSac), _getRightSacPair2 = _slicedToArray10(_getRightSacPair, 2), _sacrifice = _getRightSacPair2[0], _quantity = _getRightSacPair2[1];
    if (_sacrifice instanceof import_kolmafia38.Item) {
      returnValue.set(_sacrifice, _quantity);
    }
  }
  if (middleSac) {
    var _getMiddleSacPair = getMiddleSacPair(middleSac), _getMiddleSacPair2 = _slicedToArray10(_getMiddleSacPair, 2), _sacrifice2 = _getMiddleSacPair2[0], _quantity2 = _getMiddleSacPair2[1];
    if (_sacrifice2 instanceof import_kolmafia38.Item) {
      returnValue.set(_sacrifice2, _quantity2);
    }
  }
  return returnValue;
}
function sacrificePairToURL(pair) {
  var _pair = _slicedToArray10(pair, 2), rawSacrifice = _pair[0], quantity = _pair[1];
  var sacrifice = rawSacrifice instanceof import_kolmafia38.Item ? rawSacrifice.id : rawSacrifice;
  return "".concat(sacrifice, ",").concat(quantity);
}
function makePants(alignment, element, leftSac, middleSac, rightSac) {
  if (have(pants) || !have(pantogram)) return false;
  var requirements = findRequirements({
    alignment: alignment,
    element: element,
    leftSac: leftSac,
    rightSac: rightSac,
    middleSac: middleSac
  });
  if (Array.from(requirements.entries()).some(function(_ref) {
    var _ref2 = _slicedToArray10(_ref, 2), item14 = _ref2[0], quantity = _ref2[1];
    return !have(item14, quantity);
  })) {
    return false;
  }
  var s1 = sacrificePairToURL(getLeftSacPair(leftSac));
  var s2 = sacrificePairToURL(getRightSacPair(rightSac));
  var s3 = sacrificePairToURL(getMiddleSacPair(middleSac));
  var url = "choice.php?whichchoice=1270&pwd&option=1&m=".concat(Alignment[alignment], "&e=").concat(Element4[element], "&s1=").concat(s1, "&s2=").concat(s2, "&s3=").concat(s3);
  directlyUse(pantogram);
  (0, import_kolmafia38.visitUrl)(url);
  return have(pants);
}
function makePantsFromObject(pants2) {
  return makePants(pants2.alignment, pants2.element, pants2.leftSac, pants2.middleSac, pants2.rightSac);
}
var import_kolmafia38, _templateObject160, _templateObject251, _templateObject341, _templateObject440, _templateObject526, _templateObject621, _templateObject718, _templateObject818, _templateObject916, _templateObject1015, _templateObject1114, _templateObject1213, _templateObject1312, _templateObject1411, _templateObject1510, _templateObject1610, _templateObject1710, _templateObject1810, _MiddleSacrifice, _templateObject1910, _templateObject2010, _templateObject2114, _templateObject2213, _templateObject2312, _templateObject2411, _templateObject2510, _templateObject269, _templateObject279, _templateObject287, _RightSacrifice, pantogram, pants, Alignment, Element4, LeftSacrifice, MiddleSacrifice, RightSacrifice;
var init_Pantogram = __esm({
  "node_modules/libram/dist/resources/2017/Pantogram.js": function() {
    import_kolmafia38 = require("kolmafia");
    init_lib();
    init_template_string();
    pantogram = $item(_templateObject160 || (_templateObject160 = _taggedTemplateLiteral29(["portable pantogram"])));
    pants = $item(_templateObject251 || (_templateObject251 = _taggedTemplateLiteral29(["pantogram pants"])));
    Alignment = _defineProperty13(_defineProperty13(_defineProperty13({}, "Muscle", 1), "Mysticality", 2), "Moxie", 3);
    Element4 = _defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13({}, "Hot Resistance: 2", 1), "Cold Resistance: 2", 2), "Spooky Resistance: 2", 3), "Sleaze Resistance: 2", 4), "Stench Resistance: 2", 5);
    LeftSacrifice = _defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13({}, "Maximum HP: 40", [-1, 0]), "Maximum MP: 20", [-2, 0]), "HP Regen Max: 10", [$item(_templateObject341 || (_templateObject341 = _taggedTemplateLiteral29(["red pixel potion"]))), 1]), "HP Regen Max: 15", [$item(_templateObject440 || (_templateObject440 = _taggedTemplateLiteral29(["royal jelly"]))), 1]), "HP Regen Max: 20", [$item(_templateObject526 || (_templateObject526 = _taggedTemplateLiteral29(["scented massage oil"]))), 1]), "MP Regen Max: 10", [$item(_templateObject621 || (_templateObject621 = _taggedTemplateLiteral29(["Cherry Cloaca Cola"]))), 1]), "MP Regen Max: 15", [$item(_templateObject718 || (_templateObject718 = _taggedTemplateLiteral29(["bubblin' crude"]))), 1]), "MP Regen Max: 20", [$item(_templateObject818 || (_templateObject818 = _taggedTemplateLiteral29(["glowing New Age crystal"]))), 1]), "Mana Cost: -3", [$item(_templateObject916 || (_templateObject916 = _taggedTemplateLiteral29(["baconstone"]))), 1]);
    MiddleSacrifice = (_MiddleSacrifice = {}, _defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_MiddleSacrifice, "Combat Rate: -5", [-1, 0]), "Combat Rate: 5", [-2, 0]), "Critical Hit Percent: 10", [$item(_templateObject1015 || (_templateObject1015 = _taggedTemplateLiteral29(["hamethyst"]))), 1]), "Initiative: 50", [$item(_templateObject1114 || (_templateObject1114 = _taggedTemplateLiteral29(["bar skin"]))), 1]), "Familiar Weight: 10", [$item(_templateObject1213 || (_templateObject1213 = _taggedTemplateLiteral29(["lead necklace"]))), 11]), "Candy Drop: 100", [$item(_templateObject1312 || (_templateObject1312 = _taggedTemplateLiteral29(["huge bowl of candy"]))), 1]), "Item Drop Penalty: -10", [$item(_templateObject1411 || (_templateObject1411 = _taggedTemplateLiteral29(["sea salt crystal"]))), 11]), "Fishing Skill: 5", [$item(_templateObject1510 || (_templateObject1510 = _taggedTemplateLiteral29(["wriggling worm"]))), 1]), "Pool Skill: 5", [$item(_templateObject1610 || (_templateObject1610 = _taggedTemplateLiteral29(["8-ball"]))), 15]), "Avatar: Purple", [$item(_templateObject1710 || (_templateObject1710 = _taggedTemplateLiteral29(["moxie weed"]))), 99]), _defineProperty13(_MiddleSacrifice, "Drops Items: true", [$item(_templateObject1810 || (_templateObject1810 = _taggedTemplateLiteral29(["ten-leaf clover"]))), 1]));
    RightSacrifice = (_RightSacrifice = {}, _defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_defineProperty13(_RightSacrifice, "Weapon Damage: 20", [-1, 0]), "Spell Damage Percent: 20", [-2, 0]), "Meat Drop: 30", [$item(_templateObject1910 || (_templateObject1910 = _taggedTemplateLiteral29(["taco shell"]))), 1]), "Meat Drop: 60", [$item(_templateObject2010 || (_templateObject2010 = _taggedTemplateLiteral29(["porquoise"]))), 1]), "Item Drop: 15", [$item(_templateObject2114 || (_templateObject2114 = _taggedTemplateLiteral29(["fairy gravy boat"]))), 1]), "Item Drop: 30", [$item(_templateObject2213 || (_templateObject2213 = _taggedTemplateLiteral29(["tiny dancer"]))), 1]), "Muscle Experience: 3", [$item(_templateObject2312 || (_templateObject2312 = _taggedTemplateLiteral29(["Knob Goblin firecracker"]))), 3]), "Mysticality Experience: 3", [$item(_templateObject2411 || (_templateObject2411 = _taggedTemplateLiteral29(["razor-sharp can lid"]))), 3]), "Moxie Experience: 3", [$item(_templateObject2510 || (_templateObject2510 = _taggedTemplateLiteral29(["spider web"]))), 3]), "Muscle Experience Percent: 25", [$item(_templateObject269 || (_templateObject269 = _taggedTemplateLiteral29(["synthetic marrow"]))), 5]), _defineProperty13(_defineProperty13(_RightSacrifice, "Mysticality Experience Percent: 25", [$item(_templateObject279 || (_templateObject279 = _taggedTemplateLiteral29(["haunted battery"]))), 5]), "Moxie Experience Percent: 25", [$item(_templateObject287 || (_templateObject287 = _taggedTemplateLiteral29(["the funk"]))), 5]));
  }
});

// node_modules/libram/dist/resources/2017/Robortender.js
var Robortender_exports = {};
__export(Robortender_exports, {
  currentDrinks: function() {
    return currentDrinks;
  },
  drinks: function() {
    return drinks;
  },
  dropChance: function() {
    return dropChance;
  },
  dropFrom: function() {
    return dropFrom;
  },
  feed: function() {
    return feed;
  },
  have: function() {
    return have25;
  },
  majorDrinks: function() {
    return majorDrinks;
  },
  minorDrinks: function() {
    return minorDrinks;
  }
});
function _toConsumableArray12(arr) {
  return _arrayWithoutHoles12(arr) || _iterableToArray12(arr) || _unsupportedIterableToArray21(arr) || _nonIterableSpread12();
}
function _nonIterableSpread12() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray21(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray21(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray21(o, minLen);
}
function _iterableToArray12(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles12(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray21(arr);
}
function _arrayLikeToArray21(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral30(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have25() {
  return (0, import_kolmafia39.haveFamiliar)(familiar6);
}
function dropFrom(target) {
  var _phylumDrops$get;
  var phylum = target instanceof import_kolmafia39.Monster ? target.phylum : target;
  return (_phylumDrops$get = phylumDrops.get(phylum)) !== null && _phylumDrops$get !== void 0 ? _phylumDrops$get : $item.none;
}
function dropChance() {
  var _dropNumber;
  var dropNumber = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_roboDrops");
  return (_dropNumber = [1, 0.5, 0.4, 0.4, 0.4, 0.3, 0.3, 0.3][dropNumber]) !== null && _dropNumber !== void 0 ? _dropNumber : 0.2;
}
function currentDrinks() {
  var pref = get("_roboDrinks");
  if (!pref) return [];
  return pref.split(",").filter(function(x) {
    return x.trim();
  }).map(function(name) {
    return (0, import_kolmafia39.toItem)(name);
  }).filter(function(drink3) {
    return drinks.includes(drink3);
  });
}
function feed(beverage) {
  if (currentDrinks().includes(beverage)) return true;
  if (currentDrinks().length >= 5) return false;
  if (!drinks.includes(beverage)) return false;
  if (!(0, import_kolmafia39.itemAmount)(beverage)) return false;
  if (!have25()) return false;
  var priorFamiliar = (0, import_kolmafia39.myFamiliar)();
  (0, import_kolmafia39.useFamiliar)(familiar6);
  (0, import_kolmafia39.visitUrl)("inventory.php?action=robooze&which=1&whichitem=".concat(beverage.id));
  (0, import_kolmafia39.useFamiliar)(priorFamiliar);
  return currentDrinks().includes(beverage);
}
var import_kolmafia39, _templateObject161, _templateObject260, _templateObject347, _templateObject441, _templateObject527, _templateObject624, _templateObject719, _templateObject819, _templateObject917, _templateObject1016, _templateObject1115, _templateObject1214, _templateObject1313, _templateObject1412, _templateObject1511, _templateObject1611, _templateObject1711, _templateObject1811, _templateObject1911, _templateObject2011, _templateObject2115, _templateObject2214, _templateObject2313, _templateObject2412, _templateObject2511, _templateObject2610, _templateObject2710, _templateObject288, _templateObject297, _templateObject307, _templateObject3112, _templateObject3211, _templateObject3310, _templateObject348, _templateObject357, _templateObject367, _templateObject377, familiar6, phylumDrops, minorDrinks, majorDrinks, drinks;
var init_Robortender = __esm({
  "node_modules/libram/dist/resources/2017/Robortender.js": function() {
    import_kolmafia39 = require("kolmafia");
    init_property();
    init_template_string();
    familiar6 = $familiar(_templateObject161 || (_templateObject161 = _taggedTemplateLiteral30(["Robortender"])));
    phylumDrops = /* @__PURE__ */ new Map([
      [$phylum(_templateObject260 || (_templateObject260 = _taggedTemplateLiteral30(["Bug"]))), $item(_templateObject347 || (_templateObject347 = _taggedTemplateLiteral30(["pickled grasshopper"])))],
      // bottle of anís
      [$phylum(_templateObject441 || (_templateObject441 = _taggedTemplateLiteral30(["Constellation"]))), import_kolmafia39.Item.get(9348)],
      [$phylum(_templateObject527 || (_templateObject527 = _taggedTemplateLiteral30(["Demon"]))), $item(_templateObject624 || (_templateObject624 = _taggedTemplateLiteral30(["bottle of novelty hot sauce"])))],
      [$phylum(_templateObject719 || (_templateObject719 = _taggedTemplateLiteral30(["Elemental"]))), $item(_templateObject819 || (_templateObject819 = _taggedTemplateLiteral30(["elemental sugarcube"])))],
      [$phylum(_templateObject917 || (_templateObject917 = _taggedTemplateLiteral30(["Elf"]))), $item(_templateObject1016 || (_templateObject1016 = _taggedTemplateLiteral30(["peppermint sprig"])))],
      [$phylum(_templateObject1115 || (_templateObject1115 = _taggedTemplateLiteral30(["Fish"]))), $item(_templateObject1214 || (_templateObject1214 = _taggedTemplateLiteral30(["bottle of clam juice"])))],
      [$phylum(_templateObject1313 || (_templateObject1313 = _taggedTemplateLiteral30(["Goblin"]))), $item(_templateObject1412 || (_templateObject1412 = _taggedTemplateLiteral30(["cocktail mushroom"])))],
      [$phylum(_templateObject1511 || (_templateObject1511 = _taggedTemplateLiteral30(["Hippy"]))), $item(_templateObject1611 || (_templateObject1611 = _taggedTemplateLiteral30(["shot of granola liqueur"])))],
      [$phylum(_templateObject1711 || (_templateObject1711 = _taggedTemplateLiteral30(["Hobo"]))), $item(_templateObject1811 || (_templateObject1811 = _taggedTemplateLiteral30(["can of cherry-flavored sterno"])))],
      [$phylum(_templateObject1911 || (_templateObject1911 = _taggedTemplateLiteral30(["Horror"]))), $item(_templateObject2011 || (_templateObject2011 = _taggedTemplateLiteral30(["lump of black ichor"])))],
      [$phylum(_templateObject2115 || (_templateObject2115 = _taggedTemplateLiteral30(["Humanoid"]))), $item(_templateObject2214 || (_templateObject2214 = _taggedTemplateLiteral30(["bottle of gregnadigne"])))],
      // bottle of Crème de Fugu
      [$phylum(_templateObject2313 || (_templateObject2313 = _taggedTemplateLiteral30(["Mer-kin"]))), import_kolmafia39.Item.get(9358)],
      [$phylum(_templateObject2412 || (_templateObject2412 = _taggedTemplateLiteral30(["Orc"]))), $item(_templateObject2511 || (_templateObject2511 = _taggedTemplateLiteral30(["baby oil shooter"])))],
      [$phylum(_templateObject2610 || (_templateObject2610 = _taggedTemplateLiteral30(["Penguin"]))), $item(_templateObject2710 || (_templateObject2710 = _taggedTemplateLiteral30(["fish head"])))],
      [$phylum(_templateObject288 || (_templateObject288 = _taggedTemplateLiteral30(["Pirate"]))), $item(_templateObject297 || (_templateObject297 = _taggedTemplateLiteral30(["limepatch"])))],
      [$phylum(_templateObject307 || (_templateObject307 = _taggedTemplateLiteral30(["Plant"]))), $item(_templateObject3112 || (_templateObject3112 = _taggedTemplateLiteral30(["pile of dirt"])))],
      [$phylum(_templateObject3211 || (_templateObject3211 = _taggedTemplateLiteral30(["Slime"]))), $item(_templateObject3310 || (_templateObject3310 = _taggedTemplateLiteral30(["slime shooter"])))],
      [$phylum(_templateObject348 || (_templateObject348 = _taggedTemplateLiteral30(["Weird"]))), $item(_templateObject357 || (_templateObject357 = _taggedTemplateLiteral30(["imaginary lemon"])))]
    ]);
    minorDrinks = $items(_templateObject367 || (_templateObject367 = _taggedTemplateLiteral30(["literal grasshopper, double entendre, Phlegethon, Siberian sunrise, mentholated wine, low tide martini, shroomtini, morning dew, whiskey squeeze, great old fashioned, Gnomish sagngria, vodka stinger, extremely slippery nipple, piscatini, Churchill, soilzerac, London frog, nothingtini"])));
    majorDrinks = $items(_templateObject377 || (_templateObject377 = _taggedTemplateLiteral30(["eighth plague, single entendre, reverse Tantalus, elemental caipiroska, Feliz Navidad, Bloody Nora, moreltini, hell in a bucket, Newark, R'lyeh, Gnollish sangria, vodka barracuda, Mysterious Island iced tea, drive-by shooting, gunner's daughter, dirt julep, Simepore slime, Phil Collins"])));
    drinks = [].concat(_toConsumableArray12(minorDrinks), _toConsumableArray12(majorDrinks));
  }
});

// node_modules/libram/dist/resources/2017/Spacegate.js
var Spacegate_exports = {};
__export(Spacegate_exports, {
  animalLife: function() {
    return animalLife;
  },
  dial: function() {
    return dial;
  },
  dialRandom: function() {
    return dialRandom;
  },
  dialled: function() {
    return dialled;
  },
  getHazardEquipment: function() {
    return getHazardEquipment;
  },
  getVaccine: function() {
    return getVaccine;
  },
  have: function() {
    return have26;
  },
  hazardEquipment: function() {
    return hazardEquipment;
  },
  hazards: function() {
    return hazards;
  },
  hostileLife: function() {
    return hostileLife;
  },
  intelligentLife: function() {
    return intelligentLife;
  },
  murderBots: function() {
    return murderBots;
  },
  planetCoords: function() {
    return planetCoords;
  },
  planetName: function() {
    return planetName;
  },
  plantLife: function() {
    return plantLife;
  },
  ruins: function() {
    return ruins;
  },
  spants: function() {
    return spants;
  },
  updateStatus: function() {
    return updateStatus;
  }
});
function _slicedToArray11(arr, i) {
  return _arrayWithHoles11(arr) || _iterableToArrayLimit11(arr, i) || _unsupportedIterableToArray22(arr, i) || _nonIterableRest11();
}
function _nonIterableRest11() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray22(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray22(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray22(o, minLen);
}
function _arrayLikeToArray22(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit11(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles11(arr) {
  if (Array.isArray(arr)) return arr;
}
function _taggedTemplateLiteral31(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have26() {
  return get("spacegateAlways");
}
function updateStatus() {
  (0, import_kolmafia40.visitUrl)("place.php?whichplace=spacegate&action=sg_Terminal");
}
function dialled() {
  updateStatus();
  return get("_spacegateCoordinates") !== "" || get("_spacegateToday");
}
function hazards() {
  return get("_spacegateHazards");
}
function planetName() {
  return get("_spacegatePlanetName");
}
function planetCoords() {
  return get("_spacegateCoordinates");
}
function plantLife() {
  return get("_spacegatePlantLife");
}
function animalLife() {
  return get("_spacegateAnimalLife");
}
function intelligentLife() {
  return get("_spacegateIntelligentLife").includes("detected");
}
function hostileLife() {
  return get("_spacegateIntelligentLife").includes("hostile");
}
function ruins() {
  return get("_spacegateRuins");
}
function spants() {
  return get("_spacegateSpant");
}
function murderBots() {
  return get("_spacegateMurderbot");
}
function hazardEquipment(hazards2) {
  var hazardEquipment2 = {
    "toxic atmosphere": $item(_templateObject170 || (_templateObject170 = _taggedTemplateLiteral31(["filter helmet"]))),
    "high gravity": $item(_templateObject261 || (_templateObject261 = _taggedTemplateLiteral31(["exo-servo leg braces"]))),
    irradiated: $item(_templateObject349 || (_templateObject349 = _taggedTemplateLiteral31(["rad cloak"]))),
    "magnetic storms": $item(_templateObject447 || (_templateObject447 = _taggedTemplateLiteral31(["gate transceiver"]))),
    "high winds": $item(_templateObject528 || (_templateObject528 = _taggedTemplateLiteral31(["high-friction boots"])))
  };
  return Object.entries(hazardEquipment2).filter(function(_ref) {
    var _ref2 = _slicedToArray11(_ref, 1), clue = _ref2[0];
    return hazards2.includes(clue);
  }).map(function(_ref3) {
    var _ref4 = _slicedToArray11(_ref3, 2), item14 = _ref4[1];
    return item14;
  });
}
function getHazardEquipment() {
  if (!have26()) {
    return false;
  }
  var equipment = hazardEquipment(hazards());
  equipment.forEach(function(equip10) {
    var num = equip10.id - 9404;
    (0, import_kolmafia40.visitUrl)("place.php?whichplace=spacegate&action=sg_requisition");
    (0, import_kolmafia40.visitUrl)("choice.php?whichchoice=1233&option=".concat(num));
  });
  equipment.forEach(function(equip10) {
    if ((0, import_kolmafia40.availableAmount)(equip10) !== 1) {
      return false;
    }
  });
  return true;
}
function getVaccine(choice) {
  if (get("_spacegateVaccine")) {
    return false;
  }
  var nums = {
    Rainbow: 1,
    "Elemental Resistance": 1,
    "Broad-Spectrum": 2,
    Stats: 2,
    Emotional: 3,
    "Monster Level": 3
  };
  var num = nums[choice];
  if (!get("spacegateVaccine".concat(num))) {
    throw "You don't appear to have that Vaccine Unlocked!";
  }
  (0, import_kolmafia40.cliExecute)("spacegate vaccine ".concat(num));
  return get("_spacegateVaccine");
}
function dial(address) {
  if (!have26() || dialled()) {
    return false;
  }
  if (!address.match(/^[A-Za-z]+$/) || address.length !== 7) {
    throw "Invalid Spacegate Address - must be exactly 7 alphabetic characters";
  } else {
    (0, import_kolmafia40.cliExecute)("spacegate destination ".concat(address));
  }
  return dialled() && planetCoords() === address;
}
function dialRandom() {
  if (!have26() || dialled()) {
    return false;
  }
  (0, import_kolmafia40.cliExecute)("spacegate destination random");
  return dialled();
}
var import_kolmafia40, _templateObject170, _templateObject261, _templateObject349, _templateObject447, _templateObject528;
var init_Spacegate = __esm({
  "node_modules/libram/dist/resources/2017/Spacegate.js": function() {
    import_kolmafia40 = require("kolmafia");
    init_property();
    init_template_string();
  }
});

// node_modules/libram/dist/resources/2017/TunnelOfLove.js
var TunnelOfLove_exports = {};
__export(TunnelOfLove_exports, {
  LovEnamorang: function() {
    return LovEnamorang;
  },
  couldUseLoveEnamorang: function() {
    return couldUseLoveEnamorang;
  },
  fightAll: function() {
    return fightAll;
  },
  getLovEnamorangMonster: function() {
    return getLovEnamorangMonster;
  },
  getLovEnamorangUses: function() {
    return getLovEnamorangUses;
  },
  have: function() {
    return have27;
  },
  haveLovEnamorang: function() {
    return haveLovEnamorang;
  },
  isUsed: function() {
    return isUsed;
  }
});
function _taggedTemplateLiteral32(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have27() {
  return get("loveTunnelAvailable");
}
function isUsed() {
  return get("_loveTunnelUsed");
}
function haveLovEnamorang() {
  return have($item(_templateObject171 || (_templateObject171 = _taggedTemplateLiteral32(["LOV Enamorang"]))));
}
function getLovEnamorangUses() {
  return get("_enamorangs");
}
function couldUseLoveEnamorang() {
  return !haveWandererCounter(Wanderer.Enamorang) && getLovEnamorangUses() < 3 && haveLovEnamorang();
}
function getLovEnamorangMonster() {
  return get("enamorangMonster");
}
function equipmentChoice(equipment) {
  switch (equipment) {
    case "LOV Eardigan":
      return 1;
    case "LOV Epaulettes":
      return 2;
    case "LOV Earring":
      return 3;
  }
}
function effectChoice(effect2) {
  switch (effect2) {
    case "Lovebotamy":
      return 1;
    case "Open Heart Surgery":
      return 2;
    case "Wandering Eye Surgery":
      return 3;
  }
}
function extraChoice(extra) {
  switch (extra) {
    case "LOV Enamorang":
      return 1;
    case "LOV Emotionizer":
      return 2;
    case "LOV Extraterrestrial Chocolate":
      return 3;
    case "LOV Echinacea Bouquet":
      return 4;
    case "LOV Elephant":
      return 5;
    case "toast":
      return 6;
    case null:
      return 7;
  }
}
function fightAll(equipment, effect2, extra) {
  withChoices({
    1222: 1,
    1223: 1,
    1224: equipmentChoice(equipment),
    1225: 1,
    1226: effectChoice(effect2),
    1227: 1,
    1228: extraChoice(extra)
  }, function() {
    (0, import_kolmafia41.adv1)($location(_templateObject270 || (_templateObject270 = _taggedTemplateLiteral32(["The Tunnel of L.O.V.E."]))), 0, "");
  });
}
var import_kolmafia41, _templateObject171, _templateObject270, LovEnamorang;
var init_TunnelOfLove = __esm({
  "node_modules/libram/dist/resources/2017/TunnelOfLove.js": function() {
    import_kolmafia41 = require("kolmafia");
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    LovEnamorang = new Copier(function() {
      return couldUseLoveEnamorang();
    }, null, function() {
      return couldUseLoveEnamorang();
    }, function() {
      return getLovEnamorangMonster();
    });
  }
});

// node_modules/libram/dist/counter.js
var counter_exports = {};
__export(counter_exports, {
  exists: function() {
    return exists;
  },
  get: function() {
    return get3;
  },
  set: function() {
    return set;
  }
});
function get3(counter) {
  var value = (0, import_kolmafia42.getCounter)(counter);
  if (value === -1) {
    return (0, import_kolmafia42.getCounters)(counter, -1, -1).trim() === "" ? Infinity : -1;
  }
  return value;
}
function exists(counter) {
  return (0, import_kolmafia42.getCounter)(counter) !== -1 || (0, import_kolmafia42.getCounters)(counter, -1, -1).trim() !== "";
}
function set(counter, duration) {
  (0, import_kolmafia42.cliExecute)("counters add ".concat(duration, " ").concat(counter));
  return get3(counter) !== null;
}
var import_kolmafia42;
var init_counter = __esm({
  "node_modules/libram/dist/counter.js": function() {
    import_kolmafia42 = require("kolmafia");
  }
});

// node_modules/libram/dist/resources/2018/LatteLoversMembersMug.js
var LatteLoversMembersMug_exports = {};
__export(LatteLoversMembersMug_exports, {
  currentIngredients: function() {
    return currentIngredients;
  },
  fill: function() {
    return fill;
  },
  have: function() {
    return have28;
  },
  ingredientsUnlocked: function() {
    return ingredientsUnlocked;
  },
  locationOf: function() {
    return locationOf;
  },
  modifierOf: function() {
    return modifierOf;
  },
  refillsRemaining: function() {
    return refillsRemaining;
  },
  sniffedMonster: function() {
    return sniffedMonster;
  }
});
function _taggedTemplateLiteral33(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have28() {
  return have($item(_templateObject180 || (_templateObject180 = _taggedTemplateLiteral33(["latte lovers member's mug"]))));
}
function sniffedMonster() {
  return exists("Latte Monster") ? get("_latteMonster") : null;
}
function refillsRemaining() {
  return clamp(3 - get("_latteRefillsUsed"), 0, 3);
}
function ingredientsUnlocked() {
  return get("latteUnlocks").split(",");
}
function fill() {
  if (refillsRemaining() <= 0) return false;
  for (var _len = arguments.length, ingredients = new Array(_len), _key = 0; _key < _len; _key++) {
    ingredients[_key] = arguments[_key];
  }
  if (new Set(ingredients).size < 3) return false;
  if (ingredients.some(function(i) {
    return !ingredientsUnlocked().includes(i);
  })) return false;
  return (0, import_kolmafia43.cliExecute)("latte refill ".concat(ingredients.join(" ")));
}
function modifierOf(ingredient) {
  return INGREDIENTS[ingredient].modifier;
}
function locationOf(ingredient) {
  return INGREDIENTS[ingredient].location;
}
function currentIngredients() {
  return (0, import_kolmafia43.getProperty)("latteIngredients").split(",");
}
var import_kolmafia43, _templateObject180, _templateObject271, _templateObject350, _templateObject448, _templateObject529, _templateObject625, _templateObject720, _templateObject820, _templateObject918, _templateObject1017, _templateObject1116, _templateObject1215, _templateObject1314, _templateObject1413, _templateObject1512, _templateObject1612, _templateObject1712, _templateObject1812, _templateObject1912, _templateObject2012, _templateObject2116, _templateObject2215, _templateObject2314, _templateObject2413, _templateObject2512, _templateObject2611, _templateObject2711, _templateObject289, _templateObject298, _templateObject308, _templateObject3113, _templateObject3212, _templateObject3311, _templateObject3410, _templateObject358, _templateObject368, _templateObject378, _templateObject387, _templateObject397, _templateObject407, _templateObject4112, _templateObject4211, _templateObject4310, _templateObject449, _templateObject456, _templateObject465, _templateObject475, _templateObject485, _templateObject495, _templateObject504, _templateObject5110, _templateObject5210, _templateObject534, INGREDIENTS;
var init_LatteLoversMembersMug = __esm({
  "node_modules/libram/dist/resources/2018/LatteLoversMembersMug.js": function() {
    import_kolmafia43 = require("kolmafia");
    init_counter();
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    INGREDIENTS = {
      ancient: {
        modifier: {
          "Spooky Damage": 50
        },
        location: $location(_templateObject271 || (_templateObject271 = _taggedTemplateLiteral33(["The Mouldering Mansion"])))
      },
      asp: {
        modifier: {
          "Weapon Damage": 25
        },
        location: $location(_templateObject350 || (_templateObject350 = _taggedTemplateLiteral33(["The Middle Chamber"])))
      },
      basil: {
        modifier: {
          "HP Regen Min": 5,
          "HP Regen Max": 5
        },
        location: $location(_templateObject448 || (_templateObject448 = _taggedTemplateLiteral33(["The Overgrown Lot"])))
      },
      belgian: {
        modifier: {
          "Moxie Percent": 20,
          "Mysticality Percent": 20,
          "Muscle Percent": 20
        },
        location: $location(_templateObject529 || (_templateObject529 = _taggedTemplateLiteral33(["Whitey's Grove"])))
      },
      chalk: {
        modifier: {
          "Cold Damage": 25
        },
        location: $location(_templateObject625 || (_templateObject625 = _taggedTemplateLiteral33(["The Haunted Billiards Room"])))
      },
      "bug-thistle": {
        modifier: {
          Mysticality: 20
        },
        location: $location(_templateObject720 || (_templateObject720 = _taggedTemplateLiteral33(["The Bugbear Pen"])))
      },
      butternut: {
        modifier: {
          "Spell Damage": 10
        },
        location: $location(_templateObject820 || (_templateObject820 = _taggedTemplateLiteral33(["Madness Bakery"])))
      },
      cajun: {
        modifier: {
          "Meat Drop": 40
        },
        location: $location(_templateObject918 || (_templateObject918 = _taggedTemplateLiteral33(["The Black Forest"])))
      },
      carrot: {
        modifier: {
          "Item Drop": 20
        },
        location: $location(_templateObject1017 || (_templateObject1017 = _taggedTemplateLiteral33(["The Dire Warren"])))
      },
      carrrdamom: {
        modifier: {
          "MP Regen Min": 4,
          "MP Regen Max": 6
        },
        location: $location(_templateObject1116 || (_templateObject1116 = _taggedTemplateLiteral33(["Barrrney's Barrr"])))
      },
      chili: {
        modifier: {
          "Hot Resistance": 3
        },
        location: $location(_templateObject1215 || (_templateObject1215 = _taggedTemplateLiteral33(["The Haunted Kitchen"])))
      },
      clove: {
        modifier: {
          "Stench Resistance": 3
        },
        location: $location(_templateObject1314 || (_templateObject1314 = _taggedTemplateLiteral33(["The Sleazy Back Alley"])))
      },
      coal: {
        modifier: {
          "Hot Damage": 25
        },
        location: $location(_templateObject1413 || (_templateObject1413 = _taggedTemplateLiteral33(["The Haunted Boiler Room"])))
      },
      cocoa: {
        modifier: {
          "Cold Resistance": 3
        },
        location: $location(_templateObject1512 || (_templateObject1512 = _taggedTemplateLiteral33(["The Icy Peak"])))
      },
      diet: {
        modifier: {
          Initiative: 50
        },
        location: $location(_templateObject1612 || (_templateObject1612 = _taggedTemplateLiteral33(["Battlefield (No Uniform)"])))
      },
      dwarf: {
        modifier: {
          Muscle: 30
        },
        location: $location(_templateObject1712 || (_templateObject1712 = _taggedTemplateLiteral33(["Itznotyerzitz Mine"])))
      },
      dyspepsi: {
        modifier: {
          Initiative: 25
        },
        location: $location(_templateObject1812 || (_templateObject1812 = _taggedTemplateLiteral33(["Battlefield (Dyspepsi Uniform)"])))
      },
      filth: {
        modifier: {
          "Damage Reduction": 20
        },
        location: $location(_templateObject1912 || (_templateObject1912 = _taggedTemplateLiteral33(["The Feeding Chamber"])))
      },
      grass: {
        modifier: {
          Experience: 3
        },
        location: $location(_templateObject2012 || (_templateObject2012 = _taggedTemplateLiteral33(["The Hidden Park"])))
      },
      fungus: {
        modifier: {
          "Maximum MP": 30
        },
        location: $location(_templateObject2116 || (_templateObject2116 = _taggedTemplateLiteral33(["The Fungal Nethers"])))
      },
      mold: {
        modifier: {
          "Spooky Damage": 20
        },
        location: $location(_templateObject2215 || (_templateObject2215 = _taggedTemplateLiteral33(["The Unquiet Garves"])))
      },
      greek: {
        modifier: {
          "Sleaze Damage": 25
        },
        location: $location(_templateObject2314 || (_templateObject2314 = _taggedTemplateLiteral33(["Wartime Frat House"])))
      },
      grobold: {
        modifier: {
          "Sleaze Damage": 25
        },
        location: $location(_templateObject2413 || (_templateObject2413 = _taggedTemplateLiteral33(["The Old Rubee Mine"])))
      },
      guarna: {
        modifier: {
          Adventures: 4
        },
        location: $location(_templateObject2512 || (_templateObject2512 = _taggedTemplateLiteral33(["The Bat Hole Entrance"])))
      },
      gunpowder: {
        modifier: {
          "Weapon Damage": 50
        },
        location: $location(_templateObject2611 || (_templateObject2611 = _taggedTemplateLiteral33(["1st Floor, Shiawase-Mitsuhama Building"])))
      },
      healing: {
        modifier: {
          "HP Regen Min": 10,
          "HP Regen Max": 20
        },
        location: $location(_templateObject2711 || (_templateObject2711 = _taggedTemplateLiteral33(["The Daily Dungeon"])))
      },
      hellion: {
        modifier: {
          "PvP Fights": 6
        },
        location: $location(_templateObject289 || (_templateObject289 = _taggedTemplateLiteral33(["The Dark Neck of the Woods"])))
      },
      hobo: {
        modifier: {
          "Damage Absorption": 50
        },
        location: $location(_templateObject298 || (_templateObject298 = _taggedTemplateLiteral33(["Hobopolis Town Square"])))
      },
      greasy: {
        modifier: {
          "Muscle Percent": 50
        },
        location: $location(_templateObject308 || (_templateObject308 = _taggedTemplateLiteral33(["Cobb's Knob Barracks"])))
      },
      wing: {
        modifier: {
          "Combat Rate": 10
        },
        location: $location(_templateObject3113 || (_templateObject3113 = _taggedTemplateLiteral33(["The Dark Heart of the Woods"])))
      },
      ink: {
        modifier: {
          "Combat Rate": -10
        },
        location: $location(_templateObject3212 || (_templateObject3212 = _taggedTemplateLiteral33(["The Haunted Library"])))
      },
      kombucha: {
        modifier: {
          "Stench Damage": 25
        },
        location: $location(_templateObject3311 || (_templateObject3311 = _taggedTemplateLiteral33(["Wartime Hippy Camp"])))
      },
      lihc: {
        modifier: {
          "Spooky Damage": 25
        },
        location: $location(_templateObject3410 || (_templateObject3410 = _taggedTemplateLiteral33(["The Defiled Niche"])))
      },
      lizard: {
        modifier: {
          "MP Regen Min": 5,
          "MP Regen Max": 15
        },
        location: $location(_templateObject358 || (_templateObject358 = _taggedTemplateLiteral33(["The Arid, Extra-Dry Desert"])))
      },
      macaroni: {
        modifier: {
          "Maximum HP": 20
        },
        location: $location(_templateObject368 || (_templateObject368 = _taggedTemplateLiteral33(["The Haunted Pantry"])))
      },
      mega: {
        modifier: {
          "Moxie Percent": 50
        },
        location: $location(_templateObject378 || (_templateObject378 = _taggedTemplateLiteral33(["Cobb's Knob Laboratory"])))
      },
      oil: {
        modifier: {
          "Sleaze Damage": 20
        },
        location: $location(_templateObject387 || (_templateObject387 = _taggedTemplateLiteral33(["The Old Landfill"])))
      },
      msg: {
        modifier: {
          "Critical Hit Percent": 15
        },
        location: $location(_templateObject397 || (_templateObject397 = _taggedTemplateLiteral33(["The Briniest Deepests"])))
      },
      norwhal: {
        modifier: {
          "Maximum HP Percent": 200
        },
        location: $location(_templateObject407 || (_templateObject407 = _taggedTemplateLiteral33(["The Ice Hole"])))
      },
      paint: {
        modifier: {
          "Prismatic Damage": 5
        },
        location: $location(_templateObject4112 || (_templateObject4112 = _taggedTemplateLiteral33(["The Haunted Gallery"])))
      },
      paradise: {
        modifier: {
          Moxie: 20,
          Muscle: 20,
          Mysticality: 20
        },
        location: $location(_templateObject4211 || (_templateObject4211 = _taggedTemplateLiteral33(["The Stately Pleasure Dome"])))
      },
      rawhide: {
        modifier: {
          "Familiar Weight": 5
        },
        location: $location(_templateObject4310 || (_templateObject4310 = _taggedTemplateLiteral33(["The Spooky Forest"])))
      },
      rock: {
        modifier: {
          "Critical Hit Percent": 10
        },
        location: $location(_templateObject449 || (_templateObject449 = _taggedTemplateLiteral33(["The Brinier Deepers"])))
      },
      salt: {
        modifier: {
          "Critical Hit Percent": 5
        },
        location: $location(_templateObject456 || (_templateObject456 = _taggedTemplateLiteral33(["The Briny Deeps"])))
      },
      sandalwood: {
        modifier: {
          Moxie: 5,
          Muscle: 5,
          Mysticality: 5
        },
        location: $location(_templateObject465 || (_templateObject465 = _taggedTemplateLiteral33(["Noob Cave"])))
      },
      sausage: {
        modifier: {
          "Mysticality Percent": 50
        },
        location: $location(_templateObject475 || (_templateObject475 = _taggedTemplateLiteral33(["Cobb's Knob Kitchens"])))
      },
      space: {
        modifier: {
          Moxie: 10,
          Muscle: 10,
          Mysticality: 10
        },
        location: $location(_templateObject485 || (_templateObject485 = _taggedTemplateLiteral33(["The Hole in the Sky"])))
      },
      squash: {
        modifier: {
          "Spell Damage": 10
        },
        location: $location(_templateObject495 || (_templateObject495 = _taggedTemplateLiteral33(["The Copperhead Club"])))
      },
      teeth: {
        modifier: {
          "Spooky Damage": 25,
          "Weapon Damage": 25
        },
        location: $location(_templateObject504 || (_templateObject504 = _taggedTemplateLiteral33(["The VERY Unquiet Garves"])))
      },
      vitamin: {
        modifier: {
          "Familiar Experience": 3
        },
        location: $location(_templateObject5110 || (_templateObject5110 = _taggedTemplateLiteral33(["The Dark Elbow of the Woods"])))
      },
      flour: {
        modifier: {
          "Sleaze Resistance": 3
        },
        location: $location(_templateObject5210 || (_templateObject5210 = _taggedTemplateLiteral33(["The Road to the White Citadel"])))
      },
      squamous: {
        modifier: {
          "Spooky Resistance": 3
        },
        location: $location(_templateObject534 || (_templateObject534 = _taggedTemplateLiteral33(["The Caliginous Abyss"])))
      },
      pumpkin: {
        modifier: {
          "Mysticality Experience": 1,
          "Spell Damage": 5,
          "Mysticality Percent": 5
        },
        location: null
      },
      cinnamon: {
        modifier: {
          "Moxie Experience": 1,
          "Pickpocket Rate": 5,
          "Moxie Percent": 5
        },
        location: null
      },
      vanilla: {
        modifier: {
          "Muscle Experience": 1,
          "Weapon Damage Percent": 5,
          "Muscle Percent": 5
        },
        location: null
      }
    };
  }
});

// node_modules/libram/dist/resources/2018/SongBoom.js
var SongBoom_exports = {};
__export(SongBoom_exports, {
  dropProgress: function() {
    return dropProgress;
  },
  have: function() {
    return have29;
  },
  setSong: function() {
    return setSong;
  },
  song: function() {
    return song;
  },
  songBoomSongs: function() {
    return songBoomSongs;
  },
  songChangesLeft: function() {
    return songChangesLeft;
  }
});
function _taggedTemplateLiteral34(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have29() {
  return have(item3);
}
function song() {
  var stored = get("boomBoxSong");
  return songBoomSongs.has(stored) ? stored : null;
}
function songChangesLeft() {
  return get("_boomBoxSongsLeft");
}
function setSong(newSong) {
  if (song() !== newSong) {
    if (songChangesLeft() === 0) throw new Error("Out of song changes!");
    (0, import_kolmafia44.cliExecute)("boombox ".concat(newSong ? keywords[newSong] : "none"));
    return true;
  } else {
    return false;
  }
}
function dropProgress() {
  return get("_boomBoxFights");
}
var import_kolmafia44, _templateObject181, item3, keywords, songBoomSongs;
var init_SongBoom = __esm({
  "node_modules/libram/dist/resources/2018/SongBoom.js": function() {
    import_kolmafia44 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item3 = $item(_templateObject181 || (_templateObject181 = _taggedTemplateLiteral34(["SongBoom\u2122 BoomBox"])));
    keywords = {
      "Eye of the Giger": "spooky",
      "Food Vibrations": "food",
      "Remainin' Alive": "dr",
      "These Fists Were Made for Punchin'": "damage",
      "Total Eclipse of Your Meat": "meat"
    };
    songBoomSongs = new Set(Object.keys(keywords));
  }
});

// node_modules/libram/dist/resources/2019/BeachComb.js
var BeachComb_exports = {};
__export(BeachComb_exports, {
  available: function() {
    return available3;
  },
  canComb: function() {
    return canComb;
  },
  comb: function() {
    return comb;
  },
  freeCombs: function() {
    return freeCombs;
  },
  have: function() {
    return have30;
  },
  head: function() {
    return head;
  },
  headAvailable: function() {
    return headAvailable;
  },
  headBuffs: function() {
    return headBuffs;
  },
  tideLevel: function() {
    return tideLevel;
  },
  tryHead: function() {
    return tryHead;
  }
});
function _taggedTemplateLiteral35(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have30() {
  return have(import_kolmafia45.Item.get("Beach Comb"));
}
function available3() {
  return have30() || have(import_kolmafia45.Item.get("driftwood beach comb"));
}
function tideLevel() {
  var day = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia45.gamedayToInt)();
  var dayOfMonth = 1 + day % 8;
  return 4 - Math.abs(4 - dayOfMonth);
}
function canComb(tile) {
  return tile.row > tideLevel();
}
function freeCombs() {
  return available3() ? clamp(11 - get("_freeBeachWalksUsed"), 0, 11) : 0;
}
function comb() {
  for (var _len = arguments.length, tiles = new Array(_len), _key = 0; _key < _len; _key++) {
    tiles[_key] = arguments[_key];
  }
  if (!available3() || !tiles.length) return;
  for (var _i = 0, _tiles = tiles; _i < _tiles.length; _i++) {
    var tile = _tiles[_i];
    if (canComb(tile)) {
      var minute = tile.minute, row = tile.row, column = tile.column;
      (0, import_kolmafia45.cliExecute)("beach wander ".concat(minute));
      (0, import_kolmafia45.cliExecute)("beach comb ".concat(row, " ").concat(column));
    }
  }
  if ((0, import_kolmafia45.handlingChoice)()) (0, import_kolmafia45.runChoice)(5);
}
function headAvailable(target) {
  var effect2 = target instanceof import_kolmafia45.Effect ? target : head[target];
  var headNumber = 1 + headBuffs.indexOf(effect2);
  return (0, import_kolmafia45.getProperty)("beachHeadsUnlocked").split(",").includes(headNumber.toString()) && !(0, import_kolmafia45.getProperty)("_beachHeadsUsed").split(",").includes(headNumber.toString());
}
function tryHead(target) {
  var effect2 = target instanceof import_kolmafia45.Effect ? target : head[target];
  if (!headBuffs.includes(effect2)) return false;
  if (!headAvailable(target)) return false;
  (0, import_kolmafia45.cliExecute)(effect2.default);
  return have(effect2);
}
var import_kolmafia45, _templateObject190, _templateObject280, _templateObject351, _templateObject450, _templateObject530, _templateObject626, _templateObject721, _templateObject821, _templateObject919, _templateObject1018, _templateObject1117, _templateObject1216, _templateObject1315, _templateObject1414, _templateObject1513, _templateObject1613, _templateObject1713, _templateObject1813, _templateObject1913, _templateObject2013, _templateObject2117, headBuffs, head;
var init_BeachComb = __esm({
  "node_modules/libram/dist/resources/2019/BeachComb.js": function() {
    import_kolmafia45 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    headBuffs = [$effect(_templateObject190 || (_templateObject190 = _taggedTemplateLiteral35(["Hot-Headed"]))), $effect(_templateObject280 || (_templateObject280 = _taggedTemplateLiteral35(["Cold as Nice"]))), $effect(_templateObject351 || (_templateObject351 = _taggedTemplateLiteral35(["A Brush with Grossness"]))), $effect(_templateObject450 || (_templateObject450 = _taggedTemplateLiteral35(["Does It Have a Skull In There??"]))), $effect(_templateObject530 || (_templateObject530 = _taggedTemplateLiteral35(["Oiled, Slick"]))), $effect(_templateObject626 || (_templateObject626 = _taggedTemplateLiteral35(["Lack of Body-Building"]))), $effect(_templateObject721 || (_templateObject721 = _taggedTemplateLiteral35(["We're All Made of Starfish"]))), $effect(_templateObject821 || (_templateObject821 = _taggedTemplateLiteral35(["Pomp & Circumsands"]))), $effect(_templateObject919 || (_templateObject919 = _taggedTemplateLiteral35(["Resting Beach Face"]))), $effect(_templateObject1018 || (_templateObject1018 = _taggedTemplateLiteral35(["Do I Know You From Somewhere?"]))), $effect(_templateObject1117 || (_templateObject1117 = _taggedTemplateLiteral35(["You Learned Something Maybe!"])))];
    head = {
      HOT: $effect(_templateObject1216 || (_templateObject1216 = _taggedTemplateLiteral35(["Hot-Headed"]))),
      COLD: $effect(_templateObject1315 || (_templateObject1315 = _taggedTemplateLiteral35(["Cold as Nice"]))),
      STENCH: $effect(_templateObject1414 || (_templateObject1414 = _taggedTemplateLiteral35(["A Brush with Grossness"]))),
      SPOOKY: $effect(_templateObject1513 || (_templateObject1513 = _taggedTemplateLiteral35(["Does It Have a Skull In There??"]))),
      SLEAZE: $effect(_templateObject1613 || (_templateObject1613 = _taggedTemplateLiteral35(["Oiled, Slick"]))),
      MUSCLE: $effect(_templateObject1713 || (_templateObject1713 = _taggedTemplateLiteral35(["Lack of Body-Building"]))),
      MYSTICALITY: $effect(_templateObject1813 || (_templateObject1813 = _taggedTemplateLiteral35(["We're All Made of Starfish"]))),
      INITIATIVE: $effect(_templateObject1913 || (_templateObject1913 = _taggedTemplateLiteral35(["Resting Beach Face"]))),
      FAMILIAR: $effect(_templateObject2013 || (_templateObject2013 = _taggedTemplateLiteral35(["Do I Know You From Somewhere?"]))),
      EXPERIENCE: $effect(_templateObject2117 || (_templateObject2117 = _taggedTemplateLiteral35(["You Learned Something Maybe!"])))
    };
  }
});

// node_modules/libram/dist/resources/2019/CampAway.js
var CampAway_exports = {};
__export(CampAway_exports, {
  blowSmoke: function() {
    return blowSmoke;
  },
  canGaze: function() {
    return canGaze;
  },
  gaze: function() {
    return gaze;
  },
  getBuffsToday: function() {
    return getBuffsToday;
  },
  getCloudBuffsToday: function() {
    return getCloudBuffsToday;
  },
  getGazeBuff: function() {
    return getGazeBuff;
  },
  getSmileBuffsToday: function() {
    return getSmileBuffsToday;
  },
  have: function() {
    return have31;
  }
});
function _taggedTemplateLiteral36(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have31() {
  return get("getawayCampsiteUnlocked");
}
function getCloudBuffsToday() {
  return get("_campAwayCloudBuffs");
}
function getSmileBuffsToday() {
  return get("_campAwaySmileBuffs");
}
function getBuffsToday() {
  return getCloudBuffsToday() + getSmileBuffsToday();
}
function canGaze() {
  return getBuffsToday() < 4;
}
function gaze() {
  if (!canGaze()) return;
  (0, import_kolmafia46.visitUrl)("place.php?whichplace=campaway&action=campaway_sky");
}
function getGazeBuff() {
  var daycountToCheck = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia46.daycount)();
  var buffSign = signIdToName((daycountToCheck + (0, import_kolmafia46.myPath)().id) % 9 + 1);
  var effectName = [];
  if (buffSign === (0, import_kolmafia46.mySign)()) effectName.push("Big");
  effectName.push("Smile of the", buffSign);
  return import_kolmafia46.Effect.get(effectName.join(" "));
}
function blowSmoke(messages) {
  var times = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var smoke = $item(_templateObject191 || (_templateObject191 = _taggedTemplateLiteral36(["campfire smoke"])));
  (0, import_kolmafia46.retrieveItem)(smoke, times);
  for (var i = 0; i < times; i++) {
    withChoice(1394, "1&message=".concat(random(messages)), function() {
      (0, import_kolmafia46.use)(smoke);
    });
  }
}
var import_kolmafia46, _templateObject191;
var init_CampAway = __esm({
  "node_modules/libram/dist/resources/2019/CampAway.js": function() {
    import_kolmafia46 = require("kolmafia");
    init_moonSign();
    init_property();
    init_template_string();
    init_utils();
  }
});

// node_modules/libram/dist/resources/2019/PocketProfessor.js
var PocketProfessor_exports = {};
__export(PocketProfessor_exports, {
  canThesis: function() {
    return canThesis;
  },
  currentlyAvailableLectures: function() {
    return currentlyAvailableLectures;
  },
  have: function() {
    return have32;
  },
  lecturesDelivered: function() {
    return lecturesDelivered;
  },
  totalAvailableLectures: function() {
    return totalAvailableLectures;
  }
});
function _taggedTemplateLiteral37(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have32() {
  return have(familiar7);
}
function canThesis() {
  return have32() && familiar7.experience >= 400 && !get("_thesisDelivered");
}
function totalAvailableLectures() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : totalFamiliarWeight(familiar7);
  var includeChip = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : (0, import_kolmafia47.haveEquipped)($item(_templateObject281 || (_templateObject281 = _taggedTemplateLiteral37(["Pocket Professor memory chip"]))));
  return (includeChip ? 2 : 0) + Math.floor(Math.sqrt(weight - 1));
}
function lecturesDelivered() {
  return get("_pocketProfessorLectures");
}
function currentlyAvailableLectures() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : totalFamiliarWeight(familiar7);
  var includeChip = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : (0, import_kolmafia47.haveEquipped)($item(_templateObject359 || (_templateObject359 = _taggedTemplateLiteral37(["Pocket Professor memory chip"]))));
  return totalAvailableLectures(weight, includeChip) - lecturesDelivered();
}
var import_kolmafia47, _templateObject200, _templateObject281, _templateObject359, familiar7;
var init_PocketProfessor = __esm({
  "node_modules/libram/dist/resources/2019/PocketProfessor.js": function() {
    import_kolmafia47 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    familiar7 = $familiar(_templateObject200 || (_templateObject200 = _taggedTemplateLiteral37(["Pocket Professor"])));
  }
});

// node_modules/libram/dist/resources/2019/Snapper.js
var Snapper_exports = {};
__export(Snapper_exports, {
  getProgress: function() {
    return getProgress;
  },
  getTrackedPhylum: function() {
    return getTrackedPhylum;
  },
  have: function() {
    return have33;
  },
  itemPhylum: function() {
    return itemPhylum;
  },
  phylumItem: function() {
    return phylumItem;
  },
  trackPhylum: function() {
    return trackPhylum;
  }
});
function _slicedToArray12(arr, i) {
  return _arrayWithHoles12(arr) || _iterableToArrayLimit12(arr, i) || _unsupportedIterableToArray23(arr, i) || _nonIterableRest12();
}
function _nonIterableRest12() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit12(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles12(arr) {
  if (Array.isArray(arr)) return arr;
}
function _toConsumableArray13(arr) {
  return _arrayWithoutHoles13(arr) || _iterableToArray13(arr) || _unsupportedIterableToArray23(arr) || _nonIterableSpread13();
}
function _nonIterableSpread13() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray23(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray23(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray23(o, minLen);
}
function _iterableToArray13(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles13(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray23(arr);
}
function _arrayLikeToArray23(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function have33() {
  return (0, import_kolmafia48.haveFamiliar)(familiar8);
}
function getTrackedPhylum() {
  return get("redSnapperPhylum");
}
function trackPhylum(phylum) {
  var currentFamiliar2 = (0, import_kolmafia48.myFamiliar)();
  try {
    (0, import_kolmafia48.useFamiliar)(familiar8);
    (0, import_kolmafia48.cliExecute)("snapper ".concat(phylum));
  } finally {
    (0, import_kolmafia48.useFamiliar)(currentFamiliar2);
  }
}
function getProgress() {
  return get("redSnapperProgress");
}
var import_kolmafia48, familiar8, phylumItem, itemPhylum;
var init_Snapper = __esm({
  "node_modules/libram/dist/resources/2019/Snapper.js": function() {
    import_kolmafia48 = require("kolmafia");
    init_property();
    familiar8 = import_kolmafia48.Familiar.get("Red-Nosed Snapper");
    phylumItem = /* @__PURE__ */ new Map([[import_kolmafia48.Phylum.get("beast"), import_kolmafia48.Item.get("patch of extra-warm fur")], [import_kolmafia48.Phylum.get("bug"), import_kolmafia48.Item.get("a bug's lymph")], [import_kolmafia48.Phylum.get("constellation"), import_kolmafia48.Item.get("micronova")], [import_kolmafia48.Phylum.get("construct"), import_kolmafia48.Item.get("industrial lubricant")], [import_kolmafia48.Phylum.get("demon"), import_kolmafia48.Item.get("infernal snowball")], [import_kolmafia48.Phylum.get("dude"), import_kolmafia48.Item.get("human musk")], [import_kolmafia48.Phylum.get("elemental"), import_kolmafia48.Item.get("livid energy")], [import_kolmafia48.Phylum.get("elf"), import_kolmafia48.Item.get("peppermint syrup")], [import_kolmafia48.Phylum.get("fish"), import_kolmafia48.Item.get("fish sauce")], [import_kolmafia48.Phylum.get("goblin"), import_kolmafia48.Item.get("guffin")], [import_kolmafia48.Phylum.get("hippy"), import_kolmafia48.Item.get("organic potpourri")], [import_kolmafia48.Phylum.get("hobo"), import_kolmafia48.Item.get("beggin' cologne")], [import_kolmafia48.Phylum.get("horror"), import_kolmafia48.Item.get("powdered madness")], [import_kolmafia48.Phylum.get("humanoid"), import_kolmafia48.Item.get("vial of humanoid growth hormone")], [import_kolmafia48.Phylum.get("mer-kin"), import_kolmafia48.Item.get("Mer-kin eyedrops")], [import_kolmafia48.Phylum.get("orc"), import_kolmafia48.Item.get("boot flask")], [import_kolmafia48.Phylum.get("penguin"), import_kolmafia48.Item.get("envelope full of Meat")], [import_kolmafia48.Phylum.get("pirate"), import_kolmafia48.Item.get("Shantix\u2122")], [import_kolmafia48.Phylum.get("plant"), import_kolmafia48.Item.get("goodberry")], [import_kolmafia48.Phylum.get("slime"), import_kolmafia48.Item.get("extra-strength goo")], [import_kolmafia48.Phylum.get("undead"), import_kolmafia48.Item.get("unfinished pleasure")], [import_kolmafia48.Phylum.get("weird"), import_kolmafia48.Item.get("non-Euclidean angle")]]);
    itemPhylum = new Map(_toConsumableArray13(phylumItem).map(function(_ref) {
      var _ref2 = _slicedToArray12(_ref, 2), phylum = _ref2[0], item14 = _ref2[1];
      return [item14, phylum];
    }));
  }
});

// node_modules/libram/dist/resources/2020/Cartography.js
var Cartography_exports = {};
__export(Cartography_exports, {
  availableMaps: function() {
    return availableMaps;
  },
  currentlyMapping: function() {
    return currentlyMapping;
  },
  have: function() {
    return have34;
  },
  mapMonster: function() {
    return mapMonster;
  }
});
function _taggedTemplateLiteral38(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have34() {
  return have(passive);
}
function mapMonster(location, monster) {
  if (!have34()) return false;
  if (get("_monstersMapped") >= 3) return false;
  if (!(0, import_kolmafia49.canAdventure)(location)) return false;
  (0, import_kolmafia49.useSkill)($skill(_templateObject290 || (_templateObject290 = _taggedTemplateLiteral38(["Map the Monsters"]))));
  if (!get("mappingMonsters")) return false;
  var turns2 = (0, import_kolmafia49.myTurncount)();
  while ((0, import_kolmafia49.currentRound)() < 1) {
    if ((0, import_kolmafia49.myTurncount)() > turns2) {
      throw new Error("Map the Monsters unsuccessful?");
    }
    (0, import_kolmafia49.visitUrl)((0, import_kolmafia49.toUrl)(location));
    if ((0, import_kolmafia49.handlingChoice)() && (0, import_kolmafia49.lastChoice)() === 1435) {
      (0, import_kolmafia49.runChoice)(1, "heyscriptswhatsupwinkwink=".concat(monster.id));
      return true;
    } else {
      (0, import_kolmafia49.runChoice)(-1, false);
    }
  }
  return false;
}
function availableMaps() {
  return have34() ? $skill(_templateObject360 || (_templateObject360 = _taggedTemplateLiteral38(["Map the Monsters"]))).dailylimit : 0;
}
function currentlyMapping() {
  return get("mappingMonsters");
}
var import_kolmafia49, _templateObject201, _templateObject290, _templateObject360, passive;
var init_Cartography = __esm({
  "node_modules/libram/dist/resources/2020/Cartography.js": function() {
    import_kolmafia49 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    passive = $skill(_templateObject201 || (_templateObject201 = _taggedTemplateLiteral38(["Comprehensive Cartography"])));
  }
});

// node_modules/libram/dist/resources/2020/Guzzlr.js
var Guzzlr_exports = {};
__export(Guzzlr_exports, {
  Cocktails: function() {
    return Cocktails;
  },
  abandon: function() {
    return abandon;
  },
  acceptBronze: function() {
    return acceptBronze;
  },
  acceptGold: function() {
    return acceptGold;
  },
  acceptPlatinum: function() {
    return acceptPlatinum;
  },
  canAbandon: function() {
    return canAbandon;
  },
  canGold: function() {
    return canGold;
  },
  canPlatinum: function() {
    return canPlatinum;
  },
  expectedReward: function() {
    return expectedReward;
  },
  getBooze: function() {
    return getBooze;
  },
  getBronze: function() {
    return getBronze;
  },
  getCheapestPlatinumCocktail: function() {
    return getCheapestPlatinumCocktail;
  },
  getGold: function() {
    return getGold;
  },
  getGoldToday: function() {
    return getGoldToday;
  },
  getLocation: function() {
    return getLocation2;
  },
  getPlatinum: function() {
    return getPlatinum;
  },
  getPlatinumToday: function() {
    return getPlatinumToday;
  },
  getTier: function() {
    return getTier;
  },
  have: function() {
    return have35;
  },
  haveBooze: function() {
    return haveBooze;
  },
  haveFullBronzeBonus: function() {
    return haveFullBronzeBonus;
  },
  haveFullGoldBonus: function() {
    return haveFullGoldBonus;
  },
  haveFullPlatinumBonus: function() {
    return haveFullPlatinumBonus;
  },
  havePlatinumBooze: function() {
    return havePlatinumBooze;
  },
  ingredientToPlatinumCocktail: function() {
    return ingredientToPlatinumCocktail;
  },
  isQuestActive: function() {
    return isQuestActive;
  },
  platinumCocktailToIngredient: function() {
    return platinumCocktailToIngredient;
  },
  turnsLeftOnQuest: function() {
    return turnsLeftOnQuest;
  }
});
function _slicedToArray13(arr, i) {
  return _arrayWithHoles13(arr) || _iterableToArrayLimit13(arr, i) || _unsupportedIterableToArray24(arr, i) || _nonIterableRest13();
}
function _nonIterableRest13() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit13(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles13(arr) {
  if (Array.isArray(arr)) return arr;
}
function _toConsumableArray14(arr) {
  return _arrayWithoutHoles14(arr) || _iterableToArray14(arr) || _unsupportedIterableToArray24(arr) || _nonIterableSpread14();
}
function _nonIterableSpread14() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray24(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray24(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray24(o, minLen);
}
function _iterableToArray14(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles14(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray24(arr);
}
function _arrayLikeToArray24(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral39(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have35() {
  return have(item4);
}
function useTabletWithChoice(option) {
  withChoice(1412, option, function() {
    return (0, import_kolmafia50.use)(1, item4);
  });
}
function isQuestActive() {
  return get("questGuzzlr") !== "unstarted";
}
function getPlatinum() {
  return get("guzzlrPlatinumDeliveries");
}
function getPlatinumToday() {
  return get("_guzzlrPlatinumDeliveries");
}
function canPlatinum() {
  return !isQuestActive() && getGold() >= 5 && getPlatinumToday() < 1;
}
function haveFullPlatinumBonus() {
  return getPlatinum() >= 30;
}
function acceptPlatinum() {
  if (!canPlatinum()) return false;
  useTabletWithChoice(4);
  return true;
}
function getGold() {
  return get("guzzlrGoldDeliveries");
}
function getGoldToday() {
  return get("_guzzlrGoldDeliveries");
}
function canGold() {
  return !isQuestActive() && getBronze() >= 5 && getGoldToday() < 3;
}
function haveFullGoldBonus() {
  return getGold() >= 150;
}
function acceptGold() {
  if (!canGold()) return false;
  useTabletWithChoice(3);
  return true;
}
function getBronze() {
  return get("guzzlrBronzeDeliveries");
}
function haveFullBronzeBonus() {
  return getBronze() >= 196;
}
function acceptBronze() {
  if (isQuestActive()) return false;
  useTabletWithChoice(2);
  return true;
}
function canAbandon() {
  return isQuestActive() && !get("_guzzlrQuestAbandoned");
}
function abandon() {
  if (!canAbandon()) return false;
  (0, import_kolmafia50.visitUrl)("inventory.php?tap=guzzlr", false);
  (0, import_kolmafia50.runChoice)(1);
  (0, import_kolmafia50.runChoice)(5);
  return true;
}
function getLocation2() {
  return get("guzzlrQuestLocation");
}
function getTier() {
  var tier = get("guzzlrQuestTier");
  return tier === "" ? null : tier;
}
function getBooze() {
  var booze = get("guzzlrQuestBooze");
  if (booze === "") return null;
  return import_kolmafia50.Item.get(booze);
}
function havePlatinumBooze() {
  return Cocktails.some(function(cock) {
    return (0, import_kolmafia50.itemAmount)(cock) > 0;
  });
}
function haveBooze() {
  var booze = getBooze();
  switch (booze) {
    case null:
      return false;
    case $item(_templateObject361 || (_templateObject361 = _taggedTemplateLiteral39(["Guzzlr cocktail set"]))):
      return havePlatinumBooze();
    default:
      return (0, import_kolmafia50.itemAmount)(booze) > 0;
  }
}
function getCheapestPlatinumCocktail() {
  var freeCraft = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  if (freeCraft) {
    return maxBy(Array.from(ingredientToPlatinumCocktail), function(ingredientAndCocktail) {
      return Math.min.apply(Math, _toConsumableArray14(ingredientAndCocktail.map(function(item14) {
        return (0, import_kolmafia50.mallPrice)(item14);
      })));
    }, true)[1];
  } else {
    return maxBy(Array.from(ingredientToPlatinumCocktail), function(_ref) {
      var _ref2 = _slicedToArray13(_ref, 2), cocktail = _ref2[1];
      return (0, import_kolmafia50.mallPrice)(cocktail);
    })[1];
  }
}
function turnsLeftOnQuest() {
  var useShoes = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  var progressPerTurn = useShoes ? Math.floor((10 - get("_guzzlrDeliveries")) * 1.5) : 10 - get("_guzzlrDeliveries");
  return Math.ceil((100 - get("guzzlrDeliveryProgress")) / progressPerTurn);
}
function expectedReward() {
  var usePants = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  switch (getTier()) {
    case "platinum":
      return 22.5 + (usePants ? 5 : 0);
    case "gold":
      return 6 + (usePants ? 3 : 0);
    case "bronze":
      return 3 + (usePants ? 3 : 0);
    default:
      return 0;
  }
}
var import_kolmafia50, _templateObject291, _templateObject299, _templateObject361, _templateObject451, _templateObject531, _templateObject627, _templateObject724, _templateObject824, _templateObject920, _templateObject1019, _templateObject1118, _templateObject1217, _templateObject1316, item4, Cocktails, ingredientToPlatinumCocktail, platinumCocktailToIngredient;
var init_Guzzlr = __esm({
  "node_modules/libram/dist/resources/2020/Guzzlr.js": function() {
    import_kolmafia50 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item4 = $item(_templateObject291 || (_templateObject291 = _taggedTemplateLiteral39(["Guzzlr tablet"])));
    Cocktails = $items(_templateObject299 || (_templateObject299 = _taggedTemplateLiteral39(["Buttery Boy, Steamboat, Ghiaccio Colada, Nog-on-the-Cob, Sourfinger"])));
    ingredientToPlatinumCocktail = /* @__PURE__ */ new Map([[$item(_templateObject451 || (_templateObject451 = _taggedTemplateLiteral39(["miniature boiler"]))), $item(_templateObject531 || (_templateObject531 = _taggedTemplateLiteral39(["Steamboat"])))], [$item(_templateObject627 || (_templateObject627 = _taggedTemplateLiteral39(["cold wad"]))), $item(_templateObject724 || (_templateObject724 = _taggedTemplateLiteral39(["Ghiaccio Colada"])))], [$item(_templateObject824 || (_templateObject824 = _taggedTemplateLiteral39(["robin's egg"]))), $item(_templateObject920 || (_templateObject920 = _taggedTemplateLiteral39(["Nog-on-the-Cob"])))], [$item(_templateObject1019 || (_templateObject1019 = _taggedTemplateLiteral39(["mangled finger"]))), $item(_templateObject1118 || (_templateObject1118 = _taggedTemplateLiteral39(["Sourfinger"])))], [$item(_templateObject1217 || (_templateObject1217 = _taggedTemplateLiteral39(["Dish of Clarified Butter"]))), $item(_templateObject1316 || (_templateObject1316 = _taggedTemplateLiteral39(["Buttery Boy"])))]]);
    platinumCocktailToIngredient = invertMap(ingredientToPlatinumCocktail);
  }
});

// node_modules/libram/dist/resources/2020/RetroCape.js
var RetroCape_exports = {};
__export(RetroCape_exports, {
  currentHero: function() {
    return currentHero;
  },
  currentMode: function() {
    return currentMode;
  },
  getModifier: function() {
    return getModifier2;
  },
  have: function() {
    return have36;
  },
  set: function() {
    return set2;
  },
  tuneToSkill: function() {
    return tuneToSkill;
  }
});
function _toConsumableArray15(arr) {
  return _arrayWithoutHoles15(arr) || _iterableToArray15(arr) || _unsupportedIterableToArray25(arr) || _nonIterableSpread15();
}
function _nonIterableSpread15() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray25(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray25(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray25(o, minLen);
}
function _iterableToArray15(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles15(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray25(arr);
}
function _arrayLikeToArray25(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function ownKeys6(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread6(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys6(Object(t), true).forEach(function(r2) {
      _defineProperty14(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys6(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty14(obj, key, value) {
  key = _toPropertyKey15(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey15(t) {
  var i = _toPrimitive15(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive15(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral40(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have36() {
  return have(item5);
}
function set2(hero, mode) {
  if (!have36()) return false;
  if (currentHero() === hero && currentMode() === mode) return true;
  (0, import_kolmafia51.cliExecute)("retrocape ".concat(hero, " ").concat(mode));
  return currentHero() === hero && currentMode() === mode;
}
function getModifier2() {
  var _modeMap$get;
  var hero = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentHero();
  var mode = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : currentMode();
  return _objectSpread6(_objectSpread6({}, Heroes[hero]), (_modeMap$get = modeMap.get([hero, mode])) !== null && _modeMap$get !== void 0 ? _modeMap$get : {});
}
function tuneToSkill(skill) {
  var setting = skills.get(skill);
  if (!setting || !have36()) return false;
  set2.apply(void 0, _toConsumableArray15(setting));
  return [currentHero(), currentMode()].every(function(element, index) {
    return element === setting[index];
  });
}
var import_kolmafia51, _templateObject300, _templateObject2100, _templateObject369, _templateObject457, _templateObject535, _templateObject628, _templateObject725, item5, Heroes, currentHero, currentMode, modeMap, skills;
var init_RetroCape = __esm({
  "node_modules/libram/dist/resources/2020/RetroCape.js": function() {
    import_kolmafia51 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item5 = $item(_templateObject300 || (_templateObject300 = _taggedTemplateLiteral40(["unwrapped knock-off retro superhero cape"])));
    Heroes = {
      vampire: {
        "Muscle Percent": 30,
        "Maximum HP": 50
      },
      heck: {
        "Mysticality Percent": 30,
        "Maximum MP": 50
      },
      robot: {
        "Moxie Percent": 30,
        "Maximum HP": 25,
        "Maximum MP": 25
      }
    };
    currentHero = function() {
      return get("retroCapeSuperhero");
    };
    currentMode = function() {
      return get("retroCapeWashingInstructions");
    };
    modeMap = /* @__PURE__ */ new Map([[["vampire", "hold"], {
      "Hot Resistance": 3,
      "Cold Resistance": 3,
      "Stench Resistance": 3,
      "Spooky Resistance": 3,
      "Sleaze Resistance": 3
    }], [["vampire", "thrill"], {
      "Muscle Experience": 3
    }], [["vampire", "kiss"], {
      Skill: "Smooch of the Daywalker"
    }], [["vampire", "kill"], {
      Skill: "Slay the Dead"
    }], [["heck", "thrill"], {
      "Mysticality Experience": 3
    }], [["heck", "kiss"], {
      Skill: "Unleash the Devil's Kiss"
    }], [["robot", "hold"], {
      Skill: "Deploy Robo-Handcuffs"
    }], [["robot", "thrill"], {
      "Moxie Experience": 3
    }], [["robot", "kiss"], {
      Skill: "Blow a Robo-Kiss"
    }], [["robot", "kill"], {
      Skill: "Precision Shot"
    }]]);
    skills = /* @__PURE__ */ new Map([[$skill(_templateObject2100 || (_templateObject2100 = _taggedTemplateLiteral40(["Smooch of the Daywalker"]))), ["vampire", "kiss"]], [$skill(_templateObject369 || (_templateObject369 = _taggedTemplateLiteral40(["Slay the Dead"]))), ["vampire", "kill"]], [$skill(_templateObject457 || (_templateObject457 = _taggedTemplateLiteral40(["Unleash the Devil's Kiss"]))), ["heck", "kiss"]], [$skill(_templateObject535 || (_templateObject535 = _taggedTemplateLiteral40(["Deploy Robo-Handcuffs"]))), ["robot", "hold"]], [$skill(_templateObject628 || (_templateObject628 = _taggedTemplateLiteral40(["Blow a Robo-Kiss"]))), ["robot", "kiss"]], [$skill(_templateObject725 || (_templateObject725 = _taggedTemplateLiteral40(["Precision Shot"]))), ["robot", "kill"]]]);
  }
});

// node_modules/libram/dist/resources/2021/CrystalBall.js
var CrystalBall_exports = {};
__export(CrystalBall_exports, {
  getPrediction: function() {
    return getPrediction;
  },
  have: function() {
    return have37;
  },
  orb: function() {
    return orb;
  },
  ponder: function() {
    return ponder;
  }
});
function _slicedToArray14(arr, i) {
  return _arrayWithHoles14(arr) || _iterableToArrayLimit14(arr, i) || _unsupportedIterableToArray26(arr, i) || _nonIterableRest14();
}
function _nonIterableRest14() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray26(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray26(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray26(o, minLen);
}
function _arrayLikeToArray26(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit14(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles14(arr) {
  if (Array.isArray(arr)) return arr;
}
function have37() {
  return (0, import_kolmafia52.availableAmount)(orb) > 0;
}
function getPrediction() {
  return new Map(multiSplit("crystalBallPredictions", "|", ":", [Number, import_kolmafia52.toLocation, import_kolmafia52.toMonster]).map(function(_ref) {
    var _ref2 = _slicedToArray14(_ref, 3), location = _ref2[1], monster = _ref2[2];
    return [location, monster];
  }));
}
function ponder() {
  if (!have37()) return /* @__PURE__ */ new Map();
  if (lastPondered !== getLastPondered()) {
    if (canVisitUrl()) {
      logger_default.debug("Now pondering Crystal Ball.");
      (0, import_kolmafia52.visitUrl)("inventory.php?ponder=1", false);
      lastPondered = getLastPondered();
    } else {
      logger_default.debug("Failed to ponder Crystall Ball.");
    }
  }
  return getPrediction();
}
var import_kolmafia52, orb, getLastPondered, lastPondered;
var init_CrystalBall = __esm({
  "node_modules/libram/dist/resources/2021/CrystalBall.js": function() {
    import_kolmafia52 = require("kolmafia");
    init_lib();
    init_logger();
    init_property();
    orb = import_kolmafia52.Item.get("miniature crystal ball");
    getLastPondered = function() {
      return "".concat((0, import_kolmafia52.myTotalTurnsSpent)(), ";").concat((0, import_kolmafia52.totalTurnsPlayed)(), ";").concat(get("lastAdventure"));
    };
    lastPondered = "";
  }
});

// node_modules/libram/dist/resources/2021/DaylightShavings.js
var DaylightShavings_exports = {};
__export(DaylightShavings_exports, {
  buffAvailable: function() {
    return buffAvailable;
  },
  buffCycle: function() {
    return buffCycle;
  },
  buffs: function() {
    return buffs;
  },
  buffsUntil: function() {
    return buffsUntil;
  },
  hasBuff: function() {
    return hasBuff;
  },
  have: function() {
    return have38;
  },
  nextBuff: function() {
    return nextBuff;
  }
});
function _taggedTemplateLiteral41(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have38() {
  return have(helmet);
}
function hasBuff() {
  return buffs.some(function(buff) {
    return have(buff);
  });
}
function buffAvailable() {
  return !buffs.some(function(buff) {
    return have(buff, 2);
  });
}
function buffCycle() {
  var playerclass = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia53.myClass)();
  var cycle2 = tuple(import_kolmafia53.Effect.none, import_kolmafia53.Effect.none, import_kolmafia53.Effect.none, import_kolmafia53.Effect.none, import_kolmafia53.Effect.none, import_kolmafia53.Effect.none, import_kolmafia53.Effect.none, import_kolmafia53.Effect.none, import_kolmafia53.Effect.none, import_kolmafia53.Effect.none, import_kolmafia53.Effect.none);
  if (playerclass.id <= 0) return cycle2;
  var id = playerclass.id;
  var seed = id > 6 ? id % 6 + 1 : id;
  for (var i = 1; i < 12; i++) {
    var index = i * seed % 11;
    cycle2[i - 1] = buffs[index];
  }
  return cycle2;
}
function nextBuff() {
  var currentBuff = (0, import_kolmafia53.toEffect)(get("lastBeardBuff").toFixed(0));
  var cycle2 = buffCycle();
  var index = cycle2.indexOf(currentBuff);
  var newIndex = (1 + index) % 11;
  return cycle2[newIndex];
}
function buffsUntil(buff) {
  if (!buffs.includes(buff)) return null;
  var currentIndex = buffs.indexOf(nextBuff()) - 1;
  var newIndex = buffs.indexOf(buff);
  var diff = (newIndex - currentIndex) % 11;
  return diff === 0 ? 11 : diff;
}
var import_kolmafia53, _templateObject301, _templateObject2101, helmet, buffs;
var init_DaylightShavings = __esm({
  "node_modules/libram/dist/resources/2021/DaylightShavings.js": function() {
    import_kolmafia53 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    helmet = $item(_templateObject301 || (_templateObject301 = _taggedTemplateLiteral41(["Daylight Shavings Helmet"])));
    buffs = $effects(_templateObject2101 || (_templateObject2101 = _taggedTemplateLiteral41(["Spectacle Moustache, Toiletbrush Moustache, Barbell Moustache, Grizzly Beard, Surrealist's Moustache, Musician's Musician's Moustache, Gull-Wing Moustache, Space Warlord's Beard, Pointy Wizard Beard, Cowboy Stache, Friendly Chops"])));
  }
});

// node_modules/libram/dist/resources/2022/AutumnAton.js
var AutumnAton_exports = {};
__export(AutumnAton_exports, {
  available: function() {
    return available4;
  },
  availableLocations: function() {
    return availableLocations2;
  },
  currentUpgrades: function() {
    return currentUpgrades;
  },
  currentlyIn: function() {
    return currentlyIn;
  },
  getUniques: function() {
    return getUniques;
  },
  have: function() {
    return have39;
  },
  legs: function() {
    return legs;
  },
  possibleUpgrades: function() {
    return possibleUpgrades;
  },
  seasonalItems: function() {
    return seasonalItems;
  },
  sendTo: function() {
    return sendTo;
  },
  turnsForQuest: function() {
    return turnsForQuest;
  },
  turnsLeft: function() {
    return turnsLeft;
  },
  upgrade: function() {
    return upgrade;
  },
  visualAcuity: function() {
    return visualAcuity;
  },
  zoneItems: function() {
    return zoneItems;
  }
});
function _taggedTemplateLiteral42(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function available4() {
  return (0, import_kolmafia54.availableAmount)(item6) > 0;
}
function have39() {
  return get("hasAutumnaton") || available4();
}
function checkLocations(html) {
  return (0, import_kolmafia54.xpath)(html, '//select[@name="heythereprogrammer"]//option[position()>1]/@value').map(function(id) {
    return (0, import_kolmafia54.toLocation)(Number(id));
  });
}
function currentlyIn() {
  return get("autumnatonQuestLocation");
}
function validateLocation(list, location) {
  return list.some(function(loc) {
    return loc.id === location.id;
  });
}
function sendTo(target) {
  var upgrade2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  if (!available4()) return null;
  var pageHtml = directlyUse(item6);
  if (upgrade2 && (0, import_kolmafia54.availableChoiceOptions)()[1]) (0, import_kolmafia54.runChoice)(1);
  var locationsAvailable = checkLocations(pageHtml);
  var location = target instanceof import_kolmafia54.Location ? target : Array.isArray(target) ? target.find(function(l) {
    return validateLocation(locationsAvailable, l);
  }) : target(locationsAvailable);
  if (!location) return null;
  if (!validateLocation(locationsAvailable, location)) return null;
  if (!(0, import_kolmafia54.handlingChoice)()) directlyUse(item6);
  (0, import_kolmafia54.runChoice)(2, "heythereprogrammer=".concat(location.id));
  if ((0, import_kolmafia54.handlingChoice)()) (0, import_kolmafia54.visitUrl)("main.php");
  return location;
}
function upgrade() {
  directlyUse(item6);
  var canUpgrade = (0, import_kolmafia54.availableChoiceOptions)()[1] !== void 0;
  if (canUpgrade) (0, import_kolmafia54.runChoice)(1);
  (0, import_kolmafia54.visitUrl)("main.php");
  return canUpgrade;
}
function availableLocations2() {
  if (!available4()) return [];
  var pageHtml = directlyUse(item6);
  (0, import_kolmafia54.visitUrl)("main.php");
  return checkLocations(pageHtml);
}
function currentUpgrades() {
  return get("autumnatonUpgrades").split(",");
}
function turnsLeft() {
  return get("autumnatonQuestTurn") - (0, import_kolmafia54.totalTurnsPlayed)();
}
function legs() {
  return currentUpgrades().filter(function(u) {
    return u.includes("leg");
  }).length;
}
function turnsForQuest() {
  return 11 * Math.max(1, get("_autumnatonQuests") - legs());
}
function visualAcuity() {
  var visualUpgrades = ["periscope", "radardish"];
  return 1 + currentUpgrades().filter(function(u) {
    return visualUpgrades.includes(u);
  }).length;
}
function zoneItems() {
  return 3 + currentUpgrades().filter(function(u) {
    return u.includes("arm");
  }).length;
}
function seasonalItems() {
  return currentUpgrades().includes("cowcatcher") ? 2 : 1;
}
function getUniques(location) {
  var env = location.environment;
  var difficulty = location.difficultyLevel;
  if (arrayContains(env, ["outdoor", "indoor", "underground"]) && arrayContains(difficulty, difficulties)) {
    var _UNIQUES$env$difficul = UNIQUES[env][difficulty], index = _UNIQUES$env$difficul.index, _item = _UNIQUES$env$difficul.item;
    return {
      upgrade: possibleUpgrades[index],
      item: _item
    };
  }
  return null;
}
var import_kolmafia54, _templateObject309, _templateObject2102, _templateObject370, _templateObject458, _templateObject536, _templateObject629, _templateObject726, _templateObject825, _templateObject921, item6, possibleUpgrades, difficulties, UNIQUES;
var init_AutumnAton = __esm({
  "node_modules/libram/dist/resources/2022/AutumnAton.js": function() {
    import_kolmafia54 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item6 = import_kolmafia54.Item.get("autumn-aton");
    possibleUpgrades = ["leftarm1", "leftleg1", "rightarm1", "rightleg1", "base_blackhat", "cowcatcher", "periscope", "radardish", "dualexhaust"];
    difficulties = ["low", "mid", "high"];
    UNIQUES = {
      outdoor: {
        low: {
          index: 4,
          item: $item(_templateObject309 || (_templateObject309 = _taggedTemplateLiteral42(["autumn leaf"])))
        },
        mid: {
          index: 2,
          item: $item(_templateObject2102 || (_templateObject2102 = _taggedTemplateLiteral42(["autumn debris shield"])))
        },
        high: {
          index: 6,
          item: $item(_templateObject370 || (_templateObject370 = _taggedTemplateLiteral42(["autumn leaf pendant"])))
        }
      },
      indoor: {
        low: {
          index: 0,
          item: $item(_templateObject458 || (_templateObject458 = _taggedTemplateLiteral42(["AutumnFest ale"])))
        },
        mid: {
          index: 3,
          item: $item(_templateObject536 || (_templateObject536 = _taggedTemplateLiteral42(["autumn-spice donut"])))
        },
        high: {
          index: 7,
          item: $item(_templateObject629 || (_templateObject629 = _taggedTemplateLiteral42(["autumn breeze"])))
        }
      },
      underground: {
        low: {
          index: 1,
          item: $item(_templateObject726 || (_templateObject726 = _taggedTemplateLiteral42(["autumn sweater-weather sweater"])))
        },
        mid: {
          index: 5,
          item: $item(_templateObject825 || (_templateObject825 = _taggedTemplateLiteral42(["autumn dollar"])))
        },
        high: {
          index: 8,
          item: $item(_templateObject921 || (_templateObject921 = _taggedTemplateLiteral42(["autumn years wisdom"])))
        }
      }
    };
  }
});

// node_modules/libram/dist/resources/2022/CombatLoversLocket.js
var CombatLoversLocket_exports = {};
__export(CombatLoversLocket_exports, {
  availableLocketMonsters: function() {
    return availableLocketMonsters;
  },
  findMonster: function() {
    return findMonster;
  },
  have: function() {
    return have40;
  },
  monstersReminisced: function() {
    return monstersReminisced;
  },
  reminisce: function() {
    return reminisce;
  },
  reminiscesLeft: function() {
    return reminiscesLeft;
  },
  unlockedLocketMonsters: function() {
    return unlockedLocketMonsters;
  }
});
function _slicedToArray15(arr, i) {
  return _arrayWithHoles15(arr) || _iterableToArrayLimit15(arr, i) || _unsupportedIterableToArray27(arr, i) || _nonIterableRest15();
}
function _nonIterableRest15() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray27(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray27(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray27(o, minLen);
}
function _arrayLikeToArray27(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit15(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles15(arr) {
  if (Array.isArray(arr)) return arr;
}
function _taggedTemplateLiteral43(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have40() {
  return have(locket);
}
function availableLocketMonsters() {
  if (reminiscesLeft() === 0) return [];
  return Object.entries((0, import_kolmafia55.getLocketMonsters)()).filter(function(_ref) {
    var _ref2 = _slicedToArray15(_ref, 2), unused = _ref2[1];
    return unused;
  }).map(function(_ref3) {
    var _ref4 = _slicedToArray15(_ref3, 1), name = _ref4[0];
    return (0, import_kolmafia55.toMonster)(name);
  });
}
function unlockedLocketMonsters() {
  return Object.entries((0, import_kolmafia55.getLocketMonsters)()).map(function(_ref5) {
    var _ref6 = _slicedToArray15(_ref5, 1), name = _ref6[0];
    return (0, import_kolmafia55.toMonster)(name);
  });
}
function parseLocketProperty() {
  return get("_locketMonstersFought").split(",").filter(function(id) {
    return id.trim().length > 0;
  });
}
function reminiscesLeft() {
  return have40() ? clamp(3 - parseLocketProperty().length, 0, 3) : 0;
}
function monstersReminisced() {
  return parseLocketProperty().map(function(id) {
    return (0, import_kolmafia55.toMonster)(id);
  });
}
function reminisce(monster) {
  if (!have40() || reminiscesLeft() === 0 || !(0, import_kolmafia55.getLocketMonsters)()[monster.name]) {
    return false;
  }
  (0, import_kolmafia55.cliExecute)("reminisce ".concat(monster));
  for (var _len = arguments.length, combatParams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    combatParams[_key - 1] = arguments[_key];
  }
  import_kolmafia55.runCombat.apply(void 0, combatParams);
  return monstersReminisced().includes(monster);
}
function findMonster(criteria) {
  var value = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : function() {
    return 1;
  };
  if (!have40() || reminiscesLeft() === 0) return null;
  var options = availableLocketMonsters().filter(criteria);
  if (!options.length) return null;
  return options.reduce(function(a, b) {
    return value(a) > value(b) ? a : b;
  });
}
var import_kolmafia55, _templateObject371, locket;
var init_CombatLoversLocket = __esm({
  "node_modules/libram/dist/resources/2022/CombatLoversLocket.js": function() {
    import_kolmafia55 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    locket = $item(_templateObject371 || (_templateObject371 = _taggedTemplateLiteral43(["combat lover's locket"])));
  }
});

// node_modules/libram/dist/resources/2022/GreyGoose.js
var GreyGoose_exports = {};
__export(GreyGoose_exports, {
  currentDrones: function() {
    return currentDrones;
  },
  currentExperience: function() {
    return currentExperience;
  },
  currentWeight: function() {
    return currentWeight;
  },
  expectedDrones: function() {
    return expectedDrones;
  },
  expectedExperience: function() {
    return expectedExperience;
  },
  expectedMeat: function() {
    return expectedMeat;
  },
  fightsUntil: function() {
    return fightsUntil;
  },
  hasMeatified: function() {
    return hasMeatified;
  },
  have: function() {
    return have41;
  }
});
function _taggedTemplateLiteral44(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have41() {
  return have(goose);
}
function currentExperience() {
  var postAscensionBaseExperience = have($familiar(_templateObject2103 || (_templateObject2103 = _taggedTemplateLiteral44(["Shorter-Order Cook"])))) && !get("gooseReprocessed") ? 81 + (have($item(_templateObject380 || (_templateObject380 = _taggedTemplateLiteral44(["blue plate"])))) ? 19 : 0) : 0;
  return goose.experience || postAscensionBaseExperience;
}
function currentWeight() {
  return Math.min(Math.floor(Math.sqrt(currentExperience())), 20);
}
function expectedDrones() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentWeight();
  return Math.max(0, weight - 5);
}
function expectedExperience() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentWeight();
  return Math.pow(Math.max(weight - 5, 0), (0, import_kolmafia56.myClass)().id === 27 ? 2 : 3);
}
function expectedMeat() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentWeight();
  return Math.pow(Math.max(weight - 5, 0), 4);
}
function hasMeatified() {
  return get("_meatifyMatterUsed");
}
function fightsUntil(target) {
  var bonusExperience = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : get2("Familiar Experience");
  var diff = Math.pow(target, 2) - currentExperience();
  if (diff <= 0) return 0;
  return Math.ceil(diff / (1 + bonusExperience + (have($skill(_templateObject459 || (_templateObject459 = _taggedTemplateLiteral44(["Testudinal Teachings"])))) ? 1 / 6 : 0)));
}
function currentDrones() {
  return get("gooseDronesRemaining");
}
var import_kolmafia56, _templateObject379, _templateObject2103, _templateObject380, _templateObject459, goose;
var init_GreyGoose = __esm({
  "node_modules/libram/dist/resources/2022/GreyGoose.js": function() {
    import_kolmafia56 = require("kolmafia");
    init_lib();
    init_modifier();
    init_property();
    init_template_string();
    goose = $familiar(_templateObject379 || (_templateObject379 = _taggedTemplateLiteral44(["Grey Goose"])));
  }
});

// node_modules/libram/dist/resources/2022/JuneCleaver.js
var JuneCleaver_exports = {};
__export(JuneCleaver_exports, {
  choices: function() {
    return choices;
  },
  choicesAvailable: function() {
    return choicesAvailable;
  },
  cleaver: function() {
    return cleaver;
  },
  damage: function() {
    return damage;
  },
  getInterval: function() {
    return getInterval;
  },
  getSkippedInterval: function() {
    return getSkippedInterval;
  },
  have: function() {
    return have42;
  },
  queue: function() {
    return queue;
  },
  skipsRemaining: function() {
    return skipsRemaining;
  }
});
function have42() {
  return (0, import_kolmafia57.availableAmount)(cleaver) > 0;
}
function getInterval() {
  var _encounters;
  var encounters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_juneCleaverEncounters");
  return (_encounters = [1, 6, 10, 12, 15, 20][encounters]) !== null && _encounters !== void 0 ? _encounters : 30;
}
function getSkippedInterval() {
  var _encounters2;
  var encounters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_juneCleaverEncounters");
  return (_encounters2 = [1, 2, 3, 3, 4, 5][encounters]) !== null && _encounters2 !== void 0 ? _encounters2 : 8;
}
function damage(element) {
  return get("_juneCleaver".concat(element));
}
function skipsRemaining() {
  return 5 - get("_juneCleaverSkips");
}
function queue() {
  return get("juneCleaverQueue").split(",").filter(function(x) {
    return x.trim().length > 0;
  }).map(function(x) {
    return parseInt(x);
  });
}
function choicesAvailable() {
  var currentQueue = queue();
  return choices.filter(function(choice) {
    return !currentQueue.includes(choice);
  });
}
var import_kolmafia57, cleaver, choices;
var init_JuneCleaver = __esm({
  "node_modules/libram/dist/resources/2022/JuneCleaver.js": function() {
    import_kolmafia57 = require("kolmafia");
    init_property();
    cleaver = (0, import_kolmafia57.toItem)("June cleaver");
    choices = [1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475];
  }
});

// node_modules/libram/dist/resources/2022/TrainSet.js
var TrainSet_exports = {};
__export(TrainSet_exports, {
  Station: function() {
    return Station;
  },
  canConfigure: function() {
    return canConfigure;
  },
  cycle: function() {
    return cycle;
  },
  doubledEffect: function() {
    return doubledEffect;
  },
  effect: function() {
    return effect;
  },
  have: function() {
    return have43;
  },
  installed: function() {
    return installed4;
  },
  next: function() {
    return next;
  },
  nextConfigurable: function() {
    return nextConfigurable;
  },
  setConfiguration: function() {
    return setConfiguration;
  }
});
function _taggedTemplateLiteral45(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function installed4() {
  return (0, import_kolmafia58.getWorkshed)() === item7;
}
function have43() {
  return installed4() || have(item7);
}
function effect(station) {
  var _trainsetEffects$get;
  return (_trainsetEffects$get = trainsetEffects.get(station)) !== null && _trainsetEffects$get !== void 0 ? _trainsetEffects$get : null;
}
function doubledEffect(station) {
  var _trainsetEffectsDoubl;
  return (_trainsetEffectsDoubl = trainsetEffectsDoubled.get(station)) !== null && _trainsetEffectsDoubl !== void 0 ? _trainsetEffectsDoubl : null;
}
function cycle() {
  return get("trainsetConfiguration").split(",");
}
function nextConfigurable() {
  return clamp(get("lastTrainsetConfiguration") + 40 - get("trainsetPosition"), 0, 40);
}
function canConfigure() {
  return installed4() && !nextConfigurable();
}
function stationToInt(station) {
  return pieces2.indexOf(station);
}
function setConfiguration(configuration) {
  if (!canConfigure()) return false;
  (0, import_kolmafia58.visitUrl)("campground.php?action=workshed");
  (0, import_kolmafia58.runChoice)(1, "forceoption=0".concat(configuration.map(function(station, index) {
    return "&slot[".concat(index, "]=").concat(stationToInt(station));
  }).join("")));
  (0, import_kolmafia58.visitUrl)("main.php");
  var currentConfiguration = cycle();
  return configuration.every(function(station, index) {
    return station === currentConfiguration[index];
  });
}
function next() {
  return cycle()[get("trainsetPosition") % 8];
}
var import_kolmafia58, _templateObject381, item7, Station, trainsetEffects, trainsetEffectsDoubled, pieces2;
var init_TrainSet = __esm({
  "node_modules/libram/dist/resources/2022/TrainSet.js": function() {
    import_kolmafia58 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item7 = $item(_templateObject381 || (_templateObject381 = _taggedTemplateLiteral45(["model train set"])));
    (function(Station2) {
      Station2["UNKNOWN"] = "";
      Station2["EMPTY"] = "empty";
      Station2["GAIN_MEAT"] = "meat_mine";
      Station2["TOWER_FIZZY"] = "tower_fizzy";
      Station2["VIEWING_PLATFORM"] = "viewing_platform";
      Station2["TOWER_FROZEN"] = "tower_frozen";
      Station2["SPOOKY_GRAVEYARD"] = "spooky_graveyard";
      Station2["LOGGING_MILL"] = "logging_mill";
      Station2["CANDY_FACTORY"] = "candy_factory";
      Station2["COAL_HOPPER"] = "coal_hopper";
      Station2["TOWER_SEWAGE"] = "tower_sewage";
      Station2["OIL_REFINERY"] = "oil_refinery";
      Station2["OIL_BRIDGE"] = "oil_bridge";
      Station2["WATER_BRIDGE"] = "water_bridge";
      Station2["GROIN_SILO"] = "groin_silo";
      Station2["GRAIN_SILO"] = "grain_silo";
      Station2["BRAIN_SILO"] = "brain_silo";
      Station2["BRAWN_SILO"] = "brawn_silo";
      Station2["PRAWN_SILO"] = "prawn_silo";
      Station2["TRACKSIDE_DINER"] = "trackside_diner";
      Station2["ORE_HOPPER"] = "ore_hopper";
    })(Station || (Station = {}));
    trainsetEffects = /* @__PURE__ */ new Map([[Station.TOWER_FIZZY, import_kolmafia58.Effect.get("Carbonated")], [Station.TOWER_FROZEN, import_kolmafia58.Effect.get("Frozen")], [Station.SPOOKY_GRAVEYARD, import_kolmafia58.Effect.get("Shivering Spine")], [Station.TOWER_SEWAGE, import_kolmafia58.Effect.get("Hot Soupy Garbage")], [Station.OIL_BRIDGE, import_kolmafia58.Effect.get("Burningly Oiled")], [Station.OIL_REFINERY, import_kolmafia58.Effect.get("Spookily Greasy")], [Station.WATER_BRIDGE, import_kolmafia58.Effect.get("Troubled Waters")], [Station.PRAWN_SILO, import_kolmafia58.Effect.get("Craving Prawns")]]);
    trainsetEffectsDoubled = /* @__PURE__ */ new Map([[Station.TOWER_FIZZY, import_kolmafia58.Effect.get("Double Carbonated")], [Station.TOWER_FROZEN, import_kolmafia58.Effect.get("Double Frozen")], [Station.SPOOKY_GRAVEYARD, import_kolmafia58.Effect.get("Doubly Shivering Spine")], [Station.TOWER_SEWAGE, import_kolmafia58.Effect.get("Double Hot Soupy Garbage")], [Station.OIL_BRIDGE, import_kolmafia58.Effect.get("Doubly Burningly Oiled")], [Station.OIL_REFINERY, import_kolmafia58.Effect.get("Doubly Spookily Greasy")], [Station.WATER_BRIDGE, import_kolmafia58.Effect.get("Doubly Troubled Waters")], [Station.PRAWN_SILO, import_kolmafia58.Effect.get("Doubly Craving Prawns")]]);
    pieces2 = [Station.EMPTY, Station.GAIN_MEAT, Station.TOWER_FIZZY, Station.VIEWING_PLATFORM, Station.TOWER_FROZEN, Station.SPOOKY_GRAVEYARD, Station.LOGGING_MILL, Station.CANDY_FACTORY, Station.COAL_HOPPER, Station.TOWER_SEWAGE, Station.UNKNOWN, Station.OIL_REFINERY, Station.OIL_BRIDGE, Station.WATER_BRIDGE, Station.GROIN_SILO, Station.GRAIN_SILO, Station.BRAIN_SILO, Station.BRAWN_SILO, Station.PRAWN_SILO, Station.TRACKSIDE_DINER, Station.ORE_HOPPER];
  }
});

// node_modules/libram/dist/resources/2022/Stillsuit.js
var Stillsuit_exports = {};
__export(Stillsuit_exports, {
  MODIFIER_TAGS: function() {
    return MODIFIER_TAGS;
  },
  bestFamiliar: function() {
    return bestFamiliar;
  },
  currentDistillateModifiers: function() {
    return currentDistillateModifiers;
  },
  distillateAdventures: function() {
    return distillateAdventures;
  },
  distillateModifier: function() {
    return distillateModifier;
  },
  drinkDistillate: function() {
    return drinkDistillate;
  },
  have: function() {
    return have44;
  },
  modifierRatio: function() {
    return modifierRatio;
  },
  nextDistillateModifiers: function() {
    return nextDistillateModifiers;
  }
});
function ownKeys7(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread7(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys7(Object(t), true).forEach(function(r2) {
      _defineProperty15(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys7(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty15(obj, key, value) {
  key = _toPropertyKey16(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey16(t) {
  var i = _toPrimitive16(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive16(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral46(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have44() {
  return have($item(_templateObject388 || (_templateObject388 = _taggedTemplateLiteral46(["tiny stillsuit"]))));
}
function distillateAdventures() {
  if (!have44()) return 0;
  var sweat = get("familiarSweat");
  return Math.round(Math.pow(sweat, 0.4));
}
function drinkDistillate() {
  if (!have44() || get("familiarSweat") <= 0) return false;
  return (0, import_kolmafia59.cliExecute)("drink stillsuit distillate");
}
function nextDistillateModifiers() {
  (0, import_kolmafia59.visitUrl)("inventory.php?action=distill&pwd");
  return distillateModifiers("nextDistillateMods");
}
function currentDistillateModifiers() {
  return distillateModifiers("currentDistillateMods");
}
function distillateModifier(modifier) {
  (0, import_kolmafia59.visitUrl)("inventory.php?action=distill&pwd");
  var value = (0, import_kolmafia59.splitModifiers)(get("currentDistillateMods"))[modifier];
  return value ? Number(value) : 0;
}
function isStillsuitTag(tag) {
  return tag in MODIFIER_TAGS;
}
function modifierRatio(familiar10) {
  var tags = getFamiliarTags(familiar10);
  return tags.filter(isStillsuitTag).reduce(function(acc, tag) {
    var _acc$MODIFIER_TAGS$ta;
    return _objectSpread7(_objectSpread7({}, acc), {}, _defineProperty15({}, MODIFIER_TAGS[tag], ((_acc$MODIFIER_TAGS$ta = acc[MODIFIER_TAGS[tag]]) !== null && _acc$MODIFIER_TAGS$ta !== void 0 ? _acc$MODIFIER_TAGS$ta : 0) + 1 / tags.length));
  }, {});
}
function bestFamiliar(modifier) {
  return maxBy(import_kolmafia59.Familiar.all().filter(have), function(familiar10) {
    var _modifierRatio$modifi;
    return (_modifierRatio$modifi = modifierRatio(familiar10)[modifier]) !== null && _modifierRatio$modifi !== void 0 ? _modifierRatio$modifi : 0;
  });
}
var import_kolmafia59, _templateObject388, distillateModifiers, MODIFIER_TAGS;
var init_Stillsuit = __esm({
  "node_modules/libram/dist/resources/2022/Stillsuit.js": function() {
    import_kolmafia59 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_modifier();
    init_utils();
    distillateModifiers = function(pref) {
      return parseModifiers(pref);
    };
    MODIFIER_TAGS = Object.freeze({
      mineral: "Muscle",
      robot: "Muscle",
      organic: "Muscle",
      hasbones: "Muscle",
      technological: "Mysticality",
      orb: "Mysticality",
      sentient: "Mysticality",
      polygonal: "Mysticality",
      software: "Mysticality",
      cantalk: "Mysticality",
      humanoid: "Moxie",
      hashands: "Moxie",
      cute: "Moxie",
      good: "Moxie",
      phallic: "Moxie",
      animatedart: "Moxie",
      person: "Moxie",
      haseyes: "Item Drop",
      object: "Item Drop",
      haslegs: "Item Drop",
      food: "Food Drop",
      vegetable: "Food Drop",
      edible: "Food Drop",
      animal: "Damage Reduction",
      insect: "Damage Reduction",
      wearsclothes: "Damage Reduction",
      isclothes: "Damage Reduction",
      hasshell: "Damage Reduction",
      haswings: "Initiative",
      fast: "Initiative",
      flies: "Initiative",
      hovers: "Initiative",
      swims: "Initiative",
      aquatic: "Initiative",
      spooky: "Spooky Damage",
      undead: "Spooky Damage",
      evil: "Spooky Damage",
      reallyevil: "Spooky Damage",
      hot: "Hot Damage",
      cold: "Cold Damage",
      sleaze: "Sleaze Damage",
      stench: "Stench Damage",
      bite: "Weapon Damage",
      hasclaws: "Weapon Damage",
      hasbeak: "Weapon Damage",
      hasstinger: "Weapon Damage",
      hard: "Weapon Damage"
    });
  }
});

// node_modules/libram/dist/resources/2023/AugustScepter.js
var AugustScepter_exports = {};
__export(AugustScepter_exports, {
  SKILLS: function() {
    return SKILLS;
  },
  canCast: function() {
    return canCast;
  },
  getAugustCast: function() {
    return getAugustCast;
  },
  getTodayCast: function() {
    return getTodayCast;
  },
  have: function() {
    return have45;
  },
  todaysSkill: function() {
    return todaysSkill;
  }
});
function _taggedTemplateLiteral47(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have45() {
  return have($item(_templateObject389 || (_templateObject389 = _taggedTemplateLiteral47(["august scepter"]))));
}
function todaysSkill() {
  return (0, import_kolmafia60.toSkill)((gameDay().getDate() + 7451).toFixed(0));
}
function getAugustCast(skillNum) {
  return get("_aug".concat(skillNum, "Cast"));
}
function getTodayCast() {
  return get("_augTodayCast");
}
function canCast(skillNum) {
  return have45() && !get("_aug".concat(skillNum, "Cast")) && (gameDay().getDate() === skillNum && !getTodayCast() || get("_augSkillsCast") < 5);
}
var import_kolmafia60, _templateObject389, _templateObject2104, SKILLS;
var init_AugustScepter = __esm({
  "node_modules/libram/dist/resources/2023/AugustScepter.js": function() {
    import_kolmafia60 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    SKILLS = Object.freeze($skills(_templateObject2104 || (_templateObject2104 = _taggedTemplateLiteral47(["Aug. 1st: Mountain Climbing Day!, Aug. 2nd: Find an Eleven-Leaf Clover Day, Aug. 3rd: Watermelon Day!, Aug. 4th: Water Balloon Day!, Aug. 5th: Oyster Day!, Aug. 6th: Fresh Breath Day!, Aug. 7th: Lighthouse Day!, Aug. 8th: Cat Day!, Aug. 9th: Hand Holding Day!, Aug. 10th: World Lion Day!, Aug. 11th: Presidential Joke Day!, Aug. 12th: Elephant Day!, Aug. 13th: Left/Off Hander's Day!, Aug. 14th: Financial Awareness  Day!, Aug. 15th: Relaxation Day!, Aug. 16th: Roller Coaster Day!, Aug. 17th: Thriftshop Day!, Aug. 18th: Serendipity Day!, Aug. 19th: Honey Bee Awareness Day!, Aug. 20th: Mosquito Day!, Aug. 21st: Spumoni Day!, Aug. 22nd: Tooth Fairy Day!, Aug. 23rd: Ride the Wind Day!, Aug. 24th: Waffle Day!, Aug. 25th: Banana Split Day!, Aug. 26th: Toilet Paper Day!, Aug. 27th: Just Because Day!, Aug. 28th: Race Your Mouse Day!, Aug. 29th: More Herbs, Less Salt  Day!, Aug. 30th: Beach Day!, Aug. 31st: Cabernet Sauvignon  Day!"], ["Aug. 1st: Mountain Climbing Day!, Aug. 2nd: Find an Eleven-Leaf Clover Day, Aug. 3rd: Watermelon Day!, Aug. 4th: Water Balloon Day!, Aug. 5th: Oyster Day!, Aug. 6th: Fresh Breath Day!, Aug. 7th: Lighthouse Day!, Aug. 8th: Cat Day!, Aug. 9th: Hand Holding Day!, Aug. 10th: World Lion Day!, Aug. 11th: Presidential Joke Day!, Aug. 12th: Elephant Day!, Aug. 13th: Left/Off Hander's Day!, Aug. 14th: Financial Awareness  Day!, Aug. 15th: Relaxation Day!, Aug. 16th: Roller Coaster Day!, Aug. 17th: Thriftshop Day!, Aug. 18th: Serendipity Day!, Aug. 19th: Honey Bee Awareness Day!, Aug. 20th: Mosquito Day!, Aug. 21st: Spumoni Day!, Aug. 22nd: Tooth Fairy Day!, Aug. 23rd: Ride the Wind Day!, Aug. 24th: Waffle Day!, Aug. 25th: Banana Split Day!, Aug. 26th: Toilet Paper Day!, Aug. 27th: Just Because Day!, Aug. 28th: Race Your Mouse Day!, Aug. 29th: More Herbs\\, Less Salt  Day!, Aug. 30th: Beach Day!, Aug. 31st: Cabernet Sauvignon  Day!"]))));
  }
});

// node_modules/libram/dist/resources/2023/BurningLeaves.js
var BurningLeaves_exports = {};
__export(BurningLeaves_exports, {
  burnFor: function() {
    return burnFor;
  },
  burnLeaves: function() {
    return burnLeaves;
  },
  burnSpecialLeaves: function() {
    return burnSpecialLeaves;
  },
  have: function() {
    return have46;
  },
  jumpInFire: function() {
    return jumpInFire;
  },
  numberOfLeaves: function() {
    return numberOfLeaves;
  }
});
function _taggedTemplateLiteral48(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have46() {
  return haveInCampground(item8);
}
function numberOfLeaves() {
  return (0, import_kolmafia61.itemAmount)($item(_templateObject1814 || (_templateObject1814 = _taggedTemplateLiteral48(["inflammable leaf"]))));
}
function burnSpecialLeaves(leaves) {
  var lea = burnFor.get(leaves);
  if (lea === void 0 || lea > numberOfLeaves()) {
    return false;
  }
  return (0, import_kolmafia61.cliExecute)("leaves ".concat(leaves));
}
function burnLeaves(leaves) {
  if (leaves > numberOfLeaves()) {
    return false;
  }
  return (0, import_kolmafia61.cliExecute)("leaves ".concat(leaves));
}
function visitLeaves() {
  (0, import_kolmafia61.cliExecute)("leaves");
}
function jumpInFire() {
  if (get("_leavesJumped")) {
    return false;
  }
  if (get("_leavesBurned") === 0) {
    return false;
  }
  visitLeaves();
  (0, import_kolmafia61.runChoice)(2);
  return get("_leavesJumped");
}
var import_kolmafia61, _templateObject390, _templateObject2105, _templateObject391, _templateObject460, _templateObject537, _templateObject630, _templateObject727, _templateObject826, _templateObject923, _templateObject1020, _templateObject1119, _templateObject1218, _templateObject1317, _templateObject1415, _templateObject1514, _templateObject1614, _templateObject1714, _templateObject1814, item8, burnFor;
var init_BurningLeaves = __esm({
  "node_modules/libram/dist/resources/2023/BurningLeaves.js": function() {
    import_kolmafia61 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item8 = $item(_templateObject390 || (_templateObject390 = _taggedTemplateLiteral48(["A Guide to Burning Leaves"])));
    burnFor = /* @__PURE__ */ new Map([[$monster(_templateObject2105 || (_templateObject2105 = _taggedTemplateLiteral48(["flaming leaflet"]))), 11], [$item(_templateObject391 || (_templateObject391 = _taggedTemplateLiteral48(["autumnic bomb"]))), 37], [$item(_templateObject460 || (_templateObject460 = _taggedTemplateLiteral48(["impromptu torch"]))), 42], [$item(_templateObject537 || (_templateObject537 = _taggedTemplateLiteral48(["flaming fig leaf"]))), 43], [$item(_templateObject630 || (_templateObject630 = _taggedTemplateLiteral48(["smoldering drape"]))), 44], [$item(_templateObject727 || (_templateObject727 = _taggedTemplateLiteral48(["distilled resin"]))), 50], [$item(_templateObject826 || (_templateObject826 = _taggedTemplateLiteral48(["autumnal aegis"]))), 66], [$item(_templateObject923 || (_templateObject923 = _taggedTemplateLiteral48(["lit leaf lasso"]))), 69], [$item(_templateObject1020 || (_templateObject1020 = _taggedTemplateLiteral48(["forest canopy bed"]))), 74], [$item(_templateObject1119 || (_templateObject1119 = _taggedTemplateLiteral48(["autumnic balm"]))), 99], [$monster(_templateObject1218 || (_templateObject1218 = _taggedTemplateLiteral48(["flaming monstera"]))), 111], [$item(_templateObject1317 || (_templateObject1317 = _taggedTemplateLiteral48(["day shortener"]))), 222], [$monster(_templateObject1415 || (_templateObject1415 = _taggedTemplateLiteral48(["leaviathan"]))), 666], [$item(_templateObject1514 || (_templateObject1514 = _taggedTemplateLiteral48(["coping juice"]))), 1111], [$item(_templateObject1614 || (_templateObject1614 = _taggedTemplateLiteral48(["smoldering leafcutter ant egg"]))), 6666], [$item(_templateObject1714 || (_templateObject1714 = _taggedTemplateLiteral48(["super-heated leaf"]))), 11111]]);
  }
});

// node_modules/libram/dist/resources/2023/CinchoDeMayo.js
var CinchoDeMayo_exports = {};
__export(CinchoDeMayo_exports, {
  cinchRestoredBy: function() {
    return cinchRestoredBy;
  },
  currentCinch: function() {
    return currentCinch;
  },
  have: function() {
    return have47;
  },
  skills: function() {
    return skills2;
  },
  totalAvailableCinch: function() {
    return totalAvailableCinch;
  }
});
function _taggedTemplateLiteral49(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have47() {
  return have(cincho);
}
function currentCinch() {
  return have47() ? clamp(100 - get("_cinchUsed"), 0, 100) : 0;
}
function cinchRestoredBy() {
  var currentRests = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_cinchoRests");
  return have47() ? clamp(50 - currentRests * 5, 5, 30) : 0;
}
function totalAvailableCinch() {
  var remainingRests = Math.max(0, (0, import_kolmafia62.totalFreeRests)() - get("timesRested"));
  return have47() ? currentCinch() + sum(new Array(remainingRests).fill(null).map(function(_, i) {
    return i + get("_cinchoRests");
  }), function(restNumber) {
    return cinchRestoredBy(restNumber);
  }) : 0;
}
var import_kolmafia62, _templateObject398, _templateObject2106, _templateObject399, _templateObject461, _templateObject538, _templateObject631, _templateObject728, cincho, skills2;
var init_CinchoDeMayo = __esm({
  "node_modules/libram/dist/resources/2023/CinchoDeMayo.js": function() {
    import_kolmafia62 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    cincho = $item(_templateObject398 || (_templateObject398 = _taggedTemplateLiteral49(["Cincho de Mayo"])));
    skills2 = {
      SaltAndLime: $skill(_templateObject2106 || (_templateObject2106 = _taggedTemplateLiteral49(["Cincho: Dispense Salt and Lime"]))),
      PartySoundtrack: $skill(_templateObject399 || (_templateObject399 = _taggedTemplateLiteral49(["Cincho: Party Soundtrack"]))),
      FiestaExit: $skill(_templateObject461 || (_templateObject461 = _taggedTemplateLiteral49(["Cincho: Fiesta Exit"]))),
      ProjectilePi\u00F1ata: $skill(_templateObject538 || (_templateObject538 = _taggedTemplateLiteral49(["Cincho: Projectile Pi\xF1ata"]))),
      PartyFoul: $skill(_templateObject631 || (_templateObject631 = _taggedTemplateLiteral49(["Cincho: Party Foul"]))),
      ConfettiExtrava: $skill(_templateObject728 || (_templateObject728 = _taggedTemplateLiteral49(["Cincho: Confetti Extravaganza"])))
    };
  }
});

// node_modules/libram/dist/resources/2023/ClosedCircuitPayphone.js
var ClosedCircuitPayphone_exports = {};
__export(ClosedCircuitPayphone_exports, {
  byIngress: function() {
    return byIngress;
  },
  chooseQuest: function() {
    return chooseQuest;
  },
  chooseRift: function() {
    return chooseRift;
  },
  currentIngress: function() {
    return currentIngress;
  },
  currentRift: function() {
    return currentRift;
  },
  have: function() {
    return have48;
  },
  rifts: function() {
    return rifts;
  },
  rufusTarget: function() {
    return rufusTarget;
  },
  submitQuest: function() {
    return submitQuest;
  }
});
function _taggedTemplateLiteral50(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have48() {
  return have(item9);
}
function rufusTarget() {
  var target = get("rufusQuestTarget");
  switch (get("rufusQuestType")) {
    case "entity":
      return import_kolmafia63.Monster.get(target);
    case "artifact":
    case "items":
      return import_kolmafia63.Item.get(target);
    default:
      return null;
  }
}
function currentIngress() {
  return get("shadowRiftIngress");
}
function currentRift() {
  var ingress = currentIngress();
  return ingress ? INGRESS_RIFTS[ingress] : null;
}
function chooseRift(options) {
  var filterFunction = function(l) {
    var _options$monsters, _options$drops, _options$otherFilter, _options$otherFilter2;
    var monsters = (0, import_kolmafia63.getMonsters)(l);
    if (options.canAdventure && !(0, import_kolmafia63.canAdventure)(l)) return false;
    if ((_options$monsters = options.monsters) !== null && _options$monsters !== void 0 && _options$monsters.some(function(m) {
      return !monsters.includes(m);
    })) return false;
    if ((_options$drops = options.drops) !== null && _options$drops !== void 0 && _options$drops.every(function(i) {
      return !monsters.some(function(m) {
        return i.name in (0, import_kolmafia63.itemDrops)(m);
      });
    })) return false;
    return (_options$otherFilter = (_options$otherFilter2 = options.otherFilter) === null || _options$otherFilter2 === void 0 ? void 0 : _options$otherFilter2.call(options, l)) !== null && _options$otherFilter !== void 0 ? _options$otherFilter : true;
  };
  var validRifts = [].concat(RIFTS).filter(filterFunction);
  if (!validRifts.length) return null;
  return options.sortBy ? maxBy(validRifts, options.sortBy) : validRifts[0];
}
function chooseQuest(chooser) {
  if (get("questRufus") !== "unstarted") return false;
  if (!have48()) return false;
  withChoice(1497, "", function() {
    var _get3;
    directlyUse(item9);
    (0, import_kolmafia63.runChoice)(chooser({
      artifact: (0, import_kolmafia63.toItem)(get("rufusDesiredArtifact")),
      entity: (_get3 = get("rufusDesiredEntity")) !== null && _get3 !== void 0 ? _get3 : $monster.none,
      items: (0, import_kolmafia63.toItem)(get("rufusDesiredItems"))
    }));
  });
  return get("questRufus") !== "unstarted";
}
function rifts() {
  return [].concat(RIFTS);
}
function submitQuest() {
  if (questStep("questRufus") === 1) {
    withChoice(1498, 1, function() {
      return (0, import_kolmafia63.use)(item9);
    });
    return questStep("questRufus") === -1;
  }
  return false;
}
var import_kolmafia63, _templateObject400, _templateObject2107, _templateObject3100, _templateObject466, _templateObject539, _templateObject634, _templateObject729, _templateObject827, _templateObject924, _templateObject1021, _templateObject1120, _templateObject1219, _templateObject1318, _templateObject1416, item9, INGRESS_RIFTS, RIFTS, byIngress;
var init_ClosedCircuitPayphone = __esm({
  "node_modules/libram/dist/resources/2023/ClosedCircuitPayphone.js": function() {
    import_kolmafia63 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item9 = $item(_templateObject400 || (_templateObject400 = _taggedTemplateLiteral50(["closed-circuit pay phone"])));
    INGRESS_RIFTS = {
      desertbeach: $location(_templateObject2107 || (_templateObject2107 = _taggedTemplateLiteral50(["Shadow Rift (Desert Beach)"]))),
      forestvillage: $location(_templateObject3100 || (_templateObject3100 = _taggedTemplateLiteral50(["Shadow Rift (Forest Village)"]))),
      mclargehuge: $location(_templateObject466 || (_templateObject466 = _taggedTemplateLiteral50(["Shadow Rift (Mt. McLargeHuge)"]))),
      beanstalk: $location(_templateObject539 || (_templateObject539 = _taggedTemplateLiteral50(["Shadow Rift (Somewhere Over the Beanstalk)"]))),
      manor3: $location(_templateObject634 || (_templateObject634 = _taggedTemplateLiteral50(["Shadow Rift (Spookyraven Manor Third Floor)"]))),
      "8bit": $location(_templateObject729 || (_templateObject729 = _taggedTemplateLiteral50(["Shadow Rift (The 8-Bit Realm)"]))),
      pyramid: $location(_templateObject827 || (_templateObject827 = _taggedTemplateLiteral50(["Shadow Rift (The Ancient Buried Pyramid)"]))),
      giantcastle: $location(_templateObject924 || (_templateObject924 = _taggedTemplateLiteral50(["Shadow Rift (The Castle in the Clouds in the Sky)"]))),
      woods: $location(_templateObject1021 || (_templateObject1021 = _taggedTemplateLiteral50(["Shadow Rift (The Distant Woods)"]))),
      hiddencity: $location(_templateObject1120 || (_templateObject1120 = _taggedTemplateLiteral50(["Shadow Rift (The Hidden City)"]))),
      cemetery: $location(_templateObject1219 || (_templateObject1219 = _taggedTemplateLiteral50(["Shadow Rift (The Misspelled Cemetary)"]))),
      plains: $location(_templateObject1318 || (_templateObject1318 = _taggedTemplateLiteral50(["Shadow Rift (The Nearby Plains)"]))),
      town_right: $location(_templateObject1416 || (_templateObject1416 = _taggedTemplateLiteral50(["Shadow Rift (The Right Side of the Tracks)"])))
    };
    RIFTS = Array.from(Object.values(INGRESS_RIFTS));
    byIngress = makeByXFunction(currentIngress);
  }
});

// node_modules/libram/dist/resources/2023/CursedMonkeyPaw.js
var CursedMonkeyPaw_exports = {};
__export(CursedMonkeyPaw_exports, {
  getUnwishableEffects: function() {
    return getUnwishableEffects;
  },
  have: function() {
    return have49;
  },
  isWishable: function() {
    return isWishable;
  },
  wishFor: function() {
    return wishFor;
  },
  wishableItems: function() {
    return wishableItems;
  },
  wishes: function() {
    return wishes;
  }
});
function _taggedTemplateLiteral51(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have49() {
  return have(item10);
}
function wishes() {
  return clamp(5 - get("_monkeyPawWishesUsed"), 0, 5);
}
function wishableItems() {
  var filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return new Set(import_kolmafia64.Location.all().filter(function(l) {
    var _filters$location, _filters$location2;
    return (0, import_kolmafia64.canAdventure)(l) && ((_filters$location = (_filters$location2 = filters.location) === null || _filters$location2 === void 0 ? void 0 : _filters$location2.call(filters, l)) !== null && _filters$location !== void 0 ? _filters$location : true);
  }).flatMap(function(l) {
    return (0, import_kolmafia64.getMonsters)(l).filter(function(m) {
      var _filters$monster, _filters$monster2;
      return m.copyable && ((_filters$monster = (_filters$monster2 = filters.monster) === null || _filters$monster2 === void 0 ? void 0 : _filters$monster2.call(filters, m)) !== null && _filters$monster !== void 0 ? _filters$monster : true);
    }).flatMap(function(m) {
      return (0, import_kolmafia64.itemDropsArray)(m).filter(function(_ref) {
        var _filters$drop, _filters$drop2;
        var type = _ref.type, rate = _ref.rate, drop = _ref.drop;
        return !drop.quest && (type !== "c" || rate >= 1) && // Remove random roll drops
        ((_filters$drop = (_filters$drop2 = filters.drop) === null || _filters$drop2 === void 0 ? void 0 : _filters$drop2.call(filters, {
          type: type,
          rate: rate,
          drop: drop
        })) !== null && _filters$drop !== void 0 ? _filters$drop : true);
      }).map(function(_ref2) {
        var drop = _ref2.drop;
        return drop;
      });
    });
  }));
}
function unwishableEffects() {
  var names = import_kolmafia64.Effect.all().filter(function(e) {
    return !e.attributes.includes("nohookah");
  }).map(function(e) {
    var name = e.name.toLowerCase();
    return {
      name: name,
      splitName: name.split(INVALID_CHARACTERS)
    };
  });
  return names.filter(function(_ref3) {
    var name = _ref3.name, splitName = _ref3.splitName;
    return (
      // Any effect that doesn't contain an INVALID_CHARACTER is fine
      splitName.length > 1 && // To be unwishable, there can't be any substrings that uniquely match a genie-wishable effect
      splitName.every(function(s) {
        return (
          // So we check every maximal substring against every one of our genie-wishable effects, excluding the effect we're currently looking at
          // if one of the substrings matches a substring associated with another effect, we're screwed.
          names.some(function(_ref4) {
            var n = _ref4.name;
            return n !== name && n.includes(s);
          })
        );
      })
    );
  }).map(function(_ref5) {
    var name = _ref5.name;
    return (0, import_kolmafia64.toEffect)(name);
  });
}
function getUnwishableEffects() {
  var _unwishableEffects2;
  return (_unwishableEffects2 = _unwishableEffects) !== null && _unwishableEffects2 !== void 0 ? _unwishableEffects2 : _unwishableEffects = unwishableEffects();
}
function isWishable(wish) {
  if (wish instanceof import_kolmafia64.Item) {
    return wishableItems().has(wish);
  } else {
    if (wish.attributes.includes("nohookah")) return false;
    if (!wish.name.match(/[.,']/)) return true;
    return !getUnwishableEffects().includes(wish);
  }
}
function wishFor(wish) {
  if (wishes() <= 0) return false;
  if (wish instanceof import_kolmafia64.Effect) return (0, import_kolmafia64.monkeyPaw)(wish);
  var locations = import_kolmafia64.Location.all().filter(function(l) {
    return (0, import_kolmafia64.canAdventure)(l) && (0, import_kolmafia64.getMonsters)(l).some(function(m) {
      return m.copyable && (0, import_kolmafia64.itemDropsArray)(m).some(function(_ref6) {
        var drop = _ref6.drop;
        return drop === wish;
      });
    });
  });
  try {
    if (locations.length) {
      (0, import_kolmafia64.cliExecute)("checkpoint");
      (0, import_kolmafia64.prepareForAdventure)(locations[0]);
    }
    var result = (0, import_kolmafia64.monkeyPaw)(wish);
    if (!result) {
      logger_default.debug("Failed to monkeyPaw wish for ".concat(wish, "; assumed it was available in locations ").concat(locations.join(", ")));
    }
    return result;
  } finally {
    if (locations.length) (0, import_kolmafia64.cliExecute)("outfit checkpoint");
  }
}
var import_kolmafia64, _templateObject401, item10, INVALID_CHARACTERS, _unwishableEffects;
var init_CursedMonkeyPaw = __esm({
  "node_modules/libram/dist/resources/2023/CursedMonkeyPaw.js": function() {
    import_kolmafia64 = require("kolmafia");
    init_lib();
    init_logger();
    init_property();
    init_template_string();
    init_utils();
    item10 = $item(_templateObject401 || (_templateObject401 = _taggedTemplateLiteral51(["cursed monkey's paw"])));
    INVALID_CHARACTERS = /[^a-z\d -]/g;
  }
});

// node_modules/libram/dist/resources/2024/AprilingBandHelmet.js
var AprilingBandHelmet_exports = {};
__export(AprilingBandHelmet_exports, {
  INSTRUMENTS: function() {
    return INSTRUMENTS;
  },
  INSTRUMENT_ITEMS: function() {
    return INSTRUMENT_ITEMS;
  },
  MARCHING_SONGS: function() {
    return MARCHING_SONGS;
  },
  MARCHING_SONG_EFFECTS: function() {
    return MARCHING_SONG_EFFECTS;
  },
  canChangeSong: function() {
    return canChangeSong;
  },
  canJoinSection: function() {
    return canJoinSection;
  },
  canPlay: function() {
    return canPlay;
  },
  changeSong: function() {
    return changeSong;
  },
  conduct: function() {
    return conduct;
  },
  have: function() {
    return have50;
  },
  joinSection: function() {
    return joinSection;
  },
  play: function() {
    return play;
  }
});
function _slicedToArray16(arr, i) {
  return _arrayWithHoles16(arr) || _iterableToArrayLimit16(arr, i) || _unsupportedIterableToArray28(arr, i) || _nonIterableRest16();
}
function _nonIterableRest16() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray28(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray28(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray28(o, minLen);
}
function _arrayLikeToArray28(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit16(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles16(arr) {
  if (Array.isArray(arr)) return arr;
}
function _taggedTemplateLiteral52(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have50() {
  return have(helmet2);
}
function canJoinSection() {
  return have50() && get("_aprilBandInstruments") < 2;
}
function makeConductFunction(mafiaClass, canDo, set3, offset) {
  return function(input) {
    if (!canDo()) return false;
    var _ref = typeof input === "string" ? [input, mafiaClass.get(input)] : [input.name, input], _ref2 = _slicedToArray16(_ref, 2), name = _ref2[0], instance = _ref2[1];
    if (have(instance)) return true;
    var key = set3.indexOf(name);
    if (key === -1) return false;
    visitConduct();
    (0, import_kolmafia65.runChoice)(key + offset);
    (0, import_kolmafia65.runChoice)(9);
    return have(instance);
  };
}
function canChangeSong() {
  return have50() && get("nextAprilBandTurn") <= (0, import_kolmafia65.totalTurnsPlayed)();
}
function conduct(result) {
  if (result instanceof import_kolmafia65.Item || arrayContains(result, INSTRUMENTS)) {
    return joinSection(result);
  }
  return changeSong(result);
}
function play(instrument) {
  var acquire = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var item14 = instrument instanceof import_kolmafia65.Item ? instrument : import_kolmafia65.Item.get(instrument);
  if (!canPlay(instrument, acquire)) return false;
  if (acquire && !have(item14)) joinSection(item14);
  var currentUsesRemaining = item14.dailyusesleft;
  (0, import_kolmafia65.visitUrl)("inventory.php?pwd=".concat((0, import_kolmafia65.myHash)(), "&iid=").concat(item14.id, "&action=aprilplay"), false);
  return item14.dailyusesleft !== currentUsesRemaining;
}
function canPlay(instrument) {
  var acquire = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  if (!have50()) return false;
  var item14 = instrument instanceof import_kolmafia65.Item ? instrument : import_kolmafia65.Item.get(instrument);
  if (!have(item14) && (!acquire || !canJoinSection())) return false;
  if (item14.dailyusesleft <= 0) return false;
  return true;
}
var import_kolmafia65, _templateObject408, helmet2, MARCHING_SONGS, MARCHING_SONG_EFFECTS, INSTRUMENTS, INSTRUMENT_ITEMS, visitConduct, joinSection, changeSong;
var init_AprilingBandHelmet = __esm({
  "node_modules/libram/dist/resources/2024/AprilingBandHelmet.js": function() {
    import_kolmafia65 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    helmet2 = $item(_templateObject408 || (_templateObject408 = _taggedTemplateLiteral52(["Apriling band helmet"])));
    MARCHING_SONGS = Object.freeze(["Apriling Band Patrol Beat", "Apriling Band Battle Cadence", "Apriling Band Celebration Bop"]);
    MARCHING_SONG_EFFECTS = Object.freeze(MARCHING_SONGS.map(function(song2) {
      return (0, import_kolmafia65.toEffect)(song2);
    }));
    INSTRUMENTS = Object.freeze(["Apriling band saxophone", "Apriling band quad tom", "Apriling band tuba", "Apriling band staff", "Apriling band piccolo"]);
    INSTRUMENT_ITEMS = Object.freeze(INSTRUMENTS.map(function(instrument) {
      return (0, import_kolmafia65.toItem)(instrument);
    }));
    visitConduct = function() {
      return (0, import_kolmafia65.visitUrl)("inventory.php?pwd&action=apriling");
    };
    joinSection = makeConductFunction(import_kolmafia65.Item, canJoinSection, INSTRUMENTS, 4);
    changeSong = makeConductFunction(import_kolmafia65.Effect, canChangeSong, MARCHING_SONGS, 1);
  }
});

// node_modules/libram/dist/resources/2024/ChestMimic.js
var ChestMimic_exports = {};
__export(ChestMimic_exports, {
  differentiableQuantity: function() {
    return differentiableQuantity;
  },
  differentiate: function() {
    return differentiate;
  },
  donate: function() {
    return donate;
  },
  eggMonsters: function() {
    return eggMonsters;
  },
  getDonableMonsters: function() {
    return getDonableMonsters;
  },
  getReceivableMonsters: function() {
    return getReceivableMonsters;
  },
  have: function() {
    return have51;
  },
  receive: function() {
    return receive;
  }
});
function _taggedTemplateLiteral53(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have51() {
  return have(familiar9);
}
function getMonsters3(selectNumber, page) {
  var total = (0, import_kolmafia66.xpath)(page, makeXpath(selectNumber, false));
  var disabled = new Set((0, import_kolmafia66.xpath)(page, makeXpath(selectNumber, true)));
  return total.filter(function(m) {
    return !disabled.has(m);
  }).map(function(id) {
    return (0, import_kolmafia66.toMonster)(id);
  });
}
function getDonableMonsters() {
  if (!canDonate()) return [];
  var selectNumber = canReceive() ? 2 : 1;
  try {
    var page = visitBank();
    return getMonsters3(selectNumber, page);
  } finally {
    (0, import_kolmafia66.visitUrl)("main.php");
  }
}
function getReceivableMonsters() {
  if (!canReceive()) return [];
  try {
    var page = visitBank();
    return getMonsters3(1, page);
  } finally {
    (0, import_kolmafia66.visitUrl)("main.php");
  }
}
function donate(monster) {
  if (!canDonate()) return false;
  try {
    var selectNumber = canReceive() ? 2 : 1;
    var page = visitBank();
    var available6 = getMonsters3(selectNumber, page);
    if (!available6.includes(monster)) return false;
    return (0, import_kolmafia66.runChoice)(1, "mid=".concat(monster.id)).includes("You donate your egg to science.");
  } finally {
    (0, import_kolmafia66.visitUrl)("main.php");
  }
}
function receive(monster) {
  if (!canReceive()) return false;
  try {
    var page = visitBank();
    var available6 = getMonsters3(1, page);
    if (!available6.includes(monster)) return false;
    return (0, import_kolmafia66.runChoice)(2, "mid=".concat(monster.id)).includes("Your mimic pops into a backroom and returns a few moments later with a fresh mimic egg!");
  } finally {
    (0, import_kolmafia66.visitUrl)("main.php");
  }
}
function differentiate(monster) {
  var page = directlyUse($item(_templateObject3101 || (_templateObject3101 = _taggedTemplateLiteral53(["mimic egg"]))));
  var monsters = getMonsters3(1, page);
  if (!monsters.includes(monster)) {
    (0, import_kolmafia66.visitUrl)("main.php");
    return false;
  }
  (0, import_kolmafia66.runChoice)(1, "mid=".concat(monster.id));
  for (var _len = arguments.length, combatParams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    combatParams[_key - 1] = arguments[_key];
  }
  import_kolmafia66.runCombat.apply(void 0, combatParams);
  return true;
}
function eggMonsters() {
  return new Map(multiSplit("mimicEggMonsters", ",", ":", [import_kolmafia66.toMonster, Number]));
}
function differentiableQuantity(monster) {
  var _eggMonsters$get;
  if (!have($item(_templateObject467 || (_templateObject467 = _taggedTemplateLiteral53(["mimic egg"]))))) return 0;
  return (_eggMonsters$get = eggMonsters().get(monster)) !== null && _eggMonsters$get !== void 0 ? _eggMonsters$get : 0;
}
var import_kolmafia66, _templateObject409, _templateObject2108, _templateObject3101, _templateObject467, familiar9, visitBank, canDonate, canReceive, makeXpath;
var init_ChestMimic = __esm({
  "node_modules/libram/dist/resources/2024/ChestMimic.js": function() {
    import_kolmafia66 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    familiar9 = $familiar(_templateObject409 || (_templateObject409 = _taggedTemplateLiteral53(["Chest Mimic"])));
    visitBank = function() {
      return (0, import_kolmafia66.visitUrl)("place.php?whichplace=town_right&action=townright_dna", false);
    };
    canDonate = function() {
      return have($item(_templateObject2108 || (_templateObject2108 = _taggedTemplateLiteral53(["mimic egg"])))) && get("_mimicEggsDonated") < 3;
    };
    canReceive = function() {
      return familiar9.experience >= 100 && get("_mimicEggsObtained") < 11;
    };
    makeXpath = function(selectNumber, disabled) {
      return '//select[@name="mid"]['.concat(selectNumber, "]/option[position()>0]").concat(disabled ? "[@disabled]" : "", "/@value");
    };
  }
});

// node_modules/libram/dist/resources/2024/MayamCalendar.js
var MayamCalendar_exports = {};
__export(MayamCalendar_exports, {
  RESONANCES: function() {
    return RESONANCES;
  },
  RESONANCE_KEYS: function() {
    return RESONANCE_KEYS;
  },
  RINGS: function() {
    return RINGS;
  },
  available: function() {
    return available5;
  },
  getResonanceResult: function() {
    return getResonanceResult;
  },
  have: function() {
    return have52;
  },
  remainingUses: function() {
    return remainingUses;
  },
  resonanceAvailable: function() {
    return resonanceAvailable;
  },
  resonanceFor: function() {
    return resonanceFor;
  },
  submit: function() {
    return submit;
  },
  symbolsUsed: function() {
    return symbolsUsed;
  },
  toCombination: function() {
    return toCombination;
  },
  toCombinationString: function() {
    return toCombinationString;
  }
});
function _slicedToArray17(arr, i) {
  return _arrayWithHoles17(arr) || _iterableToArrayLimit17(arr, i) || _unsupportedIterableToArray29(arr, i) || _nonIterableRest17();
}
function _nonIterableRest17() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit17(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles17(arr) {
  if (Array.isArray(arr)) return arr;
}
function _toConsumableArray16(arr) {
  return _arrayWithoutHoles16(arr) || _iterableToArray16(arr) || _unsupportedIterableToArray29(arr) || _nonIterableSpread16();
}
function _nonIterableSpread16() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray29(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray29(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray29(o, minLen);
}
function _iterableToArray16(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles16(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray29(arr);
}
function _arrayLikeToArray29(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral54(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have52() {
  return have($item(_templateObject468 || (_templateObject468 = _taggedTemplateLiteral54(["Mayam Calendar"]))));
}
function symbolsUsed() {
  return get("_mayamSymbolsUsed").split(",");
}
function available5() {
  for (var _len = arguments.length, symbols = new Array(_len), _key = 0; _key < _len; _key++) {
    symbols[_key] = arguments[_key];
  }
  return symbols.every(function(symbol) {
    return !symbolsUsed().includes(symbol);
  });
}
function remainingUses() {
  return RINGS[3].filter(function(symbol) {
    return available5(symbol);
  }).length;
}
function toCombination(combination) {
  return combination.length === 1 ? combination[0].split(" ") : combination;
}
function toCombinationString(combination) {
  return combination.length === 1 ? combination[0] : combination.join(" ");
}
function submit() {
  for (var _len2 = arguments.length, combination = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    combination[_key2] = arguments[_key2];
  }
  if (!available5.apply(void 0, _toConsumableArray16(toCombination(combination)))) {
    return false;
  }
  return (0, import_kolmafia67.cliExecute)("mayam rings ".concat(combination.join(" ").replace(/yam\d/g, "yam")));
}
function resonanceFor(target) {
  var _find$0$split, _find;
  return (_find$0$split = (_find = _toConsumableArray16(Object.entries(RESONANCES)).find(function(_ref) {
    var _ref2 = _slicedToArray17(_ref, 2), value = _ref2[1];
    return value === target;
  })) === null || _find === void 0 ? void 0 : _find[0].split(" ")) !== null && _find$0$split !== void 0 ? _find$0$split : null;
}
function resonanceAvailable(target) {
  var resonance = resonanceFor(target);
  return !!resonance && available5.apply(void 0, _toConsumableArray16(resonance));
}
function getResonanceResult() {
  for (var _len3 = arguments.length, combination = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    combination[_key3] = arguments[_key3];
  }
  var combinationString = combination.length === 1 ? combination[0] : combination.join(" ");
  return combinationString in RESONANCES ? RESONANCES[combinationString] : null;
}
var import_kolmafia67, _templateObject468, _templateObject2109, _templateObject3102, _templateObject469, _templateObject540, _templateObject635, _templateObject730, _templateObject828, _templateObject925, _templateObject1022, _templateObject1121, _templateObject1220, RINGS, RESONANCES, RESONANCE_KEYS;
var init_MayamCalendar = __esm({
  "node_modules/libram/dist/resources/2024/MayamCalendar.js": function() {
    import_kolmafia67 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    RINGS = Object.freeze([["yam1", "sword", "eye", "chair", "fur", "vessel"], ["lightning", "bottle", "meat", "wood", "yam2"], ["yam3", "wall", "cheese", "eyepatch"], ["explosion", "clock", "yam4"]]);
    RESONANCES = Object.freeze({
      "eye yam2 eyepatch yam4": $item(_templateObject2109 || (_templateObject2109 = _taggedTemplateLiteral54(["Mayam spinach"]))),
      "vessel yam2 cheese explosion": $item(_templateObject3102 || (_templateObject3102 = _taggedTemplateLiteral54(["stuffed yam stinkbomb"]))),
      "yam1 meat cheese yam4": $item(_templateObject469 || (_templateObject469 = _taggedTemplateLiteral54(["yam and swiss"]))),
      "sword yam2 eyepatch explosion": $item(_templateObject540 || (_templateObject540 = _taggedTemplateLiteral54(["yam cannon"]))),
      "fur lightning eyepatch yam4": $item(_templateObject635 || (_templateObject635 = _taggedTemplateLiteral54(["tiny yam cannon"]))),
      "yam1 lightning yam3 clock": $item(_templateObject730 || (_templateObject730 = _taggedTemplateLiteral54(["yam battery"]))),
      "fur yam2 wall yam4": $item(_templateObject828 || (_templateObject828 = _taggedTemplateLiteral54(["furry yam buckler"]))),
      "yam1 yam2 yam3 explosion": $item(_templateObject925 || (_templateObject925 = _taggedTemplateLiteral54(["thanksgiving bomb"]))),
      "yam1 meat eyepatch yam4": $item(_templateObject1022 || (_templateObject1022 = _taggedTemplateLiteral54(["yamtility belt"]))),
      "chair yam2 yam3 clock": $effect(_templateObject1121 || (_templateObject1121 = _taggedTemplateLiteral54(["Caught Yam-Handed"]))),
      "yam1 yam2 cheese clock": $effect(_templateObject1220 || (_templateObject1220 = _taggedTemplateLiteral54(["Memories of Cheesier Age"])))
    });
    RESONANCE_KEYS = Object.keys(RESONANCES);
  }
});

// node_modules/libram/dist/resources/2024/TearawayPants.js
var TearawayPants_exports = {};
__export(TearawayPants_exports, {
  expectedTotalAdventures: function() {
    return expectedTotalAdventures;
  },
  have: function() {
    return have53;
  },
  plantsAdventureChance: function() {
    return plantsAdventureChance;
  },
  unlockGuild: function() {
    return unlockGuild;
  }
});
function _taggedTemplateLiteral55(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have53() {
  return have(item11);
}
function plantsAdventureChance() {
  var advs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_tearawayPantsAdvs");
  return 1 / (2 + advs);
}
function expectedTotalAdventures(turnsToSpend) {
  var startingAdvs = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : get("_tearawayPantsAdvs");
  return (1 - 2 * startingAdvs + Math.sqrt(4 * Math.pow(startingAdvs, 2) - 4 * startingAdvs + 1 + 8 * turnsToSpend)) / 2;
}
function unlockGuild() {
  if (!$classes(_templateObject2118 || (_templateObject2118 = _taggedTemplateLiteral55(["Disco Bandit, Accordion Thief"]))).includes((0, import_kolmafia68.myClass)())) return false;
  if (questStep("questG08Moxie") >= 999) return true;
  if (!have53()) return false;
  try {
    (0, import_kolmafia68.cliExecute)("checkpoint");
    (0, import_kolmafia68.equip)($slot(_templateObject3103 || (_templateObject3103 = _taggedTemplateLiteral55(["pants"]))), item11);
    (0, import_kolmafia68.visitUrl)("guild.php?place=challenge");
  } finally {
    (0, import_kolmafia68.cliExecute)("outfit checkpoint");
  }
  return questStep("questG08Moxie") >= 999;
}
var import_kolmafia68, _templateObject470, _templateObject2118, _templateObject3103, item11;
var init_TearawayPants = __esm({
  "node_modules/libram/dist/resources/2024/TearawayPants.js": function() {
    import_kolmafia68 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item11 = $item(_templateObject470 || (_templateObject470 = _taggedTemplateLiteral55(["tearaway pants"])));
  }
});

// node_modules/libram/dist/resources/2024/BatWings.js
var BatWings_exports = {};
__export(BatWings_exports, {
  cauldronsRemaining: function() {
    return cauldronsRemaining;
  },
  flapChance: function() {
    return flapChance;
  },
  have: function() {
    return have54;
  },
  jumpBridge: function() {
    return jumpBridge;
  },
  restUpsideDownRemaining: function() {
    return restUpsideDownRemaining;
  },
  swoopsRemaining: function() {
    return swoopsRemaining;
  }
});
function _taggedTemplateLiteral56(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have54() {
  return have($item(_templateObject471 || (_templateObject471 = _taggedTemplateLiteral56(["bat wings"]))));
}
function swoopsRemaining() {
  return have54() ? $skill(_templateObject2119 || (_templateObject2119 = _taggedTemplateLiteral56(["Swoop like a Bat"]))).dailylimit : 0;
}
function restUpsideDownRemaining() {
  return have54() ? $skill(_templateObject3104 || (_templateObject3104 = _taggedTemplateLiteral56(["Rest upside down"]))).dailylimit : 0;
}
function cauldronsRemaining() {
  return have54() ? $skill(_templateObject476 || (_templateObject476 = _taggedTemplateLiteral56(["Summon Cauldron of Bats"]))).dailylimit : 0;
}
function flapChance() {
  var flaps = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_batWingsFreeFights");
  return flaps < 5 ? 1 / (2 + flaps) : 0;
}
function jumpBridge() {
  if (get("chasmBridgeProgress") < 25 || questStep("questL09Topping") === 0 || !have54()) {
    return false;
  }
  if (get("chasmBridgeProgress") === 30 || questStep("questL09Topping") >= 1) {
    return true;
  }
  var back = (0, import_kolmafia69.equippedItem)($slot(_templateObject541 || (_templateObject541 = _taggedTemplateLiteral56(["back"]))));
  (0, import_kolmafia69.equip)($item(_templateObject636 || (_templateObject636 = _taggedTemplateLiteral56(["bat wings"]))));
  (0, import_kolmafia69.visitUrl)("place.php?whichplace=orc_chasm&action=bridge_jump");
  (0, import_kolmafia69.visitUrl)("place.php?whichplace=highlands&action=highlands_dude");
  (0, import_kolmafia69.equip)(back);
  return questStep("questL09Topping") >= 2;
}
var import_kolmafia69, _templateObject471, _templateObject2119, _templateObject3104, _templateObject476, _templateObject541, _templateObject636;
var init_BatWings = __esm({
  "node_modules/libram/dist/resources/2024/BatWings.js": function() {
    import_kolmafia69 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
  }
});

// node_modules/libram/dist/resources/2024/EverfullDarts.js
var EverfullDarts_exports = {};
__export(EverfullDarts_exports, {
  bullseyeChance: function() {
    return bullseyeChance;
  },
  bullseyeCooldown: function() {
    return bullseyeCooldown;
  },
  currentPerks: function() {
    return currentPerks;
  },
  dartCapacity: function() {
    return dartCapacity;
  },
  have: function() {
    return have55;
  },
  perksMaxed: function() {
    return perksMaxed;
  }
});
function _taggedTemplateLiteral57(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have55() {
  return have(item12);
}
function currentPerks() {
  return get("everfullDartPerks").split(",");
}
function perksMaxed() {
  return currentPerks().length === PERKS.length;
}
function makePerkFunction(perkOrPerks, formula) {
  var current2 = currentPerks();
  if (Array.isArray(perkOrPerks)) {
    return function() {
      return formula(perkOrPerks.filter(function(perk) {
        return current2.includes(perk);
      }).length);
    };
  }
  return function() {
    return formula(current2.filter(function(perk) {
      return perk === perkOrPerks;
    }).length);
  };
}
var _templateObject477, item12, PERKS, BULLSEYE_ACCURACY_PERKS, bullseyeChance, BULLSEYE_COOLDOWN_PERKS, bullseyeCooldown, dartCapacity;
var init_EverfullDarts = __esm({
  "node_modules/libram/dist/resources/2024/EverfullDarts.js": function() {
    init_lib();
    init_template_string();
    init_property();
    init_utils();
    item12 = $item(_templateObject477 || (_templateObject477 = _taggedTemplateLiteral57(["Everfull Dart Holster"])));
    PERKS = ["Throw a second dart quickly", "Deal 25-50% more damage", "You are less impressed by bullseyes", "25% Better bullseye targeting", "Extra stats from stats targets", "Butt awareness", "Add Hot Damage", "Add Cold Damage", "Add Sleaze Damage", "Add Spooky Damage", "Add Stench Damage", "Expand your dart capacity by 1", "Bullseyes do not impress you much", "25% More Accurate bullseye targeting", "Deal 25-50% extra damage", "Expand your dart capacity by 1", "Increase Dart Deleveling from deleveling targets", "Deal 25-50% greater damage", "Extra stats from stats targets", "25% better chance to hit bullseyes"];
    BULLSEYE_ACCURACY_PERKS = ["25% Better bullseye targeting", "25% better chance to hit bullseyes", "25% More Accurate bullseye targeting"];
    bullseyeChance = makePerkFunction(BULLSEYE_ACCURACY_PERKS, function(perks) {
      return clamp(0.25 * (1 + perks), 0, 1);
    });
    BULLSEYE_COOLDOWN_PERKS = ["You are less impressed by bullseyes", "Bullseyes do not impress you much"];
    bullseyeCooldown = makePerkFunction(BULLSEYE_COOLDOWN_PERKS, function(perks) {
      return clamp(50 - 10 * perks, 30, 50);
    });
    dartCapacity = makePerkFunction("Expand your dart capacity by 1", function(perks) {
      return 1 + perks;
    });
  }
});

// node_modules/libram/dist/resources/2024/TakerSpace.js
var TakerSpace_exports = {};
__export(TakerSpace_exports, {
  allRecipes: function() {
    return allRecipes;
  },
  amount: function() {
    return amount;
  },
  canMake: function() {
    return canMake;
  },
  collect: function() {
    return collect;
  },
  currentResources: function() {
    return currentResources;
  },
  have: function() {
    return have56;
  },
  haveEnoughFor: function() {
    return haveEnoughFor;
  },
  installed: function() {
    return installed5;
  },
  make: function() {
    return make;
  },
  recipeFor: function() {
    return recipeFor;
  }
});
function _toConsumableArray17(arr) {
  return _arrayWithoutHoles17(arr) || _iterableToArray17(arr) || _unsupportedIterableToArray30(arr) || _nonIterableSpread17();
}
function _nonIterableSpread17() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray17(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles17(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray30(arr);
}
function _slicedToArray18(arr, i) {
  return _arrayWithHoles18(arr) || _iterableToArrayLimit18(arr, i) || _unsupportedIterableToArray30(arr, i) || _nonIterableRest18();
}
function _nonIterableRest18() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray30(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray30(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray30(o, minLen);
}
function _arrayLikeToArray30(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit18(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles18(arr) {
  if (Array.isArray(arr)) return arr;
}
function _taggedTemplateLiteral58(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function installed5() {
  return (0, import_kolmafia70.getWorkshed)() === item13;
}
function have56() {
  return installed5() || have(item13);
}
function allRecipes() {
  return new Map(RECIPES.entries().map(function(_ref) {
    var _ref2 = _slicedToArray18(_ref, 2), item14 = _ref2[0], recipe = _ref2[1];
    return [item14, _toConsumableArray17(recipe)];
  }));
}
function collect() {
  if (!installed5() || get("_takerSpaceSuppliesDelivered")) return false;
  (0, import_kolmafia70.visitUrl)("campground.php?action=workshed", false);
  return get("_takerSpaceSuppliesDelivered");
}
function amount(resource) {
  collect();
  return get("takerSpace".concat(resource)) + (!installed5() && !get("_workshedItemUsed") ? defaultAmount(resource) : 0);
}
function recipeFor(item14) {
  var result = RECIPES.get(item14);
  return result ? _toConsumableArray17(result) : null;
}
function currentResources() {
  collect();
  return RESOURCES.map(amount);
}
function haveEnoughFor(item14) {
  var amount2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var recipe = recipeFor(item14);
  if (!recipe) return false;
  return currentResources().every(function(resource, index) {
    return resource >= amount2 * recipe[index];
  });
}
function canMake(item14) {
  var amount2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  return installed5() && haveEnoughFor(item14, amount2);
}
function make(item14) {
  var amount2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  return canMake(item14, amount2) && (0, import_kolmafia70.create)(item14, amount2);
}
var import_kolmafia70, _templateObject478, _templateObject2120, _templateObject3105, _templateObject479, _templateObject544, _templateObject637, _templateObject731, _templateObject829, _templateObject926, _templateObject1023, _templateObject1122, _templateObject1221, _templateObject1319, _templateObject1417, _templateObject1515, _templateObject1615, _templateObject1715, _templateObject1815, item13, RESOURCES, RECIPES, defaultAmount;
var init_TakerSpace = __esm({
  "node_modules/libram/dist/resources/2024/TakerSpace.js": function() {
    import_kolmafia70 = require("kolmafia");
    init_lib();
    init_template_string();
    init_property();
    item13 = $item(_templateObject478 || (_templateObject478 = _taggedTemplateLiteral58(["TakerSpace letter of Marque"])));
    RESOURCES = ["Spice", "Rum", "Anchor", "Mast", "Silk", "Gold"];
    RECIPES = /* @__PURE__ */ new Map([[$item(_templateObject2120 || (_templateObject2120 = _taggedTemplateLiteral58(["deft pirate hook"]))), [0, 0, 1, 1, 0, 1]], [$item(_templateObject3105 || (_templateObject3105 = _taggedTemplateLiteral58(["iron tricorn hat"]))), [0, 0, 2, 1, 0, 0]], [$item(_templateObject479 || (_templateObject479 = _taggedTemplateLiteral58(["jolly roger flag"]))), [0, 1, 0, 1, 1, 0]], [$item(_templateObject544 || (_templateObject544 = _taggedTemplateLiteral58(["sleeping profane parrot"]))), [15, 3, 0, 0, 2, 1]], [$item(_templateObject637 || (_templateObject637 = _taggedTemplateLiteral58(["pirrrate's currrse"]))), [2, 2, 0, 0, 0, 0]], [$item(_templateObject731 || (_templateObject731 = _taggedTemplateLiteral58(["tankard of spiced rum"]))), [1, 2, 0, 0, 0, 0]], [$item(_templateObject829 || (_templateObject829 = _taggedTemplateLiteral58(["packaged luxury garment"]))), [0, 0, 0, 0, 3, 2]], [$item(_templateObject926 || (_templateObject926 = _taggedTemplateLiteral58(["harpoon"]))), [0, 0, 0, 2, 0, 0]], [$item(_templateObject1023 || (_templateObject1023 = _taggedTemplateLiteral58(["chili powder cutlass"]))), [5, 0, 1, 0, 0, 0]], [$item(_templateObject1122 || (_templateObject1122 = _taggedTemplateLiteral58(["cursed Aztec tamale"]))), [2, 0, 0, 0, 0, 0]], [$item(_templateObject1221 || (_templateObject1221 = _taggedTemplateLiteral58(["jolly roger tattoo kit"]))), [0, 6, 1, 1, 0, 6]], [$item(_templateObject1319 || (_templateObject1319 = _taggedTemplateLiteral58(["golden pet rock"]))), [0, 0, 0, 0, 0, 7]], [$item(_templateObject1417 || (_templateObject1417 = _taggedTemplateLiteral58(["groggles"]))), [0, 6, 0, 0, 0, 0]], [$item(_templateObject1515 || (_templateObject1515 = _taggedTemplateLiteral58(["pirate dinghy"]))), [0, 0, 1, 1, 1, 0]], [$item(_templateObject1615 || (_templateObject1615 = _taggedTemplateLiteral58(["anchor bomb"]))), [0, 1, 3, 1, 0, 1]], [$item(_templateObject1715 || (_templateObject1715 = _taggedTemplateLiteral58(["silky pirate drawers"]))), [0, 0, 0, 0, 2, 0]], [$item(_templateObject1815 || (_templateObject1815 = _taggedTemplateLiteral58(["spices"]))), [1, 0, 0, 0, 0, 0]]]);
    defaultAmount = function(resource) {
      return ["Silk", "Gold"].includes(resource) ? 1 : 3;
    };
  }
});

// node_modules/libram/dist/resources/2025/CrepeParachute.js
var CrepeParachute_exports = {};
__export(CrepeParachute_exports, {
  availableMonsters: function() {
    return availableMonsters;
  },
  fight: function() {
    return fight;
  },
  have: function() {
    return have57;
  }
});
function _taggedTemplateLiteral59(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have57() {
  return have($item(_templateObject480 || (_templateObject480 = _taggedTemplateLiteral59(["crepe paper parachute cape"]))));
}
function checkMonsters(html) {
  return (0, import_kolmafia71.xpath)(html, "//select[@name='monid']//option[position()>1]/@value").map(function(id) {
    return (0, import_kolmafia71.toMonster)(Number(id));
  });
}
function availableMonsters() {
  if (!have57() || have($effect(_templateObject2121 || (_templateObject2121 = _taggedTemplateLiteral59(["Everything looks Beige"]))))) return [];
  return checkMonsters(visitParachute());
}
function fight(target) {
  if (!have57()) return false;
  if (have($effect(_templateObject3106 || (_templateObject3106 = _taggedTemplateLiteral59(["Everything looks Beige"]))))) return false;
  var monsters = checkMonsters(visitParachute());
  var monster = undelay(target, monsters);
  if (!monsters.includes(monster)) return false;
  if (!(0, import_kolmafia71.handlingChoice)() || (0, import_kolmafia71.lastChoice)() !== 1543) visitParachute();
  (0, import_kolmafia71.runChoice)(1, "monid=".concat(monster.id));
  for (var _len = arguments.length, combatParams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    combatParams[_key - 1] = arguments[_key];
  }
  import_kolmafia71.runCombat.apply(void 0, combatParams);
  return true;
}
var import_kolmafia71, _templateObject480, _templateObject2121, _templateObject3106, visitParachute;
var init_CrepeParachute = __esm({
  "node_modules/libram/dist/resources/2025/CrepeParachute.js": function() {
    import_kolmafia71 = require("kolmafia");
    init_lib();
    init_template_string();
    init_utils();
    visitParachute = function() {
      return (0, import_kolmafia71.visitUrl)("inventory.php?action=parachute&pwd");
    };
  }
});

// node_modules/libram/dist/resources/putty-likes.js
function getTotalPuttyLikeCopiesMade() {
  return getSpookyPuttySheetCopiesMade() + getRainDohBlackBoxCopiesMade();
}
function couldUseRainDohBlackBox() {
  return have9() && getRainDohBlackBoxCopiesMade() < 5 && getTotalPuttyLikeCopiesMade() < 6;
}
function couldUseSpookyPuttySheet() {
  return have7() && getSpookyPuttySheetCopiesMade() < 5 && getTotalPuttyLikeCopiesMade() < 6;
}
var RainDohBlackBox, SpookyPuttySheet;
var init_putty_likes = __esm({
  "node_modules/libram/dist/resources/putty-likes.js": function() {
    init_Copier();
    init_SpookyPutty();
    init_RainDoh();
    RainDohBlackBox = new Copier(function() {
      return couldUseRainDohBlackBox();
    }, null, function() {
      return couldUseRainDohBlackBox();
    }, function() {
      return getRainDohBlackBoxMonster();
    }, function() {
      return useRainDohBlackBox();
    });
    SpookyPuttySheet = new Copier(function() {
      return couldUseSpookyPuttySheet();
    }, function() {
      return prepareSpookyPuttySheet();
    }, function() {
      return couldUseSpookyPuttySheet();
    }, function() {
      return getSpookyPuttySheetMonster();
    }, function() {
      return useSpookyPuttySheet();
    });
  }
});

// node_modules/libram/dist/resources/2007/CandyHearts.js
function _taggedTemplateLiteral60(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have58() {
  return have(summonSkill);
}
function expected() {
  return libramExpected;
}
var _templateObject481, _templateObject2122, _templateObject3107, _templateObject486, _templateObject545, _templateObject638, _templateObject734, summonSkill, libramChance, libramExpected;
var init_CandyHearts = __esm({
  "node_modules/libram/dist/resources/2007/CandyHearts.js": function() {
    init_lib();
    init_template_string();
    summonSkill = $skill(_templateObject481 || (_templateObject481 = _taggedTemplateLiteral60(["Summon Candy Heart"])));
    libramChance = 1 / 6;
    libramExpected = /* @__PURE__ */ new Map([[$item(_templateObject2122 || (_templateObject2122 = _taggedTemplateLiteral60(["green candy heart"]))), libramChance], [$item(_templateObject3107 || (_templateObject3107 = _taggedTemplateLiteral60(["lavender candy heart"]))), libramChance], [$item(_templateObject486 || (_templateObject486 = _taggedTemplateLiteral60(["orange candy heart"]))), libramChance], [$item(_templateObject545 || (_templateObject545 = _taggedTemplateLiteral60(["pink candy heart"]))), libramChance], [$item(_templateObject638 || (_templateObject638 = _taggedTemplateLiteral60(["white candy heart"]))), libramChance], [$item(_templateObject734 || (_templateObject734 = _taggedTemplateLiteral60(["yellow candy heart"]))), libramChance]]);
  }
});

// node_modules/libram/dist/resources/2008/DivineFavors.js
function _taggedTemplateLiteral61(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have59() {
  return have(summonSkill2);
}
function expected2() {
  var rareSummons = get("_favorRareSummons");
  var totalRareChance = 1 / Math.pow(2, rareSummons + 1);
  var commonChance2 = (1 - totalRareChance) / 3;
  var rareChance2 = totalRareChance / 3;
  return /* @__PURE__ */ new Map([[$item(_templateObject2123 || (_templateObject2123 = _taggedTemplateLiteral61(["divine blowout"]))), commonChance2], [$item(_templateObject3108 || (_templateObject3108 = _taggedTemplateLiteral61(["divine can of silly string"]))), commonChance2], [$item(_templateObject488 || (_templateObject488 = _taggedTemplateLiteral61(["divine noisemaker"]))), commonChance2], [$item(_templateObject546 || (_templateObject546 = _taggedTemplateLiteral61(["divine champagne flute"]))), rareChance2], [$item(_templateObject639 || (_templateObject639 = _taggedTemplateLiteral61(["divine champagne popper"]))), rareChance2], [$item(_templateObject735 || (_templateObject735 = _taggedTemplateLiteral61(["divine cracker"]))), rareChance2]]);
}
var _templateObject487, _templateObject2123, _templateObject3108, _templateObject488, _templateObject546, _templateObject639, _templateObject735, summonSkill2;
var init_DivineFavors = __esm({
  "node_modules/libram/dist/resources/2008/DivineFavors.js": function() {
    init_lib();
    init_property();
    init_template_string();
    summonSkill2 = $skill(_templateObject487 || (_templateObject487 = _taggedTemplateLiteral61(["Summon Party Favor"])));
  }
});

// node_modules/libram/dist/resources/2009/LoveSongs.js
function _taggedTemplateLiteral62(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have60() {
  return have(summonSkill3);
}
function expected3() {
  return libramExpected2;
}
var _templateObject489, _templateObject2124, _templateObject3109, _templateObject490, _templateObject547, _templateObject640, _templateObject736, summonSkill3, libramChance2, libramExpected2;
var init_LoveSongs = __esm({
  "node_modules/libram/dist/resources/2009/LoveSongs.js": function() {
    init_lib();
    init_template_string();
    summonSkill3 = $skill(_templateObject489 || (_templateObject489 = _taggedTemplateLiteral62(["Summon Love Song"])));
    libramChance2 = 1 / 6;
    libramExpected2 = /* @__PURE__ */ new Map([[$item(_templateObject2124 || (_templateObject2124 = _taggedTemplateLiteral62(["love song of disturbing obsession"]))), libramChance2], [$item(_templateObject3109 || (_templateObject3109 = _taggedTemplateLiteral62(["love song of icy revenge"]))), libramChance2], [$item(_templateObject490 || (_templateObject490 = _taggedTemplateLiteral62(["love song of naughty innuendo"]))), libramChance2], [$item(_templateObject547 || (_templateObject547 = _taggedTemplateLiteral62(["love song of smoldering passion"]))), libramChance2], [$item(_templateObject640 || (_templateObject640 = _taggedTemplateLiteral62(["love song of sugary cuteness"]))), libramChance2], [$item(_templateObject736 || (_templateObject736 = _taggedTemplateLiteral62(["love song of vague ambiguity"]))), libramChance2]]);
  }
});

// node_modules/libram/dist/resources/2010/Brickos.js
function _taggedTemplateLiteral63(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have61() {
  return have(summonSkill4);
}
function expected4() {
  var eyeSummons = get("_brickoEyeSummons");
  var eyeChance = eyeSummons === 3 ? 0 : eyeSummons === 0 ? 0.5 : 1 / 3;
  return /* @__PURE__ */ new Map([[$item(_templateObject2125 || (_templateObject2125 = _taggedTemplateLiteral63(["BRICKO eye brick"]))), eyeChance], [$item(_templateObject3114 || (_templateObject3114 = _taggedTemplateLiteral63(["BRICKO brick"]))), 3 - eyeChance]]);
}
var _templateObject491, _templateObject2125, _templateObject3114, summonSkill4;
var init_Brickos = __esm({
  "node_modules/libram/dist/resources/2010/Brickos.js": function() {
    init_lib();
    init_property();
    init_template_string();
    summonSkill4 = $skill(_templateObject491 || (_templateObject491 = _taggedTemplateLiteral63(["Summon BRICKOs"])));
  }
});

// node_modules/libram/dist/resources/2011/Gygaxian.js
function _taggedTemplateLiteral64(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have62() {
  return have(summonSkill5);
}
function expected5() {
  return libramExpected3;
}
var _templateObject496, _templateObject2126, _templateObject3115, _templateObject497, _templateObject548, _templateObject641, _templateObject737, summonSkill5, libramChance3, libramExpected3;
var init_Gygaxian = __esm({
  "node_modules/libram/dist/resources/2011/Gygaxian.js": function() {
    init_lib();
    init_template_string();
    summonSkill5 = $skill(_templateObject496 || (_templateObject496 = _taggedTemplateLiteral64(["Summon Dice"])));
    libramChance3 = 1 / 6;
    libramExpected3 = /* @__PURE__ */ new Map([[$item(_templateObject2126 || (_templateObject2126 = _taggedTemplateLiteral64(["d4"]))), libramChance3], [$item(_templateObject3115 || (_templateObject3115 = _taggedTemplateLiteral64(["d6"]))), libramChance3], [$item(_templateObject497 || (_templateObject497 = _taggedTemplateLiteral64(["d8"]))), libramChance3], [$item(_templateObject548 || (_templateObject548 = _taggedTemplateLiteral64(["d10"]))), libramChance3], [$item(_templateObject641 || (_templateObject641 = _taggedTemplateLiteral64(["d12"]))), libramChance3], [$item(_templateObject737 || (_templateObject737 = _taggedTemplateLiteral64(["d20"]))), libramChance3]]);
  }
});

// node_modules/libram/dist/resources/2012/Resolutions.js
function _taggedTemplateLiteral65(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have63() {
  return have(summonSkill6);
}
function expected6() {
  return libramExpected4;
}
var _templateObject498, _templateObject2127, _templateObject3116, _templateObject499, _templateObject549, _templateObject644, _templateObject738, _templateObject830, _templateObject927, _templateObject1024, summonSkill6, commonChance, rareChance, libramExpected4;
var init_Resolutions = __esm({
  "node_modules/libram/dist/resources/2012/Resolutions.js": function() {
    init_lib();
    init_template_string();
    summonSkill6 = $skill(_templateObject498 || (_templateObject498 = _taggedTemplateLiteral65(["Summon Resolutions"])));
    commonChance = 0.98 / 6;
    rareChance = 0.02 / 3;
    libramExpected4 = /* @__PURE__ */ new Map([[$item(_templateObject2127 || (_templateObject2127 = _taggedTemplateLiteral65(["resolution: be feistier"]))), commonChance], [$item(_templateObject3116 || (_templateObject3116 = _taggedTemplateLiteral65(["resolution: be happier"]))), commonChance], [$item(_templateObject499 || (_templateObject499 = _taggedTemplateLiteral65(["resolution: be sexier"]))), commonChance], [$item(_templateObject549 || (_templateObject549 = _taggedTemplateLiteral65(["resolution: be smarter"]))), commonChance], [$item(_templateObject644 || (_templateObject644 = _taggedTemplateLiteral65(["resolution: be stronger"]))), commonChance], [$item(_templateObject738 || (_templateObject738 = _taggedTemplateLiteral65(["resolution: be wealthier"]))), commonChance], [$item(_templateObject830 || (_templateObject830 = _taggedTemplateLiteral65(["resolution: be kinder"]))), rareChance], [$item(_templateObject927 || (_templateObject927 = _taggedTemplateLiteral65(["resolution: be luckier"]))), rareChance], [$item(_templateObject1024 || (_templateObject1024 = _taggedTemplateLiteral65(["resolution: be more adventurous"]))), rareChance]]);
  }
});

// node_modules/libram/dist/resources/2013/PulledTaffy.js
function _taggedTemplateLiteral66(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have64() {
  return have(summonSkill7);
}
function expected7() {
  var rareSummons = get("_taffyRareSummons");
  var yellowSummons = get("_taffyYellowSummons");
  var onlyYellow = yellowSummons === 0 && rareSummons === 3;
  var totalRareChance = rareSummons < 4 ? 1 / Math.pow(2, rareSummons + 1) : 0;
  var commonChance2 = (1 - totalRareChance) / 4;
  var rareChance2 = onlyYellow ? 0 : totalRareChance / (3 - get("_taffyYellowSummons"));
  var yellowChance = yellowSummons === 1 ? 0 : onlyYellow ? totalRareChance : rareChance2;
  return /* @__PURE__ */ new Map([[$item(_templateObject2128 || (_templateObject2128 = _taggedTemplateLiteral66(["pulled blue taffy"]))), commonChance2], [$item(_templateObject3117 || (_templateObject3117 = _taggedTemplateLiteral66(["pulled orange taffy"]))), commonChance2], [$item(_templateObject4100 || (_templateObject4100 = _taggedTemplateLiteral66(["pulled violet taffy"]))), commonChance2], [$item(_templateObject550 || (_templateObject550 = _taggedTemplateLiteral66(["pulled red taffy"]))), commonChance2], [$item(_templateObject645 || (_templateObject645 = _taggedTemplateLiteral66(["pulled indigo taffy"]))), rareChance2], [$item(_templateObject739 || (_templateObject739 = _taggedTemplateLiteral66(["pulled green taffy"]))), rareChance2], [$item(_templateObject831 || (_templateObject831 = _taggedTemplateLiteral66(["pulled yellow taffy"]))), yellowChance]]);
}
var _templateObject500, _templateObject2128, _templateObject3117, _templateObject4100, _templateObject550, _templateObject645, _templateObject739, _templateObject831, summonSkill7;
var init_PulledTaffy = __esm({
  "node_modules/libram/dist/resources/2013/PulledTaffy.js": function() {
    init_lib();
    init_property();
    init_template_string();
    summonSkill7 = $skill(_templateObject500 || (_templateObject500 = _taggedTemplateLiteral66(["Summon Taffy"])));
  }
});

// node_modules/libram/dist/resources/LibramSummon.js
function _slicedToArray19(arr, i) {
  return _arrayWithHoles19(arr) || _iterableToArrayLimit19(arr, i) || _unsupportedIterableToArray31(arr, i) || _nonIterableRest19();
}
function _nonIterableRest19() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray31(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray31(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray31(o, minLen);
}
function _arrayLikeToArray31(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit19(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles19(arr) {
  if (Array.isArray(arr)) return arr;
}
function _taggedTemplateLiteral67(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function expectedLibramSummon(summonSkill8) {
  switch (summonSkill8) {
    case $skill(_templateObject501 || (_templateObject501 = _taggedTemplateLiteral67(["Summon Candy Heart"]))):
      return expected();
    case $skill(_templateObject2129 || (_templateObject2129 = _taggedTemplateLiteral67(["Summon Party Favor"]))):
      return expected2();
    case $skill(_templateObject3118 || (_templateObject3118 = _taggedTemplateLiteral67(["Summon Love Song"]))):
      return expected3();
    case $skill(_templateObject4101 || (_templateObject4101 = _taggedTemplateLiteral67(["Summon BRICKOs"]))):
      return expected4();
    case $skill(_templateObject551 || (_templateObject551 = _taggedTemplateLiteral67(["Summon Dice"]))):
      return expected5();
    case $skill(_templateObject646 || (_templateObject646 = _taggedTemplateLiteral67(["Summon Resolutions"]))):
      return expected6();
    case $skill(_templateObject740 || (_templateObject740 = _taggedTemplateLiteral67(["Summon Taffy"]))):
      return expected7();
  }
  return /* @__PURE__ */ new Map();
}
function possibleLibramSummons() {
  var results = /* @__PURE__ */ new Map();
  if (have58()) {
    results.set($skill(_templateObject834 || (_templateObject834 = _taggedTemplateLiteral67(["Summon Candy Heart"]))), expected());
  }
  if (have59()) {
    results.set($skill(_templateObject928 || (_templateObject928 = _taggedTemplateLiteral67(["Summon Party Favor"]))), expected2());
  }
  if (have60()) {
    results.set($skill(_templateObject1025 || (_templateObject1025 = _taggedTemplateLiteral67(["Summon Love Song"]))), expected3());
  }
  if (have61()) {
    results.set($skill(_templateObject1123 || (_templateObject1123 = _taggedTemplateLiteral67(["Summon BRICKOs"]))), expected4());
  }
  if (have62()) {
    results.set($skill(_templateObject1222 || (_templateObject1222 = _taggedTemplateLiteral67(["Summon Dice"]))), expected5());
  }
  if (have63()) {
    results.set($skill(_templateObject1320 || (_templateObject1320 = _taggedTemplateLiteral67(["Summon Resolutions"]))), expected6());
  }
  if (have64()) {
    results.set($skill(_templateObject1418 || (_templateObject1418 = _taggedTemplateLiteral67(["Summon Taffy"]))), expected7());
  }
  return results;
}
function bestLibramToCast() {
  var arr = Array.from(possibleLibramSummons().entries());
  if (!arr.length) return null;
  return maxBy(arr, function(_ref) {
    var _ref2 = _slicedToArray19(_ref, 2), itemMap = _ref2[1];
    return sum(Array.from(itemMap.entries()), function(_ref3) {
      var _ref4 = _slicedToArray19(_ref3, 2), item14 = _ref4[0], weight = _ref4[1];
      return weight * getSaleValue(item14);
    });
  })[0];
}
var _templateObject501, _templateObject2129, _templateObject3118, _templateObject4101, _templateObject551, _templateObject646, _templateObject740, _templateObject834, _templateObject928, _templateObject1025, _templateObject1123, _templateObject1222, _templateObject1320, _templateObject1418;
var init_LibramSummon = __esm({
  "node_modules/libram/dist/resources/LibramSummon.js": function() {
    init_lib();
    init_template_string();
    init_utils();
    init_CandyHearts();
    init_DivineFavors();
    init_LoveSongs();
    init_Brickos();
    init_Gygaxian();
    init_Resolutions();
    init_PulledTaffy();
  }
});

// node_modules/libram/dist/resources/index.js
var init_resources = __esm({
  "node_modules/libram/dist/resources/index.js": function() {
    init_CommaChameleon();
    init_Stickers();
    init_Bandersnatch();
    init_SpookyPutty();
    init_CrownOfThrones();
    init_LookingGlass();
    init_ObtuseAngel();
    init_StompingBoots();
    init_RainDoh();
    init_ReagnimatedGnome();
    init_Florist();
    init_JungMan();
    init_ConspiracyIsland();
    init_CrimboShrub();
    init_DNALab();
    init_WinterGarden();
    init_BarrelShrine();
    init_ChateauMantegna();
    init_DeckOfEveryCard();
    init_Dinseylandfill();
    init_MayoClinic();
    init_GingerBread();
    init_SourceTerminal();
    init_Witchess();
    init_AsdonMartin();
    init_Horsery();
    init_MummingTrunk();
    init_Pantogram();
    init_Robortender();
    init_Spacegate();
    init_TunnelOfLove();
    init_LatteLoversMembersMug();
    init_SongBoom();
    init_BeachComb();
    init_CampAway();
    init_PocketProfessor();
    init_Snapper();
    init_Cartography();
    init_Guzzlr();
    init_RetroCape();
    init_CrystalBall();
    init_DaylightShavings();
    init_AutumnAton();
    init_CombatLoversLocket();
    init_GreyGoose();
    init_JuneCleaver();
    init_TrainSet();
    init_Stillsuit();
    init_AugustScepter();
    init_BurningLeaves();
    init_CinchoDeMayo();
    init_ClosedCircuitPayphone();
    init_CursedMonkeyPaw();
    init_AprilingBandHelmet();
    init_ChestMimic();
    init_MayamCalendar();
    init_TearawayPants();
    init_BatWings();
    init_EverfullDarts();
    init_TakerSpace();
    init_CrepeParachute();
    init_putty_likes();
    init_LibramSummon();
  }
});

// node_modules/libram/dist/ascend.js
function _createForOfIteratorHelper8(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray32(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _toConsumableArray18(arr) {
  return _arrayWithoutHoles18(arr) || _iterableToArray18(arr) || _unsupportedIterableToArray32(arr) || _nonIterableSpread18();
}
function _nonIterableSpread18() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray18(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles18(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray32(arr);
}
function ownKeys8(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread8(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys8(Object(t), true).forEach(function(r2) {
      _defineProperty16(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys8(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _taggedTemplateLiteral68(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _defineProperty16(obj, key, value) {
  key = _toPropertyKey17(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _defineProperties11(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey17(descriptor.key), descriptor);
  }
}
function _createClass11(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties11(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties11(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey17(t) {
  var i = _toPrimitive17(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive17(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _classCallCheck11(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _callSuper3(t, o, e) {
  return o = _getPrototypeOf3(o), _possibleConstructorReturn3(t, _isNativeReflectConstruct3() ? Reflect.construct(o, e || [], _getPrototypeOf3(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn3(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized3(self);
}
function _assertThisInitialized3(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _inherits3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass) _setPrototypeOf3(subClass, superClass);
}
function _wrapNativeSuper3(Class5) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper3 = function _wrapNativeSuper5(Class6) {
    if (Class6 === null || !_isNativeFunction3(Class6)) return Class6;
    if (typeof Class6 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class6)) return _cache.get(Class6);
      _cache.set(Class6, Wrapper);
    }
    function Wrapper() {
      return _construct3(Class6, arguments, _getPrototypeOf3(this).constructor);
    }
    Wrapper.prototype = Object.create(Class6.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });
    return _setPrototypeOf3(Wrapper, Class6);
  };
  return _wrapNativeSuper3(Class5);
}
function _construct3(t, e, r) {
  if (_isNativeReflectConstruct3()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && _setPrototypeOf3(p, r.prototype), p;
}
function _isNativeReflectConstruct3() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct3 = function _isNativeReflectConstruct9() {
    return !!t;
  })();
}
function _isNativeFunction3(fn) {
  try {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  } catch (e) {
    return typeof fn === "function";
  }
}
function _setPrototypeOf3(o, p) {
  _setPrototypeOf3 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf10(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf3(o, p);
}
function _getPrototypeOf3(o) {
  _getPrototypeOf3 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf9(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf3(o);
}
function _slicedToArray20(arr, i) {
  return _arrayWithHoles20(arr) || _iterableToArrayLimit20(arr, i) || _unsupportedIterableToArray32(arr, i) || _nonIterableRest20();
}
function _nonIterableRest20() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray32(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray32(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray32(o, minLen);
}
function _arrayLikeToArray32(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit20(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles20(arr) {
  if (Array.isArray(arr)) return arr;
}
function permedSkills() {
  return new Map(Array.from(Object.entries((0, import_kolmafia72.getPermedSkills)())).map(function(_ref) {
    var _ref2 = _slicedToArray20(_ref, 2), skillName = _ref2[0], isHardcore = _ref2[1];
    return [(0, import_kolmafia72.toSkill)(skillName), isHardcore ? Lifestyle.hardcore : Lifestyle.softcore];
  }));
}
function inputToMoonId(moon, playerClass) {
  if (typeof moon === "number") return moon;
  var offset = function() {
    switch (playerClass.primestat) {
      case $stat(_templateObject505 || (_templateObject505 = _taggedTemplateLiteral68(["Muscle"]))):
        return 0;
      case $stat(_templateObject2130 || (_templateObject2130 = _taggedTemplateLiteral68(["Mysticality"]))):
        return 1;
      case $stat(_templateObject3119 || (_templateObject3119 = _taggedTemplateLiteral68(["Moxie"]))):
        return 2;
      default:
        throw new AscendError("unknown prime stat for ".concat(playerClass));
    }
  };
  var fromNormalInput = signNameToId(tc(moon));
  if (fromNormalInput > 0) return fromNormalInput;
  switch (moon.toLowerCase()) {
    case "degrassi":
    case "degrassi knoll":
    case "friendly degrassi knoll":
    case "knoll":
      return 1 + offset();
    case "canada":
    case "canadia":
    case "little canadia":
      return 4 + offset();
    case "gnomads":
    case "gnomish":
    case "gnomish gnomads camp":
      return 7 + offset();
    default:
      throw new AscendError("Invalid moon sign!");
  }
}
function isInValhalla() {
  var charPaneText = (0, import_kolmafia72.visitUrl)("charpane.php");
  var matches = charPaneText.match(/<img src="[^"]*\/otherimages\/inf_\w+\.gif">/);
  return matches !== null;
}
function ascend(options) {
  var _permOptions$permSkil, _permOptions$permSkil2;
  var DEFAULT_OPTIONS = {
    kolGender: get("defaultGenderOverride", "female") === "male" ? KolGender.male : KolGender.female,
    consumable: $item(_templateObject4102 || (_templateObject4102 = _taggedTemplateLiteral68(["astral six-pack"]))),
    pet: $item(_templateObject554 || (_templateObject554 = _taggedTemplateLiteral68(["none"])))
  };
  var prunedOptions = Object.fromEntries(Object.entries(options).filter(function(_ref3) {
    var _ref4 = _slicedToArray20(_ref3, 2), value = _ref4[1];
    return value;
  }));
  var _DEFAULT_OPTIONS$prun = _objectSpread8(_objectSpread8({}, DEFAULT_OPTIONS), prunedOptions), path3 = _DEFAULT_OPTIONS$prun.path, playerClass = _DEFAULT_OPTIONS$prun.playerClass, lifestyle = _DEFAULT_OPTIONS$prun.lifestyle, kolGender = _DEFAULT_OPTIONS$prun.kolGender, moon = _DEFAULT_OPTIONS$prun.moon, consumable = _DEFAULT_OPTIONS$prun.consumable, pet = _DEFAULT_OPTIONS$prun.pet, permOptions = _DEFAULT_OPTIONS$prun.permOptions;
  if (playerClass.path !== (path3.avatar ? path3 : import_kolmafia72.Path.none)) {
    throw new AscendError("Invalid class ".concat(playerClass, " for this path!"));
  }
  if (path3.id < 0) throw new AscendError("Invalid path: ".concat(path3, "!"));
  var moonId = inputToMoonId(moon, playerClass);
  if (moonId < 1 || moonId > 9) throw new Error("Invalid moon ".concat(moon));
  if (!$items(_templateObject647 || (_templateObject647 = _taggedTemplateLiteral68(["none, astral six-pack, astral hot dog dinner, [10882]carton of astral energy drinks"]))).includes(consumable)) {
    throw new AscendError("Invalid astral consumable: ".concat(consumable));
  }
  if (!$items(_templateObject741 || (_templateObject741 = _taggedTemplateLiteral68(["none, astral bludgeon, astral shield, astral chapeau, astral bracer, astral longbow, astral shorts, astral mace, astral trousers, astral ring, astral statuette, astral pistol, astral mask, astral pet sweater, astral shirt, astral belt"]))).includes(pet)) {
    throw new AscendError("Invalid astral pet: ".concat(pet));
  }
  var unownedSkills = _toConsumableArray18((_permOptions$permSkil = permOptions === null || permOptions === void 0 ? void 0 : permOptions.permSkills.keys()) !== null && _permOptions$permSkil !== void 0 ? _permOptions$permSkil : []).filter(function(skill2) {
    return !(0, import_kolmafia72.haveSkill)(skill2);
  });
  if (unownedSkills.length) {
    throw new AscendError("You're trying to perm the following skills, but don't actually have them: ".concat(unownedSkills.join(", ")));
  }
  var unpermableSkills = _toConsumableArray18((_permOptions$permSkil2 = permOptions === null || permOptions === void 0 ? void 0 : permOptions.permSkills.keys()) !== null && _permOptions$permSkil2 !== void 0 ? _permOptions$permSkil2 : []).filter(function(skill2) {
    return !skill2.permable;
  });
  if (unpermableSkills.length) {
    throw new AscendError("You're trying to perm the following skills, but they're unpermable: ".concat(unownedSkills.join(", ")));
  }
  if (!isInValhalla()) {
    (0, import_kolmafia72.visitUrl)("ascend.php?action=ascend&confirm=on&confirm2=on");
  }
  if (!isInValhalla()) {
    throw new AscendError("Failed to ascend--do you have a pending trade offer?");
  }
  (0, import_kolmafia72.visitUrl)("afterlife.php?action=pearlygates");
  if (consumable !== $item(_templateObject835 || (_templateObject835 = _taggedTemplateLiteral68(["none"])))) {
    (0, import_kolmafia72.visitUrl)("afterlife.php?action=buydeli&whichitem=".concat(consumable.id));
  }
  if (pet !== $item(_templateObject929 || (_templateObject929 = _taggedTemplateLiteral68(["none"])))) {
    (0, import_kolmafia72.visitUrl)("afterlife.php?action=buyarmory&whichitem=".concat(pet.id));
  }
  if (permOptions) {
    var currentPerms = permedSkills();
    var karma = get("bankedKarma");
    var _iterator = _createForOfIteratorHelper8(permOptions.permSkills.entries()), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var _currentPerms$get;
        var _step$value = _slicedToArray20(_step.value, 2), skill = _step$value[0], prospectivePermLevel = _step$value[1];
        var currentPermLevel = (_currentPerms$get = currentPerms.get(skill)) !== null && _currentPerms$get !== void 0 ? _currentPerms$get : Lifestyle.casual;
        if (prospectivePermLevel > currentPermLevel) {
          var expectedKarma = 100 * (prospectivePermLevel - currentPermLevel);
          if (karma < expectedKarma) {
            if (!permOptions.neverAbort) throw new AscendError("Skill ".concat(skill, " is too karmaically expensive!"));
            continue;
          }
          karma -= expectedKarma;
          var permText = prospectivePermLevel === Lifestyle.hardcore ? "hcperm" : "scperm";
          (0, import_kolmafia72.visitUrl)("afterlife.php?action=".concat(permText, "&whichskill=").concat(skill.id));
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  (0, import_kolmafia72.visitUrl)("afterlife.php?action=ascend&confirmascend=1&whichsign=".concat(moonId, "&gender=").concat(kolGender, "&whichclass=").concat(playerClass.id, "&whichpath=").concat(path3.id, "&asctype=").concat(lifestyle, "&nopetok=1&noskillsok=1&lamepathok=1&lamesignok=1&pwd"), true);
}
function prepareAscension() {
  var _throwOnFail;
  var _ref5 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, garden = _ref5.garden, eudora = _ref5.eudora, chateau = _ref5.chateau, throwOnFail = _ref5.throwOnFail;
  throwOnFail = (_throwOnFail = throwOnFail) !== null && _throwOnFail !== void 0 ? _throwOnFail : true;
  if (garden && !Object.getOwnPropertyNames((0, import_kolmafia72.getCampground)()).includes(garden)) {
    (0, import_kolmafia72.use)(import_kolmafia72.Item.get(garden));
    var gardenName = Object.getOwnPropertyNames((0, import_kolmafia72.getCampground)()).find(isGarden);
    if (gardenName !== garden && throwOnFail) {
      throw new AscensionPrepError(garden, gardenName);
    }
  }
  if (eudora && (0, import_kolmafia72.eudoraItem)().name !== eudora) {
    var eudoraNumber = 1 + eudorae.indexOf(eudora);
    if (!(0, import_kolmafia72.xpath)((0, import_kolmafia72.visitUrl)("account.php?tab=correspondence"), '//select[@name="whichpenpal"]/option/@value').includes(eudoraNumber.toString()) && throwOnFail) {
      throw new AscensionPrepError("Unable to swap eudora to ".concat(eudora, " because you are not subscribed to it."));
    } else {
      (0, import_kolmafia72.visitUrl)("account.php?actions[]=whichpenpal&whichpenpal=".concat(eudoraNumber, "&action=Update"), true);
    }
    if ((0, import_kolmafia72.eudoraItem)() !== import_kolmafia72.Item.get(eudora) && throwOnFail) {
      throw new AscensionPrepError(eudora, (0, import_kolmafia72.eudoraItem)());
    }
  }
  if (chateau && ChateauMantegna_exports.have()) {
    var desk = chateau.desk, ceiling = chateau.ceiling, nightstand = chateau.nightstand;
    if (ceiling && ChateauMantegna_exports.getCeiling() !== ceiling) {
      if (!ChateauMantegna_exports.changeCeiling(ceiling) && throwOnFail) {
        var _ChateauMantegna$getC;
        throw new AscensionPrepError(ceiling, (_ChateauMantegna$getC = ChateauMantegna_exports.getCeiling()) !== null && _ChateauMantegna$getC !== void 0 ? _ChateauMantegna$getC : "unknown");
      }
    }
    if (desk && ChateauMantegna_exports.getDesk() !== desk) {
      if (!ChateauMantegna_exports.changeDesk(desk) && throwOnFail) {
        var _ChateauMantegna$getD;
        throw new AscensionPrepError(desk, (_ChateauMantegna$getD = ChateauMantegna_exports.getDesk()) !== null && _ChateauMantegna$getD !== void 0 ? _ChateauMantegna$getD : "unknown");
      }
    }
    if (nightstand && ChateauMantegna_exports.getNightstand() !== nightstand) {
      if (!ChateauMantegna_exports.changeNightstand(nightstand) && throwOnFail) {
        var _ChateauMantegna$getN;
        throw new AscensionPrepError(nightstand, (_ChateauMantegna$getN = ChateauMantegna_exports.getNightstand()) !== null && _ChateauMantegna$getN !== void 0 ? _ChateauMantegna$getN : "unknown");
      }
    }
  }
}
var import_kolmafia72, _templateObject505, _templateObject2130, _templateObject3119, _templateObject4102, _templateObject554, _templateObject647, _templateObject741, _templateObject835, _templateObject929, Lifestyle, KolGender, AscendError, gardens, eudorae, isGarden, isEudora, isDesk, isNightstand, isCeiling, AscensionPrepError;
var init_ascend = __esm({
  "node_modules/libram/dist/ascend.js": function() {
    import_kolmafia72 = require("kolmafia");
    init_moonSign();
    init_property();
    init_resources();
    init_template_string();
    init_utils();
    (function(Lifestyle2) {
      Lifestyle2[Lifestyle2["casual"] = 1] = "casual";
      Lifestyle2[Lifestyle2["softcore"] = 2] = "softcore";
      Lifestyle2[Lifestyle2["normal"] = 2] = "normal";
      Lifestyle2[Lifestyle2["hardcore"] = 3] = "hardcore";
    })(Lifestyle || (Lifestyle = {}));
    (function(KolGender2) {
      KolGender2[KolGender2["male"] = 1] = "male";
      KolGender2[KolGender2["female"] = 2] = "female";
    })(KolGender || (KolGender = {}));
    AscendError = /* @__PURE__ */ function(_Error) {
      _inherits3(AscendError2, _Error);
      function AscendError2() {
        _classCallCheck11(this, AscendError2);
        return _callSuper3(this, AscendError2, arguments);
      }
      return _createClass11(AscendError2);
    }(/* @__PURE__ */ _wrapNativeSuper3(Error));
    gardens = ["packet of pumpkin seeds", "Peppermint Pip Packet", "packet of dragon's teeth", "packet of beer seeds", "packet of winter seeds", "packet of thanksgarden seeds", "packet of tall grass seeds", "packet of mushroom spores", "packet of rock seeds"];
    eudorae = ["My Own Pen Pal kit", "GameInformPowerDailyPro subscription card", "Xi Receiver Unit", "New-You Club Membership Form", "Our Daily Candles\u2122 order form"];
    isGarden = function(x) {
      return arrayContains(x, gardens);
    };
    isEudora = function(x) {
      return arrayContains(x, eudorae);
    };
    isDesk = function(x) {
      return arrayContains(x, ChateauMantegna_exports.desks);
    };
    isNightstand = function(x) {
      return arrayContains(x, ChateauMantegna_exports.nightstands);
    };
    isCeiling = function(x) {
      return arrayContains(x, ChateauMantegna_exports.ceilings);
    };
    AscensionPrepError = /* @__PURE__ */ function(_Error2) {
      _inherits3(AscensionPrepError2, _Error2);
      function AscensionPrepError2(cause, original) {
        var _this;
        _classCallCheck11(this, AscensionPrepError2);
        if (isGarden(cause)) {
          _this = _callSuper3(this, AscensionPrepError2, ["Unable to swap garden to ".concat(cause, "; garden is currently ").concat(original, ".")]);
          _defineProperty16(_assertThisInitialized3(_this), "cause", void 0);
        } else if (isEudora(cause)) {
          _this = _callSuper3(this, AscensionPrepError2, ["Unable to swap eudora to ".concat(cause, "; eudora is currently ").concat(original, ".")]);
          _defineProperty16(_assertThisInitialized3(_this), "cause", void 0);
        } else if (isDesk(cause)) {
          _this = _callSuper3(this, AscensionPrepError2, ["Unable to swap chateau desk to ".concat(cause, "; desk is currently ").concat(original, ".")]);
          _defineProperty16(_assertThisInitialized3(_this), "cause", void 0);
        } else if (isNightstand(cause)) {
          _this = _callSuper3(this, AscensionPrepError2, ["Unable to swap chateau nightstand to ".concat(cause, "; nightstand is currently ").concat(original, ".")]);
          _defineProperty16(_assertThisInitialized3(_this), "cause", void 0);
        } else if (isCeiling(cause)) {
          _this = _callSuper3(this, AscensionPrepError2, ["Unable to swap chateau ceiling to ".concat(cause, "; ceiling is currently ").concat(original, ".")]);
          _defineProperty16(_assertThisInitialized3(_this), "cause", void 0);
        } else {
          _this = _callSuper3(this, AscensionPrepError2, [cause]);
          _defineProperty16(_assertThisInitialized3(_this), "cause", void 0);
        }
        _this.cause = cause;
        return _possibleConstructorReturn3(_this);
      }
      return _createClass11(AscensionPrepError2);
    }(/* @__PURE__ */ _wrapNativeSuper3(Error));
  }
});

// node_modules/html-entities/lib/named-references.js
var require_named_references = __commonJS({
  "node_modules/html-entities/lib/named-references.js": function(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.bodyRegExps = {
      xml: /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,
      html4: /&notin;|&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,
      html5: /&centerdot;|&copysr;|&divideontimes;|&gtcc;|&gtcir;|&gtdot;|&gtlPar;|&gtquest;|&gtrapprox;|&gtrarr;|&gtrdot;|&gtreqless;|&gtreqqless;|&gtrless;|&gtrsim;|&ltcc;|&ltcir;|&ltdot;|&lthree;|&ltimes;|&ltlarr;|&ltquest;|&ltrPar;|&ltri;|&ltrie;|&ltrif;|&notin;|&notinE;|&notindot;|&notinva;|&notinvb;|&notinvc;|&notni;|&notniva;|&notnivb;|&notnivc;|&parallel;|&timesb;|&timesbar;|&timesd;|&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g
    };
    exports2.namedReferences = {
      xml: {
        entities: {
          "&lt;": "<",
          "&gt;": ">",
          "&quot;": '"',
          "&apos;": "'",
          "&amp;": "&"
        },
        characters: {
          "<": "&lt;",
          ">": "&gt;",
          '"': "&quot;",
          "'": "&apos;",
          "&": "&amp;"
        }
      },
      html4: {
        entities: {
          "&apos;": "'",
          "&nbsp": "\xA0",
          "&nbsp;": "\xA0",
          "&iexcl": "\xA1",
          "&iexcl;": "\xA1",
          "&cent": "\xA2",
          "&cent;": "\xA2",
          "&pound": "\xA3",
          "&pound;": "\xA3",
          "&curren": "\xA4",
          "&curren;": "\xA4",
          "&yen": "\xA5",
          "&yen;": "\xA5",
          "&brvbar": "\xA6",
          "&brvbar;": "\xA6",
          "&sect": "\xA7",
          "&sect;": "\xA7",
          "&uml": "\xA8",
          "&uml;": "\xA8",
          "&copy": "\xA9",
          "&copy;": "\xA9",
          "&ordf": "\xAA",
          "&ordf;": "\xAA",
          "&laquo": "\xAB",
          "&laquo;": "\xAB",
          "&not": "\xAC",
          "&not;": "\xAC",
          "&shy": "\xAD",
          "&shy;": "\xAD",
          "&reg": "\xAE",
          "&reg;": "\xAE",
          "&macr": "\xAF",
          "&macr;": "\xAF",
          "&deg": "\xB0",
          "&deg;": "\xB0",
          "&plusmn": "\xB1",
          "&plusmn;": "\xB1",
          "&sup2": "\xB2",
          "&sup2;": "\xB2",
          "&sup3": "\xB3",
          "&sup3;": "\xB3",
          "&acute": "\xB4",
          "&acute;": "\xB4",
          "&micro": "\xB5",
          "&micro;": "\xB5",
          "&para": "\xB6",
          "&para;": "\xB6",
          "&middot": "\xB7",
          "&middot;": "\xB7",
          "&cedil": "\xB8",
          "&cedil;": "\xB8",
          "&sup1": "\xB9",
          "&sup1;": "\xB9",
          "&ordm": "\xBA",
          "&ordm;": "\xBA",
          "&raquo": "\xBB",
          "&raquo;": "\xBB",
          "&frac14": "\xBC",
          "&frac14;": "\xBC",
          "&frac12": "\xBD",
          "&frac12;": "\xBD",
          "&frac34": "\xBE",
          "&frac34;": "\xBE",
          "&iquest": "\xBF",
          "&iquest;": "\xBF",
          "&Agrave": "\xC0",
          "&Agrave;": "\xC0",
          "&Aacute": "\xC1",
          "&Aacute;": "\xC1",
          "&Acirc": "\xC2",
          "&Acirc;": "\xC2",
          "&Atilde": "\xC3",
          "&Atilde;": "\xC3",
          "&Auml": "\xC4",
          "&Auml;": "\xC4",
          "&Aring": "\xC5",
          "&Aring;": "\xC5",
          "&AElig": "\xC6",
          "&AElig;": "\xC6",
          "&Ccedil": "\xC7",
          "&Ccedil;": "\xC7",
          "&Egrave": "\xC8",
          "&Egrave;": "\xC8",
          "&Eacute": "\xC9",
          "&Eacute;": "\xC9",
          "&Ecirc": "\xCA",
          "&Ecirc;": "\xCA",
          "&Euml": "\xCB",
          "&Euml;": "\xCB",
          "&Igrave": "\xCC",
          "&Igrave;": "\xCC",
          "&Iacute": "\xCD",
          "&Iacute;": "\xCD",
          "&Icirc": "\xCE",
          "&Icirc;": "\xCE",
          "&Iuml": "\xCF",
          "&Iuml;": "\xCF",
          "&ETH": "\xD0",
          "&ETH;": "\xD0",
          "&Ntilde": "\xD1",
          "&Ntilde;": "\xD1",
          "&Ograve": "\xD2",
          "&Ograve;": "\xD2",
          "&Oacute": "\xD3",
          "&Oacute;": "\xD3",
          "&Ocirc": "\xD4",
          "&Ocirc;": "\xD4",
          "&Otilde": "\xD5",
          "&Otilde;": "\xD5",
          "&Ouml": "\xD6",
          "&Ouml;": "\xD6",
          "&times": "\xD7",
          "&times;": "\xD7",
          "&Oslash": "\xD8",
          "&Oslash;": "\xD8",
          "&Ugrave": "\xD9",
          "&Ugrave;": "\xD9",
          "&Uacute": "\xDA",
          "&Uacute;": "\xDA",
          "&Ucirc": "\xDB",
          "&Ucirc;": "\xDB",
          "&Uuml": "\xDC",
          "&Uuml;": "\xDC",
          "&Yacute": "\xDD",
          "&Yacute;": "\xDD",
          "&THORN": "\xDE",
          "&THORN;": "\xDE",
          "&szlig": "\xDF",
          "&szlig;": "\xDF",
          "&agrave": "\xE0",
          "&agrave;": "\xE0",
          "&aacute": "\xE1",
          "&aacute;": "\xE1",
          "&acirc": "\xE2",
          "&acirc;": "\xE2",
          "&atilde": "\xE3",
          "&atilde;": "\xE3",
          "&auml": "\xE4",
          "&auml;": "\xE4",
          "&aring": "\xE5",
          "&aring;": "\xE5",
          "&aelig": "\xE6",
          "&aelig;": "\xE6",
          "&ccedil": "\xE7",
          "&ccedil;": "\xE7",
          "&egrave": "\xE8",
          "&egrave;": "\xE8",
          "&eacute": "\xE9",
          "&eacute;": "\xE9",
          "&ecirc": "\xEA",
          "&ecirc;": "\xEA",
          "&euml": "\xEB",
          "&euml;": "\xEB",
          "&igrave": "\xEC",
          "&igrave;": "\xEC",
          "&iacute": "\xED",
          "&iacute;": "\xED",
          "&icirc": "\xEE",
          "&icirc;": "\xEE",
          "&iuml": "\xEF",
          "&iuml;": "\xEF",
          "&eth": "\xF0",
          "&eth;": "\xF0",
          "&ntilde": "\xF1",
          "&ntilde;": "\xF1",
          "&ograve": "\xF2",
          "&ograve;": "\xF2",
          "&oacute": "\xF3",
          "&oacute;": "\xF3",
          "&ocirc": "\xF4",
          "&ocirc;": "\xF4",
          "&otilde": "\xF5",
          "&otilde;": "\xF5",
          "&ouml": "\xF6",
          "&ouml;": "\xF6",
          "&divide": "\xF7",
          "&divide;": "\xF7",
          "&oslash": "\xF8",
          "&oslash;": "\xF8",
          "&ugrave": "\xF9",
          "&ugrave;": "\xF9",
          "&uacute": "\xFA",
          "&uacute;": "\xFA",
          "&ucirc": "\xFB",
          "&ucirc;": "\xFB",
          "&uuml": "\xFC",
          "&uuml;": "\xFC",
          "&yacute": "\xFD",
          "&yacute;": "\xFD",
          "&thorn": "\xFE",
          "&thorn;": "\xFE",
          "&yuml": "\xFF",
          "&yuml;": "\xFF",
          "&quot": '"',
          "&quot;": '"',
          "&amp": "&",
          "&amp;": "&",
          "&lt": "<",
          "&lt;": "<",
          "&gt": ">",
          "&gt;": ">",
          "&OElig;": "\u0152",
          "&oelig;": "\u0153",
          "&Scaron;": "\u0160",
          "&scaron;": "\u0161",
          "&Yuml;": "\u0178",
          "&circ;": "\u02C6",
          "&tilde;": "\u02DC",
          "&ensp;": "\u2002",
          "&emsp;": "\u2003",
          "&thinsp;": "\u2009",
          "&zwnj;": "\u200C",
          "&zwj;": "\u200D",
          "&lrm;": "\u200E",
          "&rlm;": "\u200F",
          "&ndash;": "\u2013",
          "&mdash;": "\u2014",
          "&lsquo;": "\u2018",
          "&rsquo;": "\u2019",
          "&sbquo;": "\u201A",
          "&ldquo;": "\u201C",
          "&rdquo;": "\u201D",
          "&bdquo;": "\u201E",
          "&dagger;": "\u2020",
          "&Dagger;": "\u2021",
          "&permil;": "\u2030",
          "&lsaquo;": "\u2039",
          "&rsaquo;": "\u203A",
          "&euro;": "\u20AC",
          "&fnof;": "\u0192",
          "&Alpha;": "\u0391",
          "&Beta;": "\u0392",
          "&Gamma;": "\u0393",
          "&Delta;": "\u0394",
          "&Epsilon;": "\u0395",
          "&Zeta;": "\u0396",
          "&Eta;": "\u0397",
          "&Theta;": "\u0398",
          "&Iota;": "\u0399",
          "&Kappa;": "\u039A",
          "&Lambda;": "\u039B",
          "&Mu;": "\u039C",
          "&Nu;": "\u039D",
          "&Xi;": "\u039E",
          "&Omicron;": "\u039F",
          "&Pi;": "\u03A0",
          "&Rho;": "\u03A1",
          "&Sigma;": "\u03A3",
          "&Tau;": "\u03A4",
          "&Upsilon;": "\u03A5",
          "&Phi;": "\u03A6",
          "&Chi;": "\u03A7",
          "&Psi;": "\u03A8",
          "&Omega;": "\u03A9",
          "&alpha;": "\u03B1",
          "&beta;": "\u03B2",
          "&gamma;": "\u03B3",
          "&delta;": "\u03B4",
          "&epsilon;": "\u03B5",
          "&zeta;": "\u03B6",
          "&eta;": "\u03B7",
          "&theta;": "\u03B8",
          "&iota;": "\u03B9",
          "&kappa;": "\u03BA",
          "&lambda;": "\u03BB",
          "&mu;": "\u03BC",
          "&nu;": "\u03BD",
          "&xi;": "\u03BE",
          "&omicron;": "\u03BF",
          "&pi;": "\u03C0",
          "&rho;": "\u03C1",
          "&sigmaf;": "\u03C2",
          "&sigma;": "\u03C3",
          "&tau;": "\u03C4",
          "&upsilon;": "\u03C5",
          "&phi;": "\u03C6",
          "&chi;": "\u03C7",
          "&psi;": "\u03C8",
          "&omega;": "\u03C9",
          "&thetasym;": "\u03D1",
          "&upsih;": "\u03D2",
          "&piv;": "\u03D6",
          "&bull;": "\u2022",
          "&hellip;": "\u2026",
          "&prime;": "\u2032",
          "&Prime;": "\u2033",
          "&oline;": "\u203E",
          "&frasl;": "\u2044",
          "&weierp;": "\u2118",
          "&image;": "\u2111",
          "&real;": "\u211C",
          "&trade;": "\u2122",
          "&alefsym;": "\u2135",
          "&larr;": "\u2190",
          "&uarr;": "\u2191",
          "&rarr;": "\u2192",
          "&darr;": "\u2193",
          "&harr;": "\u2194",
          "&crarr;": "\u21B5",
          "&lArr;": "\u21D0",
          "&uArr;": "\u21D1",
          "&rArr;": "\u21D2",
          "&dArr;": "\u21D3",
          "&hArr;": "\u21D4",
          "&forall;": "\u2200",
          "&part;": "\u2202",
          "&exist;": "\u2203",
          "&empty;": "\u2205",
          "&nabla;": "\u2207",
          "&isin;": "\u2208",
          "&notin;": "\u2209",
          "&ni;": "\u220B",
          "&prod;": "\u220F",
          "&sum;": "\u2211",
          "&minus;": "\u2212",
          "&lowast;": "\u2217",
          "&radic;": "\u221A",
          "&prop;": "\u221D",
          "&infin;": "\u221E",
          "&ang;": "\u2220",
          "&and;": "\u2227",
          "&or;": "\u2228",
          "&cap;": "\u2229",
          "&cup;": "\u222A",
          "&int;": "\u222B",
          "&there4;": "\u2234",
          "&sim;": "\u223C",
          "&cong;": "\u2245",
          "&asymp;": "\u2248",
          "&ne;": "\u2260",
          "&equiv;": "\u2261",
          "&le;": "\u2264",
          "&ge;": "\u2265",
          "&sub;": "\u2282",
          "&sup;": "\u2283",
          "&nsub;": "\u2284",
          "&sube;": "\u2286",
          "&supe;": "\u2287",
          "&oplus;": "\u2295",
          "&otimes;": "\u2297",
          "&perp;": "\u22A5",
          "&sdot;": "\u22C5",
          "&lceil;": "\u2308",
          "&rceil;": "\u2309",
          "&lfloor;": "\u230A",
          "&rfloor;": "\u230B",
          "&lang;": "\u2329",
          "&rang;": "\u232A",
          "&loz;": "\u25CA",
          "&spades;": "\u2660",
          "&clubs;": "\u2663",
          "&hearts;": "\u2665",
          "&diams;": "\u2666"
        },
        characters: {
          "'": "&apos;",
          "\xA0": "&nbsp;",
          "\xA1": "&iexcl;",
          "\xA2": "&cent;",
          "\xA3": "&pound;",
          "\xA4": "&curren;",
          "\xA5": "&yen;",
          "\xA6": "&brvbar;",
          "\xA7": "&sect;",
          "\xA8": "&uml;",
          "\xA9": "&copy;",
          "\xAA": "&ordf;",
          "\xAB": "&laquo;",
          "\xAC": "&not;",
          "\xAD": "&shy;",
          "\xAE": "&reg;",
          "\xAF": "&macr;",
          "\xB0": "&deg;",
          "\xB1": "&plusmn;",
          "\xB2": "&sup2;",
          "\xB3": "&sup3;",
          "\xB4": "&acute;",
          "\xB5": "&micro;",
          "\xB6": "&para;",
          "\xB7": "&middot;",
          "\xB8": "&cedil;",
          "\xB9": "&sup1;",
          "\xBA": "&ordm;",
          "\xBB": "&raquo;",
          "\xBC": "&frac14;",
          "\xBD": "&frac12;",
          "\xBE": "&frac34;",
          "\xBF": "&iquest;",
          "\xC0": "&Agrave;",
          "\xC1": "&Aacute;",
          "\xC2": "&Acirc;",
          "\xC3": "&Atilde;",
          "\xC4": "&Auml;",
          "\xC5": "&Aring;",
          "\xC6": "&AElig;",
          "\xC7": "&Ccedil;",
          "\xC8": "&Egrave;",
          "\xC9": "&Eacute;",
          "\xCA": "&Ecirc;",
          "\xCB": "&Euml;",
          "\xCC": "&Igrave;",
          "\xCD": "&Iacute;",
          "\xCE": "&Icirc;",
          "\xCF": "&Iuml;",
          "\xD0": "&ETH;",
          "\xD1": "&Ntilde;",
          "\xD2": "&Ograve;",
          "\xD3": "&Oacute;",
          "\xD4": "&Ocirc;",
          "\xD5": "&Otilde;",
          "\xD6": "&Ouml;",
          "\xD7": "&times;",
          "\xD8": "&Oslash;",
          "\xD9": "&Ugrave;",
          "\xDA": "&Uacute;",
          "\xDB": "&Ucirc;",
          "\xDC": "&Uuml;",
          "\xDD": "&Yacute;",
          "\xDE": "&THORN;",
          "\xDF": "&szlig;",
          "\xE0": "&agrave;",
          "\xE1": "&aacute;",
          "\xE2": "&acirc;",
          "\xE3": "&atilde;",
          "\xE4": "&auml;",
          "\xE5": "&aring;",
          "\xE6": "&aelig;",
          "\xE7": "&ccedil;",
          "\xE8": "&egrave;",
          "\xE9": "&eacute;",
          "\xEA": "&ecirc;",
          "\xEB": "&euml;",
          "\xEC": "&igrave;",
          "\xED": "&iacute;",
          "\xEE": "&icirc;",
          "\xEF": "&iuml;",
          "\xF0": "&eth;",
          "\xF1": "&ntilde;",
          "\xF2": "&ograve;",
          "\xF3": "&oacute;",
          "\xF4": "&ocirc;",
          "\xF5": "&otilde;",
          "\xF6": "&ouml;",
          "\xF7": "&divide;",
          "\xF8": "&oslash;",
          "\xF9": "&ugrave;",
          "\xFA": "&uacute;",
          "\xFB": "&ucirc;",
          "\xFC": "&uuml;",
          "\xFD": "&yacute;",
          "\xFE": "&thorn;",
          "\xFF": "&yuml;",
          '"': "&quot;",
          "&": "&amp;",
          "<": "&lt;",
          ">": "&gt;",
          "\u0152": "&OElig;",
          "\u0153": "&oelig;",
          "\u0160": "&Scaron;",
          "\u0161": "&scaron;",
          "\u0178": "&Yuml;",
          "\u02C6": "&circ;",
          "\u02DC": "&tilde;",
          "\u2002": "&ensp;",
          "\u2003": "&emsp;",
          "\u2009": "&thinsp;",
          "\u200C": "&zwnj;",
          "\u200D": "&zwj;",
          "\u200E": "&lrm;",
          "\u200F": "&rlm;",
          "\u2013": "&ndash;",
          "\u2014": "&mdash;",
          "\u2018": "&lsquo;",
          "\u2019": "&rsquo;",
          "\u201A": "&sbquo;",
          "\u201C": "&ldquo;",
          "\u201D": "&rdquo;",
          "\u201E": "&bdquo;",
          "\u2020": "&dagger;",
          "\u2021": "&Dagger;",
          "\u2030": "&permil;",
          "\u2039": "&lsaquo;",
          "\u203A": "&rsaquo;",
          "\u20AC": "&euro;",
          "\u0192": "&fnof;",
          "\u0391": "&Alpha;",
          "\u0392": "&Beta;",
          "\u0393": "&Gamma;",
          "\u0394": "&Delta;",
          "\u0395": "&Epsilon;",
          "\u0396": "&Zeta;",
          "\u0397": "&Eta;",
          "\u0398": "&Theta;",
          "\u0399": "&Iota;",
          "\u039A": "&Kappa;",
          "\u039B": "&Lambda;",
          "\u039C": "&Mu;",
          "\u039D": "&Nu;",
          "\u039E": "&Xi;",
          "\u039F": "&Omicron;",
          "\u03A0": "&Pi;",
          "\u03A1": "&Rho;",
          "\u03A3": "&Sigma;",
          "\u03A4": "&Tau;",
          "\u03A5": "&Upsilon;",
          "\u03A6": "&Phi;",
          "\u03A7": "&Chi;",
          "\u03A8": "&Psi;",
          "\u03A9": "&Omega;",
          "\u03B1": "&alpha;",
          "\u03B2": "&beta;",
          "\u03B3": "&gamma;",
          "\u03B4": "&delta;",
          "\u03B5": "&epsilon;",
          "\u03B6": "&zeta;",
          "\u03B7": "&eta;",
          "\u03B8": "&theta;",
          "\u03B9": "&iota;",
          "\u03BA": "&kappa;",
          "\u03BB": "&lambda;",
          "\u03BC": "&mu;",
          "\u03BD": "&nu;",
          "\u03BE": "&xi;",
          "\u03BF": "&omicron;",
          "\u03C0": "&pi;",
          "\u03C1": "&rho;",
          "\u03C2": "&sigmaf;",
          "\u03C3": "&sigma;",
          "\u03C4": "&tau;",
          "\u03C5": "&upsilon;",
          "\u03C6": "&phi;",
          "\u03C7": "&chi;",
          "\u03C8": "&psi;",
          "\u03C9": "&omega;",
          "\u03D1": "&thetasym;",
          "\u03D2": "&upsih;",
          "\u03D6": "&piv;",
          "\u2022": "&bull;",
          "\u2026": "&hellip;",
          "\u2032": "&prime;",
          "\u2033": "&Prime;",
          "\u203E": "&oline;",
          "\u2044": "&frasl;",
          "\u2118": "&weierp;",
          "\u2111": "&image;",
          "\u211C": "&real;",
          "\u2122": "&trade;",
          "\u2135": "&alefsym;",
          "\u2190": "&larr;",
          "\u2191": "&uarr;",
          "\u2192": "&rarr;",
          "\u2193": "&darr;",
          "\u2194": "&harr;",
          "\u21B5": "&crarr;",
          "\u21D0": "&lArr;",
          "\u21D1": "&uArr;",
          "\u21D2": "&rArr;",
          "\u21D3": "&dArr;",
          "\u21D4": "&hArr;",
          "\u2200": "&forall;",
          "\u2202": "&part;",
          "\u2203": "&exist;",
          "\u2205": "&empty;",
          "\u2207": "&nabla;",
          "\u2208": "&isin;",
          "\u2209": "&notin;",
          "\u220B": "&ni;",
          "\u220F": "&prod;",
          "\u2211": "&sum;",
          "\u2212": "&minus;",
          "\u2217": "&lowast;",
          "\u221A": "&radic;",
          "\u221D": "&prop;",
          "\u221E": "&infin;",
          "\u2220": "&ang;",
          "\u2227": "&and;",
          "\u2228": "&or;",
          "\u2229": "&cap;",
          "\u222A": "&cup;",
          "\u222B": "&int;",
          "\u2234": "&there4;",
          "\u223C": "&sim;",
          "\u2245": "&cong;",
          "\u2248": "&asymp;",
          "\u2260": "&ne;",
          "\u2261": "&equiv;",
          "\u2264": "&le;",
          "\u2265": "&ge;",
          "\u2282": "&sub;",
          "\u2283": "&sup;",
          "\u2284": "&nsub;",
          "\u2286": "&sube;",
          "\u2287": "&supe;",
          "\u2295": "&oplus;",
          "\u2297": "&otimes;",
          "\u22A5": "&perp;",
          "\u22C5": "&sdot;",
          "\u2308": "&lceil;",
          "\u2309": "&rceil;",
          "\u230A": "&lfloor;",
          "\u230B": "&rfloor;",
          "\u2329": "&lang;",
          "\u232A": "&rang;",
          "\u25CA": "&loz;",
          "\u2660": "&spades;",
          "\u2663": "&clubs;",
          "\u2665": "&hearts;",
          "\u2666": "&diams;"
        }
      },
      html5: {
        entities: {
          "&AElig": "\xC6",
          "&AElig;": "\xC6",
          "&AMP": "&",
          "&AMP;": "&",
          "&Aacute": "\xC1",
          "&Aacute;": "\xC1",
          "&Abreve;": "\u0102",
          "&Acirc": "\xC2",
          "&Acirc;": "\xC2",
          "&Acy;": "\u0410",
          "&Afr;": "\uD835\uDD04",
          "&Agrave": "\xC0",
          "&Agrave;": "\xC0",
          "&Alpha;": "\u0391",
          "&Amacr;": "\u0100",
          "&And;": "\u2A53",
          "&Aogon;": "\u0104",
          "&Aopf;": "\uD835\uDD38",
          "&ApplyFunction;": "\u2061",
          "&Aring": "\xC5",
          "&Aring;": "\xC5",
          "&Ascr;": "\uD835\uDC9C",
          "&Assign;": "\u2254",
          "&Atilde": "\xC3",
          "&Atilde;": "\xC3",
          "&Auml": "\xC4",
          "&Auml;": "\xC4",
          "&Backslash;": "\u2216",
          "&Barv;": "\u2AE7",
          "&Barwed;": "\u2306",
          "&Bcy;": "\u0411",
          "&Because;": "\u2235",
          "&Bernoullis;": "\u212C",
          "&Beta;": "\u0392",
          "&Bfr;": "\uD835\uDD05",
          "&Bopf;": "\uD835\uDD39",
          "&Breve;": "\u02D8",
          "&Bscr;": "\u212C",
          "&Bumpeq;": "\u224E",
          "&CHcy;": "\u0427",
          "&COPY": "\xA9",
          "&COPY;": "\xA9",
          "&Cacute;": "\u0106",
          "&Cap;": "\u22D2",
          "&CapitalDifferentialD;": "\u2145",
          "&Cayleys;": "\u212D",
          "&Ccaron;": "\u010C",
          "&Ccedil": "\xC7",
          "&Ccedil;": "\xC7",
          "&Ccirc;": "\u0108",
          "&Cconint;": "\u2230",
          "&Cdot;": "\u010A",
          "&Cedilla;": "\xB8",
          "&CenterDot;": "\xB7",
          "&Cfr;": "\u212D",
          "&Chi;": "\u03A7",
          "&CircleDot;": "\u2299",
          "&CircleMinus;": "\u2296",
          "&CirclePlus;": "\u2295",
          "&CircleTimes;": "\u2297",
          "&ClockwiseContourIntegral;": "\u2232",
          "&CloseCurlyDoubleQuote;": "\u201D",
          "&CloseCurlyQuote;": "\u2019",
          "&Colon;": "\u2237",
          "&Colone;": "\u2A74",
          "&Congruent;": "\u2261",
          "&Conint;": "\u222F",
          "&ContourIntegral;": "\u222E",
          "&Copf;": "\u2102",
          "&Coproduct;": "\u2210",
          "&CounterClockwiseContourIntegral;": "\u2233",
          "&Cross;": "\u2A2F",
          "&Cscr;": "\uD835\uDC9E",
          "&Cup;": "\u22D3",
          "&CupCap;": "\u224D",
          "&DD;": "\u2145",
          "&DDotrahd;": "\u2911",
          "&DJcy;": "\u0402",
          "&DScy;": "\u0405",
          "&DZcy;": "\u040F",
          "&Dagger;": "\u2021",
          "&Darr;": "\u21A1",
          "&Dashv;": "\u2AE4",
          "&Dcaron;": "\u010E",
          "&Dcy;": "\u0414",
          "&Del;": "\u2207",
          "&Delta;": "\u0394",
          "&Dfr;": "\uD835\uDD07",
          "&DiacriticalAcute;": "\xB4",
          "&DiacriticalDot;": "\u02D9",
          "&DiacriticalDoubleAcute;": "\u02DD",
          "&DiacriticalGrave;": "`",
          "&DiacriticalTilde;": "\u02DC",
          "&Diamond;": "\u22C4",
          "&DifferentialD;": "\u2146",
          "&Dopf;": "\uD835\uDD3B",
          "&Dot;": "\xA8",
          "&DotDot;": "\u20DC",
          "&DotEqual;": "\u2250",
          "&DoubleContourIntegral;": "\u222F",
          "&DoubleDot;": "\xA8",
          "&DoubleDownArrow;": "\u21D3",
          "&DoubleLeftArrow;": "\u21D0",
          "&DoubleLeftRightArrow;": "\u21D4",
          "&DoubleLeftTee;": "\u2AE4",
          "&DoubleLongLeftArrow;": "\u27F8",
          "&DoubleLongLeftRightArrow;": "\u27FA",
          "&DoubleLongRightArrow;": "\u27F9",
          "&DoubleRightArrow;": "\u21D2",
          "&DoubleRightTee;": "\u22A8",
          "&DoubleUpArrow;": "\u21D1",
          "&DoubleUpDownArrow;": "\u21D5",
          "&DoubleVerticalBar;": "\u2225",
          "&DownArrow;": "\u2193",
          "&DownArrowBar;": "\u2913",
          "&DownArrowUpArrow;": "\u21F5",
          "&DownBreve;": "\u0311",
          "&DownLeftRightVector;": "\u2950",
          "&DownLeftTeeVector;": "\u295E",
          "&DownLeftVector;": "\u21BD",
          "&DownLeftVectorBar;": "\u2956",
          "&DownRightTeeVector;": "\u295F",
          "&DownRightVector;": "\u21C1",
          "&DownRightVectorBar;": "\u2957",
          "&DownTee;": "\u22A4",
          "&DownTeeArrow;": "\u21A7",
          "&Downarrow;": "\u21D3",
          "&Dscr;": "\uD835\uDC9F",
          "&Dstrok;": "\u0110",
          "&ENG;": "\u014A",
          "&ETH": "\xD0",
          "&ETH;": "\xD0",
          "&Eacute": "\xC9",
          "&Eacute;": "\xC9",
          "&Ecaron;": "\u011A",
          "&Ecirc": "\xCA",
          "&Ecirc;": "\xCA",
          "&Ecy;": "\u042D",
          "&Edot;": "\u0116",
          "&Efr;": "\uD835\uDD08",
          "&Egrave": "\xC8",
          "&Egrave;": "\xC8",
          "&Element;": "\u2208",
          "&Emacr;": "\u0112",
          "&EmptySmallSquare;": "\u25FB",
          "&EmptyVerySmallSquare;": "\u25AB",
          "&Eogon;": "\u0118",
          "&Eopf;": "\uD835\uDD3C",
          "&Epsilon;": "\u0395",
          "&Equal;": "\u2A75",
          "&EqualTilde;": "\u2242",
          "&Equilibrium;": "\u21CC",
          "&Escr;": "\u2130",
          "&Esim;": "\u2A73",
          "&Eta;": "\u0397",
          "&Euml": "\xCB",
          "&Euml;": "\xCB",
          "&Exists;": "\u2203",
          "&ExponentialE;": "\u2147",
          "&Fcy;": "\u0424",
          "&Ffr;": "\uD835\uDD09",
          "&FilledSmallSquare;": "\u25FC",
          "&FilledVerySmallSquare;": "\u25AA",
          "&Fopf;": "\uD835\uDD3D",
          "&ForAll;": "\u2200",
          "&Fouriertrf;": "\u2131",
          "&Fscr;": "\u2131",
          "&GJcy;": "\u0403",
          "&GT": ">",
          "&GT;": ">",
          "&Gamma;": "\u0393",
          "&Gammad;": "\u03DC",
          "&Gbreve;": "\u011E",
          "&Gcedil;": "\u0122",
          "&Gcirc;": "\u011C",
          "&Gcy;": "\u0413",
          "&Gdot;": "\u0120",
          "&Gfr;": "\uD835\uDD0A",
          "&Gg;": "\u22D9",
          "&Gopf;": "\uD835\uDD3E",
          "&GreaterEqual;": "\u2265",
          "&GreaterEqualLess;": "\u22DB",
          "&GreaterFullEqual;": "\u2267",
          "&GreaterGreater;": "\u2AA2",
          "&GreaterLess;": "\u2277",
          "&GreaterSlantEqual;": "\u2A7E",
          "&GreaterTilde;": "\u2273",
          "&Gscr;": "\uD835\uDCA2",
          "&Gt;": "\u226B",
          "&HARDcy;": "\u042A",
          "&Hacek;": "\u02C7",
          "&Hat;": "^",
          "&Hcirc;": "\u0124",
          "&Hfr;": "\u210C",
          "&HilbertSpace;": "\u210B",
          "&Hopf;": "\u210D",
          "&HorizontalLine;": "\u2500",
          "&Hscr;": "\u210B",
          "&Hstrok;": "\u0126",
          "&HumpDownHump;": "\u224E",
          "&HumpEqual;": "\u224F",
          "&IEcy;": "\u0415",
          "&IJlig;": "\u0132",
          "&IOcy;": "\u0401",
          "&Iacute": "\xCD",
          "&Iacute;": "\xCD",
          "&Icirc": "\xCE",
          "&Icirc;": "\xCE",
          "&Icy;": "\u0418",
          "&Idot;": "\u0130",
          "&Ifr;": "\u2111",
          "&Igrave": "\xCC",
          "&Igrave;": "\xCC",
          "&Im;": "\u2111",
          "&Imacr;": "\u012A",
          "&ImaginaryI;": "\u2148",
          "&Implies;": "\u21D2",
          "&Int;": "\u222C",
          "&Integral;": "\u222B",
          "&Intersection;": "\u22C2",
          "&InvisibleComma;": "\u2063",
          "&InvisibleTimes;": "\u2062",
          "&Iogon;": "\u012E",
          "&Iopf;": "\uD835\uDD40",
          "&Iota;": "\u0399",
          "&Iscr;": "\u2110",
          "&Itilde;": "\u0128",
          "&Iukcy;": "\u0406",
          "&Iuml": "\xCF",
          "&Iuml;": "\xCF",
          "&Jcirc;": "\u0134",
          "&Jcy;": "\u0419",
          "&Jfr;": "\uD835\uDD0D",
          "&Jopf;": "\uD835\uDD41",
          "&Jscr;": "\uD835\uDCA5",
          "&Jsercy;": "\u0408",
          "&Jukcy;": "\u0404",
          "&KHcy;": "\u0425",
          "&KJcy;": "\u040C",
          "&Kappa;": "\u039A",
          "&Kcedil;": "\u0136",
          "&Kcy;": "\u041A",
          "&Kfr;": "\uD835\uDD0E",
          "&Kopf;": "\uD835\uDD42",
          "&Kscr;": "\uD835\uDCA6",
          "&LJcy;": "\u0409",
          "&LT": "<",
          "&LT;": "<",
          "&Lacute;": "\u0139",
          "&Lambda;": "\u039B",
          "&Lang;": "\u27EA",
          "&Laplacetrf;": "\u2112",
          "&Larr;": "\u219E",
          "&Lcaron;": "\u013D",
          "&Lcedil;": "\u013B",
          "&Lcy;": "\u041B",
          "&LeftAngleBracket;": "\u27E8",
          "&LeftArrow;": "\u2190",
          "&LeftArrowBar;": "\u21E4",
          "&LeftArrowRightArrow;": "\u21C6",
          "&LeftCeiling;": "\u2308",
          "&LeftDoubleBracket;": "\u27E6",
          "&LeftDownTeeVector;": "\u2961",
          "&LeftDownVector;": "\u21C3",
          "&LeftDownVectorBar;": "\u2959",
          "&LeftFloor;": "\u230A",
          "&LeftRightArrow;": "\u2194",
          "&LeftRightVector;": "\u294E",
          "&LeftTee;": "\u22A3",
          "&LeftTeeArrow;": "\u21A4",
          "&LeftTeeVector;": "\u295A",
          "&LeftTriangle;": "\u22B2",
          "&LeftTriangleBar;": "\u29CF",
          "&LeftTriangleEqual;": "\u22B4",
          "&LeftUpDownVector;": "\u2951",
          "&LeftUpTeeVector;": "\u2960",
          "&LeftUpVector;": "\u21BF",
          "&LeftUpVectorBar;": "\u2958",
          "&LeftVector;": "\u21BC",
          "&LeftVectorBar;": "\u2952",
          "&Leftarrow;": "\u21D0",
          "&Leftrightarrow;": "\u21D4",
          "&LessEqualGreater;": "\u22DA",
          "&LessFullEqual;": "\u2266",
          "&LessGreater;": "\u2276",
          "&LessLess;": "\u2AA1",
          "&LessSlantEqual;": "\u2A7D",
          "&LessTilde;": "\u2272",
          "&Lfr;": "\uD835\uDD0F",
          "&Ll;": "\u22D8",
          "&Lleftarrow;": "\u21DA",
          "&Lmidot;": "\u013F",
          "&LongLeftArrow;": "\u27F5",
          "&LongLeftRightArrow;": "\u27F7",
          "&LongRightArrow;": "\u27F6",
          "&Longleftarrow;": "\u27F8",
          "&Longleftrightarrow;": "\u27FA",
          "&Longrightarrow;": "\u27F9",
          "&Lopf;": "\uD835\uDD43",
          "&LowerLeftArrow;": "\u2199",
          "&LowerRightArrow;": "\u2198",
          "&Lscr;": "\u2112",
          "&Lsh;": "\u21B0",
          "&Lstrok;": "\u0141",
          "&Lt;": "\u226A",
          "&Map;": "\u2905",
          "&Mcy;": "\u041C",
          "&MediumSpace;": "\u205F",
          "&Mellintrf;": "\u2133",
          "&Mfr;": "\uD835\uDD10",
          "&MinusPlus;": "\u2213",
          "&Mopf;": "\uD835\uDD44",
          "&Mscr;": "\u2133",
          "&Mu;": "\u039C",
          "&NJcy;": "\u040A",
          "&Nacute;": "\u0143",
          "&Ncaron;": "\u0147",
          "&Ncedil;": "\u0145",
          "&Ncy;": "\u041D",
          "&NegativeMediumSpace;": "\u200B",
          "&NegativeThickSpace;": "\u200B",
          "&NegativeThinSpace;": "\u200B",
          "&NegativeVeryThinSpace;": "\u200B",
          "&NestedGreaterGreater;": "\u226B",
          "&NestedLessLess;": "\u226A",
          "&NewLine;": "\n",
          "&Nfr;": "\uD835\uDD11",
          "&NoBreak;": "\u2060",
          "&NonBreakingSpace;": "\xA0",
          "&Nopf;": "\u2115",
          "&Not;": "\u2AEC",
          "&NotCongruent;": "\u2262",
          "&NotCupCap;": "\u226D",
          "&NotDoubleVerticalBar;": "\u2226",
          "&NotElement;": "\u2209",
          "&NotEqual;": "\u2260",
          "&NotEqualTilde;": "\u2242\u0338",
          "&NotExists;": "\u2204",
          "&NotGreater;": "\u226F",
          "&NotGreaterEqual;": "\u2271",
          "&NotGreaterFullEqual;": "\u2267\u0338",
          "&NotGreaterGreater;": "\u226B\u0338",
          "&NotGreaterLess;": "\u2279",
          "&NotGreaterSlantEqual;": "\u2A7E\u0338",
          "&NotGreaterTilde;": "\u2275",
          "&NotHumpDownHump;": "\u224E\u0338",
          "&NotHumpEqual;": "\u224F\u0338",
          "&NotLeftTriangle;": "\u22EA",
          "&NotLeftTriangleBar;": "\u29CF\u0338",
          "&NotLeftTriangleEqual;": "\u22EC",
          "&NotLess;": "\u226E",
          "&NotLessEqual;": "\u2270",
          "&NotLessGreater;": "\u2278",
          "&NotLessLess;": "\u226A\u0338",
          "&NotLessSlantEqual;": "\u2A7D\u0338",
          "&NotLessTilde;": "\u2274",
          "&NotNestedGreaterGreater;": "\u2AA2\u0338",
          "&NotNestedLessLess;": "\u2AA1\u0338",
          "&NotPrecedes;": "\u2280",
          "&NotPrecedesEqual;": "\u2AAF\u0338",
          "&NotPrecedesSlantEqual;": "\u22E0",
          "&NotReverseElement;": "\u220C",
          "&NotRightTriangle;": "\u22EB",
          "&NotRightTriangleBar;": "\u29D0\u0338",
          "&NotRightTriangleEqual;": "\u22ED",
          "&NotSquareSubset;": "\u228F\u0338",
          "&NotSquareSubsetEqual;": "\u22E2",
          "&NotSquareSuperset;": "\u2290\u0338",
          "&NotSquareSupersetEqual;": "\u22E3",
          "&NotSubset;": "\u2282\u20D2",
          "&NotSubsetEqual;": "\u2288",
          "&NotSucceeds;": "\u2281",
          "&NotSucceedsEqual;": "\u2AB0\u0338",
          "&NotSucceedsSlantEqual;": "\u22E1",
          "&NotSucceedsTilde;": "\u227F\u0338",
          "&NotSuperset;": "\u2283\u20D2",
          "&NotSupersetEqual;": "\u2289",
          "&NotTilde;": "\u2241",
          "&NotTildeEqual;": "\u2244",
          "&NotTildeFullEqual;": "\u2247",
          "&NotTildeTilde;": "\u2249",
          "&NotVerticalBar;": "\u2224",
          "&Nscr;": "\uD835\uDCA9",
          "&Ntilde": "\xD1",
          "&Ntilde;": "\xD1",
          "&Nu;": "\u039D",
          "&OElig;": "\u0152",
          "&Oacute": "\xD3",
          "&Oacute;": "\xD3",
          "&Ocirc": "\xD4",
          "&Ocirc;": "\xD4",
          "&Ocy;": "\u041E",
          "&Odblac;": "\u0150",
          "&Ofr;": "\uD835\uDD12",
          "&Ograve": "\xD2",
          "&Ograve;": "\xD2",
          "&Omacr;": "\u014C",
          "&Omega;": "\u03A9",
          "&Omicron;": "\u039F",
          "&Oopf;": "\uD835\uDD46",
          "&OpenCurlyDoubleQuote;": "\u201C",
          "&OpenCurlyQuote;": "\u2018",
          "&Or;": "\u2A54",
          "&Oscr;": "\uD835\uDCAA",
          "&Oslash": "\xD8",
          "&Oslash;": "\xD8",
          "&Otilde": "\xD5",
          "&Otilde;": "\xD5",
          "&Otimes;": "\u2A37",
          "&Ouml": "\xD6",
          "&Ouml;": "\xD6",
          "&OverBar;": "\u203E",
          "&OverBrace;": "\u23DE",
          "&OverBracket;": "\u23B4",
          "&OverParenthesis;": "\u23DC",
          "&PartialD;": "\u2202",
          "&Pcy;": "\u041F",
          "&Pfr;": "\uD835\uDD13",
          "&Phi;": "\u03A6",
          "&Pi;": "\u03A0",
          "&PlusMinus;": "\xB1",
          "&Poincareplane;": "\u210C",
          "&Popf;": "\u2119",
          "&Pr;": "\u2ABB",
          "&Precedes;": "\u227A",
          "&PrecedesEqual;": "\u2AAF",
          "&PrecedesSlantEqual;": "\u227C",
          "&PrecedesTilde;": "\u227E",
          "&Prime;": "\u2033",
          "&Product;": "\u220F",
          "&Proportion;": "\u2237",
          "&Proportional;": "\u221D",
          "&Pscr;": "\uD835\uDCAB",
          "&Psi;": "\u03A8",
          "&QUOT": '"',
          "&QUOT;": '"',
          "&Qfr;": "\uD835\uDD14",
          "&Qopf;": "\u211A",
          "&Qscr;": "\uD835\uDCAC",
          "&RBarr;": "\u2910",
          "&REG": "\xAE",
          "&REG;": "\xAE",
          "&Racute;": "\u0154",
          "&Rang;": "\u27EB",
          "&Rarr;": "\u21A0",
          "&Rarrtl;": "\u2916",
          "&Rcaron;": "\u0158",
          "&Rcedil;": "\u0156",
          "&Rcy;": "\u0420",
          "&Re;": "\u211C",
          "&ReverseElement;": "\u220B",
          "&ReverseEquilibrium;": "\u21CB",
          "&ReverseUpEquilibrium;": "\u296F",
          "&Rfr;": "\u211C",
          "&Rho;": "\u03A1",
          "&RightAngleBracket;": "\u27E9",
          "&RightArrow;": "\u2192",
          "&RightArrowBar;": "\u21E5",
          "&RightArrowLeftArrow;": "\u21C4",
          "&RightCeiling;": "\u2309",
          "&RightDoubleBracket;": "\u27E7",
          "&RightDownTeeVector;": "\u295D",
          "&RightDownVector;": "\u21C2",
          "&RightDownVectorBar;": "\u2955",
          "&RightFloor;": "\u230B",
          "&RightTee;": "\u22A2",
          "&RightTeeArrow;": "\u21A6",
          "&RightTeeVector;": "\u295B",
          "&RightTriangle;": "\u22B3",
          "&RightTriangleBar;": "\u29D0",
          "&RightTriangleEqual;": "\u22B5",
          "&RightUpDownVector;": "\u294F",
          "&RightUpTeeVector;": "\u295C",
          "&RightUpVector;": "\u21BE",
          "&RightUpVectorBar;": "\u2954",
          "&RightVector;": "\u21C0",
          "&RightVectorBar;": "\u2953",
          "&Rightarrow;": "\u21D2",
          "&Ropf;": "\u211D",
          "&RoundImplies;": "\u2970",
          "&Rrightarrow;": "\u21DB",
          "&Rscr;": "\u211B",
          "&Rsh;": "\u21B1",
          "&RuleDelayed;": "\u29F4",
          "&SHCHcy;": "\u0429",
          "&SHcy;": "\u0428",
          "&SOFTcy;": "\u042C",
          "&Sacute;": "\u015A",
          "&Sc;": "\u2ABC",
          "&Scaron;": "\u0160",
          "&Scedil;": "\u015E",
          "&Scirc;": "\u015C",
          "&Scy;": "\u0421",
          "&Sfr;": "\uD835\uDD16",
          "&ShortDownArrow;": "\u2193",
          "&ShortLeftArrow;": "\u2190",
          "&ShortRightArrow;": "\u2192",
          "&ShortUpArrow;": "\u2191",
          "&Sigma;": "\u03A3",
          "&SmallCircle;": "\u2218",
          "&Sopf;": "\uD835\uDD4A",
          "&Sqrt;": "\u221A",
          "&Square;": "\u25A1",
          "&SquareIntersection;": "\u2293",
          "&SquareSubset;": "\u228F",
          "&SquareSubsetEqual;": "\u2291",
          "&SquareSuperset;": "\u2290",
          "&SquareSupersetEqual;": "\u2292",
          "&SquareUnion;": "\u2294",
          "&Sscr;": "\uD835\uDCAE",
          "&Star;": "\u22C6",
          "&Sub;": "\u22D0",
          "&Subset;": "\u22D0",
          "&SubsetEqual;": "\u2286",
          "&Succeeds;": "\u227B",
          "&SucceedsEqual;": "\u2AB0",
          "&SucceedsSlantEqual;": "\u227D",
          "&SucceedsTilde;": "\u227F",
          "&SuchThat;": "\u220B",
          "&Sum;": "\u2211",
          "&Sup;": "\u22D1",
          "&Superset;": "\u2283",
          "&SupersetEqual;": "\u2287",
          "&Supset;": "\u22D1",
          "&THORN": "\xDE",
          "&THORN;": "\xDE",
          "&TRADE;": "\u2122",
          "&TSHcy;": "\u040B",
          "&TScy;": "\u0426",
          "&Tab;": "	",
          "&Tau;": "\u03A4",
          "&Tcaron;": "\u0164",
          "&Tcedil;": "\u0162",
          "&Tcy;": "\u0422",
          "&Tfr;": "\uD835\uDD17",
          "&Therefore;": "\u2234",
          "&Theta;": "\u0398",
          "&ThickSpace;": "\u205F\u200A",
          "&ThinSpace;": "\u2009",
          "&Tilde;": "\u223C",
          "&TildeEqual;": "\u2243",
          "&TildeFullEqual;": "\u2245",
          "&TildeTilde;": "\u2248",
          "&Topf;": "\uD835\uDD4B",
          "&TripleDot;": "\u20DB",
          "&Tscr;": "\uD835\uDCAF",
          "&Tstrok;": "\u0166",
          "&Uacute": "\xDA",
          "&Uacute;": "\xDA",
          "&Uarr;": "\u219F",
          "&Uarrocir;": "\u2949",
          "&Ubrcy;": "\u040E",
          "&Ubreve;": "\u016C",
          "&Ucirc": "\xDB",
          "&Ucirc;": "\xDB",
          "&Ucy;": "\u0423",
          "&Udblac;": "\u0170",
          "&Ufr;": "\uD835\uDD18",
          "&Ugrave": "\xD9",
          "&Ugrave;": "\xD9",
          "&Umacr;": "\u016A",
          "&UnderBar;": "_",
          "&UnderBrace;": "\u23DF",
          "&UnderBracket;": "\u23B5",
          "&UnderParenthesis;": "\u23DD",
          "&Union;": "\u22C3",
          "&UnionPlus;": "\u228E",
          "&Uogon;": "\u0172",
          "&Uopf;": "\uD835\uDD4C",
          "&UpArrow;": "\u2191",
          "&UpArrowBar;": "\u2912",
          "&UpArrowDownArrow;": "\u21C5",
          "&UpDownArrow;": "\u2195",
          "&UpEquilibrium;": "\u296E",
          "&UpTee;": "\u22A5",
          "&UpTeeArrow;": "\u21A5",
          "&Uparrow;": "\u21D1",
          "&Updownarrow;": "\u21D5",
          "&UpperLeftArrow;": "\u2196",
          "&UpperRightArrow;": "\u2197",
          "&Upsi;": "\u03D2",
          "&Upsilon;": "\u03A5",
          "&Uring;": "\u016E",
          "&Uscr;": "\uD835\uDCB0",
          "&Utilde;": "\u0168",
          "&Uuml": "\xDC",
          "&Uuml;": "\xDC",
          "&VDash;": "\u22AB",
          "&Vbar;": "\u2AEB",
          "&Vcy;": "\u0412",
          "&Vdash;": "\u22A9",
          "&Vdashl;": "\u2AE6",
          "&Vee;": "\u22C1",
          "&Verbar;": "\u2016",
          "&Vert;": "\u2016",
          "&VerticalBar;": "\u2223",
          "&VerticalLine;": "|",
          "&VerticalSeparator;": "\u2758",
          "&VerticalTilde;": "\u2240",
          "&VeryThinSpace;": "\u200A",
          "&Vfr;": "\uD835\uDD19",
          "&Vopf;": "\uD835\uDD4D",
          "&Vscr;": "\uD835\uDCB1",
          "&Vvdash;": "\u22AA",
          "&Wcirc;": "\u0174",
          "&Wedge;": "\u22C0",
          "&Wfr;": "\uD835\uDD1A",
          "&Wopf;": "\uD835\uDD4E",
          "&Wscr;": "\uD835\uDCB2",
          "&Xfr;": "\uD835\uDD1B",
          "&Xi;": "\u039E",
          "&Xopf;": "\uD835\uDD4F",
          "&Xscr;": "\uD835\uDCB3",
          "&YAcy;": "\u042F",
          "&YIcy;": "\u0407",
          "&YUcy;": "\u042E",
          "&Yacute": "\xDD",
          "&Yacute;": "\xDD",
          "&Ycirc;": "\u0176",
          "&Ycy;": "\u042B",
          "&Yfr;": "\uD835\uDD1C",
          "&Yopf;": "\uD835\uDD50",
          "&Yscr;": "\uD835\uDCB4",
          "&Yuml;": "\u0178",
          "&ZHcy;": "\u0416",
          "&Zacute;": "\u0179",
          "&Zcaron;": "\u017D",
          "&Zcy;": "\u0417",
          "&Zdot;": "\u017B",
          "&ZeroWidthSpace;": "\u200B",
          "&Zeta;": "\u0396",
          "&Zfr;": "\u2128",
          "&Zopf;": "\u2124",
          "&Zscr;": "\uD835\uDCB5",
          "&aacute": "\xE1",
          "&aacute;": "\xE1",
          "&abreve;": "\u0103",
          "&ac;": "\u223E",
          "&acE;": "\u223E\u0333",
          "&acd;": "\u223F",
          "&acirc": "\xE2",
          "&acirc;": "\xE2",
          "&acute": "\xB4",
          "&acute;": "\xB4",
          "&acy;": "\u0430",
          "&aelig": "\xE6",
          "&aelig;": "\xE6",
          "&af;": "\u2061",
          "&afr;": "\uD835\uDD1E",
          "&agrave": "\xE0",
          "&agrave;": "\xE0",
          "&alefsym;": "\u2135",
          "&aleph;": "\u2135",
          "&alpha;": "\u03B1",
          "&amacr;": "\u0101",
          "&amalg;": "\u2A3F",
          "&amp": "&",
          "&amp;": "&",
          "&and;": "\u2227",
          "&andand;": "\u2A55",
          "&andd;": "\u2A5C",
          "&andslope;": "\u2A58",
          "&andv;": "\u2A5A",
          "&ang;": "\u2220",
          "&ange;": "\u29A4",
          "&angle;": "\u2220",
          "&angmsd;": "\u2221",
          "&angmsdaa;": "\u29A8",
          "&angmsdab;": "\u29A9",
          "&angmsdac;": "\u29AA",
          "&angmsdad;": "\u29AB",
          "&angmsdae;": "\u29AC",
          "&angmsdaf;": "\u29AD",
          "&angmsdag;": "\u29AE",
          "&angmsdah;": "\u29AF",
          "&angrt;": "\u221F",
          "&angrtvb;": "\u22BE",
          "&angrtvbd;": "\u299D",
          "&angsph;": "\u2222",
          "&angst;": "\xC5",
          "&angzarr;": "\u237C",
          "&aogon;": "\u0105",
          "&aopf;": "\uD835\uDD52",
          "&ap;": "\u2248",
          "&apE;": "\u2A70",
          "&apacir;": "\u2A6F",
          "&ape;": "\u224A",
          "&apid;": "\u224B",
          "&apos;": "'",
          "&approx;": "\u2248",
          "&approxeq;": "\u224A",
          "&aring": "\xE5",
          "&aring;": "\xE5",
          "&ascr;": "\uD835\uDCB6",
          "&ast;": "*",
          "&asymp;": "\u2248",
          "&asympeq;": "\u224D",
          "&atilde": "\xE3",
          "&atilde;": "\xE3",
          "&auml": "\xE4",
          "&auml;": "\xE4",
          "&awconint;": "\u2233",
          "&awint;": "\u2A11",
          "&bNot;": "\u2AED",
          "&backcong;": "\u224C",
          "&backepsilon;": "\u03F6",
          "&backprime;": "\u2035",
          "&backsim;": "\u223D",
          "&backsimeq;": "\u22CD",
          "&barvee;": "\u22BD",
          "&barwed;": "\u2305",
          "&barwedge;": "\u2305",
          "&bbrk;": "\u23B5",
          "&bbrktbrk;": "\u23B6",
          "&bcong;": "\u224C",
          "&bcy;": "\u0431",
          "&bdquo;": "\u201E",
          "&becaus;": "\u2235",
          "&because;": "\u2235",
          "&bemptyv;": "\u29B0",
          "&bepsi;": "\u03F6",
          "&bernou;": "\u212C",
          "&beta;": "\u03B2",
          "&beth;": "\u2136",
          "&between;": "\u226C",
          "&bfr;": "\uD835\uDD1F",
          "&bigcap;": "\u22C2",
          "&bigcirc;": "\u25EF",
          "&bigcup;": "\u22C3",
          "&bigodot;": "\u2A00",
          "&bigoplus;": "\u2A01",
          "&bigotimes;": "\u2A02",
          "&bigsqcup;": "\u2A06",
          "&bigstar;": "\u2605",
          "&bigtriangledown;": "\u25BD",
          "&bigtriangleup;": "\u25B3",
          "&biguplus;": "\u2A04",
          "&bigvee;": "\u22C1",
          "&bigwedge;": "\u22C0",
          "&bkarow;": "\u290D",
          "&blacklozenge;": "\u29EB",
          "&blacksquare;": "\u25AA",
          "&blacktriangle;": "\u25B4",
          "&blacktriangledown;": "\u25BE",
          "&blacktriangleleft;": "\u25C2",
          "&blacktriangleright;": "\u25B8",
          "&blank;": "\u2423",
          "&blk12;": "\u2592",
          "&blk14;": "\u2591",
          "&blk34;": "\u2593",
          "&block;": "\u2588",
          "&bne;": "=\u20E5",
          "&bnequiv;": "\u2261\u20E5",
          "&bnot;": "\u2310",
          "&bopf;": "\uD835\uDD53",
          "&bot;": "\u22A5",
          "&bottom;": "\u22A5",
          "&bowtie;": "\u22C8",
          "&boxDL;": "\u2557",
          "&boxDR;": "\u2554",
          "&boxDl;": "\u2556",
          "&boxDr;": "\u2553",
          "&boxH;": "\u2550",
          "&boxHD;": "\u2566",
          "&boxHU;": "\u2569",
          "&boxHd;": "\u2564",
          "&boxHu;": "\u2567",
          "&boxUL;": "\u255D",
          "&boxUR;": "\u255A",
          "&boxUl;": "\u255C",
          "&boxUr;": "\u2559",
          "&boxV;": "\u2551",
          "&boxVH;": "\u256C",
          "&boxVL;": "\u2563",
          "&boxVR;": "\u2560",
          "&boxVh;": "\u256B",
          "&boxVl;": "\u2562",
          "&boxVr;": "\u255F",
          "&boxbox;": "\u29C9",
          "&boxdL;": "\u2555",
          "&boxdR;": "\u2552",
          "&boxdl;": "\u2510",
          "&boxdr;": "\u250C",
          "&boxh;": "\u2500",
          "&boxhD;": "\u2565",
          "&boxhU;": "\u2568",
          "&boxhd;": "\u252C",
          "&boxhu;": "\u2534",
          "&boxminus;": "\u229F",
          "&boxplus;": "\u229E",
          "&boxtimes;": "\u22A0",
          "&boxuL;": "\u255B",
          "&boxuR;": "\u2558",
          "&boxul;": "\u2518",
          "&boxur;": "\u2514",
          "&boxv;": "\u2502",
          "&boxvH;": "\u256A",
          "&boxvL;": "\u2561",
          "&boxvR;": "\u255E",
          "&boxvh;": "\u253C",
          "&boxvl;": "\u2524",
          "&boxvr;": "\u251C",
          "&bprime;": "\u2035",
          "&breve;": "\u02D8",
          "&brvbar": "\xA6",
          "&brvbar;": "\xA6",
          "&bscr;": "\uD835\uDCB7",
          "&bsemi;": "\u204F",
          "&bsim;": "\u223D",
          "&bsime;": "\u22CD",
          "&bsol;": "\\",
          "&bsolb;": "\u29C5",
          "&bsolhsub;": "\u27C8",
          "&bull;": "\u2022",
          "&bullet;": "\u2022",
          "&bump;": "\u224E",
          "&bumpE;": "\u2AAE",
          "&bumpe;": "\u224F",
          "&bumpeq;": "\u224F",
          "&cacute;": "\u0107",
          "&cap;": "\u2229",
          "&capand;": "\u2A44",
          "&capbrcup;": "\u2A49",
          "&capcap;": "\u2A4B",
          "&capcup;": "\u2A47",
          "&capdot;": "\u2A40",
          "&caps;": "\u2229\uFE00",
          "&caret;": "\u2041",
          "&caron;": "\u02C7",
          "&ccaps;": "\u2A4D",
          "&ccaron;": "\u010D",
          "&ccedil": "\xE7",
          "&ccedil;": "\xE7",
          "&ccirc;": "\u0109",
          "&ccups;": "\u2A4C",
          "&ccupssm;": "\u2A50",
          "&cdot;": "\u010B",
          "&cedil": "\xB8",
          "&cedil;": "\xB8",
          "&cemptyv;": "\u29B2",
          "&cent": "\xA2",
          "&cent;": "\xA2",
          "&centerdot;": "\xB7",
          "&cfr;": "\uD835\uDD20",
          "&chcy;": "\u0447",
          "&check;": "\u2713",
          "&checkmark;": "\u2713",
          "&chi;": "\u03C7",
          "&cir;": "\u25CB",
          "&cirE;": "\u29C3",
          "&circ;": "\u02C6",
          "&circeq;": "\u2257",
          "&circlearrowleft;": "\u21BA",
          "&circlearrowright;": "\u21BB",
          "&circledR;": "\xAE",
          "&circledS;": "\u24C8",
          "&circledast;": "\u229B",
          "&circledcirc;": "\u229A",
          "&circleddash;": "\u229D",
          "&cire;": "\u2257",
          "&cirfnint;": "\u2A10",
          "&cirmid;": "\u2AEF",
          "&cirscir;": "\u29C2",
          "&clubs;": "\u2663",
          "&clubsuit;": "\u2663",
          "&colon;": ":",
          "&colone;": "\u2254",
          "&coloneq;": "\u2254",
          "&comma;": ",",
          "&commat;": "@",
          "&comp;": "\u2201",
          "&compfn;": "\u2218",
          "&complement;": "\u2201",
          "&complexes;": "\u2102",
          "&cong;": "\u2245",
          "&congdot;": "\u2A6D",
          "&conint;": "\u222E",
          "&copf;": "\uD835\uDD54",
          "&coprod;": "\u2210",
          "&copy": "\xA9",
          "&copy;": "\xA9",
          "&copysr;": "\u2117",
          "&crarr;": "\u21B5",
          "&cross;": "\u2717",
          "&cscr;": "\uD835\uDCB8",
          "&csub;": "\u2ACF",
          "&csube;": "\u2AD1",
          "&csup;": "\u2AD0",
          "&csupe;": "\u2AD2",
          "&ctdot;": "\u22EF",
          "&cudarrl;": "\u2938",
          "&cudarrr;": "\u2935",
          "&cuepr;": "\u22DE",
          "&cuesc;": "\u22DF",
          "&cularr;": "\u21B6",
          "&cularrp;": "\u293D",
          "&cup;": "\u222A",
          "&cupbrcap;": "\u2A48",
          "&cupcap;": "\u2A46",
          "&cupcup;": "\u2A4A",
          "&cupdot;": "\u228D",
          "&cupor;": "\u2A45",
          "&cups;": "\u222A\uFE00",
          "&curarr;": "\u21B7",
          "&curarrm;": "\u293C",
          "&curlyeqprec;": "\u22DE",
          "&curlyeqsucc;": "\u22DF",
          "&curlyvee;": "\u22CE",
          "&curlywedge;": "\u22CF",
          "&curren": "\xA4",
          "&curren;": "\xA4",
          "&curvearrowleft;": "\u21B6",
          "&curvearrowright;": "\u21B7",
          "&cuvee;": "\u22CE",
          "&cuwed;": "\u22CF",
          "&cwconint;": "\u2232",
          "&cwint;": "\u2231",
          "&cylcty;": "\u232D",
          "&dArr;": "\u21D3",
          "&dHar;": "\u2965",
          "&dagger;": "\u2020",
          "&daleth;": "\u2138",
          "&darr;": "\u2193",
          "&dash;": "\u2010",
          "&dashv;": "\u22A3",
          "&dbkarow;": "\u290F",
          "&dblac;": "\u02DD",
          "&dcaron;": "\u010F",
          "&dcy;": "\u0434",
          "&dd;": "\u2146",
          "&ddagger;": "\u2021",
          "&ddarr;": "\u21CA",
          "&ddotseq;": "\u2A77",
          "&deg": "\xB0",
          "&deg;": "\xB0",
          "&delta;": "\u03B4",
          "&demptyv;": "\u29B1",
          "&dfisht;": "\u297F",
          "&dfr;": "\uD835\uDD21",
          "&dharl;": "\u21C3",
          "&dharr;": "\u21C2",
          "&diam;": "\u22C4",
          "&diamond;": "\u22C4",
          "&diamondsuit;": "\u2666",
          "&diams;": "\u2666",
          "&die;": "\xA8",
          "&digamma;": "\u03DD",
          "&disin;": "\u22F2",
          "&div;": "\xF7",
          "&divide": "\xF7",
          "&divide;": "\xF7",
          "&divideontimes;": "\u22C7",
          "&divonx;": "\u22C7",
          "&djcy;": "\u0452",
          "&dlcorn;": "\u231E",
          "&dlcrop;": "\u230D",
          "&dollar;": "$",
          "&dopf;": "\uD835\uDD55",
          "&dot;": "\u02D9",
          "&doteq;": "\u2250",
          "&doteqdot;": "\u2251",
          "&dotminus;": "\u2238",
          "&dotplus;": "\u2214",
          "&dotsquare;": "\u22A1",
          "&doublebarwedge;": "\u2306",
          "&downarrow;": "\u2193",
          "&downdownarrows;": "\u21CA",
          "&downharpoonleft;": "\u21C3",
          "&downharpoonright;": "\u21C2",
          "&drbkarow;": "\u2910",
          "&drcorn;": "\u231F",
          "&drcrop;": "\u230C",
          "&dscr;": "\uD835\uDCB9",
          "&dscy;": "\u0455",
          "&dsol;": "\u29F6",
          "&dstrok;": "\u0111",
          "&dtdot;": "\u22F1",
          "&dtri;": "\u25BF",
          "&dtrif;": "\u25BE",
          "&duarr;": "\u21F5",
          "&duhar;": "\u296F",
          "&dwangle;": "\u29A6",
          "&dzcy;": "\u045F",
          "&dzigrarr;": "\u27FF",
          "&eDDot;": "\u2A77",
          "&eDot;": "\u2251",
          "&eacute": "\xE9",
          "&eacute;": "\xE9",
          "&easter;": "\u2A6E",
          "&ecaron;": "\u011B",
          "&ecir;": "\u2256",
          "&ecirc": "\xEA",
          "&ecirc;": "\xEA",
          "&ecolon;": "\u2255",
          "&ecy;": "\u044D",
          "&edot;": "\u0117",
          "&ee;": "\u2147",
          "&efDot;": "\u2252",
          "&efr;": "\uD835\uDD22",
          "&eg;": "\u2A9A",
          "&egrave": "\xE8",
          "&egrave;": "\xE8",
          "&egs;": "\u2A96",
          "&egsdot;": "\u2A98",
          "&el;": "\u2A99",
          "&elinters;": "\u23E7",
          "&ell;": "\u2113",
          "&els;": "\u2A95",
          "&elsdot;": "\u2A97",
          "&emacr;": "\u0113",
          "&empty;": "\u2205",
          "&emptyset;": "\u2205",
          "&emptyv;": "\u2205",
          "&emsp13;": "\u2004",
          "&emsp14;": "\u2005",
          "&emsp;": "\u2003",
          "&eng;": "\u014B",
          "&ensp;": "\u2002",
          "&eogon;": "\u0119",
          "&eopf;": "\uD835\uDD56",
          "&epar;": "\u22D5",
          "&eparsl;": "\u29E3",
          "&eplus;": "\u2A71",
          "&epsi;": "\u03B5",
          "&epsilon;": "\u03B5",
          "&epsiv;": "\u03F5",
          "&eqcirc;": "\u2256",
          "&eqcolon;": "\u2255",
          "&eqsim;": "\u2242",
          "&eqslantgtr;": "\u2A96",
          "&eqslantless;": "\u2A95",
          "&equals;": "=",
          "&equest;": "\u225F",
          "&equiv;": "\u2261",
          "&equivDD;": "\u2A78",
          "&eqvparsl;": "\u29E5",
          "&erDot;": "\u2253",
          "&erarr;": "\u2971",
          "&escr;": "\u212F",
          "&esdot;": "\u2250",
          "&esim;": "\u2242",
          "&eta;": "\u03B7",
          "&eth": "\xF0",
          "&eth;": "\xF0",
          "&euml": "\xEB",
          "&euml;": "\xEB",
          "&euro;": "\u20AC",
          "&excl;": "!",
          "&exist;": "\u2203",
          "&expectation;": "\u2130",
          "&exponentiale;": "\u2147",
          "&fallingdotseq;": "\u2252",
          "&fcy;": "\u0444",
          "&female;": "\u2640",
          "&ffilig;": "\uFB03",
          "&fflig;": "\uFB00",
          "&ffllig;": "\uFB04",
          "&ffr;": "\uD835\uDD23",
          "&filig;": "\uFB01",
          "&fjlig;": "fj",
          "&flat;": "\u266D",
          "&fllig;": "\uFB02",
          "&fltns;": "\u25B1",
          "&fnof;": "\u0192",
          "&fopf;": "\uD835\uDD57",
          "&forall;": "\u2200",
          "&fork;": "\u22D4",
          "&forkv;": "\u2AD9",
          "&fpartint;": "\u2A0D",
          "&frac12": "\xBD",
          "&frac12;": "\xBD",
          "&frac13;": "\u2153",
          "&frac14": "\xBC",
          "&frac14;": "\xBC",
          "&frac15;": "\u2155",
          "&frac16;": "\u2159",
          "&frac18;": "\u215B",
          "&frac23;": "\u2154",
          "&frac25;": "\u2156",
          "&frac34": "\xBE",
          "&frac34;": "\xBE",
          "&frac35;": "\u2157",
          "&frac38;": "\u215C",
          "&frac45;": "\u2158",
          "&frac56;": "\u215A",
          "&frac58;": "\u215D",
          "&frac78;": "\u215E",
          "&frasl;": "\u2044",
          "&frown;": "\u2322",
          "&fscr;": "\uD835\uDCBB",
          "&gE;": "\u2267",
          "&gEl;": "\u2A8C",
          "&gacute;": "\u01F5",
          "&gamma;": "\u03B3",
          "&gammad;": "\u03DD",
          "&gap;": "\u2A86",
          "&gbreve;": "\u011F",
          "&gcirc;": "\u011D",
          "&gcy;": "\u0433",
          "&gdot;": "\u0121",
          "&ge;": "\u2265",
          "&gel;": "\u22DB",
          "&geq;": "\u2265",
          "&geqq;": "\u2267",
          "&geqslant;": "\u2A7E",
          "&ges;": "\u2A7E",
          "&gescc;": "\u2AA9",
          "&gesdot;": "\u2A80",
          "&gesdoto;": "\u2A82",
          "&gesdotol;": "\u2A84",
          "&gesl;": "\u22DB\uFE00",
          "&gesles;": "\u2A94",
          "&gfr;": "\uD835\uDD24",
          "&gg;": "\u226B",
          "&ggg;": "\u22D9",
          "&gimel;": "\u2137",
          "&gjcy;": "\u0453",
          "&gl;": "\u2277",
          "&glE;": "\u2A92",
          "&gla;": "\u2AA5",
          "&glj;": "\u2AA4",
          "&gnE;": "\u2269",
          "&gnap;": "\u2A8A",
          "&gnapprox;": "\u2A8A",
          "&gne;": "\u2A88",
          "&gneq;": "\u2A88",
          "&gneqq;": "\u2269",
          "&gnsim;": "\u22E7",
          "&gopf;": "\uD835\uDD58",
          "&grave;": "`",
          "&gscr;": "\u210A",
          "&gsim;": "\u2273",
          "&gsime;": "\u2A8E",
          "&gsiml;": "\u2A90",
          "&gt": ">",
          "&gt;": ">",
          "&gtcc;": "\u2AA7",
          "&gtcir;": "\u2A7A",
          "&gtdot;": "\u22D7",
          "&gtlPar;": "\u2995",
          "&gtquest;": "\u2A7C",
          "&gtrapprox;": "\u2A86",
          "&gtrarr;": "\u2978",
          "&gtrdot;": "\u22D7",
          "&gtreqless;": "\u22DB",
          "&gtreqqless;": "\u2A8C",
          "&gtrless;": "\u2277",
          "&gtrsim;": "\u2273",
          "&gvertneqq;": "\u2269\uFE00",
          "&gvnE;": "\u2269\uFE00",
          "&hArr;": "\u21D4",
          "&hairsp;": "\u200A",
          "&half;": "\xBD",
          "&hamilt;": "\u210B",
          "&hardcy;": "\u044A",
          "&harr;": "\u2194",
          "&harrcir;": "\u2948",
          "&harrw;": "\u21AD",
          "&hbar;": "\u210F",
          "&hcirc;": "\u0125",
          "&hearts;": "\u2665",
          "&heartsuit;": "\u2665",
          "&hellip;": "\u2026",
          "&hercon;": "\u22B9",
          "&hfr;": "\uD835\uDD25",
          "&hksearow;": "\u2925",
          "&hkswarow;": "\u2926",
          "&hoarr;": "\u21FF",
          "&homtht;": "\u223B",
          "&hookleftarrow;": "\u21A9",
          "&hookrightarrow;": "\u21AA",
          "&hopf;": "\uD835\uDD59",
          "&horbar;": "\u2015",
          "&hscr;": "\uD835\uDCBD",
          "&hslash;": "\u210F",
          "&hstrok;": "\u0127",
          "&hybull;": "\u2043",
          "&hyphen;": "\u2010",
          "&iacute": "\xED",
          "&iacute;": "\xED",
          "&ic;": "\u2063",
          "&icirc": "\xEE",
          "&icirc;": "\xEE",
          "&icy;": "\u0438",
          "&iecy;": "\u0435",
          "&iexcl": "\xA1",
          "&iexcl;": "\xA1",
          "&iff;": "\u21D4",
          "&ifr;": "\uD835\uDD26",
          "&igrave": "\xEC",
          "&igrave;": "\xEC",
          "&ii;": "\u2148",
          "&iiiint;": "\u2A0C",
          "&iiint;": "\u222D",
          "&iinfin;": "\u29DC",
          "&iiota;": "\u2129",
          "&ijlig;": "\u0133",
          "&imacr;": "\u012B",
          "&image;": "\u2111",
          "&imagline;": "\u2110",
          "&imagpart;": "\u2111",
          "&imath;": "\u0131",
          "&imof;": "\u22B7",
          "&imped;": "\u01B5",
          "&in;": "\u2208",
          "&incare;": "\u2105",
          "&infin;": "\u221E",
          "&infintie;": "\u29DD",
          "&inodot;": "\u0131",
          "&int;": "\u222B",
          "&intcal;": "\u22BA",
          "&integers;": "\u2124",
          "&intercal;": "\u22BA",
          "&intlarhk;": "\u2A17",
          "&intprod;": "\u2A3C",
          "&iocy;": "\u0451",
          "&iogon;": "\u012F",
          "&iopf;": "\uD835\uDD5A",
          "&iota;": "\u03B9",
          "&iprod;": "\u2A3C",
          "&iquest": "\xBF",
          "&iquest;": "\xBF",
          "&iscr;": "\uD835\uDCBE",
          "&isin;": "\u2208",
          "&isinE;": "\u22F9",
          "&isindot;": "\u22F5",
          "&isins;": "\u22F4",
          "&isinsv;": "\u22F3",
          "&isinv;": "\u2208",
          "&it;": "\u2062",
          "&itilde;": "\u0129",
          "&iukcy;": "\u0456",
          "&iuml": "\xEF",
          "&iuml;": "\xEF",
          "&jcirc;": "\u0135",
          "&jcy;": "\u0439",
          "&jfr;": "\uD835\uDD27",
          "&jmath;": "\u0237",
          "&jopf;": "\uD835\uDD5B",
          "&jscr;": "\uD835\uDCBF",
          "&jsercy;": "\u0458",
          "&jukcy;": "\u0454",
          "&kappa;": "\u03BA",
          "&kappav;": "\u03F0",
          "&kcedil;": "\u0137",
          "&kcy;": "\u043A",
          "&kfr;": "\uD835\uDD28",
          "&kgreen;": "\u0138",
          "&khcy;": "\u0445",
          "&kjcy;": "\u045C",
          "&kopf;": "\uD835\uDD5C",
          "&kscr;": "\uD835\uDCC0",
          "&lAarr;": "\u21DA",
          "&lArr;": "\u21D0",
          "&lAtail;": "\u291B",
          "&lBarr;": "\u290E",
          "&lE;": "\u2266",
          "&lEg;": "\u2A8B",
          "&lHar;": "\u2962",
          "&lacute;": "\u013A",
          "&laemptyv;": "\u29B4",
          "&lagran;": "\u2112",
          "&lambda;": "\u03BB",
          "&lang;": "\u27E8",
          "&langd;": "\u2991",
          "&langle;": "\u27E8",
          "&lap;": "\u2A85",
          "&laquo": "\xAB",
          "&laquo;": "\xAB",
          "&larr;": "\u2190",
          "&larrb;": "\u21E4",
          "&larrbfs;": "\u291F",
          "&larrfs;": "\u291D",
          "&larrhk;": "\u21A9",
          "&larrlp;": "\u21AB",
          "&larrpl;": "\u2939",
          "&larrsim;": "\u2973",
          "&larrtl;": "\u21A2",
          "&lat;": "\u2AAB",
          "&latail;": "\u2919",
          "&late;": "\u2AAD",
          "&lates;": "\u2AAD\uFE00",
          "&lbarr;": "\u290C",
          "&lbbrk;": "\u2772",
          "&lbrace;": "{",
          "&lbrack;": "[",
          "&lbrke;": "\u298B",
          "&lbrksld;": "\u298F",
          "&lbrkslu;": "\u298D",
          "&lcaron;": "\u013E",
          "&lcedil;": "\u013C",
          "&lceil;": "\u2308",
          "&lcub;": "{",
          "&lcy;": "\u043B",
          "&ldca;": "\u2936",
          "&ldquo;": "\u201C",
          "&ldquor;": "\u201E",
          "&ldrdhar;": "\u2967",
          "&ldrushar;": "\u294B",
          "&ldsh;": "\u21B2",
          "&le;": "\u2264",
          "&leftarrow;": "\u2190",
          "&leftarrowtail;": "\u21A2",
          "&leftharpoondown;": "\u21BD",
          "&leftharpoonup;": "\u21BC",
          "&leftleftarrows;": "\u21C7",
          "&leftrightarrow;": "\u2194",
          "&leftrightarrows;": "\u21C6",
          "&leftrightharpoons;": "\u21CB",
          "&leftrightsquigarrow;": "\u21AD",
          "&leftthreetimes;": "\u22CB",
          "&leg;": "\u22DA",
          "&leq;": "\u2264",
          "&leqq;": "\u2266",
          "&leqslant;": "\u2A7D",
          "&les;": "\u2A7D",
          "&lescc;": "\u2AA8",
          "&lesdot;": "\u2A7F",
          "&lesdoto;": "\u2A81",
          "&lesdotor;": "\u2A83",
          "&lesg;": "\u22DA\uFE00",
          "&lesges;": "\u2A93",
          "&lessapprox;": "\u2A85",
          "&lessdot;": "\u22D6",
          "&lesseqgtr;": "\u22DA",
          "&lesseqqgtr;": "\u2A8B",
          "&lessgtr;": "\u2276",
          "&lesssim;": "\u2272",
          "&lfisht;": "\u297C",
          "&lfloor;": "\u230A",
          "&lfr;": "\uD835\uDD29",
          "&lg;": "\u2276",
          "&lgE;": "\u2A91",
          "&lhard;": "\u21BD",
          "&lharu;": "\u21BC",
          "&lharul;": "\u296A",
          "&lhblk;": "\u2584",
          "&ljcy;": "\u0459",
          "&ll;": "\u226A",
          "&llarr;": "\u21C7",
          "&llcorner;": "\u231E",
          "&llhard;": "\u296B",
          "&lltri;": "\u25FA",
          "&lmidot;": "\u0140",
          "&lmoust;": "\u23B0",
          "&lmoustache;": "\u23B0",
          "&lnE;": "\u2268",
          "&lnap;": "\u2A89",
          "&lnapprox;": "\u2A89",
          "&lne;": "\u2A87",
          "&lneq;": "\u2A87",
          "&lneqq;": "\u2268",
          "&lnsim;": "\u22E6",
          "&loang;": "\u27EC",
          "&loarr;": "\u21FD",
          "&lobrk;": "\u27E6",
          "&longleftarrow;": "\u27F5",
          "&longleftrightarrow;": "\u27F7",
          "&longmapsto;": "\u27FC",
          "&longrightarrow;": "\u27F6",
          "&looparrowleft;": "\u21AB",
          "&looparrowright;": "\u21AC",
          "&lopar;": "\u2985",
          "&lopf;": "\uD835\uDD5D",
          "&loplus;": "\u2A2D",
          "&lotimes;": "\u2A34",
          "&lowast;": "\u2217",
          "&lowbar;": "_",
          "&loz;": "\u25CA",
          "&lozenge;": "\u25CA",
          "&lozf;": "\u29EB",
          "&lpar;": "(",
          "&lparlt;": "\u2993",
          "&lrarr;": "\u21C6",
          "&lrcorner;": "\u231F",
          "&lrhar;": "\u21CB",
          "&lrhard;": "\u296D",
          "&lrm;": "\u200E",
          "&lrtri;": "\u22BF",
          "&lsaquo;": "\u2039",
          "&lscr;": "\uD835\uDCC1",
          "&lsh;": "\u21B0",
          "&lsim;": "\u2272",
          "&lsime;": "\u2A8D",
          "&lsimg;": "\u2A8F",
          "&lsqb;": "[",
          "&lsquo;": "\u2018",
          "&lsquor;": "\u201A",
          "&lstrok;": "\u0142",
          "&lt": "<",
          "&lt;": "<",
          "&ltcc;": "\u2AA6",
          "&ltcir;": "\u2A79",
          "&ltdot;": "\u22D6",
          "&lthree;": "\u22CB",
          "&ltimes;": "\u22C9",
          "&ltlarr;": "\u2976",
          "&ltquest;": "\u2A7B",
          "&ltrPar;": "\u2996",
          "&ltri;": "\u25C3",
          "&ltrie;": "\u22B4",
          "&ltrif;": "\u25C2",
          "&lurdshar;": "\u294A",
          "&luruhar;": "\u2966",
          "&lvertneqq;": "\u2268\uFE00",
          "&lvnE;": "\u2268\uFE00",
          "&mDDot;": "\u223A",
          "&macr": "\xAF",
          "&macr;": "\xAF",
          "&male;": "\u2642",
          "&malt;": "\u2720",
          "&maltese;": "\u2720",
          "&map;": "\u21A6",
          "&mapsto;": "\u21A6",
          "&mapstodown;": "\u21A7",
          "&mapstoleft;": "\u21A4",
          "&mapstoup;": "\u21A5",
          "&marker;": "\u25AE",
          "&mcomma;": "\u2A29",
          "&mcy;": "\u043C",
          "&mdash;": "\u2014",
          "&measuredangle;": "\u2221",
          "&mfr;": "\uD835\uDD2A",
          "&mho;": "\u2127",
          "&micro": "\xB5",
          "&micro;": "\xB5",
          "&mid;": "\u2223",
          "&midast;": "*",
          "&midcir;": "\u2AF0",
          "&middot": "\xB7",
          "&middot;": "\xB7",
          "&minus;": "\u2212",
          "&minusb;": "\u229F",
          "&minusd;": "\u2238",
          "&minusdu;": "\u2A2A",
          "&mlcp;": "\u2ADB",
          "&mldr;": "\u2026",
          "&mnplus;": "\u2213",
          "&models;": "\u22A7",
          "&mopf;": "\uD835\uDD5E",
          "&mp;": "\u2213",
          "&mscr;": "\uD835\uDCC2",
          "&mstpos;": "\u223E",
          "&mu;": "\u03BC",
          "&multimap;": "\u22B8",
          "&mumap;": "\u22B8",
          "&nGg;": "\u22D9\u0338",
          "&nGt;": "\u226B\u20D2",
          "&nGtv;": "\u226B\u0338",
          "&nLeftarrow;": "\u21CD",
          "&nLeftrightarrow;": "\u21CE",
          "&nLl;": "\u22D8\u0338",
          "&nLt;": "\u226A\u20D2",
          "&nLtv;": "\u226A\u0338",
          "&nRightarrow;": "\u21CF",
          "&nVDash;": "\u22AF",
          "&nVdash;": "\u22AE",
          "&nabla;": "\u2207",
          "&nacute;": "\u0144",
          "&nang;": "\u2220\u20D2",
          "&nap;": "\u2249",
          "&napE;": "\u2A70\u0338",
          "&napid;": "\u224B\u0338",
          "&napos;": "\u0149",
          "&napprox;": "\u2249",
          "&natur;": "\u266E",
          "&natural;": "\u266E",
          "&naturals;": "\u2115",
          "&nbsp": "\xA0",
          "&nbsp;": "\xA0",
          "&nbump;": "\u224E\u0338",
          "&nbumpe;": "\u224F\u0338",
          "&ncap;": "\u2A43",
          "&ncaron;": "\u0148",
          "&ncedil;": "\u0146",
          "&ncong;": "\u2247",
          "&ncongdot;": "\u2A6D\u0338",
          "&ncup;": "\u2A42",
          "&ncy;": "\u043D",
          "&ndash;": "\u2013",
          "&ne;": "\u2260",
          "&neArr;": "\u21D7",
          "&nearhk;": "\u2924",
          "&nearr;": "\u2197",
          "&nearrow;": "\u2197",
          "&nedot;": "\u2250\u0338",
          "&nequiv;": "\u2262",
          "&nesear;": "\u2928",
          "&nesim;": "\u2242\u0338",
          "&nexist;": "\u2204",
          "&nexists;": "\u2204",
          "&nfr;": "\uD835\uDD2B",
          "&ngE;": "\u2267\u0338",
          "&nge;": "\u2271",
          "&ngeq;": "\u2271",
          "&ngeqq;": "\u2267\u0338",
          "&ngeqslant;": "\u2A7E\u0338",
          "&nges;": "\u2A7E\u0338",
          "&ngsim;": "\u2275",
          "&ngt;": "\u226F",
          "&ngtr;": "\u226F",
          "&nhArr;": "\u21CE",
          "&nharr;": "\u21AE",
          "&nhpar;": "\u2AF2",
          "&ni;": "\u220B",
          "&nis;": "\u22FC",
          "&nisd;": "\u22FA",
          "&niv;": "\u220B",
          "&njcy;": "\u045A",
          "&nlArr;": "\u21CD",
          "&nlE;": "\u2266\u0338",
          "&nlarr;": "\u219A",
          "&nldr;": "\u2025",
          "&nle;": "\u2270",
          "&nleftarrow;": "\u219A",
          "&nleftrightarrow;": "\u21AE",
          "&nleq;": "\u2270",
          "&nleqq;": "\u2266\u0338",
          "&nleqslant;": "\u2A7D\u0338",
          "&nles;": "\u2A7D\u0338",
          "&nless;": "\u226E",
          "&nlsim;": "\u2274",
          "&nlt;": "\u226E",
          "&nltri;": "\u22EA",
          "&nltrie;": "\u22EC",
          "&nmid;": "\u2224",
          "&nopf;": "\uD835\uDD5F",
          "&not": "\xAC",
          "&not;": "\xAC",
          "&notin;": "\u2209",
          "&notinE;": "\u22F9\u0338",
          "&notindot;": "\u22F5\u0338",
          "&notinva;": "\u2209",
          "&notinvb;": "\u22F7",
          "&notinvc;": "\u22F6",
          "&notni;": "\u220C",
          "&notniva;": "\u220C",
          "&notnivb;": "\u22FE",
          "&notnivc;": "\u22FD",
          "&npar;": "\u2226",
          "&nparallel;": "\u2226",
          "&nparsl;": "\u2AFD\u20E5",
          "&npart;": "\u2202\u0338",
          "&npolint;": "\u2A14",
          "&npr;": "\u2280",
          "&nprcue;": "\u22E0",
          "&npre;": "\u2AAF\u0338",
          "&nprec;": "\u2280",
          "&npreceq;": "\u2AAF\u0338",
          "&nrArr;": "\u21CF",
          "&nrarr;": "\u219B",
          "&nrarrc;": "\u2933\u0338",
          "&nrarrw;": "\u219D\u0338",
          "&nrightarrow;": "\u219B",
          "&nrtri;": "\u22EB",
          "&nrtrie;": "\u22ED",
          "&nsc;": "\u2281",
          "&nsccue;": "\u22E1",
          "&nsce;": "\u2AB0\u0338",
          "&nscr;": "\uD835\uDCC3",
          "&nshortmid;": "\u2224",
          "&nshortparallel;": "\u2226",
          "&nsim;": "\u2241",
          "&nsime;": "\u2244",
          "&nsimeq;": "\u2244",
          "&nsmid;": "\u2224",
          "&nspar;": "\u2226",
          "&nsqsube;": "\u22E2",
          "&nsqsupe;": "\u22E3",
          "&nsub;": "\u2284",
          "&nsubE;": "\u2AC5\u0338",
          "&nsube;": "\u2288",
          "&nsubset;": "\u2282\u20D2",
          "&nsubseteq;": "\u2288",
          "&nsubseteqq;": "\u2AC5\u0338",
          "&nsucc;": "\u2281",
          "&nsucceq;": "\u2AB0\u0338",
          "&nsup;": "\u2285",
          "&nsupE;": "\u2AC6\u0338",
          "&nsupe;": "\u2289",
          "&nsupset;": "\u2283\u20D2",
          "&nsupseteq;": "\u2289",
          "&nsupseteqq;": "\u2AC6\u0338",
          "&ntgl;": "\u2279",
          "&ntilde": "\xF1",
          "&ntilde;": "\xF1",
          "&ntlg;": "\u2278",
          "&ntriangleleft;": "\u22EA",
          "&ntrianglelefteq;": "\u22EC",
          "&ntriangleright;": "\u22EB",
          "&ntrianglerighteq;": "\u22ED",
          "&nu;": "\u03BD",
          "&num;": "#",
          "&numero;": "\u2116",
          "&numsp;": "\u2007",
          "&nvDash;": "\u22AD",
          "&nvHarr;": "\u2904",
          "&nvap;": "\u224D\u20D2",
          "&nvdash;": "\u22AC",
          "&nvge;": "\u2265\u20D2",
          "&nvgt;": ">\u20D2",
          "&nvinfin;": "\u29DE",
          "&nvlArr;": "\u2902",
          "&nvle;": "\u2264\u20D2",
          "&nvlt;": "<\u20D2",
          "&nvltrie;": "\u22B4\u20D2",
          "&nvrArr;": "\u2903",
          "&nvrtrie;": "\u22B5\u20D2",
          "&nvsim;": "\u223C\u20D2",
          "&nwArr;": "\u21D6",
          "&nwarhk;": "\u2923",
          "&nwarr;": "\u2196",
          "&nwarrow;": "\u2196",
          "&nwnear;": "\u2927",
          "&oS;": "\u24C8",
          "&oacute": "\xF3",
          "&oacute;": "\xF3",
          "&oast;": "\u229B",
          "&ocir;": "\u229A",
          "&ocirc": "\xF4",
          "&ocirc;": "\xF4",
          "&ocy;": "\u043E",
          "&odash;": "\u229D",
          "&odblac;": "\u0151",
          "&odiv;": "\u2A38",
          "&odot;": "\u2299",
          "&odsold;": "\u29BC",
          "&oelig;": "\u0153",
          "&ofcir;": "\u29BF",
          "&ofr;": "\uD835\uDD2C",
          "&ogon;": "\u02DB",
          "&ograve": "\xF2",
          "&ograve;": "\xF2",
          "&ogt;": "\u29C1",
          "&ohbar;": "\u29B5",
          "&ohm;": "\u03A9",
          "&oint;": "\u222E",
          "&olarr;": "\u21BA",
          "&olcir;": "\u29BE",
          "&olcross;": "\u29BB",
          "&oline;": "\u203E",
          "&olt;": "\u29C0",
          "&omacr;": "\u014D",
          "&omega;": "\u03C9",
          "&omicron;": "\u03BF",
          "&omid;": "\u29B6",
          "&ominus;": "\u2296",
          "&oopf;": "\uD835\uDD60",
          "&opar;": "\u29B7",
          "&operp;": "\u29B9",
          "&oplus;": "\u2295",
          "&or;": "\u2228",
          "&orarr;": "\u21BB",
          "&ord;": "\u2A5D",
          "&order;": "\u2134",
          "&orderof;": "\u2134",
          "&ordf": "\xAA",
          "&ordf;": "\xAA",
          "&ordm": "\xBA",
          "&ordm;": "\xBA",
          "&origof;": "\u22B6",
          "&oror;": "\u2A56",
          "&orslope;": "\u2A57",
          "&orv;": "\u2A5B",
          "&oscr;": "\u2134",
          "&oslash": "\xF8",
          "&oslash;": "\xF8",
          "&osol;": "\u2298",
          "&otilde": "\xF5",
          "&otilde;": "\xF5",
          "&otimes;": "\u2297",
          "&otimesas;": "\u2A36",
          "&ouml": "\xF6",
          "&ouml;": "\xF6",
          "&ovbar;": "\u233D",
          "&par;": "\u2225",
          "&para": "\xB6",
          "&para;": "\xB6",
          "&parallel;": "\u2225",
          "&parsim;": "\u2AF3",
          "&parsl;": "\u2AFD",
          "&part;": "\u2202",
          "&pcy;": "\u043F",
          "&percnt;": "%",
          "&period;": ".",
          "&permil;": "\u2030",
          "&perp;": "\u22A5",
          "&pertenk;": "\u2031",
          "&pfr;": "\uD835\uDD2D",
          "&phi;": "\u03C6",
          "&phiv;": "\u03D5",
          "&phmmat;": "\u2133",
          "&phone;": "\u260E",
          "&pi;": "\u03C0",
          "&pitchfork;": "\u22D4",
          "&piv;": "\u03D6",
          "&planck;": "\u210F",
          "&planckh;": "\u210E",
          "&plankv;": "\u210F",
          "&plus;": "+",
          "&plusacir;": "\u2A23",
          "&plusb;": "\u229E",
          "&pluscir;": "\u2A22",
          "&plusdo;": "\u2214",
          "&plusdu;": "\u2A25",
          "&pluse;": "\u2A72",
          "&plusmn": "\xB1",
          "&plusmn;": "\xB1",
          "&plussim;": "\u2A26",
          "&plustwo;": "\u2A27",
          "&pm;": "\xB1",
          "&pointint;": "\u2A15",
          "&popf;": "\uD835\uDD61",
          "&pound": "\xA3",
          "&pound;": "\xA3",
          "&pr;": "\u227A",
          "&prE;": "\u2AB3",
          "&prap;": "\u2AB7",
          "&prcue;": "\u227C",
          "&pre;": "\u2AAF",
          "&prec;": "\u227A",
          "&precapprox;": "\u2AB7",
          "&preccurlyeq;": "\u227C",
          "&preceq;": "\u2AAF",
          "&precnapprox;": "\u2AB9",
          "&precneqq;": "\u2AB5",
          "&precnsim;": "\u22E8",
          "&precsim;": "\u227E",
          "&prime;": "\u2032",
          "&primes;": "\u2119",
          "&prnE;": "\u2AB5",
          "&prnap;": "\u2AB9",
          "&prnsim;": "\u22E8",
          "&prod;": "\u220F",
          "&profalar;": "\u232E",
          "&profline;": "\u2312",
          "&profsurf;": "\u2313",
          "&prop;": "\u221D",
          "&propto;": "\u221D",
          "&prsim;": "\u227E",
          "&prurel;": "\u22B0",
          "&pscr;": "\uD835\uDCC5",
          "&psi;": "\u03C8",
          "&puncsp;": "\u2008",
          "&qfr;": "\uD835\uDD2E",
          "&qint;": "\u2A0C",
          "&qopf;": "\uD835\uDD62",
          "&qprime;": "\u2057",
          "&qscr;": "\uD835\uDCC6",
          "&quaternions;": "\u210D",
          "&quatint;": "\u2A16",
          "&quest;": "?",
          "&questeq;": "\u225F",
          "&quot": '"',
          "&quot;": '"',
          "&rAarr;": "\u21DB",
          "&rArr;": "\u21D2",
          "&rAtail;": "\u291C",
          "&rBarr;": "\u290F",
          "&rHar;": "\u2964",
          "&race;": "\u223D\u0331",
          "&racute;": "\u0155",
          "&radic;": "\u221A",
          "&raemptyv;": "\u29B3",
          "&rang;": "\u27E9",
          "&rangd;": "\u2992",
          "&range;": "\u29A5",
          "&rangle;": "\u27E9",
          "&raquo": "\xBB",
          "&raquo;": "\xBB",
          "&rarr;": "\u2192",
          "&rarrap;": "\u2975",
          "&rarrb;": "\u21E5",
          "&rarrbfs;": "\u2920",
          "&rarrc;": "\u2933",
          "&rarrfs;": "\u291E",
          "&rarrhk;": "\u21AA",
          "&rarrlp;": "\u21AC",
          "&rarrpl;": "\u2945",
          "&rarrsim;": "\u2974",
          "&rarrtl;": "\u21A3",
          "&rarrw;": "\u219D",
          "&ratail;": "\u291A",
          "&ratio;": "\u2236",
          "&rationals;": "\u211A",
          "&rbarr;": "\u290D",
          "&rbbrk;": "\u2773",
          "&rbrace;": "}",
          "&rbrack;": "]",
          "&rbrke;": "\u298C",
          "&rbrksld;": "\u298E",
          "&rbrkslu;": "\u2990",
          "&rcaron;": "\u0159",
          "&rcedil;": "\u0157",
          "&rceil;": "\u2309",
          "&rcub;": "}",
          "&rcy;": "\u0440",
          "&rdca;": "\u2937",
          "&rdldhar;": "\u2969",
          "&rdquo;": "\u201D",
          "&rdquor;": "\u201D",
          "&rdsh;": "\u21B3",
          "&real;": "\u211C",
          "&realine;": "\u211B",
          "&realpart;": "\u211C",
          "&reals;": "\u211D",
          "&rect;": "\u25AD",
          "&reg": "\xAE",
          "&reg;": "\xAE",
          "&rfisht;": "\u297D",
          "&rfloor;": "\u230B",
          "&rfr;": "\uD835\uDD2F",
          "&rhard;": "\u21C1",
          "&rharu;": "\u21C0",
          "&rharul;": "\u296C",
          "&rho;": "\u03C1",
          "&rhov;": "\u03F1",
          "&rightarrow;": "\u2192",
          "&rightarrowtail;": "\u21A3",
          "&rightharpoondown;": "\u21C1",
          "&rightharpoonup;": "\u21C0",
          "&rightleftarrows;": "\u21C4",
          "&rightleftharpoons;": "\u21CC",
          "&rightrightarrows;": "\u21C9",
          "&rightsquigarrow;": "\u219D",
          "&rightthreetimes;": "\u22CC",
          "&ring;": "\u02DA",
          "&risingdotseq;": "\u2253",
          "&rlarr;": "\u21C4",
          "&rlhar;": "\u21CC",
          "&rlm;": "\u200F",
          "&rmoust;": "\u23B1",
          "&rmoustache;": "\u23B1",
          "&rnmid;": "\u2AEE",
          "&roang;": "\u27ED",
          "&roarr;": "\u21FE",
          "&robrk;": "\u27E7",
          "&ropar;": "\u2986",
          "&ropf;": "\uD835\uDD63",
          "&roplus;": "\u2A2E",
          "&rotimes;": "\u2A35",
          "&rpar;": ")",
          "&rpargt;": "\u2994",
          "&rppolint;": "\u2A12",
          "&rrarr;": "\u21C9",
          "&rsaquo;": "\u203A",
          "&rscr;": "\uD835\uDCC7",
          "&rsh;": "\u21B1",
          "&rsqb;": "]",
          "&rsquo;": "\u2019",
          "&rsquor;": "\u2019",
          "&rthree;": "\u22CC",
          "&rtimes;": "\u22CA",
          "&rtri;": "\u25B9",
          "&rtrie;": "\u22B5",
          "&rtrif;": "\u25B8",
          "&rtriltri;": "\u29CE",
          "&ruluhar;": "\u2968",
          "&rx;": "\u211E",
          "&sacute;": "\u015B",
          "&sbquo;": "\u201A",
          "&sc;": "\u227B",
          "&scE;": "\u2AB4",
          "&scap;": "\u2AB8",
          "&scaron;": "\u0161",
          "&sccue;": "\u227D",
          "&sce;": "\u2AB0",
          "&scedil;": "\u015F",
          "&scirc;": "\u015D",
          "&scnE;": "\u2AB6",
          "&scnap;": "\u2ABA",
          "&scnsim;": "\u22E9",
          "&scpolint;": "\u2A13",
          "&scsim;": "\u227F",
          "&scy;": "\u0441",
          "&sdot;": "\u22C5",
          "&sdotb;": "\u22A1",
          "&sdote;": "\u2A66",
          "&seArr;": "\u21D8",
          "&searhk;": "\u2925",
          "&searr;": "\u2198",
          "&searrow;": "\u2198",
          "&sect": "\xA7",
          "&sect;": "\xA7",
          "&semi;": ";",
          "&seswar;": "\u2929",
          "&setminus;": "\u2216",
          "&setmn;": "\u2216",
          "&sext;": "\u2736",
          "&sfr;": "\uD835\uDD30",
          "&sfrown;": "\u2322",
          "&sharp;": "\u266F",
          "&shchcy;": "\u0449",
          "&shcy;": "\u0448",
          "&shortmid;": "\u2223",
          "&shortparallel;": "\u2225",
          "&shy": "\xAD",
          "&shy;": "\xAD",
          "&sigma;": "\u03C3",
          "&sigmaf;": "\u03C2",
          "&sigmav;": "\u03C2",
          "&sim;": "\u223C",
          "&simdot;": "\u2A6A",
          "&sime;": "\u2243",
          "&simeq;": "\u2243",
          "&simg;": "\u2A9E",
          "&simgE;": "\u2AA0",
          "&siml;": "\u2A9D",
          "&simlE;": "\u2A9F",
          "&simne;": "\u2246",
          "&simplus;": "\u2A24",
          "&simrarr;": "\u2972",
          "&slarr;": "\u2190",
          "&smallsetminus;": "\u2216",
          "&smashp;": "\u2A33",
          "&smeparsl;": "\u29E4",
          "&smid;": "\u2223",
          "&smile;": "\u2323",
          "&smt;": "\u2AAA",
          "&smte;": "\u2AAC",
          "&smtes;": "\u2AAC\uFE00",
          "&softcy;": "\u044C",
          "&sol;": "/",
          "&solb;": "\u29C4",
          "&solbar;": "\u233F",
          "&sopf;": "\uD835\uDD64",
          "&spades;": "\u2660",
          "&spadesuit;": "\u2660",
          "&spar;": "\u2225",
          "&sqcap;": "\u2293",
          "&sqcaps;": "\u2293\uFE00",
          "&sqcup;": "\u2294",
          "&sqcups;": "\u2294\uFE00",
          "&sqsub;": "\u228F",
          "&sqsube;": "\u2291",
          "&sqsubset;": "\u228F",
          "&sqsubseteq;": "\u2291",
          "&sqsup;": "\u2290",
          "&sqsupe;": "\u2292",
          "&sqsupset;": "\u2290",
          "&sqsupseteq;": "\u2292",
          "&squ;": "\u25A1",
          "&square;": "\u25A1",
          "&squarf;": "\u25AA",
          "&squf;": "\u25AA",
          "&srarr;": "\u2192",
          "&sscr;": "\uD835\uDCC8",
          "&ssetmn;": "\u2216",
          "&ssmile;": "\u2323",
          "&sstarf;": "\u22C6",
          "&star;": "\u2606",
          "&starf;": "\u2605",
          "&straightepsilon;": "\u03F5",
          "&straightphi;": "\u03D5",
          "&strns;": "\xAF",
          "&sub;": "\u2282",
          "&subE;": "\u2AC5",
          "&subdot;": "\u2ABD",
          "&sube;": "\u2286",
          "&subedot;": "\u2AC3",
          "&submult;": "\u2AC1",
          "&subnE;": "\u2ACB",
          "&subne;": "\u228A",
          "&subplus;": "\u2ABF",
          "&subrarr;": "\u2979",
          "&subset;": "\u2282",
          "&subseteq;": "\u2286",
          "&subseteqq;": "\u2AC5",
          "&subsetneq;": "\u228A",
          "&subsetneqq;": "\u2ACB",
          "&subsim;": "\u2AC7",
          "&subsub;": "\u2AD5",
          "&subsup;": "\u2AD3",
          "&succ;": "\u227B",
          "&succapprox;": "\u2AB8",
          "&succcurlyeq;": "\u227D",
          "&succeq;": "\u2AB0",
          "&succnapprox;": "\u2ABA",
          "&succneqq;": "\u2AB6",
          "&succnsim;": "\u22E9",
          "&succsim;": "\u227F",
          "&sum;": "\u2211",
          "&sung;": "\u266A",
          "&sup1": "\xB9",
          "&sup1;": "\xB9",
          "&sup2": "\xB2",
          "&sup2;": "\xB2",
          "&sup3": "\xB3",
          "&sup3;": "\xB3",
          "&sup;": "\u2283",
          "&supE;": "\u2AC6",
          "&supdot;": "\u2ABE",
          "&supdsub;": "\u2AD8",
          "&supe;": "\u2287",
          "&supedot;": "\u2AC4",
          "&suphsol;": "\u27C9",
          "&suphsub;": "\u2AD7",
          "&suplarr;": "\u297B",
          "&supmult;": "\u2AC2",
          "&supnE;": "\u2ACC",
          "&supne;": "\u228B",
          "&supplus;": "\u2AC0",
          "&supset;": "\u2283",
          "&supseteq;": "\u2287",
          "&supseteqq;": "\u2AC6",
          "&supsetneq;": "\u228B",
          "&supsetneqq;": "\u2ACC",
          "&supsim;": "\u2AC8",
          "&supsub;": "\u2AD4",
          "&supsup;": "\u2AD6",
          "&swArr;": "\u21D9",
          "&swarhk;": "\u2926",
          "&swarr;": "\u2199",
          "&swarrow;": "\u2199",
          "&swnwar;": "\u292A",
          "&szlig": "\xDF",
          "&szlig;": "\xDF",
          "&target;": "\u2316",
          "&tau;": "\u03C4",
          "&tbrk;": "\u23B4",
          "&tcaron;": "\u0165",
          "&tcedil;": "\u0163",
          "&tcy;": "\u0442",
          "&tdot;": "\u20DB",
          "&telrec;": "\u2315",
          "&tfr;": "\uD835\uDD31",
          "&there4;": "\u2234",
          "&therefore;": "\u2234",
          "&theta;": "\u03B8",
          "&thetasym;": "\u03D1",
          "&thetav;": "\u03D1",
          "&thickapprox;": "\u2248",
          "&thicksim;": "\u223C",
          "&thinsp;": "\u2009",
          "&thkap;": "\u2248",
          "&thksim;": "\u223C",
          "&thorn": "\xFE",
          "&thorn;": "\xFE",
          "&tilde;": "\u02DC",
          "&times": "\xD7",
          "&times;": "\xD7",
          "&timesb;": "\u22A0",
          "&timesbar;": "\u2A31",
          "&timesd;": "\u2A30",
          "&tint;": "\u222D",
          "&toea;": "\u2928",
          "&top;": "\u22A4",
          "&topbot;": "\u2336",
          "&topcir;": "\u2AF1",
          "&topf;": "\uD835\uDD65",
          "&topfork;": "\u2ADA",
          "&tosa;": "\u2929",
          "&tprime;": "\u2034",
          "&trade;": "\u2122",
          "&triangle;": "\u25B5",
          "&triangledown;": "\u25BF",
          "&triangleleft;": "\u25C3",
          "&trianglelefteq;": "\u22B4",
          "&triangleq;": "\u225C",
          "&triangleright;": "\u25B9",
          "&trianglerighteq;": "\u22B5",
          "&tridot;": "\u25EC",
          "&trie;": "\u225C",
          "&triminus;": "\u2A3A",
          "&triplus;": "\u2A39",
          "&trisb;": "\u29CD",
          "&tritime;": "\u2A3B",
          "&trpezium;": "\u23E2",
          "&tscr;": "\uD835\uDCC9",
          "&tscy;": "\u0446",
          "&tshcy;": "\u045B",
          "&tstrok;": "\u0167",
          "&twixt;": "\u226C",
          "&twoheadleftarrow;": "\u219E",
          "&twoheadrightarrow;": "\u21A0",
          "&uArr;": "\u21D1",
          "&uHar;": "\u2963",
          "&uacute": "\xFA",
          "&uacute;": "\xFA",
          "&uarr;": "\u2191",
          "&ubrcy;": "\u045E",
          "&ubreve;": "\u016D",
          "&ucirc": "\xFB",
          "&ucirc;": "\xFB",
          "&ucy;": "\u0443",
          "&udarr;": "\u21C5",
          "&udblac;": "\u0171",
          "&udhar;": "\u296E",
          "&ufisht;": "\u297E",
          "&ufr;": "\uD835\uDD32",
          "&ugrave": "\xF9",
          "&ugrave;": "\xF9",
          "&uharl;": "\u21BF",
          "&uharr;": "\u21BE",
          "&uhblk;": "\u2580",
          "&ulcorn;": "\u231C",
          "&ulcorner;": "\u231C",
          "&ulcrop;": "\u230F",
          "&ultri;": "\u25F8",
          "&umacr;": "\u016B",
          "&uml": "\xA8",
          "&uml;": "\xA8",
          "&uogon;": "\u0173",
          "&uopf;": "\uD835\uDD66",
          "&uparrow;": "\u2191",
          "&updownarrow;": "\u2195",
          "&upharpoonleft;": "\u21BF",
          "&upharpoonright;": "\u21BE",
          "&uplus;": "\u228E",
          "&upsi;": "\u03C5",
          "&upsih;": "\u03D2",
          "&upsilon;": "\u03C5",
          "&upuparrows;": "\u21C8",
          "&urcorn;": "\u231D",
          "&urcorner;": "\u231D",
          "&urcrop;": "\u230E",
          "&uring;": "\u016F",
          "&urtri;": "\u25F9",
          "&uscr;": "\uD835\uDCCA",
          "&utdot;": "\u22F0",
          "&utilde;": "\u0169",
          "&utri;": "\u25B5",
          "&utrif;": "\u25B4",
          "&uuarr;": "\u21C8",
          "&uuml": "\xFC",
          "&uuml;": "\xFC",
          "&uwangle;": "\u29A7",
          "&vArr;": "\u21D5",
          "&vBar;": "\u2AE8",
          "&vBarv;": "\u2AE9",
          "&vDash;": "\u22A8",
          "&vangrt;": "\u299C",
          "&varepsilon;": "\u03F5",
          "&varkappa;": "\u03F0",
          "&varnothing;": "\u2205",
          "&varphi;": "\u03D5",
          "&varpi;": "\u03D6",
          "&varpropto;": "\u221D",
          "&varr;": "\u2195",
          "&varrho;": "\u03F1",
          "&varsigma;": "\u03C2",
          "&varsubsetneq;": "\u228A\uFE00",
          "&varsubsetneqq;": "\u2ACB\uFE00",
          "&varsupsetneq;": "\u228B\uFE00",
          "&varsupsetneqq;": "\u2ACC\uFE00",
          "&vartheta;": "\u03D1",
          "&vartriangleleft;": "\u22B2",
          "&vartriangleright;": "\u22B3",
          "&vcy;": "\u0432",
          "&vdash;": "\u22A2",
          "&vee;": "\u2228",
          "&veebar;": "\u22BB",
          "&veeeq;": "\u225A",
          "&vellip;": "\u22EE",
          "&verbar;": "|",
          "&vert;": "|",
          "&vfr;": "\uD835\uDD33",
          "&vltri;": "\u22B2",
          "&vnsub;": "\u2282\u20D2",
          "&vnsup;": "\u2283\u20D2",
          "&vopf;": "\uD835\uDD67",
          "&vprop;": "\u221D",
          "&vrtri;": "\u22B3",
          "&vscr;": "\uD835\uDCCB",
          "&vsubnE;": "\u2ACB\uFE00",
          "&vsubne;": "\u228A\uFE00",
          "&vsupnE;": "\u2ACC\uFE00",
          "&vsupne;": "\u228B\uFE00",
          "&vzigzag;": "\u299A",
          "&wcirc;": "\u0175",
          "&wedbar;": "\u2A5F",
          "&wedge;": "\u2227",
          "&wedgeq;": "\u2259",
          "&weierp;": "\u2118",
          "&wfr;": "\uD835\uDD34",
          "&wopf;": "\uD835\uDD68",
          "&wp;": "\u2118",
          "&wr;": "\u2240",
          "&wreath;": "\u2240",
          "&wscr;": "\uD835\uDCCC",
          "&xcap;": "\u22C2",
          "&xcirc;": "\u25EF",
          "&xcup;": "\u22C3",
          "&xdtri;": "\u25BD",
          "&xfr;": "\uD835\uDD35",
          "&xhArr;": "\u27FA",
          "&xharr;": "\u27F7",
          "&xi;": "\u03BE",
          "&xlArr;": "\u27F8",
          "&xlarr;": "\u27F5",
          "&xmap;": "\u27FC",
          "&xnis;": "\u22FB",
          "&xodot;": "\u2A00",
          "&xopf;": "\uD835\uDD69",
          "&xoplus;": "\u2A01",
          "&xotime;": "\u2A02",
          "&xrArr;": "\u27F9",
          "&xrarr;": "\u27F6",
          "&xscr;": "\uD835\uDCCD",
          "&xsqcup;": "\u2A06",
          "&xuplus;": "\u2A04",
          "&xutri;": "\u25B3",
          "&xvee;": "\u22C1",
          "&xwedge;": "\u22C0",
          "&yacute": "\xFD",
          "&yacute;": "\xFD",
          "&yacy;": "\u044F",
          "&ycirc;": "\u0177",
          "&ycy;": "\u044B",
          "&yen": "\xA5",
          "&yen;": "\xA5",
          "&yfr;": "\uD835\uDD36",
          "&yicy;": "\u0457",
          "&yopf;": "\uD835\uDD6A",
          "&yscr;": "\uD835\uDCCE",
          "&yucy;": "\u044E",
          "&yuml": "\xFF",
          "&yuml;": "\xFF",
          "&zacute;": "\u017A",
          "&zcaron;": "\u017E",
          "&zcy;": "\u0437",
          "&zdot;": "\u017C",
          "&zeetrf;": "\u2128",
          "&zeta;": "\u03B6",
          "&zfr;": "\uD835\uDD37",
          "&zhcy;": "\u0436",
          "&zigrarr;": "\u21DD",
          "&zopf;": "\uD835\uDD6B",
          "&zscr;": "\uD835\uDCCF",
          "&zwj;": "\u200D",
          "&zwnj;": "\u200C"
        },
        characters: {
          "\xC6": "&AElig;",
          "&": "&amp;",
          "\xC1": "&Aacute;",
          "\u0102": "&Abreve;",
          "\xC2": "&Acirc;",
          "\u0410": "&Acy;",
          "\uD835\uDD04": "&Afr;",
          "\xC0": "&Agrave;",
          "\u0391": "&Alpha;",
          "\u0100": "&Amacr;",
          "\u2A53": "&And;",
          "\u0104": "&Aogon;",
          "\uD835\uDD38": "&Aopf;",
          "\u2061": "&af;",
          "\xC5": "&angst;",
          "\uD835\uDC9C": "&Ascr;",
          "\u2254": "&coloneq;",
          "\xC3": "&Atilde;",
          "\xC4": "&Auml;",
          "\u2216": "&ssetmn;",
          "\u2AE7": "&Barv;",
          "\u2306": "&doublebarwedge;",
          "\u0411": "&Bcy;",
          "\u2235": "&because;",
          "\u212C": "&bernou;",
          "\u0392": "&Beta;",
          "\uD835\uDD05": "&Bfr;",
          "\uD835\uDD39": "&Bopf;",
          "\u02D8": "&breve;",
          "\u224E": "&bump;",
          "\u0427": "&CHcy;",
          "\xA9": "&copy;",
          "\u0106": "&Cacute;",
          "\u22D2": "&Cap;",
          "\u2145": "&DD;",
          "\u212D": "&Cfr;",
          "\u010C": "&Ccaron;",
          "\xC7": "&Ccedil;",
          "\u0108": "&Ccirc;",
          "\u2230": "&Cconint;",
          "\u010A": "&Cdot;",
          "\xB8": "&cedil;",
          "\xB7": "&middot;",
          "\u03A7": "&Chi;",
          "\u2299": "&odot;",
          "\u2296": "&ominus;",
          "\u2295": "&oplus;",
          "\u2297": "&otimes;",
          "\u2232": "&cwconint;",
          "\u201D": "&rdquor;",
          "\u2019": "&rsquor;",
          "\u2237": "&Proportion;",
          "\u2A74": "&Colone;",
          "\u2261": "&equiv;",
          "\u222F": "&DoubleContourIntegral;",
          "\u222E": "&oint;",
          "\u2102": "&complexes;",
          "\u2210": "&coprod;",
          "\u2233": "&awconint;",
          "\u2A2F": "&Cross;",
          "\uD835\uDC9E": "&Cscr;",
          "\u22D3": "&Cup;",
          "\u224D": "&asympeq;",
          "\u2911": "&DDotrahd;",
          "\u0402": "&DJcy;",
          "\u0405": "&DScy;",
          "\u040F": "&DZcy;",
          "\u2021": "&ddagger;",
          "\u21A1": "&Darr;",
          "\u2AE4": "&DoubleLeftTee;",
          "\u010E": "&Dcaron;",
          "\u0414": "&Dcy;",
          "\u2207": "&nabla;",
          "\u0394": "&Delta;",
          "\uD835\uDD07": "&Dfr;",
          "\xB4": "&acute;",
          "\u02D9": "&dot;",
          "\u02DD": "&dblac;",
          "`": "&grave;",
          "\u02DC": "&tilde;",
          "\u22C4": "&diamond;",
          "\u2146": "&dd;",
          "\uD835\uDD3B": "&Dopf;",
          "\xA8": "&uml;",
          "\u20DC": "&DotDot;",
          "\u2250": "&esdot;",
          "\u21D3": "&dArr;",
          "\u21D0": "&lArr;",
          "\u21D4": "&iff;",
          "\u27F8": "&xlArr;",
          "\u27FA": "&xhArr;",
          "\u27F9": "&xrArr;",
          "\u21D2": "&rArr;",
          "\u22A8": "&vDash;",
          "\u21D1": "&uArr;",
          "\u21D5": "&vArr;",
          "\u2225": "&spar;",
          "\u2193": "&downarrow;",
          "\u2913": "&DownArrowBar;",
          "\u21F5": "&duarr;",
          "\u0311": "&DownBreve;",
          "\u2950": "&DownLeftRightVector;",
          "\u295E": "&DownLeftTeeVector;",
          "\u21BD": "&lhard;",
          "\u2956": "&DownLeftVectorBar;",
          "\u295F": "&DownRightTeeVector;",
          "\u21C1": "&rightharpoondown;",
          "\u2957": "&DownRightVectorBar;",
          "\u22A4": "&top;",
          "\u21A7": "&mapstodown;",
          "\uD835\uDC9F": "&Dscr;",
          "\u0110": "&Dstrok;",
          "\u014A": "&ENG;",
          "\xD0": "&ETH;",
          "\xC9": "&Eacute;",
          "\u011A": "&Ecaron;",
          "\xCA": "&Ecirc;",
          "\u042D": "&Ecy;",
          "\u0116": "&Edot;",
          "\uD835\uDD08": "&Efr;",
          "\xC8": "&Egrave;",
          "\u2208": "&isinv;",
          "\u0112": "&Emacr;",
          "\u25FB": "&EmptySmallSquare;",
          "\u25AB": "&EmptyVerySmallSquare;",
          "\u0118": "&Eogon;",
          "\uD835\uDD3C": "&Eopf;",
          "\u0395": "&Epsilon;",
          "\u2A75": "&Equal;",
          "\u2242": "&esim;",
          "\u21CC": "&rlhar;",
          "\u2130": "&expectation;",
          "\u2A73": "&Esim;",
          "\u0397": "&Eta;",
          "\xCB": "&Euml;",
          "\u2203": "&exist;",
          "\u2147": "&exponentiale;",
          "\u0424": "&Fcy;",
          "\uD835\uDD09": "&Ffr;",
          "\u25FC": "&FilledSmallSquare;",
          "\u25AA": "&squf;",
          "\uD835\uDD3D": "&Fopf;",
          "\u2200": "&forall;",
          "\u2131": "&Fscr;",
          "\u0403": "&GJcy;",
          ">": "&gt;",
          "\u0393": "&Gamma;",
          "\u03DC": "&Gammad;",
          "\u011E": "&Gbreve;",
          "\u0122": "&Gcedil;",
          "\u011C": "&Gcirc;",
          "\u0413": "&Gcy;",
          "\u0120": "&Gdot;",
          "\uD835\uDD0A": "&Gfr;",
          "\u22D9": "&ggg;",
          "\uD835\uDD3E": "&Gopf;",
          "\u2265": "&geq;",
          "\u22DB": "&gtreqless;",
          "\u2267": "&geqq;",
          "\u2AA2": "&GreaterGreater;",
          "\u2277": "&gtrless;",
          "\u2A7E": "&ges;",
          "\u2273": "&gtrsim;",
          "\uD835\uDCA2": "&Gscr;",
          "\u226B": "&gg;",
          "\u042A": "&HARDcy;",
          "\u02C7": "&caron;",
          "^": "&Hat;",
          "\u0124": "&Hcirc;",
          "\u210C": "&Poincareplane;",
          "\u210B": "&hamilt;",
          "\u210D": "&quaternions;",
          "\u2500": "&boxh;",
          "\u0126": "&Hstrok;",
          "\u224F": "&bumpeq;",
          "\u0415": "&IEcy;",
          "\u0132": "&IJlig;",
          "\u0401": "&IOcy;",
          "\xCD": "&Iacute;",
          "\xCE": "&Icirc;",
          "\u0418": "&Icy;",
          "\u0130": "&Idot;",
          "\u2111": "&imagpart;",
          "\xCC": "&Igrave;",
          "\u012A": "&Imacr;",
          "\u2148": "&ii;",
          "\u222C": "&Int;",
          "\u222B": "&int;",
          "\u22C2": "&xcap;",
          "\u2063": "&ic;",
          "\u2062": "&it;",
          "\u012E": "&Iogon;",
          "\uD835\uDD40": "&Iopf;",
          "\u0399": "&Iota;",
          "\u2110": "&imagline;",
          "\u0128": "&Itilde;",
          "\u0406": "&Iukcy;",
          "\xCF": "&Iuml;",
          "\u0134": "&Jcirc;",
          "\u0419": "&Jcy;",
          "\uD835\uDD0D": "&Jfr;",
          "\uD835\uDD41": "&Jopf;",
          "\uD835\uDCA5": "&Jscr;",
          "\u0408": "&Jsercy;",
          "\u0404": "&Jukcy;",
          "\u0425": "&KHcy;",
          "\u040C": "&KJcy;",
          "\u039A": "&Kappa;",
          "\u0136": "&Kcedil;",
          "\u041A": "&Kcy;",
          "\uD835\uDD0E": "&Kfr;",
          "\uD835\uDD42": "&Kopf;",
          "\uD835\uDCA6": "&Kscr;",
          "\u0409": "&LJcy;",
          "<": "&lt;",
          "\u0139": "&Lacute;",
          "\u039B": "&Lambda;",
          "\u27EA": "&Lang;",
          "\u2112": "&lagran;",
          "\u219E": "&twoheadleftarrow;",
          "\u013D": "&Lcaron;",
          "\u013B": "&Lcedil;",
          "\u041B": "&Lcy;",
          "\u27E8": "&langle;",
          "\u2190": "&slarr;",
          "\u21E4": "&larrb;",
          "\u21C6": "&lrarr;",
          "\u2308": "&lceil;",
          "\u27E6": "&lobrk;",
          "\u2961": "&LeftDownTeeVector;",
          "\u21C3": "&downharpoonleft;",
          "\u2959": "&LeftDownVectorBar;",
          "\u230A": "&lfloor;",
          "\u2194": "&leftrightarrow;",
          "\u294E": "&LeftRightVector;",
          "\u22A3": "&dashv;",
          "\u21A4": "&mapstoleft;",
          "\u295A": "&LeftTeeVector;",
          "\u22B2": "&vltri;",
          "\u29CF": "&LeftTriangleBar;",
          "\u22B4": "&trianglelefteq;",
          "\u2951": "&LeftUpDownVector;",
          "\u2960": "&LeftUpTeeVector;",
          "\u21BF": "&upharpoonleft;",
          "\u2958": "&LeftUpVectorBar;",
          "\u21BC": "&lharu;",
          "\u2952": "&LeftVectorBar;",
          "\u22DA": "&lesseqgtr;",
          "\u2266": "&leqq;",
          "\u2276": "&lg;",
          "\u2AA1": "&LessLess;",
          "\u2A7D": "&les;",
          "\u2272": "&lsim;",
          "\uD835\uDD0F": "&Lfr;",
          "\u22D8": "&Ll;",
          "\u21DA": "&lAarr;",
          "\u013F": "&Lmidot;",
          "\u27F5": "&xlarr;",
          "\u27F7": "&xharr;",
          "\u27F6": "&xrarr;",
          "\uD835\uDD43": "&Lopf;",
          "\u2199": "&swarrow;",
          "\u2198": "&searrow;",
          "\u21B0": "&lsh;",
          "\u0141": "&Lstrok;",
          "\u226A": "&ll;",
          "\u2905": "&Map;",
          "\u041C": "&Mcy;",
          "\u205F": "&MediumSpace;",
          "\u2133": "&phmmat;",
          "\uD835\uDD10": "&Mfr;",
          "\u2213": "&mp;",
          "\uD835\uDD44": "&Mopf;",
          "\u039C": "&Mu;",
          "\u040A": "&NJcy;",
          "\u0143": "&Nacute;",
          "\u0147": "&Ncaron;",
          "\u0145": "&Ncedil;",
          "\u041D": "&Ncy;",
          "\u200B": "&ZeroWidthSpace;",
          "\n": "&NewLine;",
          "\uD835\uDD11": "&Nfr;",
          "\u2060": "&NoBreak;",
          "\xA0": "&nbsp;",
          "\u2115": "&naturals;",
          "\u2AEC": "&Not;",
          "\u2262": "&nequiv;",
          "\u226D": "&NotCupCap;",
          "\u2226": "&nspar;",
          "\u2209": "&notinva;",
          "\u2260": "&ne;",
          "\u2242\u0338": "&nesim;",
          "\u2204": "&nexists;",
          "\u226F": "&ngtr;",
          "\u2271": "&ngeq;",
          "\u2267\u0338": "&ngeqq;",
          "\u226B\u0338": "&nGtv;",
          "\u2279": "&ntgl;",
          "\u2A7E\u0338": "&nges;",
          "\u2275": "&ngsim;",
          "\u224E\u0338": "&nbump;",
          "\u224F\u0338": "&nbumpe;",
          "\u22EA": "&ntriangleleft;",
          "\u29CF\u0338": "&NotLeftTriangleBar;",
          "\u22EC": "&ntrianglelefteq;",
          "\u226E": "&nlt;",
          "\u2270": "&nleq;",
          "\u2278": "&ntlg;",
          "\u226A\u0338": "&nLtv;",
          "\u2A7D\u0338": "&nles;",
          "\u2274": "&nlsim;",
          "\u2AA2\u0338": "&NotNestedGreaterGreater;",
          "\u2AA1\u0338": "&NotNestedLessLess;",
          "\u2280": "&nprec;",
          "\u2AAF\u0338": "&npreceq;",
          "\u22E0": "&nprcue;",
          "\u220C": "&notniva;",
          "\u22EB": "&ntriangleright;",
          "\u29D0\u0338": "&NotRightTriangleBar;",
          "\u22ED": "&ntrianglerighteq;",
          "\u228F\u0338": "&NotSquareSubset;",
          "\u22E2": "&nsqsube;",
          "\u2290\u0338": "&NotSquareSuperset;",
          "\u22E3": "&nsqsupe;",
          "\u2282\u20D2": "&vnsub;",
          "\u2288": "&nsubseteq;",
          "\u2281": "&nsucc;",
          "\u2AB0\u0338": "&nsucceq;",
          "\u22E1": "&nsccue;",
          "\u227F\u0338": "&NotSucceedsTilde;",
          "\u2283\u20D2": "&vnsup;",
          "\u2289": "&nsupseteq;",
          "\u2241": "&nsim;",
          "\u2244": "&nsimeq;",
          "\u2247": "&ncong;",
          "\u2249": "&napprox;",
          "\u2224": "&nsmid;",
          "\uD835\uDCA9": "&Nscr;",
          "\xD1": "&Ntilde;",
          "\u039D": "&Nu;",
          "\u0152": "&OElig;",
          "\xD3": "&Oacute;",
          "\xD4": "&Ocirc;",
          "\u041E": "&Ocy;",
          "\u0150": "&Odblac;",
          "\uD835\uDD12": "&Ofr;",
          "\xD2": "&Ograve;",
          "\u014C": "&Omacr;",
          "\u03A9": "&ohm;",
          "\u039F": "&Omicron;",
          "\uD835\uDD46": "&Oopf;",
          "\u201C": "&ldquo;",
          "\u2018": "&lsquo;",
          "\u2A54": "&Or;",
          "\uD835\uDCAA": "&Oscr;",
          "\xD8": "&Oslash;",
          "\xD5": "&Otilde;",
          "\u2A37": "&Otimes;",
          "\xD6": "&Ouml;",
          "\u203E": "&oline;",
          "\u23DE": "&OverBrace;",
          "\u23B4": "&tbrk;",
          "\u23DC": "&OverParenthesis;",
          "\u2202": "&part;",
          "\u041F": "&Pcy;",
          "\uD835\uDD13": "&Pfr;",
          "\u03A6": "&Phi;",
          "\u03A0": "&Pi;",
          "\xB1": "&pm;",
          "\u2119": "&primes;",
          "\u2ABB": "&Pr;",
          "\u227A": "&prec;",
          "\u2AAF": "&preceq;",
          "\u227C": "&preccurlyeq;",
          "\u227E": "&prsim;",
          "\u2033": "&Prime;",
          "\u220F": "&prod;",
          "\u221D": "&vprop;",
          "\uD835\uDCAB": "&Pscr;",
          "\u03A8": "&Psi;",
          '"': "&quot;",
          "\uD835\uDD14": "&Qfr;",
          "\u211A": "&rationals;",
          "\uD835\uDCAC": "&Qscr;",
          "\u2910": "&drbkarow;",
          "\xAE": "&reg;",
          "\u0154": "&Racute;",
          "\u27EB": "&Rang;",
          "\u21A0": "&twoheadrightarrow;",
          "\u2916": "&Rarrtl;",
          "\u0158": "&Rcaron;",
          "\u0156": "&Rcedil;",
          "\u0420": "&Rcy;",
          "\u211C": "&realpart;",
          "\u220B": "&niv;",
          "\u21CB": "&lrhar;",
          "\u296F": "&duhar;",
          "\u03A1": "&Rho;",
          "\u27E9": "&rangle;",
          "\u2192": "&srarr;",
          "\u21E5": "&rarrb;",
          "\u21C4": "&rlarr;",
          "\u2309": "&rceil;",
          "\u27E7": "&robrk;",
          "\u295D": "&RightDownTeeVector;",
          "\u21C2": "&downharpoonright;",
          "\u2955": "&RightDownVectorBar;",
          "\u230B": "&rfloor;",
          "\u22A2": "&vdash;",
          "\u21A6": "&mapsto;",
          "\u295B": "&RightTeeVector;",
          "\u22B3": "&vrtri;",
          "\u29D0": "&RightTriangleBar;",
          "\u22B5": "&trianglerighteq;",
          "\u294F": "&RightUpDownVector;",
          "\u295C": "&RightUpTeeVector;",
          "\u21BE": "&upharpoonright;",
          "\u2954": "&RightUpVectorBar;",
          "\u21C0": "&rightharpoonup;",
          "\u2953": "&RightVectorBar;",
          "\u211D": "&reals;",
          "\u2970": "&RoundImplies;",
          "\u21DB": "&rAarr;",
          "\u211B": "&realine;",
          "\u21B1": "&rsh;",
          "\u29F4": "&RuleDelayed;",
          "\u0429": "&SHCHcy;",
          "\u0428": "&SHcy;",
          "\u042C": "&SOFTcy;",
          "\u015A": "&Sacute;",
          "\u2ABC": "&Sc;",
          "\u0160": "&Scaron;",
          "\u015E": "&Scedil;",
          "\u015C": "&Scirc;",
          "\u0421": "&Scy;",
          "\uD835\uDD16": "&Sfr;",
          "\u2191": "&uparrow;",
          "\u03A3": "&Sigma;",
          "\u2218": "&compfn;",
          "\uD835\uDD4A": "&Sopf;",
          "\u221A": "&radic;",
          "\u25A1": "&square;",
          "\u2293": "&sqcap;",
          "\u228F": "&sqsubset;",
          "\u2291": "&sqsubseteq;",
          "\u2290": "&sqsupset;",
          "\u2292": "&sqsupseteq;",
          "\u2294": "&sqcup;",
          "\uD835\uDCAE": "&Sscr;",
          "\u22C6": "&sstarf;",
          "\u22D0": "&Subset;",
          "\u2286": "&subseteq;",
          "\u227B": "&succ;",
          "\u2AB0": "&succeq;",
          "\u227D": "&succcurlyeq;",
          "\u227F": "&succsim;",
          "\u2211": "&sum;",
          "\u22D1": "&Supset;",
          "\u2283": "&supset;",
          "\u2287": "&supseteq;",
          "\xDE": "&THORN;",
          "\u2122": "&trade;",
          "\u040B": "&TSHcy;",
          "\u0426": "&TScy;",
          "	": "&Tab;",
          "\u03A4": "&Tau;",
          "\u0164": "&Tcaron;",
          "\u0162": "&Tcedil;",
          "\u0422": "&Tcy;",
          "\uD835\uDD17": "&Tfr;",
          "\u2234": "&therefore;",
          "\u0398": "&Theta;",
          "\u205F\u200A": "&ThickSpace;",
          "\u2009": "&thinsp;",
          "\u223C": "&thksim;",
          "\u2243": "&simeq;",
          "\u2245": "&cong;",
          "\u2248": "&thkap;",
          "\uD835\uDD4B": "&Topf;",
          "\u20DB": "&tdot;",
          "\uD835\uDCAF": "&Tscr;",
          "\u0166": "&Tstrok;",
          "\xDA": "&Uacute;",
          "\u219F": "&Uarr;",
          "\u2949": "&Uarrocir;",
          "\u040E": "&Ubrcy;",
          "\u016C": "&Ubreve;",
          "\xDB": "&Ucirc;",
          "\u0423": "&Ucy;",
          "\u0170": "&Udblac;",
          "\uD835\uDD18": "&Ufr;",
          "\xD9": "&Ugrave;",
          "\u016A": "&Umacr;",
          _: "&lowbar;",
          "\u23DF": "&UnderBrace;",
          "\u23B5": "&bbrk;",
          "\u23DD": "&UnderParenthesis;",
          "\u22C3": "&xcup;",
          "\u228E": "&uplus;",
          "\u0172": "&Uogon;",
          "\uD835\uDD4C": "&Uopf;",
          "\u2912": "&UpArrowBar;",
          "\u21C5": "&udarr;",
          "\u2195": "&varr;",
          "\u296E": "&udhar;",
          "\u22A5": "&perp;",
          "\u21A5": "&mapstoup;",
          "\u2196": "&nwarrow;",
          "\u2197": "&nearrow;",
          "\u03D2": "&upsih;",
          "\u03A5": "&Upsilon;",
          "\u016E": "&Uring;",
          "\uD835\uDCB0": "&Uscr;",
          "\u0168": "&Utilde;",
          "\xDC": "&Uuml;",
          "\u22AB": "&VDash;",
          "\u2AEB": "&Vbar;",
          "\u0412": "&Vcy;",
          "\u22A9": "&Vdash;",
          "\u2AE6": "&Vdashl;",
          "\u22C1": "&xvee;",
          "\u2016": "&Vert;",
          "\u2223": "&smid;",
          "|": "&vert;",
          "\u2758": "&VerticalSeparator;",
          "\u2240": "&wreath;",
          "\u200A": "&hairsp;",
          "\uD835\uDD19": "&Vfr;",
          "\uD835\uDD4D": "&Vopf;",
          "\uD835\uDCB1": "&Vscr;",
          "\u22AA": "&Vvdash;",
          "\u0174": "&Wcirc;",
          "\u22C0": "&xwedge;",
          "\uD835\uDD1A": "&Wfr;",
          "\uD835\uDD4E": "&Wopf;",
          "\uD835\uDCB2": "&Wscr;",
          "\uD835\uDD1B": "&Xfr;",
          "\u039E": "&Xi;",
          "\uD835\uDD4F": "&Xopf;",
          "\uD835\uDCB3": "&Xscr;",
          "\u042F": "&YAcy;",
          "\u0407": "&YIcy;",
          "\u042E": "&YUcy;",
          "\xDD": "&Yacute;",
          "\u0176": "&Ycirc;",
          "\u042B": "&Ycy;",
          "\uD835\uDD1C": "&Yfr;",
          "\uD835\uDD50": "&Yopf;",
          "\uD835\uDCB4": "&Yscr;",
          "\u0178": "&Yuml;",
          "\u0416": "&ZHcy;",
          "\u0179": "&Zacute;",
          "\u017D": "&Zcaron;",
          "\u0417": "&Zcy;",
          "\u017B": "&Zdot;",
          "\u0396": "&Zeta;",
          "\u2128": "&zeetrf;",
          "\u2124": "&integers;",
          "\uD835\uDCB5": "&Zscr;",
          "\xE1": "&aacute;",
          "\u0103": "&abreve;",
          "\u223E": "&mstpos;",
          "\u223E\u0333": "&acE;",
          "\u223F": "&acd;",
          "\xE2": "&acirc;",
          "\u0430": "&acy;",
          "\xE6": "&aelig;",
          "\uD835\uDD1E": "&afr;",
          "\xE0": "&agrave;",
          "\u2135": "&aleph;",
          "\u03B1": "&alpha;",
          "\u0101": "&amacr;",
          "\u2A3F": "&amalg;",
          "\u2227": "&wedge;",
          "\u2A55": "&andand;",
          "\u2A5C": "&andd;",
          "\u2A58": "&andslope;",
          "\u2A5A": "&andv;",
          "\u2220": "&angle;",
          "\u29A4": "&ange;",
          "\u2221": "&measuredangle;",
          "\u29A8": "&angmsdaa;",
          "\u29A9": "&angmsdab;",
          "\u29AA": "&angmsdac;",
          "\u29AB": "&angmsdad;",
          "\u29AC": "&angmsdae;",
          "\u29AD": "&angmsdaf;",
          "\u29AE": "&angmsdag;",
          "\u29AF": "&angmsdah;",
          "\u221F": "&angrt;",
          "\u22BE": "&angrtvb;",
          "\u299D": "&angrtvbd;",
          "\u2222": "&angsph;",
          "\u237C": "&angzarr;",
          "\u0105": "&aogon;",
          "\uD835\uDD52": "&aopf;",
          "\u2A70": "&apE;",
          "\u2A6F": "&apacir;",
          "\u224A": "&approxeq;",
          "\u224B": "&apid;",
          "'": "&apos;",
          "\xE5": "&aring;",
          "\uD835\uDCB6": "&ascr;",
          "*": "&midast;",
          "\xE3": "&atilde;",
          "\xE4": "&auml;",
          "\u2A11": "&awint;",
          "\u2AED": "&bNot;",
          "\u224C": "&bcong;",
          "\u03F6": "&bepsi;",
          "\u2035": "&bprime;",
          "\u223D": "&bsim;",
          "\u22CD": "&bsime;",
          "\u22BD": "&barvee;",
          "\u2305": "&barwedge;",
          "\u23B6": "&bbrktbrk;",
          "\u0431": "&bcy;",
          "\u201E": "&ldquor;",
          "\u29B0": "&bemptyv;",
          "\u03B2": "&beta;",
          "\u2136": "&beth;",
          "\u226C": "&twixt;",
          "\uD835\uDD1F": "&bfr;",
          "\u25EF": "&xcirc;",
          "\u2A00": "&xodot;",
          "\u2A01": "&xoplus;",
          "\u2A02": "&xotime;",
          "\u2A06": "&xsqcup;",
          "\u2605": "&starf;",
          "\u25BD": "&xdtri;",
          "\u25B3": "&xutri;",
          "\u2A04": "&xuplus;",
          "\u290D": "&rbarr;",
          "\u29EB": "&lozf;",
          "\u25B4": "&utrif;",
          "\u25BE": "&dtrif;",
          "\u25C2": "&ltrif;",
          "\u25B8": "&rtrif;",
          "\u2423": "&blank;",
          "\u2592": "&blk12;",
          "\u2591": "&blk14;",
          "\u2593": "&blk34;",
          "\u2588": "&block;",
          "=\u20E5": "&bne;",
          "\u2261\u20E5": "&bnequiv;",
          "\u2310": "&bnot;",
          "\uD835\uDD53": "&bopf;",
          "\u22C8": "&bowtie;",
          "\u2557": "&boxDL;",
          "\u2554": "&boxDR;",
          "\u2556": "&boxDl;",
          "\u2553": "&boxDr;",
          "\u2550": "&boxH;",
          "\u2566": "&boxHD;",
          "\u2569": "&boxHU;",
          "\u2564": "&boxHd;",
          "\u2567": "&boxHu;",
          "\u255D": "&boxUL;",
          "\u255A": "&boxUR;",
          "\u255C": "&boxUl;",
          "\u2559": "&boxUr;",
          "\u2551": "&boxV;",
          "\u256C": "&boxVH;",
          "\u2563": "&boxVL;",
          "\u2560": "&boxVR;",
          "\u256B": "&boxVh;",
          "\u2562": "&boxVl;",
          "\u255F": "&boxVr;",
          "\u29C9": "&boxbox;",
          "\u2555": "&boxdL;",
          "\u2552": "&boxdR;",
          "\u2510": "&boxdl;",
          "\u250C": "&boxdr;",
          "\u2565": "&boxhD;",
          "\u2568": "&boxhU;",
          "\u252C": "&boxhd;",
          "\u2534": "&boxhu;",
          "\u229F": "&minusb;",
          "\u229E": "&plusb;",
          "\u22A0": "&timesb;",
          "\u255B": "&boxuL;",
          "\u2558": "&boxuR;",
          "\u2518": "&boxul;",
          "\u2514": "&boxur;",
          "\u2502": "&boxv;",
          "\u256A": "&boxvH;",
          "\u2561": "&boxvL;",
          "\u255E": "&boxvR;",
          "\u253C": "&boxvh;",
          "\u2524": "&boxvl;",
          "\u251C": "&boxvr;",
          "\xA6": "&brvbar;",
          "\uD835\uDCB7": "&bscr;",
          "\u204F": "&bsemi;",
          "\\": "&bsol;",
          "\u29C5": "&bsolb;",
          "\u27C8": "&bsolhsub;",
          "\u2022": "&bullet;",
          "\u2AAE": "&bumpE;",
          "\u0107": "&cacute;",
          "\u2229": "&cap;",
          "\u2A44": "&capand;",
          "\u2A49": "&capbrcup;",
          "\u2A4B": "&capcap;",
          "\u2A47": "&capcup;",
          "\u2A40": "&capdot;",
          "\u2229\uFE00": "&caps;",
          "\u2041": "&caret;",
          "\u2A4D": "&ccaps;",
          "\u010D": "&ccaron;",
          "\xE7": "&ccedil;",
          "\u0109": "&ccirc;",
          "\u2A4C": "&ccups;",
          "\u2A50": "&ccupssm;",
          "\u010B": "&cdot;",
          "\u29B2": "&cemptyv;",
          "\xA2": "&cent;",
          "\uD835\uDD20": "&cfr;",
          "\u0447": "&chcy;",
          "\u2713": "&checkmark;",
          "\u03C7": "&chi;",
          "\u25CB": "&cir;",
          "\u29C3": "&cirE;",
          "\u02C6": "&circ;",
          "\u2257": "&cire;",
          "\u21BA": "&olarr;",
          "\u21BB": "&orarr;",
          "\u24C8": "&oS;",
          "\u229B": "&oast;",
          "\u229A": "&ocir;",
          "\u229D": "&odash;",
          "\u2A10": "&cirfnint;",
          "\u2AEF": "&cirmid;",
          "\u29C2": "&cirscir;",
          "\u2663": "&clubsuit;",
          ":": "&colon;",
          ",": "&comma;",
          "@": "&commat;",
          "\u2201": "&complement;",
          "\u2A6D": "&congdot;",
          "\uD835\uDD54": "&copf;",
          "\u2117": "&copysr;",
          "\u21B5": "&crarr;",
          "\u2717": "&cross;",
          "\uD835\uDCB8": "&cscr;",
          "\u2ACF": "&csub;",
          "\u2AD1": "&csube;",
          "\u2AD0": "&csup;",
          "\u2AD2": "&csupe;",
          "\u22EF": "&ctdot;",
          "\u2938": "&cudarrl;",
          "\u2935": "&cudarrr;",
          "\u22DE": "&curlyeqprec;",
          "\u22DF": "&curlyeqsucc;",
          "\u21B6": "&curvearrowleft;",
          "\u293D": "&cularrp;",
          "\u222A": "&cup;",
          "\u2A48": "&cupbrcap;",
          "\u2A46": "&cupcap;",
          "\u2A4A": "&cupcup;",
          "\u228D": "&cupdot;",
          "\u2A45": "&cupor;",
          "\u222A\uFE00": "&cups;",
          "\u21B7": "&curvearrowright;",
          "\u293C": "&curarrm;",
          "\u22CE": "&cuvee;",
          "\u22CF": "&cuwed;",
          "\xA4": "&curren;",
          "\u2231": "&cwint;",
          "\u232D": "&cylcty;",
          "\u2965": "&dHar;",
          "\u2020": "&dagger;",
          "\u2138": "&daleth;",
          "\u2010": "&hyphen;",
          "\u290F": "&rBarr;",
          "\u010F": "&dcaron;",
          "\u0434": "&dcy;",
          "\u21CA": "&downdownarrows;",
          "\u2A77": "&eDDot;",
          "\xB0": "&deg;",
          "\u03B4": "&delta;",
          "\u29B1": "&demptyv;",
          "\u297F": "&dfisht;",
          "\uD835\uDD21": "&dfr;",
          "\u2666": "&diams;",
          "\u03DD": "&gammad;",
          "\u22F2": "&disin;",
          "\xF7": "&divide;",
          "\u22C7": "&divonx;",
          "\u0452": "&djcy;",
          "\u231E": "&llcorner;",
          "\u230D": "&dlcrop;",
          $: "&dollar;",
          "\uD835\uDD55": "&dopf;",
          "\u2251": "&eDot;",
          "\u2238": "&minusd;",
          "\u2214": "&plusdo;",
          "\u22A1": "&sdotb;",
          "\u231F": "&lrcorner;",
          "\u230C": "&drcrop;",
          "\uD835\uDCB9": "&dscr;",
          "\u0455": "&dscy;",
          "\u29F6": "&dsol;",
          "\u0111": "&dstrok;",
          "\u22F1": "&dtdot;",
          "\u25BF": "&triangledown;",
          "\u29A6": "&dwangle;",
          "\u045F": "&dzcy;",
          "\u27FF": "&dzigrarr;",
          "\xE9": "&eacute;",
          "\u2A6E": "&easter;",
          "\u011B": "&ecaron;",
          "\u2256": "&eqcirc;",
          "\xEA": "&ecirc;",
          "\u2255": "&eqcolon;",
          "\u044D": "&ecy;",
          "\u0117": "&edot;",
          "\u2252": "&fallingdotseq;",
          "\uD835\uDD22": "&efr;",
          "\u2A9A": "&eg;",
          "\xE8": "&egrave;",
          "\u2A96": "&eqslantgtr;",
          "\u2A98": "&egsdot;",
          "\u2A99": "&el;",
          "\u23E7": "&elinters;",
          "\u2113": "&ell;",
          "\u2A95": "&eqslantless;",
          "\u2A97": "&elsdot;",
          "\u0113": "&emacr;",
          "\u2205": "&varnothing;",
          "\u2004": "&emsp13;",
          "\u2005": "&emsp14;",
          "\u2003": "&emsp;",
          "\u014B": "&eng;",
          "\u2002": "&ensp;",
          "\u0119": "&eogon;",
          "\uD835\uDD56": "&eopf;",
          "\u22D5": "&epar;",
          "\u29E3": "&eparsl;",
          "\u2A71": "&eplus;",
          "\u03B5": "&epsilon;",
          "\u03F5": "&varepsilon;",
          "=": "&equals;",
          "\u225F": "&questeq;",
          "\u2A78": "&equivDD;",
          "\u29E5": "&eqvparsl;",
          "\u2253": "&risingdotseq;",
          "\u2971": "&erarr;",
          "\u212F": "&escr;",
          "\u03B7": "&eta;",
          "\xF0": "&eth;",
          "\xEB": "&euml;",
          "\u20AC": "&euro;",
          "!": "&excl;",
          "\u0444": "&fcy;",
          "\u2640": "&female;",
          "\uFB03": "&ffilig;",
          "\uFB00": "&fflig;",
          "\uFB04": "&ffllig;",
          "\uD835\uDD23": "&ffr;",
          "\uFB01": "&filig;",
          fj: "&fjlig;",
          "\u266D": "&flat;",
          "\uFB02": "&fllig;",
          "\u25B1": "&fltns;",
          "\u0192": "&fnof;",
          "\uD835\uDD57": "&fopf;",
          "\u22D4": "&pitchfork;",
          "\u2AD9": "&forkv;",
          "\u2A0D": "&fpartint;",
          "\xBD": "&half;",
          "\u2153": "&frac13;",
          "\xBC": "&frac14;",
          "\u2155": "&frac15;",
          "\u2159": "&frac16;",
          "\u215B": "&frac18;",
          "\u2154": "&frac23;",
          "\u2156": "&frac25;",
          "\xBE": "&frac34;",
          "\u2157": "&frac35;",
          "\u215C": "&frac38;",
          "\u2158": "&frac45;",
          "\u215A": "&frac56;",
          "\u215D": "&frac58;",
          "\u215E": "&frac78;",
          "\u2044": "&frasl;",
          "\u2322": "&sfrown;",
          "\uD835\uDCBB": "&fscr;",
          "\u2A8C": "&gtreqqless;",
          "\u01F5": "&gacute;",
          "\u03B3": "&gamma;",
          "\u2A86": "&gtrapprox;",
          "\u011F": "&gbreve;",
          "\u011D": "&gcirc;",
          "\u0433": "&gcy;",
          "\u0121": "&gdot;",
          "\u2AA9": "&gescc;",
          "\u2A80": "&gesdot;",
          "\u2A82": "&gesdoto;",
          "\u2A84": "&gesdotol;",
          "\u22DB\uFE00": "&gesl;",
          "\u2A94": "&gesles;",
          "\uD835\uDD24": "&gfr;",
          "\u2137": "&gimel;",
          "\u0453": "&gjcy;",
          "\u2A92": "&glE;",
          "\u2AA5": "&gla;",
          "\u2AA4": "&glj;",
          "\u2269": "&gneqq;",
          "\u2A8A": "&gnapprox;",
          "\u2A88": "&gneq;",
          "\u22E7": "&gnsim;",
          "\uD835\uDD58": "&gopf;",
          "\u210A": "&gscr;",
          "\u2A8E": "&gsime;",
          "\u2A90": "&gsiml;",
          "\u2AA7": "&gtcc;",
          "\u2A7A": "&gtcir;",
          "\u22D7": "&gtrdot;",
          "\u2995": "&gtlPar;",
          "\u2A7C": "&gtquest;",
          "\u2978": "&gtrarr;",
          "\u2269\uFE00": "&gvnE;",
          "\u044A": "&hardcy;",
          "\u2948": "&harrcir;",
          "\u21AD": "&leftrightsquigarrow;",
          "\u210F": "&plankv;",
          "\u0125": "&hcirc;",
          "\u2665": "&heartsuit;",
          "\u2026": "&mldr;",
          "\u22B9": "&hercon;",
          "\uD835\uDD25": "&hfr;",
          "\u2925": "&searhk;",
          "\u2926": "&swarhk;",
          "\u21FF": "&hoarr;",
          "\u223B": "&homtht;",
          "\u21A9": "&larrhk;",
          "\u21AA": "&rarrhk;",
          "\uD835\uDD59": "&hopf;",
          "\u2015": "&horbar;",
          "\uD835\uDCBD": "&hscr;",
          "\u0127": "&hstrok;",
          "\u2043": "&hybull;",
          "\xED": "&iacute;",
          "\xEE": "&icirc;",
          "\u0438": "&icy;",
          "\u0435": "&iecy;",
          "\xA1": "&iexcl;",
          "\uD835\uDD26": "&ifr;",
          "\xEC": "&igrave;",
          "\u2A0C": "&qint;",
          "\u222D": "&tint;",
          "\u29DC": "&iinfin;",
          "\u2129": "&iiota;",
          "\u0133": "&ijlig;",
          "\u012B": "&imacr;",
          "\u0131": "&inodot;",
          "\u22B7": "&imof;",
          "\u01B5": "&imped;",
          "\u2105": "&incare;",
          "\u221E": "&infin;",
          "\u29DD": "&infintie;",
          "\u22BA": "&intercal;",
          "\u2A17": "&intlarhk;",
          "\u2A3C": "&iprod;",
          "\u0451": "&iocy;",
          "\u012F": "&iogon;",
          "\uD835\uDD5A": "&iopf;",
          "\u03B9": "&iota;",
          "\xBF": "&iquest;",
          "\uD835\uDCBE": "&iscr;",
          "\u22F9": "&isinE;",
          "\u22F5": "&isindot;",
          "\u22F4": "&isins;",
          "\u22F3": "&isinsv;",
          "\u0129": "&itilde;",
          "\u0456": "&iukcy;",
          "\xEF": "&iuml;",
          "\u0135": "&jcirc;",
          "\u0439": "&jcy;",
          "\uD835\uDD27": "&jfr;",
          "\u0237": "&jmath;",
          "\uD835\uDD5B": "&jopf;",
          "\uD835\uDCBF": "&jscr;",
          "\u0458": "&jsercy;",
          "\u0454": "&jukcy;",
          "\u03BA": "&kappa;",
          "\u03F0": "&varkappa;",
          "\u0137": "&kcedil;",
          "\u043A": "&kcy;",
          "\uD835\uDD28": "&kfr;",
          "\u0138": "&kgreen;",
          "\u0445": "&khcy;",
          "\u045C": "&kjcy;",
          "\uD835\uDD5C": "&kopf;",
          "\uD835\uDCC0": "&kscr;",
          "\u291B": "&lAtail;",
          "\u290E": "&lBarr;",
          "\u2A8B": "&lesseqqgtr;",
          "\u2962": "&lHar;",
          "\u013A": "&lacute;",
          "\u29B4": "&laemptyv;",
          "\u03BB": "&lambda;",
          "\u2991": "&langd;",
          "\u2A85": "&lessapprox;",
          "\xAB": "&laquo;",
          "\u291F": "&larrbfs;",
          "\u291D": "&larrfs;",
          "\u21AB": "&looparrowleft;",
          "\u2939": "&larrpl;",
          "\u2973": "&larrsim;",
          "\u21A2": "&leftarrowtail;",
          "\u2AAB": "&lat;",
          "\u2919": "&latail;",
          "\u2AAD": "&late;",
          "\u2AAD\uFE00": "&lates;",
          "\u290C": "&lbarr;",
          "\u2772": "&lbbrk;",
          "{": "&lcub;",
          "[": "&lsqb;",
          "\u298B": "&lbrke;",
          "\u298F": "&lbrksld;",
          "\u298D": "&lbrkslu;",
          "\u013E": "&lcaron;",
          "\u013C": "&lcedil;",
          "\u043B": "&lcy;",
          "\u2936": "&ldca;",
          "\u2967": "&ldrdhar;",
          "\u294B": "&ldrushar;",
          "\u21B2": "&ldsh;",
          "\u2264": "&leq;",
          "\u21C7": "&llarr;",
          "\u22CB": "&lthree;",
          "\u2AA8": "&lescc;",
          "\u2A7F": "&lesdot;",
          "\u2A81": "&lesdoto;",
          "\u2A83": "&lesdotor;",
          "\u22DA\uFE00": "&lesg;",
          "\u2A93": "&lesges;",
          "\u22D6": "&ltdot;",
          "\u297C": "&lfisht;",
          "\uD835\uDD29": "&lfr;",
          "\u2A91": "&lgE;",
          "\u296A": "&lharul;",
          "\u2584": "&lhblk;",
          "\u0459": "&ljcy;",
          "\u296B": "&llhard;",
          "\u25FA": "&lltri;",
          "\u0140": "&lmidot;",
          "\u23B0": "&lmoustache;",
          "\u2268": "&lneqq;",
          "\u2A89": "&lnapprox;",
          "\u2A87": "&lneq;",
          "\u22E6": "&lnsim;",
          "\u27EC": "&loang;",
          "\u21FD": "&loarr;",
          "\u27FC": "&xmap;",
          "\u21AC": "&rarrlp;",
          "\u2985": "&lopar;",
          "\uD835\uDD5D": "&lopf;",
          "\u2A2D": "&loplus;",
          "\u2A34": "&lotimes;",
          "\u2217": "&lowast;",
          "\u25CA": "&lozenge;",
          "(": "&lpar;",
          "\u2993": "&lparlt;",
          "\u296D": "&lrhard;",
          "\u200E": "&lrm;",
          "\u22BF": "&lrtri;",
          "\u2039": "&lsaquo;",
          "\uD835\uDCC1": "&lscr;",
          "\u2A8D": "&lsime;",
          "\u2A8F": "&lsimg;",
          "\u201A": "&sbquo;",
          "\u0142": "&lstrok;",
          "\u2AA6": "&ltcc;",
          "\u2A79": "&ltcir;",
          "\u22C9": "&ltimes;",
          "\u2976": "&ltlarr;",
          "\u2A7B": "&ltquest;",
          "\u2996": "&ltrPar;",
          "\u25C3": "&triangleleft;",
          "\u294A": "&lurdshar;",
          "\u2966": "&luruhar;",
          "\u2268\uFE00": "&lvnE;",
          "\u223A": "&mDDot;",
          "\xAF": "&strns;",
          "\u2642": "&male;",
          "\u2720": "&maltese;",
          "\u25AE": "&marker;",
          "\u2A29": "&mcomma;",
          "\u043C": "&mcy;",
          "\u2014": "&mdash;",
          "\uD835\uDD2A": "&mfr;",
          "\u2127": "&mho;",
          "\xB5": "&micro;",
          "\u2AF0": "&midcir;",
          "\u2212": "&minus;",
          "\u2A2A": "&minusdu;",
          "\u2ADB": "&mlcp;",
          "\u22A7": "&models;",
          "\uD835\uDD5E": "&mopf;",
          "\uD835\uDCC2": "&mscr;",
          "\u03BC": "&mu;",
          "\u22B8": "&mumap;",
          "\u22D9\u0338": "&nGg;",
          "\u226B\u20D2": "&nGt;",
          "\u21CD": "&nlArr;",
          "\u21CE": "&nhArr;",
          "\u22D8\u0338": "&nLl;",
          "\u226A\u20D2": "&nLt;",
          "\u21CF": "&nrArr;",
          "\u22AF": "&nVDash;",
          "\u22AE": "&nVdash;",
          "\u0144": "&nacute;",
          "\u2220\u20D2": "&nang;",
          "\u2A70\u0338": "&napE;",
          "\u224B\u0338": "&napid;",
          "\u0149": "&napos;",
          "\u266E": "&natural;",
          "\u2A43": "&ncap;",
          "\u0148": "&ncaron;",
          "\u0146": "&ncedil;",
          "\u2A6D\u0338": "&ncongdot;",
          "\u2A42": "&ncup;",
          "\u043D": "&ncy;",
          "\u2013": "&ndash;",
          "\u21D7": "&neArr;",
          "\u2924": "&nearhk;",
          "\u2250\u0338": "&nedot;",
          "\u2928": "&toea;",
          "\uD835\uDD2B": "&nfr;",
          "\u21AE": "&nleftrightarrow;",
          "\u2AF2": "&nhpar;",
          "\u22FC": "&nis;",
          "\u22FA": "&nisd;",
          "\u045A": "&njcy;",
          "\u2266\u0338": "&nleqq;",
          "\u219A": "&nleftarrow;",
          "\u2025": "&nldr;",
          "\uD835\uDD5F": "&nopf;",
          "\xAC": "&not;",
          "\u22F9\u0338": "&notinE;",
          "\u22F5\u0338": "&notindot;",
          "\u22F7": "&notinvb;",
          "\u22F6": "&notinvc;",
          "\u22FE": "&notnivb;",
          "\u22FD": "&notnivc;",
          "\u2AFD\u20E5": "&nparsl;",
          "\u2202\u0338": "&npart;",
          "\u2A14": "&npolint;",
          "\u219B": "&nrightarrow;",
          "\u2933\u0338": "&nrarrc;",
          "\u219D\u0338": "&nrarrw;",
          "\uD835\uDCC3": "&nscr;",
          "\u2284": "&nsub;",
          "\u2AC5\u0338": "&nsubseteqq;",
          "\u2285": "&nsup;",
          "\u2AC6\u0338": "&nsupseteqq;",
          "\xF1": "&ntilde;",
          "\u03BD": "&nu;",
          "#": "&num;",
          "\u2116": "&numero;",
          "\u2007": "&numsp;",
          "\u22AD": "&nvDash;",
          "\u2904": "&nvHarr;",
          "\u224D\u20D2": "&nvap;",
          "\u22AC": "&nvdash;",
          "\u2265\u20D2": "&nvge;",
          ">\u20D2": "&nvgt;",
          "\u29DE": "&nvinfin;",
          "\u2902": "&nvlArr;",
          "\u2264\u20D2": "&nvle;",
          "<\u20D2": "&nvlt;",
          "\u22B4\u20D2": "&nvltrie;",
          "\u2903": "&nvrArr;",
          "\u22B5\u20D2": "&nvrtrie;",
          "\u223C\u20D2": "&nvsim;",
          "\u21D6": "&nwArr;",
          "\u2923": "&nwarhk;",
          "\u2927": "&nwnear;",
          "\xF3": "&oacute;",
          "\xF4": "&ocirc;",
          "\u043E": "&ocy;",
          "\u0151": "&odblac;",
          "\u2A38": "&odiv;",
          "\u29BC": "&odsold;",
          "\u0153": "&oelig;",
          "\u29BF": "&ofcir;",
          "\uD835\uDD2C": "&ofr;",
          "\u02DB": "&ogon;",
          "\xF2": "&ograve;",
          "\u29C1": "&ogt;",
          "\u29B5": "&ohbar;",
          "\u29BE": "&olcir;",
          "\u29BB": "&olcross;",
          "\u29C0": "&olt;",
          "\u014D": "&omacr;",
          "\u03C9": "&omega;",
          "\u03BF": "&omicron;",
          "\u29B6": "&omid;",
          "\uD835\uDD60": "&oopf;",
          "\u29B7": "&opar;",
          "\u29B9": "&operp;",
          "\u2228": "&vee;",
          "\u2A5D": "&ord;",
          "\u2134": "&oscr;",
          "\xAA": "&ordf;",
          "\xBA": "&ordm;",
          "\u22B6": "&origof;",
          "\u2A56": "&oror;",
          "\u2A57": "&orslope;",
          "\u2A5B": "&orv;",
          "\xF8": "&oslash;",
          "\u2298": "&osol;",
          "\xF5": "&otilde;",
          "\u2A36": "&otimesas;",
          "\xF6": "&ouml;",
          "\u233D": "&ovbar;",
          "\xB6": "&para;",
          "\u2AF3": "&parsim;",
          "\u2AFD": "&parsl;",
          "\u043F": "&pcy;",
          "%": "&percnt;",
          ".": "&period;",
          "\u2030": "&permil;",
          "\u2031": "&pertenk;",
          "\uD835\uDD2D": "&pfr;",
          "\u03C6": "&phi;",
          "\u03D5": "&varphi;",
          "\u260E": "&phone;",
          "\u03C0": "&pi;",
          "\u03D6": "&varpi;",
          "\u210E": "&planckh;",
          "+": "&plus;",
          "\u2A23": "&plusacir;",
          "\u2A22": "&pluscir;",
          "\u2A25": "&plusdu;",
          "\u2A72": "&pluse;",
          "\u2A26": "&plussim;",
          "\u2A27": "&plustwo;",
          "\u2A15": "&pointint;",
          "\uD835\uDD61": "&popf;",
          "\xA3": "&pound;",
          "\u2AB3": "&prE;",
          "\u2AB7": "&precapprox;",
          "\u2AB9": "&prnap;",
          "\u2AB5": "&prnE;",
          "\u22E8": "&prnsim;",
          "\u2032": "&prime;",
          "\u232E": "&profalar;",
          "\u2312": "&profline;",
          "\u2313": "&profsurf;",
          "\u22B0": "&prurel;",
          "\uD835\uDCC5": "&pscr;",
          "\u03C8": "&psi;",
          "\u2008": "&puncsp;",
          "\uD835\uDD2E": "&qfr;",
          "\uD835\uDD62": "&qopf;",
          "\u2057": "&qprime;",
          "\uD835\uDCC6": "&qscr;",
          "\u2A16": "&quatint;",
          "?": "&quest;",
          "\u291C": "&rAtail;",
          "\u2964": "&rHar;",
          "\u223D\u0331": "&race;",
          "\u0155": "&racute;",
          "\u29B3": "&raemptyv;",
          "\u2992": "&rangd;",
          "\u29A5": "&range;",
          "\xBB": "&raquo;",
          "\u2975": "&rarrap;",
          "\u2920": "&rarrbfs;",
          "\u2933": "&rarrc;",
          "\u291E": "&rarrfs;",
          "\u2945": "&rarrpl;",
          "\u2974": "&rarrsim;",
          "\u21A3": "&rightarrowtail;",
          "\u219D": "&rightsquigarrow;",
          "\u291A": "&ratail;",
          "\u2236": "&ratio;",
          "\u2773": "&rbbrk;",
          "}": "&rcub;",
          "]": "&rsqb;",
          "\u298C": "&rbrke;",
          "\u298E": "&rbrksld;",
          "\u2990": "&rbrkslu;",
          "\u0159": "&rcaron;",
          "\u0157": "&rcedil;",
          "\u0440": "&rcy;",
          "\u2937": "&rdca;",
          "\u2969": "&rdldhar;",
          "\u21B3": "&rdsh;",
          "\u25AD": "&rect;",
          "\u297D": "&rfisht;",
          "\uD835\uDD2F": "&rfr;",
          "\u296C": "&rharul;",
          "\u03C1": "&rho;",
          "\u03F1": "&varrho;",
          "\u21C9": "&rrarr;",
          "\u22CC": "&rthree;",
          "\u02DA": "&ring;",
          "\u200F": "&rlm;",
          "\u23B1": "&rmoustache;",
          "\u2AEE": "&rnmid;",
          "\u27ED": "&roang;",
          "\u21FE": "&roarr;",
          "\u2986": "&ropar;",
          "\uD835\uDD63": "&ropf;",
          "\u2A2E": "&roplus;",
          "\u2A35": "&rotimes;",
          ")": "&rpar;",
          "\u2994": "&rpargt;",
          "\u2A12": "&rppolint;",
          "\u203A": "&rsaquo;",
          "\uD835\uDCC7": "&rscr;",
          "\u22CA": "&rtimes;",
          "\u25B9": "&triangleright;",
          "\u29CE": "&rtriltri;",
          "\u2968": "&ruluhar;",
          "\u211E": "&rx;",
          "\u015B": "&sacute;",
          "\u2AB4": "&scE;",
          "\u2AB8": "&succapprox;",
          "\u0161": "&scaron;",
          "\u015F": "&scedil;",
          "\u015D": "&scirc;",
          "\u2AB6": "&succneqq;",
          "\u2ABA": "&succnapprox;",
          "\u22E9": "&succnsim;",
          "\u2A13": "&scpolint;",
          "\u0441": "&scy;",
          "\u22C5": "&sdot;",
          "\u2A66": "&sdote;",
          "\u21D8": "&seArr;",
          "\xA7": "&sect;",
          ";": "&semi;",
          "\u2929": "&tosa;",
          "\u2736": "&sext;",
          "\uD835\uDD30": "&sfr;",
          "\u266F": "&sharp;",
          "\u0449": "&shchcy;",
          "\u0448": "&shcy;",
          "\xAD": "&shy;",
          "\u03C3": "&sigma;",
          "\u03C2": "&varsigma;",
          "\u2A6A": "&simdot;",
          "\u2A9E": "&simg;",
          "\u2AA0": "&simgE;",
          "\u2A9D": "&siml;",
          "\u2A9F": "&simlE;",
          "\u2246": "&simne;",
          "\u2A24": "&simplus;",
          "\u2972": "&simrarr;",
          "\u2A33": "&smashp;",
          "\u29E4": "&smeparsl;",
          "\u2323": "&ssmile;",
          "\u2AAA": "&smt;",
          "\u2AAC": "&smte;",
          "\u2AAC\uFE00": "&smtes;",
          "\u044C": "&softcy;",
          "/": "&sol;",
          "\u29C4": "&solb;",
          "\u233F": "&solbar;",
          "\uD835\uDD64": "&sopf;",
          "\u2660": "&spadesuit;",
          "\u2293\uFE00": "&sqcaps;",
          "\u2294\uFE00": "&sqcups;",
          "\uD835\uDCC8": "&sscr;",
          "\u2606": "&star;",
          "\u2282": "&subset;",
          "\u2AC5": "&subseteqq;",
          "\u2ABD": "&subdot;",
          "\u2AC3": "&subedot;",
          "\u2AC1": "&submult;",
          "\u2ACB": "&subsetneqq;",
          "\u228A": "&subsetneq;",
          "\u2ABF": "&subplus;",
          "\u2979": "&subrarr;",
          "\u2AC7": "&subsim;",
          "\u2AD5": "&subsub;",
          "\u2AD3": "&subsup;",
          "\u266A": "&sung;",
          "\xB9": "&sup1;",
          "\xB2": "&sup2;",
          "\xB3": "&sup3;",
          "\u2AC6": "&supseteqq;",
          "\u2ABE": "&supdot;",
          "\u2AD8": "&supdsub;",
          "\u2AC4": "&supedot;",
          "\u27C9": "&suphsol;",
          "\u2AD7": "&suphsub;",
          "\u297B": "&suplarr;",
          "\u2AC2": "&supmult;",
          "\u2ACC": "&supsetneqq;",
          "\u228B": "&supsetneq;",
          "\u2AC0": "&supplus;",
          "\u2AC8": "&supsim;",
          "\u2AD4": "&supsub;",
          "\u2AD6": "&supsup;",
          "\u21D9": "&swArr;",
          "\u292A": "&swnwar;",
          "\xDF": "&szlig;",
          "\u2316": "&target;",
          "\u03C4": "&tau;",
          "\u0165": "&tcaron;",
          "\u0163": "&tcedil;",
          "\u0442": "&tcy;",
          "\u2315": "&telrec;",
          "\uD835\uDD31": "&tfr;",
          "\u03B8": "&theta;",
          "\u03D1": "&vartheta;",
          "\xFE": "&thorn;",
          "\xD7": "&times;",
          "\u2A31": "&timesbar;",
          "\u2A30": "&timesd;",
          "\u2336": "&topbot;",
          "\u2AF1": "&topcir;",
          "\uD835\uDD65": "&topf;",
          "\u2ADA": "&topfork;",
          "\u2034": "&tprime;",
          "\u25B5": "&utri;",
          "\u225C": "&trie;",
          "\u25EC": "&tridot;",
          "\u2A3A": "&triminus;",
          "\u2A39": "&triplus;",
          "\u29CD": "&trisb;",
          "\u2A3B": "&tritime;",
          "\u23E2": "&trpezium;",
          "\uD835\uDCC9": "&tscr;",
          "\u0446": "&tscy;",
          "\u045B": "&tshcy;",
          "\u0167": "&tstrok;",
          "\u2963": "&uHar;",
          "\xFA": "&uacute;",
          "\u045E": "&ubrcy;",
          "\u016D": "&ubreve;",
          "\xFB": "&ucirc;",
          "\u0443": "&ucy;",
          "\u0171": "&udblac;",
          "\u297E": "&ufisht;",
          "\uD835\uDD32": "&ufr;",
          "\xF9": "&ugrave;",
          "\u2580": "&uhblk;",
          "\u231C": "&ulcorner;",
          "\u230F": "&ulcrop;",
          "\u25F8": "&ultri;",
          "\u016B": "&umacr;",
          "\u0173": "&uogon;",
          "\uD835\uDD66": "&uopf;",
          "\u03C5": "&upsilon;",
          "\u21C8": "&uuarr;",
          "\u231D": "&urcorner;",
          "\u230E": "&urcrop;",
          "\u016F": "&uring;",
          "\u25F9": "&urtri;",
          "\uD835\uDCCA": "&uscr;",
          "\u22F0": "&utdot;",
          "\u0169": "&utilde;",
          "\xFC": "&uuml;",
          "\u29A7": "&uwangle;",
          "\u2AE8": "&vBar;",
          "\u2AE9": "&vBarv;",
          "\u299C": "&vangrt;",
          "\u228A\uFE00": "&vsubne;",
          "\u2ACB\uFE00": "&vsubnE;",
          "\u228B\uFE00": "&vsupne;",
          "\u2ACC\uFE00": "&vsupnE;",
          "\u0432": "&vcy;",
          "\u22BB": "&veebar;",
          "\u225A": "&veeeq;",
          "\u22EE": "&vellip;",
          "\uD835\uDD33": "&vfr;",
          "\uD835\uDD67": "&vopf;",
          "\uD835\uDCCB": "&vscr;",
          "\u299A": "&vzigzag;",
          "\u0175": "&wcirc;",
          "\u2A5F": "&wedbar;",
          "\u2259": "&wedgeq;",
          "\u2118": "&wp;",
          "\uD835\uDD34": "&wfr;",
          "\uD835\uDD68": "&wopf;",
          "\uD835\uDCCC": "&wscr;",
          "\uD835\uDD35": "&xfr;",
          "\u03BE": "&xi;",
          "\u22FB": "&xnis;",
          "\uD835\uDD69": "&xopf;",
          "\uD835\uDCCD": "&xscr;",
          "\xFD": "&yacute;",
          "\u044F": "&yacy;",
          "\u0177": "&ycirc;",
          "\u044B": "&ycy;",
          "\xA5": "&yen;",
          "\uD835\uDD36": "&yfr;",
          "\u0457": "&yicy;",
          "\uD835\uDD6A": "&yopf;",
          "\uD835\uDCCE": "&yscr;",
          "\u044E": "&yucy;",
          "\xFF": "&yuml;",
          "\u017A": "&zacute;",
          "\u017E": "&zcaron;",
          "\u0437": "&zcy;",
          "\u017C": "&zdot;",
          "\u03B6": "&zeta;",
          "\uD835\uDD37": "&zfr;",
          "\u0436": "&zhcy;",
          "\u21DD": "&zigrarr;",
          "\uD835\uDD6B": "&zopf;",
          "\uD835\uDCCF": "&zscr;",
          "\u200D": "&zwj;",
          "\u200C": "&zwnj;"
        }
      }
    };
  }
});

// node_modules/html-entities/lib/numeric-unicode-map.js
var require_numeric_unicode_map = __commonJS({
  "node_modules/html-entities/lib/numeric-unicode-map.js": function(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.numericUnicodeMap = {
      0: 65533,
      128: 8364,
      130: 8218,
      131: 402,
      132: 8222,
      133: 8230,
      134: 8224,
      135: 8225,
      136: 710,
      137: 8240,
      138: 352,
      139: 8249,
      140: 338,
      142: 381,
      145: 8216,
      146: 8217,
      147: 8220,
      148: 8221,
      149: 8226,
      150: 8211,
      151: 8212,
      152: 732,
      153: 8482,
      154: 353,
      155: 8250,
      156: 339,
      158: 382,
      159: 376
    };
  }
});

// node_modules/html-entities/lib/surrogate-pairs.js
var require_surrogate_pairs = __commonJS({
  "node_modules/html-entities/lib/surrogate-pairs.js": function(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.fromCodePoint = String.fromCodePoint || function(astralCodePoint) {
      return String.fromCharCode(Math.floor((astralCodePoint - 65536) / 1024) + 55296, (astralCodePoint - 65536) % 1024 + 56320);
    };
    exports2.getCodePoint = String.prototype.codePointAt ? function(input, position) {
      return input.codePointAt(position);
    } : function(input, position) {
      return (input.charCodeAt(position) - 55296) * 1024 + input.charCodeAt(position + 1) - 56320 + 65536;
    };
    exports2.highSurrogateFrom = 55296;
    exports2.highSurrogateTo = 56319;
  }
});

// node_modules/html-entities/lib/index.js
var require_lib = __commonJS({
  "node_modules/html-entities/lib/index.js": function(exports2) {
    "use strict";
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    var named_references_1 = require_named_references();
    var numeric_unicode_map_1 = require_numeric_unicode_map();
    var surrogate_pairs_1 = require_surrogate_pairs();
    var allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), {
      all: named_references_1.namedReferences.html5
    });
    function replaceUsingRegExp(macroText, macroRegExp, macroReplacer) {
      macroRegExp.lastIndex = 0;
      var replaceMatch = macroRegExp.exec(macroText);
      var replaceResult;
      if (replaceMatch) {
        replaceResult = "";
        var replaceLastIndex = 0;
        do {
          if (replaceLastIndex !== replaceMatch.index) {
            replaceResult += macroText.substring(replaceLastIndex, replaceMatch.index);
          }
          var replaceInput = replaceMatch[0];
          replaceResult += macroReplacer(replaceInput);
          replaceLastIndex = replaceMatch.index + replaceInput.length;
        } while (replaceMatch = macroRegExp.exec(macroText));
        if (replaceLastIndex !== macroText.length) {
          replaceResult += macroText.substring(replaceLastIndex);
        }
      } else {
        replaceResult = macroText;
      }
      return replaceResult;
    }
    var encodeRegExps = {
      specialChars: /[<>'"&]/g,
      nonAscii: /[<>'"&\u0080-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,
      nonAsciiPrintable: /[<>'"&\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,
      nonAsciiPrintableOnly: /[\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,
      extensive: /[\x01-\x0c\x0e-\x1f\x21-\x2c\x2e-\x2f\x3a-\x40\x5b-\x60\x7b-\x7d\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g
    };
    var defaultEncodeOptions = {
      mode: "specialChars",
      level: "all",
      numeric: "decimal"
    };
    function encode(text, _a) {
      var _b = _a === void 0 ? defaultEncodeOptions : _a, _c = _b.mode, mode = _c === void 0 ? "specialChars" : _c, _d = _b.numeric, numeric = _d === void 0 ? "decimal" : _d, _e = _b.level, level = _e === void 0 ? "all" : _e;
      if (!text) {
        return "";
      }
      var encodeRegExp = encodeRegExps[mode];
      var references = allNamedReferences[level].characters;
      var isHex = numeric === "hexadecimal";
      return replaceUsingRegExp(text, encodeRegExp, function(input) {
        var result = references[input];
        if (!result) {
          var code = input.length > 1 ? surrogate_pairs_1.getCodePoint(input, 0) : input.charCodeAt(0);
          result = (isHex ? "&#x" + code.toString(16) : "&#" + code) + ";";
        }
        return result;
      });
    }
    exports2.encode = encode;
    var defaultDecodeOptions = {
      scope: "body",
      level: "all"
    };
    var strict = /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);/g;
    var attribute = /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;
    var baseDecodeRegExps = {
      xml: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.xml
      },
      html4: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.html4
      },
      html5: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.html5
      }
    };
    var decodeRegExps = __assign(__assign({}, baseDecodeRegExps), {
      all: baseDecodeRegExps.html5
    });
    var fromCharCode = String.fromCharCode;
    var outOfBoundsChar = fromCharCode(65533);
    var defaultDecodeEntityOptions = {
      level: "all"
    };
    function getDecodedEntity(entity, references, isAttribute, isStrict) {
      var decodeResult = entity;
      var decodeEntityLastChar = entity[entity.length - 1];
      if (isAttribute && decodeEntityLastChar === "=") {
        decodeResult = entity;
      } else if (isStrict && decodeEntityLastChar !== ";") {
        decodeResult = entity;
      } else {
        var decodeResultByReference = references[entity];
        if (decodeResultByReference) {
          decodeResult = decodeResultByReference;
        } else if (entity[0] === "&" && entity[1] === "#") {
          var decodeSecondChar = entity[2];
          var decodeCode = decodeSecondChar == "x" || decodeSecondChar == "X" ? parseInt(entity.substr(3), 16) : parseInt(entity.substr(2));
          decodeResult = decodeCode >= 1114111 ? outOfBoundsChar : decodeCode > 65535 ? surrogate_pairs_1.fromCodePoint(decodeCode) : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode] || decodeCode);
        }
      }
      return decodeResult;
    }
    function decodeEntity(entity, _a) {
      var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level, level = _b === void 0 ? "all" : _b;
      if (!entity) {
        return "";
      }
      return getDecodedEntity(entity, allNamedReferences[level].entities, false, false);
    }
    exports2.decodeEntity = decodeEntity;
    function decode(text, _a) {
      var _b = _a === void 0 ? defaultDecodeOptions : _a, _c = _b.level, level = _c === void 0 ? "all" : _c, _d = _b.scope, scope = _d === void 0 ? level === "xml" ? "strict" : "body" : _d;
      if (!text) {
        return "";
      }
      var decodeRegExp = decodeRegExps[level][scope];
      var references = allNamedReferences[level].entities;
      var isAttribute = scope === "attribute";
      var isStrict = scope === "strict";
      return replaceUsingRegExp(text, decodeRegExp, function(entity) {
        return getDecodedEntity(entity, references, isAttribute, isStrict);
      });
    }
    exports2.decode = decode;
  }
});

// node_modules/libram/dist/Clan.js
function _toConsumableArray19(arr) {
  return _arrayWithoutHoles19(arr) || _iterableToArray19(arr) || _unsupportedIterableToArray33(arr) || _nonIterableSpread19();
}
function _nonIterableSpread19() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray19(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles19(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray33(arr);
}
function _createForOfIteratorHelper9(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray33(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _slicedToArray21(arr, i) {
  return _arrayWithHoles21(arr) || _iterableToArrayLimit21(arr, i) || _unsupportedIterableToArray33(arr, i) || _nonIterableRest21();
}
function _nonIterableRest21() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray33(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray33(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray33(o, minLen);
}
function _arrayLikeToArray33(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit21(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles21(arr) {
  if (Array.isArray(arr)) return arr;
}
function _classCallCheck12(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties12(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey18(descriptor.key), descriptor);
  }
}
function _createClass12(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties12(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties12(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty17(obj, key, value) {
  key = _toPropertyKey18(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey18(t) {
  var i = _toPrimitive18(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive18(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _wrapRegExp() {
  _wrapRegExp = function _wrapRegExp2(e2, r2) {
    return new BabelRegExp(e2, void 0, r2);
  };
  var e = RegExp.prototype, r = /* @__PURE__ */ new WeakMap();
  function BabelRegExp(e2, t, p) {
    var o = new RegExp(e2, t);
    return r.set(o, p || r.get(e2)), _setPrototypeOf4(o, BabelRegExp.prototype);
  }
  function buildGroups(e2, t) {
    var p = r.get(t);
    return Object.keys(p).reduce(function(r2, t2) {
      var o = p[t2];
      if ("number" == typeof o) r2[t2] = e2[o];
      else {
        for (var i = 0; void 0 === e2[o[i]] && i + 1 < o.length; ) i++;
        r2[t2] = e2[o[i]];
      }
      return r2;
    }, /* @__PURE__ */ Object.create(null));
  }
  return _inherits4(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function(r2) {
    var t = e.exec.call(this, r2);
    if (t) {
      t.groups = buildGroups(t, this);
      var p = t.indices;
      p && (p.groups = buildGroups(p, this));
    }
    return t;
  }, BabelRegExp.prototype[Symbol.replace] = function(t, p) {
    if ("string" == typeof p) {
      var o = r.get(this);
      return e[Symbol.replace].call(this, t, p.replace(/\$<([^>]+)>/g, function(e2, r2) {
        var t2 = o[r2];
        return "$" + (Array.isArray(t2) ? t2.join("$") : t2);
      }));
    }
    if ("function" == typeof p) {
      var i = this;
      return e[Symbol.replace].call(this, t, function() {
        var e2 = arguments;
        return "object" != typeof e2[e2.length - 1] && (e2 = [].slice.call(e2)).push(buildGroups(e2, i)), p.apply(this, e2);
      });
    }
    return e[Symbol.replace].call(this, t, p);
  }, _wrapRegExp.apply(this, arguments);
}
function _inherits4(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass) _setPrototypeOf4(subClass, superClass);
}
function _setPrototypeOf4(o, p) {
  _setPrototypeOf4 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf10(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf4(o, p);
}
var import_html_entities, import_kolmafia73, clanIdCache, toPlayerId, LOG_FAX_PATTERN, WHITELIST_DEGREE_PATTERN, Clan;
var init_Clan = __esm({
  "node_modules/libram/dist/Clan.js": function() {
    import_html_entities = __toESM(require_lib(), 1);
    import_kolmafia73 = require("kolmafia");
    init_lib();
    init_logger();
    init_utils();
    clanIdCache = {};
    toPlayerId = function(player) {
      return typeof player === "string" ? (0, import_kolmafia73.getPlayerId)(player) : player;
    };
    LOG_FAX_PATTERN = /* @__PURE__ */ _wrapRegExp(/(\d{2}\/\d{2}\/\d{2}, \d{2}:\d{2}(?:AM|PM): )<a [^>]+>([^<]+)<\/a>(?: faxed in a (.*?))<br>/, {
      monster: 3
    });
    WHITELIST_DEGREE_PATTERN = /* @__PURE__ */ _wrapRegExp(/(.*?) \(\xB0(\d+)\)/, {
      name: 1,
      degree: 2
    });
    Clan = /* @__PURE__ */ function() {
      function Clan2(id, name) {
        _classCallCheck12(this, Clan2);
        _defineProperty17(this, "id", void 0);
        _defineProperty17(this, "name", void 0);
        this.id = id;
        this.name = name;
      }
      _createClass12(Clan2, [{
        key: "_check",
        value: function _check() {
          if (this.id !== (0, import_kolmafia73.getClanId)()) {
            throw new Error("You are no longer a member of this clan");
          }
        }
        /**
         * Join clan
         *
         * @returns Joined clan
         */
      }, {
        key: "join",
        value: function join() {
          return Clan2.join(this.id);
        }
        /**
         * Check that this clan is the player's current clan
         *
         * @returns Whether this is the current clan
         */
      }, {
        key: "check",
        value: function check2() {
          return (0, import_kolmafia73.visitUrl)("clan_hall.php").includes("<b>".concat(this.name, "</b>"));
        }
        /**
         * Determine the monster that is currently in the current clan's fax machine if any
         *
         * @returns The current fax monster
         */
      }, {
        key: "getCurrentFax",
        value: function getCurrentFax() {
          this._check();
          var logs = (0, import_kolmafia73.visitUrl)("clan_log.php");
          var lastFax = logs.match(LOG_FAX_PATTERN);
          if (!lastFax) return null;
          var _lastFax = _slicedToArray21(lastFax, 4), monsterName = _lastFax[3];
          if (!monsterName) return null;
          return import_kolmafia73.Monster.get(monsterName);
        }
        /**
         * List available ranks (name, degree and id) from the current clan
         *
         * @returns List of ranks
         */
      }, {
        key: "getRanks",
        value: function getRanks() {
          this._check();
          var page = (0, import_kolmafia73.visitUrl)("clan_whitelist.php");
          return (0, import_kolmafia73.xpath)(page, '//select[@name="level"]//option').map(function(option) {
            var validHtml = "<select>".concat(option, "</select>");
            var match = (0, import_kolmafia73.xpath)(validHtml, "//text()")[0].match(WHITELIST_DEGREE_PATTERN);
            var id = (0, import_kolmafia73.xpath)(validHtml, "//@value")[0];
            if (!match || !id) return null;
            var _match = _slicedToArray21(match, 3), encodedName = _match[1], degree = _match[2];
            return {
              name: (0, import_html_entities.decode)(encodedName),
              degree: Number.parseInt(degree),
              id: Number.parseInt(id)
            };
          }).filter(notNull);
        }
        /**
         * Add a player to the current clan's whitelist.
         * If the player is already in the whitelist this will change their rank or title.
         *
         * @param player Player id or name
         * @param rankName Rank to give the player. If not provided they will be given the lowest rank
         * @param title Title to give the player. If not provided, will be blank
         * @returns Success
         */
      }, {
        key: "addPlayerToWhitelist",
        value: function addPlayerToWhitelist(player, rankName) {
          var title = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "";
          this._check();
          var playerId = toPlayerId(player);
          var ranks = this.getRanks();
          var rank = rankName ? ranks.find(function(r) {
            return r.name === rankName;
          }) : ranks.sort(function(a, b) {
            return a.degree - b.degree;
          })[0];
          if (!rank) return false;
          var result = (0, import_kolmafia73.visitUrl)("clan_whitelist.php?action=add&pwd&addwho=".concat(playerId, "&level=").concat(rank.id, "&title=").concat(title));
          return result.includes("added to whitelist.") || result.includes("That player is already on the whitelist");
        }
        /**
         * Remove a player from the current clan's whitelist
         *
         * @param player Player id or name
         * @returns Success
         */
      }, {
        key: "removePlayerFromWhitelist",
        value: function removePlayerFromWhitelist(player) {
          this._check();
          var playerId = toPlayerId(player);
          var result = (0, import_kolmafia73.visitUrl)("clan_whitelist.php?action=updatewl&pwd&who=".concat(playerId, "&remove=Remove"));
          return result.includes("Whitelist updated.");
        }
        /**
         * Return the amount of meat in the current clan's coffer
         *
         * @returns Amount of meat
         */
      }, {
        key: "getMeatInCoffer",
        value: function getMeatInCoffer() {
          this._check();
          var page = (0, import_kolmafia73.visitUrl)("clan_stash.php");
          var _ref = page.match(/Your <b>Clan Coffer<\/b> contains ([\d,]+) Meat./) || ["0", "0"], _ref2 = _slicedToArray21(_ref, 2), meat = _ref2[1];
          return parseNumber(meat);
        }
        /**
         * Add the given amount of meat to the current clan's coffer.
         *
         * @param amount Amount of meat to put in coffer
         * @returns Success
         */
      }, {
        key: "putMeatInCoffer",
        value: function putMeatInCoffer(amount2) {
          this._check();
          var result = (0, import_kolmafia73.visitUrl)("clan_stash.php?pwd&action=contribute&howmuch=".concat(amount2));
          return result.includes("You contributed");
        }
      }, {
        key: "take",
        value: function take(items) {
          this._check();
          var map = arrayToCountedMap(items);
          map.forEach(function(quantity, item14) {
            var needed = Math.max(0, quantity - (0, import_kolmafia73.availableAmount)(item14));
            if (needed === 0) {
              return map.set(item14, 0);
            }
            var foldGroup = getFoldGroup(item14);
            var _iterator = _createForOfIteratorHelper9(foldGroup), _step;
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                var foldable = _step.value;
                var quantityToFold = Math.min(needed, (0, import_kolmafia73.availableAmount)(foldable));
                for (var _i2 = 0; _i2 < quantityToFold; _i2++) {
                  (0, import_kolmafia73.cliExecute)("fold ".concat(item14.name));
                  needed--;
                }
                return map.set(item14, needed);
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
            (0, import_kolmafia73.refreshStash)();
            for (var _i = 0, _arr = [item14].concat(_toConsumableArray19(foldGroup)); _i < _arr.length; _i++) {
              var matchingItem = _arr[_i];
              var quantityToTake = Math.min(needed, (0, import_kolmafia73.stashAmount)(matchingItem));
              if (quantityToTake === 0) continue;
              if (!(0, import_kolmafia73.takeStash)(quantityToTake, matchingItem)) return;
              if (matchingItem === item14) {
                needed -= quantityToTake;
              } else {
                for (var i = 0; i < quantityToTake; i++) {
                  (0, import_kolmafia73.cliExecute)("fold ".concat(matchingItem.name));
                  needed--;
                }
              }
            }
          });
          return Array.isArray(items) ? countedMapToArray(map) : map;
        }
      }, {
        key: "put",
        value: function put(items) {
          this._check();
          var map = arrayToCountedMap(items);
          if (!this.check()) throw new Error("Wanted to return ".concat(countedMapToString(map), " to ").concat(this.name, " but KoLmafia's clan data is out of sync"));
          map.forEach(function(quantity, item14) {
            (0, import_kolmafia73.retrieveItem)(quantity, item14);
            var returned = Math.min(quantity, (0, import_kolmafia73.availableAmount)(item14));
            (0, import_kolmafia73.putStash)(returned, item14);
            map.set(item14, quantity - returned);
          });
          return Array.isArray(items) ? countedMapToArray(map) : map;
        }
      }, {
        key: "withStash",
        value: function withStash(items, callback) {
          var _this = this;
          this._check();
          var map = arrayToCountedMap(items);
          return Clan2._withStash(function() {
            return _this.take(map);
          }, function(borrowed) {
            return _this.put(borrowed);
          }, callback);
        }
      }], [{
        key: "_join",
        value: function _join(id) {
          var result = (0, import_kolmafia73.visitUrl)("showclan.php?recruiter=1&whichclan=".concat(id, "&pwd&whichclan=").concat(id, "&action=joinclan&apply=Apply+to+this+Clan&confirm=on"));
          if (!result.includes("clanhalltop.gif")) {
            throw new Error("Could not join clan");
          }
          return Clan2.get();
        }
      }, {
        key: "_withStash",
        value: function _withStash(borrowFn, returnFn, callback) {
          var borrowed = borrowFn();
          var map = arrayToCountedMap(borrowed);
          try {
            return callback(borrowed);
          } finally {
            if (map.size > 0) {
              var returned = arrayToCountedMap(returnFn(borrowed));
              map.forEach(function(quantity, item14) {
                var remaining = quantity - (returned.get(item14) || 0);
                if (remaining > 0) {
                  map.set(item14, remaining);
                } else {
                  map.delete(item14);
                }
              });
              if (map.size > 0) {
                logger_default.error("Failed to return <b>".concat(countedMapToString(map), "</b> to <b>").concat(this.name, "</b> stash"));
              }
            }
          }
        }
        /**
         * Join a clan
         *
         * @param clanIdOrName Clan id or name
         * @returns Instance of joined clan
         */
      }, {
        key: "join",
        value: function join(clanIdOrName) {
          var clanId;
          if (typeof clanIdOrName === "string") {
            var clanName = clanIdOrName.toLowerCase();
            if (clanName === (0, import_kolmafia73.getClanName)().toLowerCase()) {
              return Clan2.get();
            }
            if (!(clanName in clanIdCache)) {
              var clan = Clan2.getWhitelisted().find(function(c) {
                return c.name.toLowerCase() === clanName;
              });
              if (!clan) {
                throw new Error("Player is not whitelisted to clan");
              }
              clanIdCache[clanName] = clan.id;
            }
            clanId = clanIdCache[clanName];
          } else {
            clanId = clanIdOrName;
            if (clanId === (0, import_kolmafia73.getClanId)()) {
              return Clan2.get();
            }
          }
          return Clan2._join(clanId);
        }
        /**
         * Execute callback as a member of a clan and then restore prior membership
         *
         * @param clanIdOrName Clan id or name
         * @param callback Actions to carry out while member of specified can
         * @returns Return value from callback
         */
      }, {
        key: "with",
        value: function _with(clanIdOrName, callback) {
          var startingClan = Clan2.get();
          var clan = Clan2.join(clanIdOrName);
          try {
            return callback(clan);
          } finally {
            startingClan.join();
          }
        }
      }, {
        key: "withStash",
        value: function withStash(clanIdOrName, items, callback) {
          return Clan2._withStash(function() {
            return Clan2.with(clanIdOrName, function(clan) {
              return clan.take(items);
            });
          }, function(borrowed) {
            return Clan2.with(clanIdOrName, function(clan) {
              return clan.put(borrowed);
            });
          }, callback);
        }
        /**
         * Get the player's current clan
         *
         * @returns Player's clan
         */
      }, {
        key: "get",
        value: function get4() {
          return new Clan2((0, import_kolmafia73.getClanId)(), (0, import_kolmafia73.getClanName)());
        }
        /**
         * Get list of clans to which the player is whitelisted
         *
         * @returns List of clans
         */
      }, {
        key: "getWhitelisted",
        value: function getWhitelisted() {
          var page = (0, import_kolmafia73.visitUrl)("clan_signup.php");
          return (0, import_kolmafia73.xpath)(page, '//select[@name="whichclan"]//option').map(function(option) {
            var validHtml = "<select>".concat(option, "</select>");
            var id = Number.parseInt((0, import_kolmafia73.xpath)(validHtml, "//@value")[0]);
            var name = (0, import_html_entities.decode)((0, import_kolmafia73.xpath)(validHtml, "//text()")[0]);
            return new Clan2(id, name);
          });
        }
      }]);
      return Clan2;
    }();
  }
});

// node_modules/libram/dist/challengePaths/2014/HeavyRains.js
var HeavyRains_exports = {};
__export(HeavyRains_exports, {
  RAIN_MONSTER_WINDOW_BEGIN: function() {
    return RAIN_MONSTER_WINDOW_BEGIN;
  },
  RAIN_MONSTER_WINDOW_END: function() {
    return RAIN_MONSTER_WINDOW_END;
  },
  canRainMan: function() {
    return canRainMan;
  },
  expectedWanderer: function() {
    return expectedWanderer;
  },
  path: function() {
    return path;
  },
  rainMan: function() {
    return rainMan;
  },
  wanderers: function() {
    return wanderers;
  }
});
function _taggedTemplateLiteral69(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function rainMan(target) {
  if (canRainMan(target)) {
    withChoice(970, "1&whichmonster=".concat(target.id), function() {
      return (0, import_kolmafia74.useSkill)($skill(_templateObject506 || (_templateObject506 = _taggedTemplateLiteral69(["Rain Man"]))));
    });
  }
}
function canRainMan(target) {
  if (!have($skill(_templateObject2131 || (_templateObject2131 = _taggedTemplateLiteral69(["Rain Man"])))) || // having the skill implies you are in heavy rains path
  (0, import_kolmafia74.myRain)() < 50 || !target.copyable || target.id < 0) {
    return false;
  }
  if ((0, import_kolmafia74.monsterFactoidsAvailable)(target, false) > 0) {
    return true;
  }
  var page = withChoice(970, 2, function() {
    return (0, import_kolmafia74.visitUrl)("runskillz.php?pwd&action=Skillz&whichskill=".concat($skill(_templateObject3120 || (_templateObject3120 = _taggedTemplateLiteral69(["Rain Man"]))).id, "&quantity=1"));
  });
  return page.indexOf("<option value=".concat(target.id, ">")) > 0;
}
function expectedWanderer(location) {
  var difficultyWaterLevel = location.difficultyLevel === "low" ? 1 : 2;
  var environmentWaterLevel = location.environment === "underground" ? 4 : location.environment === "indoor" ? 2 : 1;
  var waterLevel = (0, import_kolmafia74.numericModifier)(import_kolmafia74.Modifier.get("Water Level")) + difficultyWaterLevel + environmentWaterLevel;
  if (waterLevel > 1 && waterLevel < 6) {
    return wanderers[waterLevel - 1];
  } else if (waterLevel === 6 && location.environment === "underground") {
    return $monster(_templateObject4103 || (_templateObject4103 = _taggedTemplateLiteral69(["giant tardigrade"])));
  } else if (waterLevel === 6 && location.environment === "indoor") {
    return $monster(_templateObject555 || (_templateObject555 = _taggedTemplateLiteral69(["aquaconda"])));
  } else if (waterLevel === 6 && location.environment === "outdoor") {
    return $monster(_templateObject648 || (_templateObject648 = _taggedTemplateLiteral69(["storm cow"])));
  } else {
    return $monster(_templateObject744 || (_templateObject744 = _taggedTemplateLiteral69(["giant isopod"])));
  }
}
var import_kolmafia74, _templateObject506, _templateObject2131, _templateObject3120, _templateObject4103, _templateObject555, _templateObject648, _templateObject744, _templateObject836, RAIN_MONSTER_WINDOW_BEGIN, RAIN_MONSTER_WINDOW_END, wanderers, path;
var init_HeavyRains = __esm({
  "node_modules/libram/dist/challengePaths/2014/HeavyRains.js": function() {
    import_kolmafia74 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    RAIN_MONSTER_WINDOW_BEGIN = "Rain Monster window begin";
    RAIN_MONSTER_WINDOW_END = "Rain Monster window end";
    wanderers = Object.freeze(import_kolmafia74.Monster.get(["giant isopod", "gourmet gourami", "freshwater bonefish", "alley catfish", "piranhadon", "giant tardigrade", "aquaconda", "storm cow"]));
    path = $path(_templateObject836 || (_templateObject836 = _taggedTemplateLiteral69(["Heavy Rains"])));
  }
});

// node_modules/libram/dist/challengePaths/2015/CommunityService.js
function _slicedToArray22(arr, i) {
  return _arrayWithHoles22(arr) || _iterableToArrayLimit22(arr, i) || _unsupportedIterableToArray34(arr, i) || _nonIterableRest22();
}
function _nonIterableRest22() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray34(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray34(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray34(o, minLen);
}
function _arrayLikeToArray34(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit22(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles22(arr) {
  if (Array.isArray(arr)) return arr;
}
function _classCallCheck13(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties13(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey19(descriptor.key), descriptor);
  }
}
function _createClass13(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties13(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties13(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty18(obj, key, value) {
  key = _toPropertyKey19(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey19(t) {
  var i = _toPrimitive19(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive19(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral70(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function hypotheticalModifier(modifier) {
  for (var _len = arguments.length, effects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    effects[_key - 1] = arguments[_key];
  }
  var newEffects = effects.filter(function(e) {
    return !have(e);
  });
  return (0, import_kolmafia75.numericModifier)(modifier) + sum(newEffects, function(effect2) {
    return (0, import_kolmafia75.numericModifier)(effect2, modifier);
  });
}
var import_kolmafia75, _templateObject507, _templateObject2132, _templateObject3121, _templateObject4104, _templateObject556, _templateObject649, _CommunityService, _templateObject745, _templateObject837, _templateObject930, _templateObject1026, _templateObject1124, _templateObject1223, _templateObject1321, _templateObject1419, _templateObject1516, _templateObject1616, _templateObject1716, _templateObject1816, _templateObject1914, _templateObject2014, _templateObject2133, _templateObject2216, _templateObject2315, _templateObject2414, _templateObject2513, _templateObject2612, _templateObject2712, _templateObject2810, _templateObject2910, _templateObject3010, _templateObject3122, thralls, statCommunityServicePredictor, visitCouncil, CommunityService;
var init_CommunityService = __esm({
  "node_modules/libram/dist/challengePaths/2015/CommunityService.js": function() {
    import_kolmafia75 = require("kolmafia");
    init_lib();
    init_maximize();
    init_property();
    init_resources();
    init_template_string();
    init_utils();
    thralls = /* @__PURE__ */ new Map([[$stat(_templateObject507 || (_templateObject507 = _taggedTemplateLiteral70(["muscle"]))), $thrall(_templateObject2132 || (_templateObject2132 = _taggedTemplateLiteral70(["Elbow Macaroni"])))], [$stat(_templateObject3121 || (_templateObject3121 = _taggedTemplateLiteral70(["moxie"]))), $thrall(_templateObject4104 || (_templateObject4104 = _taggedTemplateLiteral70(["Penne Dreadful"])))]]);
    statCommunityServicePredictor = function(stat) {
      return function() {
        return 60 - Math.floor(1 / 30 * ((0, import_kolmafia75.myBuffedstat)(stat) - (0, import_kolmafia75.myBasestat)(thralls.get(stat) === (0, import_kolmafia75.myThrall)() && !have($effect(_templateObject556 || (_templateObject556 = _taggedTemplateLiteral70(["Expert Oiliness"])))) ? $stat(_templateObject649 || (_templateObject649 = _taggedTemplateLiteral70(["mysticality"]))) : stat)));
      };
    };
    visitCouncil = function() {
      return (0, import_kolmafia75.visitUrl)("council.php");
    };
    CommunityService = /* @__PURE__ */ function() {
      function CommunityService2(id, stat, property, predictor, maximizeRequirements) {
        _classCallCheck13(this, CommunityService2);
        _defineProperty18(this, "choice", void 0);
        _defineProperty18(this, "stat", void 0);
        _defineProperty18(this, "property", void 0);
        _defineProperty18(this, "predictor", void 0);
        _defineProperty18(this, "maximizeRequirements", void 0);
        _defineProperty18(this, "timer", null);
        this.choice = id;
        this.stat = stat;
        this.property = property;
        this.predictor = predictor;
        this.maximizeRequirements = maximizeRequirements;
      }
      _createClass13(CommunityService2, [{
        key: "id",
        get: function get4() {
          return this.choice;
        }
        /**
         * @returns The primary stat the test measures, used primarily as memorable shorthand in place of test names.
         */
      }, {
        key: "statName",
        get: function get4() {
          return this.stat;
        }
        /**
         * @returns The name of the test, used primarily as part of the string property "csServicesPerformed"
         */
      }, {
        key: "name",
        get: function get4() {
          return this.property;
        }
        /**
         *  @returns The predicted number of turns this test will take given your character's current state.
         */
      }, {
        key: "prediction",
        get: function get4() {
          return this.predictor();
        }
        /**
         * @returns A Requirement object, if applicable, that aligns with the things needed to maximize for this particular test.
         */
      }, {
        key: "requirement",
        get: function get4() {
          return this.maximizeRequirements;
        }
        /**
         * Start the time & turn counter for the Test in question.
         */
      }, {
        key: "startTimer",
        value: function startTimer() {
          var _this$timer;
          (_this$timer = this.timer) !== null && _this$timer !== void 0 ? _this$timer : this.timer = {
            time: Date.now(),
            turns: (0, import_kolmafia75.myTurncount)()
          };
        }
      }, {
        key: "isDone",
        value: (
          /**
           * Checks the "csServicesPerformed" property to see whether mafia currently believes this test is complete.
           *
           * @returns Whether mafia currently believes this test is complete.
           */
          function isDone() {
            return get("csServicesPerformed").includes(this.property);
          }
        )
        /**
         * Maximizes based on the Requirement associated with this particular test.
         */
      }, {
        key: "maximize",
        value: function maximize2() {
          if (this.maximizeRequirements) this.maximizeRequirements.maximize();
        }
        /**
         * Attempts to turn in the test to the Council of Loathing.
         *
         * @returns Whether mafia believes the test is complete at the end of this function.
         */
      }, {
        key: "do",
        value: function _do() {
          if (get("csServicesPerformed").trim().length === 0) visitCouncil();
          visitCouncil();
          var councilText = (0, import_kolmafia75.runChoice)(this.choice);
          return this._verifyIsDone(councilText);
        }
        /**
         * Wrapper function that prepares for a test and then completes it, adding time and turn details to the log.
         *
         * @param prepare A function that does all necessary preparations for this CS test, including choosing your outfit. Optionally returns the number of turns you expect to spend preparing for the test.
         * @param maxTurns We will run the test iff the predicted/actual turns is less than or equal to this parameter.
         * @returns "completed", "failed", or "already completed".
         */
      }, {
        key: "run",
        value: function run(prepare) {
          var _this$timer2;
          var maxTurns = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity;
          if (this.isDone()) return "already completed";
          var _ref = (_this$timer2 = this.timer) !== null && _this$timer2 !== void 0 ? _this$timer2 : {
            time: Date.now(),
            turns: (0, import_kolmafia75.myTurncount)()
          }, time = _ref.time, turns2 = _ref.turns;
          var additionalTurns;
          try {
            var result = prepare();
            additionalTurns = typeof result === "number" ? result : 0;
          } catch (e) {
            (0, import_kolmafia75.print)("".concat(e), "red");
            return "failed";
          }
          var prediction = this.predictor();
          var council2 = visitCouncil();
          var turnCost = this._actualCost(council2);
          if (!turnCost) return "already completed";
          if (turnCost > Math.min(maxTurns, (0, import_kolmafia75.myAdventures)())) {
            return "failed";
          }
          if (!this.do()) return "failed";
          CommunityService2.log[this.property] = {
            predictedTurns: prediction + additionalTurns,
            turnCost: (0, import_kolmafia75.myTurncount)() - turns2,
            seconds: (Date.now() - time) / 1e3,
            type: "test"
          };
          return "completed";
        }
      }, {
        key: "_verifyIsDone",
        value: function _verifyIsDone(councilText) {
          return !councilText.includes("<input type=hidden name=option value=".concat(this.choice, ">"));
        }
        /**
         * Checks council.php to verify that a test is complete; more reliable than isDone, but requires an additional pagehit.
         *
         * @returns Whether council.php suggests that the test is complete.
         */
      }, {
        key: "verifyIsDone",
        value: function verifyIsDone() {
          return this._verifyIsDone(visitCouncil());
        }
      }, {
        key: "_actualCost",
        value: function _actualCost(councilText) {
          var match = councilText.match("<input type=hidden name=option value=".concat(this.id, ">.*?Perform Service \\((\\d+) Adventures\\)"));
          return match ? parseInt(match[1]) : 0;
        }
        /**
         * Checks council.php for the number of turns this test will take; more reliable than prediction, but requires an additional pagehit.
         *
         * @returns The number of turns to complete this test according to council.php.
         */
      }, {
        key: "actualCost",
        value: function actualCost() {
          return this._actualCost(visitCouncil());
        }
        /**
         * @param effects A spread array of Effects to consider
         * @returns The number of turns we expect to save if we start using those effects
         */
      }, {
        key: "turnsSavedBy",
        value: function turnsSavedBy() {
          var currentTurns = clamp(this.prediction, 1, 60);
          var newTurns = clamp(this.predictor.apply(this, arguments), 1, 60);
          return currentTurns - newTurns;
        }
        /**
         * A log of the predicted turns, actual turns, and duration of each CS test performed.
         */
      }], [{
        key: "startTimer",
        value: (
          /**
           * Start the time & turn counter for the given task
           *
           * @param name The name of the task to start the counter of
           */
          function startTimer(name) {
            if (!this.taskTimers.has(name)) {
              this.taskTimers.set(name, {
                time: Date.now(),
                turns: (0, import_kolmafia75.myTurncount)()
              });
            }
          }
        )
      }, {
        key: "logTask",
        value: function logTask(name, action) {
          var _this$taskTimers$get, _action;
          var _ref2 = (_this$taskTimers$get = this.taskTimers.get(name)) !== null && _this$taskTimers$get !== void 0 ? _this$taskTimers$get : {
            time: Date.now(),
            turns: (0, import_kolmafia75.myTurncount)()
          }, time = _ref2.time, turns2 = _ref2.turns;
          var estimatedTurns = (_action = action()) !== null && _action !== void 0 ? _action : 0;
          CommunityService2.log[name] = {
            type: "task",
            turnCost: (0, import_kolmafia75.myTurncount)() - turns2,
            predictedTurns: estimatedTurns,
            seconds: (Date.now() - time) / 1e3
          };
        }
      }, {
        key: "printLog",
        value: (
          /**
           * Prints turncount and time details of the test in question.
           *
           * @param colour The colour (or color) you'd like the log to be printed in.
           */
          function printLog() {
            var colour = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "blue";
            var logEntries = Object.entries(CommunityService2.log);
            for (var _i = 0, _logEntries = logEntries; _i < _logEntries.length; _i++) {
              var _logEntries$_i = _slicedToArray22(_logEntries[_i], 2), testName = _logEntries$_i[0], testEntry = _logEntries$_i[1];
              var type = testEntry.type, predictedTurns = testEntry.predictedTurns, turnCost = testEntry.turnCost, seconds = testEntry.seconds;
              if (type === "test") {
                (0, import_kolmafia75.print)("We predicted the ".concat(testName, " test would take ").concat(predictedTurns, " turns, ").concat(predictedTurns === turnCost ? "and" : "but", " it took ").concat(turnCost, " turns."), colour);
                (0, import_kolmafia75.print)("".concat(testName, " took ").concat(seconds.toFixed(1), " seconds."), colour);
              } else {
                if (!(predictedTurns === 0 && turnCost === 0)) {
                  (0, import_kolmafia75.print)("We predicted the task ".concat(testName, " would take ").concat(predictedTurns, " turns, ").concat(predictedTurns === turnCost ? "and" : "but", " it took ").concat(turnCost, " turns."), colour);
                }
                (0, import_kolmafia75.print)("The task ".concat(testName, " took ").concat(seconds.toFixed(1), " seconds."), colour);
              }
            }
            var totalTime = sum(logEntries, function(_ref3) {
              var _ref4 = _slicedToArray22(_ref3, 2), testEntry2 = _ref4[1];
              return testEntry2.seconds;
            });
            (0, import_kolmafia75.print)("All together, you have spent ".concat(totalTime.toFixed(1), " seconds during this Community Service run"), colour);
          }
        )
        // Below, we have the tests themselves.
      }]);
      return CommunityService2;
    }();
    _CommunityService = CommunityService;
    _defineProperty18(CommunityService, "taskTimers", /* @__PURE__ */ new Map());
    _defineProperty18(CommunityService, "log", {});
    _defineProperty18(CommunityService, "HP", new _CommunityService(1, "HP", "Donate Blood", function() {
      return 60 - Math.floor(((0, import_kolmafia75.myMaxhp)() - (0, import_kolmafia75.myBuffedstat)($stat(_templateObject745 || (_templateObject745 = _taggedTemplateLiteral70(["muscle"])))) - 3) / 30);
    }, new Requirement(["HP"], {})));
    _defineProperty18(CommunityService, "Muscle", new _CommunityService(2, "Muscle", "Feed The Children", statCommunityServicePredictor($stat(_templateObject837 || (_templateObject837 = _taggedTemplateLiteral70(["Muscle"])))), new Requirement(["Muscle"], {})));
    _defineProperty18(CommunityService, "Mysticality", new _CommunityService(3, "Mysticality", "Build Playground Mazes", statCommunityServicePredictor($stat(_templateObject930 || (_templateObject930 = _taggedTemplateLiteral70(["Mysticality"])))), new Requirement(["Mysticality"], {})));
    _defineProperty18(CommunityService, "Moxie", new _CommunityService(4, "Moxie", "Feed Conspirators", statCommunityServicePredictor($stat(_templateObject1026 || (_templateObject1026 = _taggedTemplateLiteral70(["Moxie"])))), new Requirement(["Moxie"], {})));
    _defineProperty18(CommunityService, "FamiliarWeight", new _CommunityService(5, "Familiar Weight", "Breed More Collies", function() {
      for (var _len2 = arguments.length, effects = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        effects[_key2] = arguments[_key2];
      }
      return 60 - Math.floor((totalFamiliarWeight((0, import_kolmafia75.myFamiliar)(), false) + hypotheticalModifier.apply(void 0, ["Familiar Weight"].concat(effects))) / 5);
    }, new Requirement(["Familiar Weight"], {})));
    _defineProperty18(CommunityService, "WeaponDamage", new _CommunityService(6, "Weapon Damage", "Reduce Gazelle Population", function() {
      var weaponPower = (0, import_kolmafia75.getPower)((0, import_kolmafia75.equippedItem)($slot(_templateObject1124 || (_templateObject1124 = _taggedTemplateLiteral70(["weapon"])))));
      var offhandPower = (0, import_kolmafia75.toSlot)((0, import_kolmafia75.equippedItem)($slot(_templateObject1223 || (_templateObject1223 = _taggedTemplateLiteral70(["off-hand"]))))) === $slot(_templateObject1321 || (_templateObject1321 = _taggedTemplateLiteral70(["weapon"]))) ? (0, import_kolmafia75.getPower)((0, import_kolmafia75.equippedItem)($slot(_templateObject1419 || (_templateObject1419 = _taggedTemplateLiteral70(["off-hand"]))))) : 0;
      var familiarPower = (0, import_kolmafia75.toSlot)((0, import_kolmafia75.equippedItem)($slot(_templateObject1516 || (_templateObject1516 = _taggedTemplateLiteral70(["familiar"]))))) === $slot(_templateObject1616 || (_templateObject1616 = _taggedTemplateLiteral70(["weapon"]))) ? (0, import_kolmafia75.getPower)((0, import_kolmafia75.equippedItem)($slot(_templateObject1716 || (_templateObject1716 = _taggedTemplateLiteral70(["familiar"]))))) : 0;
      var multiplier = have($effect(_templateObject1816 || (_templateObject1816 = _taggedTemplateLiteral70(["Bow-Legged Swagger"])))) ? 2 : 1;
      for (var _len3 = arguments.length, effects = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        effects[_key3] = arguments[_key3];
      }
      return 60 - Math.floor(multiplier * (hypotheticalModifier.apply(void 0, ["Weapon Damage"].concat(effects)) - 0.15 * (weaponPower + offhandPower + familiarPower)) / 50 + 1e-3) - Math.floor(multiplier * hypotheticalModifier.apply(void 0, ["Weapon Damage Percent"].concat(effects)) / 50 + 1e-3);
    }, new Requirement(["Weapon Damage", "Weapon Damage Percent"], {})));
    _defineProperty18(CommunityService, "SpellDamage", new _CommunityService(7, "Spell Damage", "Make Sausage", function() {
      var dragonfishDamage = (0, import_kolmafia75.myFamiliar)() === $familiar(_templateObject1914 || (_templateObject1914 = _taggedTemplateLiteral70(["Magic Dragonfish"]))) ? (0, import_kolmafia75.numericModifier)($familiar(_templateObject2014 || (_templateObject2014 = _taggedTemplateLiteral70(["Magic Dragonfish"]))), "Spell Damage Percent", totalFamiliarWeight(), $item.none) : 0;
      for (var _len4 = arguments.length, effects = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        effects[_key4] = arguments[_key4];
      }
      return 60 - Math.floor(hypotheticalModifier.apply(void 0, ["Spell Damage"].concat(effects)) / 50 + 1e-3) - Math.floor((hypotheticalModifier.apply(void 0, ["Spell Damage Percent"].concat(effects)) - dragonfishDamage) / 50 + 1e-3);
    }, new Requirement(["Spell Damage", "Spell Damage Percent"], {})));
    _defineProperty18(CommunityService, "Noncombat", new _CommunityService(8, "Non-Combat", "Be a Living Statue", function() {
      for (var _len5 = arguments.length, effects = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        effects[_key5] = arguments[_key5];
      }
      var noncombatRate = -1 * hypotheticalModifier.apply(void 0, ["Combat Rate"].concat(effects));
      var unsoftcappedRate = function(rate) {
        return rate > 25 ? 25 + (rate - 25) * 5 : rate;
      };
      var currentFamiliarModifier = -1 * (0, import_kolmafia75.numericModifier)((0, import_kolmafia75.myFamiliar)(), "Combat Rate", totalFamiliarWeight(), (0, import_kolmafia75.equippedItem)($slot(_templateObject2133 || (_templateObject2133 = _taggedTemplateLiteral70(["familiar"])))));
      var newFamiliarModifier = -1 * (0, import_kolmafia75.numericModifier)((0, import_kolmafia75.myFamiliar)(), "Combat Rate", totalFamiliarWeight((0, import_kolmafia75.myFamiliar)(), false) + hypotheticalModifier.apply(void 0, ["Familiar Weight"].concat(effects)), (0, import_kolmafia75.equippedItem)($slot(_templateObject2216 || (_templateObject2216 = _taggedTemplateLiteral70(["familiar"])))));
      var adjustedRate = unsoftcappedRate(noncombatRate) - unsoftcappedRate(currentFamiliarModifier) + unsoftcappedRate(newFamiliarModifier);
      return 60 - 3 * Math.floor(adjustedRate / 5);
    }, new Requirement(["-combat"], {})));
    _defineProperty18(CommunityService, "BoozeDrop", new _CommunityService(9, "Item Drop", "Make Margaritas", function() {
      var mummingCostume = MummingTrunk_exports.currentCostumes().get((0, import_kolmafia75.myFamiliar)());
      var mummingBuff = mummingCostume && mummingCostume[0] === "Item Drop" ? mummingCostume[1] : 0;
      var familiarItemDrop = (0, import_kolmafia75.numericModifier)((0, import_kolmafia75.myFamiliar)(), "Item Drop", totalFamiliarWeight(), (0, import_kolmafia75.equippedItem)($slot(_templateObject2315 || (_templateObject2315 = _taggedTemplateLiteral70(["familiar"]))))) + mummingBuff - (0, import_kolmafia75.numericModifier)((0, import_kolmafia75.equippedItem)($slot(_templateObject2414 || (_templateObject2414 = _taggedTemplateLiteral70(["familiar"])))), "Item Drop");
      var familiarBoozeDrop = (0, import_kolmafia75.numericModifier)((0, import_kolmafia75.myFamiliar)(), "Booze Drop", totalFamiliarWeight(), (0, import_kolmafia75.equippedItem)($slot(_templateObject2513 || (_templateObject2513 = _taggedTemplateLiteral70(["familiar"]))))) - (0, import_kolmafia75.numericModifier)((0, import_kolmafia75.equippedItem)($slot(_templateObject2612 || (_templateObject2612 = _taggedTemplateLiteral70(["familiar"])))), "Booze Drop");
      var multiplier = (0, import_kolmafia75.haveEquipped)($item(_templateObject2712 || (_templateObject2712 = _taggedTemplateLiteral70(["broken champagne bottle"])))) && get("garbageChampagneCharge") > 0 ? 0.5 : 1;
      for (var _len6 = arguments.length, effects = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        effects[_key6] = arguments[_key6];
      }
      return 60 - Math.floor(multiplier * (hypotheticalModifier.apply(void 0, ["Item Drop"].concat(effects)) - familiarItemDrop - (0, import_kolmafia75.numericModifier)((0, import_kolmafia75.myThrall)(), "Item Drop")) / 30 + 1e-3) - Math.floor((hypotheticalModifier.apply(void 0, ["Booze Drop"].concat(effects)) - familiarBoozeDrop) / 15 + 1e-3);
    }, new Requirement(["Item Drop", "2 Booze Drop"], {
      preventEquip: $items(_templateObject2810 || (_templateObject2810 = _taggedTemplateLiteral70(["broken champagne bottle"])))
    })));
    _defineProperty18(CommunityService, "HotRes", new _CommunityService(10, "Hot Resistance", "Clean Steam Tunnels", function() {
      var currentFamiliarModifier = (0, import_kolmafia75.numericModifier)((0, import_kolmafia75.myFamiliar)(), "Hot Resistance", totalFamiliarWeight(), (0, import_kolmafia75.equippedItem)($slot(_templateObject2910 || (_templateObject2910 = _taggedTemplateLiteral70(["familiar"])))));
      for (var _len7 = arguments.length, effects = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        effects[_key7] = arguments[_key7];
      }
      var newFamiliarModifier = (0, import_kolmafia75.numericModifier)((0, import_kolmafia75.myFamiliar)(), "Hot Resistance", totalFamiliarWeight((0, import_kolmafia75.myFamiliar)(), false) + hypotheticalModifier.apply(void 0, ["Familiar Weight"].concat(effects)), (0, import_kolmafia75.equippedItem)($slot(_templateObject3010 || (_templateObject3010 = _taggedTemplateLiteral70(["familiar"])))));
      return 60 - (hypotheticalModifier.apply(void 0, ["Hot Resistance"].concat(effects)) - currentFamiliarModifier + newFamiliarModifier);
    }, new Requirement(["Hot Resistance"], {})));
    _defineProperty18(CommunityService, "CoilWire", new _CommunityService(11, "Coil Wire", "Coil Wire", function() {
      return 60;
    }, new Requirement([], {})));
    _defineProperty18(CommunityService, "donate", function() {
      visitCouncil();
      (0, import_kolmafia75.visitUrl)("choice.php?whichchoice=1089&option=30");
    });
    _defineProperty18(CommunityService, "path", $path(_templateObject3122 || (_templateObject3122 = _taggedTemplateLiteral70(["Community Service"]))));
  }
});

// node_modules/libram/dist/challengePaths/2016/NuclearAutumn.js
var NuclearAutumn_exports = {};
__export(NuclearAutumn_exports, {
  chronoLab: function() {
    return chronoLab;
  },
  coolingTank: function() {
    return coolingTank;
  },
  path: function() {
    return path2;
  },
  spa: function() {
    return spa;
  }
});
function _taggedTemplateLiteral71(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function coolingTank() {
  (0, import_kolmafia76.visitUrl)("place.php?whichplace=falloutshelter&action=vault8");
}
function spa() {
  (0, import_kolmafia76.visitUrl)("place.php?whichplace=falloutshelter&action=vault3");
}
function chronoLab() {
  (0, import_kolmafia76.visitUrl)("place.php?whichplace=falloutshelter&action=vault5");
}
var import_kolmafia76, _templateObject508, path2;
var init_NuclearAutumn = __esm({
  "node_modules/libram/dist/challengePaths/2016/NuclearAutumn.js": function() {
    import_kolmafia76 = require("kolmafia");
    init_template_string();
    path2 = $path(_templateObject508 || (_templateObject508 = _taggedTemplateLiteral71(["Nuclear Autumn"])));
  }
});

// node_modules/libram/dist/challengePaths/index.js
var init_challengePaths = __esm({
  "node_modules/libram/dist/challengePaths/index.js": function() {
    init_HeavyRains();
    init_CommunityService();
    init_NuclearAutumn();
  }
});

// node_modules/libram/dist/diet/knapsack.js
function _toConsumableArray20(arr) {
  return _arrayWithoutHoles20(arr) || _iterableToArray20(arr) || _unsupportedIterableToArray35(arr) || _nonIterableSpread20();
}
function _nonIterableSpread20() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray20(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles20(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray35(arr);
}
function _slicedToArray23(arr, i) {
  return _arrayWithHoles23(arr) || _iterableToArrayLimit23(arr, i) || _unsupportedIterableToArray35(arr, i) || _nonIterableRest23();
}
function _nonIterableRest23() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit23(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles23(arr) {
  if (Array.isArray(arr)) return arr;
}
function _createForOfIteratorHelper10(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray35(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray35(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray35(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray35(o, minLen);
}
function _arrayLikeToArray35(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _defineProperties14(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey20(descriptor.key), descriptor);
  }
}
function _createClass14(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties14(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties14(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _classCallCheck14(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperty19(obj, key, value) {
  key = _toPropertyKey20(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey20(t) {
  var i = _toPrimitive20(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive20(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function aggregate(list, isEqual) {
  var aggregatedList = [];
  var _iterator = _createForOfIteratorHelper10(list), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var item14 = _step.value;
      if (aggregatedList.length === 0) {
        aggregatedList.push([item14, 1]);
      } else {
        var last = aggregatedList[aggregatedList.length - 1];
        var _last = _slicedToArray23(last, 1), lastItem = _last[0];
        if (isEqual ? isEqual(item14, lastItem) : item14 === lastItem) {
          last[1]++;
        } else {
          aggregatedList.push([item14, 1]);
        }
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return aggregatedList;
}
function knapsack(values, capacity) {
  var _ref5;
  if (!Number.isFinite(capacity)) {
    throw new Error("Invalid capacity.");
  }
  var valuesInverted = values.map(function(_ref) {
    var _ref2 = _slicedToArray23(_ref, 4), thing = _ref2[0], value2 = _ref2[1], weight = _ref2[2], maximum2 = _ref2[3];
    return weight < 0 && maximum2 !== void 0 ? [new Not(thing), -value2, -weight, maximum2] : [thing, value2, weight, maximum2];
  });
  var capacityAdjustment = sum(values, function(_ref3) {
    var _ref4 = _slicedToArray23(_ref3, 4), weight = _ref4[2], maximum2 = _ref4[3];
    return weight < 0 && maximum2 !== void 0 ? -weight * maximum2 : 0;
  });
  var adjustedCapacity = capacity + capacityAdjustment;
  if (adjustedCapacity < 0) {
    return [-Infinity, []];
  }
  var valuesSorted = _toConsumableArray20(valuesInverted).sort(function(x, y) {
    return x[2] - y[2];
  });
  var values01 = (_ref5 = []).concat.apply(_ref5, _toConsumableArray20(valuesSorted.map(function(_ref6) {
    var _ref7 = _slicedToArray23(_ref6, 4), thing = _ref7[0], value2 = _ref7[1], weight = _ref7[2], maximum2 = _ref7[3];
    if (!Number.isFinite(weight) || weight < 0) {
      throw new Error("Invalid weight ".concat(weight, " for ").concat(thing instanceof Not ? "not ".concat(thing.thing) : thing));
    }
    var maxQuantity = Math.floor(maximum2 !== null && maximum2 !== void 0 ? maximum2 : adjustedCapacity / weight);
    if (maxQuantity < 0) {
      throw new Error("Invalid max quantity ".concat(maxQuantity, " for ").concat(thing instanceof Not ? "not ".concat(thing.thing) : thing));
    }
    return new Array(maxQuantity).fill([thing, value2, weight]);
  })));
  var memoizationTable = new Array(values01.length);
  for (var i = 0; i < values01.length; i++) {
    memoizationTable[i] = new Array(adjustedCapacity).fill(null);
  }
  var _bestSolution = bestSolution(memoizationTable, values01, values01.length - 1, adjustedCapacity), _bestSolution2 = _slicedToArray23(_bestSolution, 2), value = _bestSolution2[0], invertedSolution = _bestSolution2[1];
  var aggregatedSolution = aggregate(invertedSolution);
  var countMap = new Map(aggregatedSolution);
  var valueAdjustment = 0;
  var solution = aggregatedSolution.filter(function(_ref8) {
    var _ref9 = _slicedToArray23(_ref8, 1), thingOrNot2 = _ref9[0];
    return !(thingOrNot2 instanceof Not);
  });
  var _iterator2 = _createForOfIteratorHelper10(valuesSorted), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var _step2$value = _slicedToArray23(_step2.value, 4), thingOrNot = _step2$value[0], _value = _step2$value[1], maximum = _step2$value[3];
      if (thingOrNot instanceof Not) {
        var _countMap$get;
        var notCount = (_countMap$get = countMap.get(thingOrNot)) !== null && _countMap$get !== void 0 ? _countMap$get : 0;
        if (maximum === void 0) {
          throw new Error("Cannot find maximum for item ".concat(thingOrNot.thing, "."));
        }
        if (notCount > maximum) {
          throw new Error("Somehow picked ".concat(notCount, " more than the maximum ").concat(notCount, " for item ").concat(thingOrNot.thing, "."));
        }
        if (notCount < maximum) {
          solution.push([thingOrNot.thing, maximum - notCount]);
        }
        valueAdjustment -= maximum * _value;
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return [value + valueAdjustment, solution];
}
function bestSolution(memoizationTable, values, currentIndex, remainingCapacity) {
  if (remainingCapacity < 0) return [-Infinity, []];
  if (remainingCapacity === 0 || currentIndex < 0) return [0, []];
  var memoized = memoizationTable[currentIndex][remainingCapacity - 1];
  if (memoized !== null) return memoized;
  var _values$currentIndex = _slicedToArray23(values[currentIndex], 3), item14 = _values$currentIndex[0], value = _values$currentIndex[1], weight = _values$currentIndex[2];
  var _bestSolution3 = bestSolution(memoizationTable, values, currentIndex - 1, remainingCapacity - weight), _bestSolution4 = _slicedToArray23(_bestSolution3, 2), valueIncludeRest = _bestSolution4[0], itemsInclude = _bestSolution4[1];
  var valueInclude = valueIncludeRest + value;
  var _bestSolution5 = bestSolution(memoizationTable, values, currentIndex - 1, remainingCapacity), _bestSolution6 = _slicedToArray23(_bestSolution5, 2), valueExclude = _bestSolution6[0], itemsExclude = _bestSolution6[1];
  var result = valueInclude > valueExclude ? [valueInclude, [].concat(_toConsumableArray20(itemsInclude), [item14])] : [valueExclude, itemsExclude];
  memoizationTable[currentIndex][remainingCapacity - 1] = result;
  return result;
}
var Not;
var init_knapsack = __esm({
  "node_modules/libram/dist/diet/knapsack.js": function() {
    init_utils();
    Not = /* @__PURE__ */ _createClass14(function Not2(thing) {
      _classCallCheck14(this, Not2);
      _defineProperty19(this, "thing", void 0);
      this.thing = thing;
    });
  }
});

// node_modules/libram/dist/diet/index.js
function _createForOfIteratorHelper11(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray36(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function ownKeys9(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread9(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys9(Object(t), true).forEach(function(r2) {
      _defineProperty20(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys9(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _classCallCheck15(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties15(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey21(descriptor.key), descriptor);
  }
}
function _createClass15(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties15(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties15(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty20(obj, key, value) {
  key = _toPropertyKey21(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey21(t) {
  var i = _toPrimitive21(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive21(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _toConsumableArray21(arr) {
  return _arrayWithoutHoles21(arr) || _iterableToArray21(arr) || _unsupportedIterableToArray36(arr) || _nonIterableSpread21();
}
function _nonIterableSpread21() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray21(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles21(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray36(arr);
}
function _slicedToArray24(arr, i) {
  return _arrayWithHoles24(arr) || _iterableToArrayLimit24(arr, i) || _unsupportedIterableToArray36(arr, i) || _nonIterableRest24();
}
function _nonIterableRest24() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray36(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray36(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray36(o, minLen);
}
function _arrayLikeToArray36(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit24(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles24(arr) {
  if (Array.isArray(arr)) return arr;
}
function _taggedTemplateLiteral72(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function isMonday() {
  return get2("Muscle Percent", $item(_templateObject509 || (_templateObject509 = _taggedTemplateLiteral72(["Tuesday's ruby"])))) > 0;
}
function seasoningAdventures(item14) {
  var _getRange = getRange(item14.adventures), _getRange2 = _slicedToArray24(_getRange, 2), min2 = _getRange2[0], max = _getRange2[1];
  return max - min2 <= 1 ? 1 : 0.5;
}
function _expectedAdventures(menuItem, modifiers) {
  var _item$notes, _item$notes2, _item$notes3, _item$notes4, _item$notes5;
  var item14 = menuItem.item;
  if (item14.adventures === "") return 0;
  var _getRange3 = getRange(item14.adventures), _getRange4 = _slicedToArray24(_getRange3, 2), min2 = _getRange4[0], max = _getRange4[1];
  var interpolated = _toConsumableArray21(new Array(max - min2 + 1).keys()).map(function(n) {
    return n + min2;
  });
  var forkMugMultiplier = menuItem.itemType() === "food" && (_item$notes = item14.notes) !== null && _item$notes !== void 0 && _item$notes.includes("SALAD") || menuItem.itemType() === "booze" && (_item$notes2 = item14.notes) !== null && _item$notes2 !== void 0 && _item$notes2.includes("BEER") ? 1.5 : 1.3;
  var aioliAdventures = item14.fullness;
  var garish = modifiers.garish && ((_item$notes3 = item14.notes) === null || _item$notes3 === void 0 ? void 0 : _item$notes3.includes("LASAGNA")) && !isMonday();
  var refinedPalate = modifiers.refinedPalate && ((_item$notes4 = item14.notes) === null || _item$notes4 === void 0 ? void 0 : _item$notes4.includes("WINE"));
  var pinkyRing = modifiers.pinkyRing && ((_item$notes5 = item14.notes) === null || _item$notes5 === void 0 ? void 0 : _item$notes5.includes("WINE"));
  return sum(interpolated, function(baseAdventures) {
    var _item$notes6, _item$notes7;
    var adventures = baseAdventures;
    if (modifiers.forkMug) {
      adventures = Math.floor(adventures * forkMugMultiplier);
    }
    if ((_item$notes6 = item14.notes) !== null && _item$notes6 !== void 0 && _item$notes6.includes("SAUCY") && modifiers.saucemaven) {
      adventures += (0, import_kolmafia77.myPrimestat)() === $stat(_templateObject2134 || (_templateObject2134 = _taggedTemplateLiteral72(["Mysticality"]))) ? 5 : 3;
    }
    if (garish) adventures += 5;
    if (refinedPalate) adventures = Math.floor(adventures * 1.25);
    if (pinkyRing) adventures = Math.round(adventures * 1.125);
    if ((_item$notes7 = item14.notes) !== null && _item$notes7 !== void 0 && _item$notes7.includes("MARTINI") && modifiers.tuxedoShirt) {
      adventures += 2;
    }
    if (menuItem.itemType() === "food" && modifiers.mayoflex) adventures++;
    if (menuItem.itemType() === "food" && modifiers.seasoning) {
      adventures += seasoningAdventures(item14);
    }
    if (menuItem.itemType() === "food" && modifiers.aioli) {
      adventures += aioliAdventures;
    }
    if (menuItem.itemType() === "food" && modifiers.whetStone) adventures++;
    return adventures;
  }) / interpolated.length;
}
function isOrgan(x) {
  return organs.includes(x);
}
function planDiet(mpa, menu) {
  var organCapacities = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [["food", null], ["booze", null], ["spleen item", null]];
  var resolvedOrganCapacities = organCapacities.map(function(_ref8) {
    var _ref9 = _slicedToArray24(_ref8, 2), organ = _ref9[0], size = _ref9[1];
    return [organ, size !== null && size !== void 0 ? size : organ === "food" ? (0, import_kolmafia77.fullnessLimit)() - (0, import_kolmafia77.myFullness)() : organ === "booze" ? (0, import_kolmafia77.inebrietyLimit)() - (0, import_kolmafia77.myInebriety)() : organ === "spleen item" ? (0, import_kolmafia77.spleenLimit)() - (0, import_kolmafia77.mySpleenUse)() : 0];
  });
  var includedInteractingItems = menu.map(function(menuItem) {
    var interacting = interactingItems.find(function(_ref10) {
      var _ref11 = _slicedToArray24(_ref10, 1), itemOrEffect = _ref11[0];
      return menuItem.item === itemOrEffect || menuItem.item === $item(_templateObject558 || (_templateObject558 = _taggedTemplateLiteral72(["pocket wish"]))) && menuItem.effect === itemOrEffect;
    });
    if (interacting) {
      var _interacting = _slicedToArray24(interacting, 2), organSizes = _interacting[1];
      return [menuItem, organSizes];
    } else {
      return null;
    }
  }).filter(function(value) {
    return value !== null;
  });
  var dietPlanner = new DietPlanner(mpa, menu.filter(function(menuItem) {
    return !includedInteractingItems.some(function(_ref12) {
      var _ref13 = _slicedToArray24(_ref12, 1), interacting = _ref13[0];
      return interacting === menuItem;
    });
  }));
  var _dietPlanner$planOrga = dietPlanner.planOrgansWithTrials(resolvedOrganCapacities.filter(function(_ref14) {
    var _ref15 = _slicedToArray24(_ref14, 2), organ = _ref15[0], capacity = _ref15[1];
    return ["food", "booze"].includes(organ) && capacity >= 0;
  }), includedInteractingItems, {}), _dietPlanner$planOrga2 = _slicedToArray24(_dietPlanner$planOrga, 2), planFoodBooze = _dietPlanner$planOrga2[1];
  var spleenCapacity = resolvedOrganCapacities.find(function(_ref16) {
    var _ref17 = _slicedToArray24(_ref16, 1), organ = _ref17[0];
    return organ === "spleen item";
  });
  if (spleenCapacity) {
    var additionalSpleen = sum(planFoodBooze, function(_ref18) {
      var _ref19 = _slicedToArray24(_ref18, 2), items = _ref19[0], number = _ref19[1];
      return items.some(function(menuItem) {
        return $items(_templateObject564 || (_templateObject564 = _taggedTemplateLiteral72(["jar of fermented pickle juice, extra-greasy slider"]))).includes(menuItem.item);
      }) ? 5 * number : 0;
    });
    var _spleenCapacity = _slicedToArray24(spleenCapacity, 2), availableSpleen = _spleenCapacity[1];
    var _dietPlanner$planOrga3 = dietPlanner.planOrgan("spleen item", availableSpleen + additionalSpleen), _dietPlanner$planOrga4 = _slicedToArray24(_dietPlanner$planOrga3, 2), planSpleen = _dietPlanner$planOrga4[1];
    return [].concat(_toConsumableArray21(planFoodBooze), _toConsumableArray21(planSpleen));
  } else {
    return planFoodBooze;
  }
}
var import_kolmafia77, _templateObject509, _templateObject2134, _templateObject3123, _templateObject4105, _templateObject557, _templateObject650, _templateObject746, _templateObject838, _templateObject931, _templateObject1027, _templateObject1125, _templateObject1224, _templateObject1322, _templateObject1420, _templateObject1517, _templateObject1617, _templateObject1717, _templateObject1817, _templateObject1915, _templateObject2015, _templateObject2135, _templateObject2217, _templateObject2316, _templateObject2415, _templateObject2514, _templateObject2613, _templateObject2713, _templateObject2811, _templateObject2911, _templateObject3011, _templateObject3124, _templateObject3213, _templateObject3312, _templateObject3411, _templateObject3510, _templateObject3610, _templateObject3710, _templateObject3810, _templateObject3910, _templateObject4010, _templateObject4113, _templateObject4212, _templateObject4311, _templateObject4410, _templateObject4510, _templateObject4610, _templateObject4710, _templateObject4810, _templateObject4910, _templateObject5010, _templateObject5111, _templateObject5211, _templateObject5310, _templateObject5410, _templateObject558, _templateObject564, _templateObject574, _templateObject584, _templateObject594, _templateObject604, _templateObject6110, _templateObject6210, _templateObject6310, _templateObject6410, _templateObject654, _templateObject664, _templateObject674, _templateObject684, _templateObject694, _templateObject704, _templateObject7110, _templateObject7210, MenuItem, organs, DietPlanner, interactingItems, DietEntry, Diet;
var init_diet = __esm({
  "node_modules/libram/dist/diet/index.js": function() {
    import_kolmafia77 = require("kolmafia");
    init_lib();
    init_modifier();
    init_property();
    init_MayoClinic();
    init_template_string();
    init_utils();
    init_knapsack();
    MenuItem = /* @__PURE__ */ function() {
      function MenuItem2(item14) {
        var _MenuItem$defaultOpti;
        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        _classCallCheck15(this, MenuItem2);
        _defineProperty20(this, "item", void 0);
        _defineProperty20(this, "organ", void 0);
        _defineProperty20(this, "size", void 0);
        _defineProperty20(this, "maximum", void 0);
        _defineProperty20(this, "additionalValue", void 0);
        _defineProperty20(this, "effect", void 0);
        _defineProperty20(this, "priceOverride", void 0);
        _defineProperty20(this, "mayo", void 0);
        _defineProperty20(this, "data", void 0);
        _defineProperty20(this, "priceCached", void 0);
        _defineProperty20(this, "itemTypeCached", void 0);
        var _options = _objectSpread9(_objectSpread9({}, options), (_MenuItem$defaultOpti = MenuItem2.defaultOptions().get(item14)) !== null && _MenuItem$defaultOpti !== void 0 ? _MenuItem$defaultOpti : {}), size = _options.size, organ = _options.organ, maximum = _options.maximum, additionalValue = _options.additionalValue, effect2 = _options.effect, priceOverride = _options.priceOverride, mayo = _options.mayo, data = _options.data;
        this.item = item14;
        if (notNullish(maximum)) this.maximum = maximum === "auto" ? item14.dailyusesleft : maximum;
        if (notNullish(additionalValue)) this.additionalValue = additionalValue;
        if (notNullish(effect2)) this.effect = effect2;
        if (notNullish(priceOverride)) this.priceOverride = priceOverride;
        if (notNullish(mayo)) this.mayo = mayo;
        if (notNullish(data)) this.data = data;
        if (notNullish(organ)) {
          this.organ = organ;
        } else {
          var typ = (0, import_kolmafia77.itemType)(this.item);
          if (isOrgan(typ)) this.organ = typ;
        }
        this.size = size !== null && size !== void 0 ? size : this.organ === "food" ? this.item.fullness : this.organ === "booze" ? this.item.inebriety : this.organ === "spleen item" ? this.item.spleen : 0;
      }
      _createClass15(MenuItem2, [{
        key: "equals",
        value: function equals(other) {
          return this.item === other.item && this.effect === other.effect;
        }
      }, {
        key: "toString",
        value: function toString() {
          if (this.effect) {
            return "".concat(this.item, ":").concat(this.effect);
          }
          return this.item.toString();
        }
      }, {
        key: "price",
        value: function price2() {
          if (!this.priceCached) {
            var _this$priceOverride;
            this.priceCached = (_this$priceOverride = this.priceOverride) !== null && _this$priceOverride !== void 0 ? _this$priceOverride : MenuItem2.defaultPriceFunction(this.item);
          }
          return this.priceCached;
        }
      }, {
        key: "itemType",
        value: function itemType() {
          if (!this.itemTypeCached) {
            this.itemTypeCached = (0, import_kolmafia77.itemType)(this.item);
          }
          return this.itemTypeCached;
        }
      }], [{
        key: "defaultOptions",
        value: function defaultOptions() {
          return /* @__PURE__ */ new Map([[$item(_templateObject3123 || (_templateObject3123 = _taggedTemplateLiteral72(["distention pill"]))), {
            organ: "food",
            maximum: !have($item(_templateObject4105 || (_templateObject4105 = _taggedTemplateLiteral72(["distention pill"])))) || get("_distentionPillUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject557 || (_templateObject557 = _taggedTemplateLiteral72(["synthetic dog hair pill"]))), {
            organ: "booze",
            maximum: !have($item(_templateObject650 || (_templateObject650 = _taggedTemplateLiteral72(["synthetic dog hair pill"])))) || get("_syntheticDogHairPillUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject746 || (_templateObject746 = _taggedTemplateLiteral72(["cuppa Voraci tea"]))), {
            organ: "food",
            maximum: get("_voraciTeaUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject838 || (_templateObject838 = _taggedTemplateLiteral72(["cuppa Sobrie tea"]))), {
            organ: "booze",
            maximum: get("_sobrieTeaUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject931 || (_templateObject931 = _taggedTemplateLiteral72(["mojo filter"]))), {
            organ: "spleen item",
            maximum: 3 - get("currentMojoFilters"),
            size: -1
          }], [$item(_templateObject1027 || (_templateObject1027 = _taggedTemplateLiteral72(["spice melange"]))), {
            maximum: get("spiceMelangeUsed") ? 0 : 1
          }], [$item(_templateObject1125 || (_templateObject1125 = _taggedTemplateLiteral72(["Ultra Mega Sour Ball"]))), {
            maximum: get("_ultraMegaSourBallUsed") ? 0 : 1
          }], [$item(_templateObject1224 || (_templateObject1224 = _taggedTemplateLiteral72(["The Plumber's mushroom stew"]))), {
            maximum: get("_plumbersMushroomStewEaten") ? 0 : 1
          }], [$item(_templateObject1322 || (_templateObject1322 = _taggedTemplateLiteral72(["The Mad Liquor"]))), {
            maximum: get("_madLiquorDrunk") ? 0 : 1
          }], [$item(_templateObject1420 || (_templateObject1420 = _taggedTemplateLiteral72(["Doc Clock's thyme cocktail"]))), {
            maximum: get("_docClocksThymeCocktailDrunk") ? 0 : 1
          }], [$item(_templateObject1517 || (_templateObject1517 = _taggedTemplateLiteral72(["Mr. Burnsger"]))), {
            maximum: get("_mrBurnsgerEaten") ? 0 : 1
          }], [$item(_templateObject1617 || (_templateObject1617 = _taggedTemplateLiteral72(["Calzone of Legend"]))), {
            maximum: get("calzoneOfLegendEaten") ? 0 : 1
          }], [$item(_templateObject1717 || (_templateObject1717 = _taggedTemplateLiteral72(["Deep Dish of Legend"]))), {
            maximum: get("deepDishOfLegendEaten") ? 0 : 1
          }], [$item(_templateObject1817 || (_templateObject1817 = _taggedTemplateLiteral72(["Pizza of Legend"]))), {
            maximum: get("pizzaOfLegendEaten") ? 0 : 1
          }], [$item(_templateObject1915 || (_templateObject1915 = _taggedTemplateLiteral72(["jar of fermented pickle juice"]))), {
            maximum: get("_pickleJuiceDrunk") ? 0 : 1
          }], [$item(_templateObject2015 || (_templateObject2015 = _taggedTemplateLiteral72(["extra-greasy slider"]))), {
            maximum: get("_extraGreasySliderEaten") ? 0 : 1
          }], [$item(_templateObject2135 || (_templateObject2135 = _taggedTemplateLiteral72(["voodoo snuff"]))), {
            maximum: get("_voodooSnuffUsed") ? 0 : 1
          }], [$item(_templateObject2217 || (_templateObject2217 = _taggedTemplateLiteral72(["Ol' Scratch's salad fork"]))), {
            maximum: get("_saladForkUsed") ? 0 : 1
          }], [$item(_templateObject2316 || (_templateObject2316 = _taggedTemplateLiteral72(["Frosty's frosty mug"]))), {
            maximum: get("_frostyMugUsed") ? 0 : 1
          }], [$item(_templateObject2415 || (_templateObject2415 = _taggedTemplateLiteral72(["tin cup of mulligan stew"]))), {
            maximum: get("_mulliganStewEaten") ? 0 : 1
          }], [$item(_templateObject2514 || (_templateObject2514 = _taggedTemplateLiteral72(["Hodgman's blanket"]))), {
            maximum: get("_hodgmansBlanketDrunk") ? 0 : 1
          }]]);
        }
      }]);
      return MenuItem2;
    }();
    _defineProperty20(MenuItem, "defaultPriceFunction", function(item14) {
      return (0, import_kolmafia77.npcPrice)(item14) > 0 ? (0, import_kolmafia77.npcPrice)(item14) : (0, import_kolmafia77.mallPrice)(item14);
    });
    organs = ["food", "booze", "spleen item"];
    DietPlanner = /* @__PURE__ */ function() {
      function DietPlanner2(mpa, menu) {
        var _this2 = this;
        var _this = this;
        _classCallCheck15(this, DietPlanner2);
        _defineProperty20(this, "mpa", void 0);
        _defineProperty20(this, "menu", void 0);
        _defineProperty20(this, "mayoLookup", void 0);
        _defineProperty20(this, "fork", void 0);
        _defineProperty20(this, "mug", void 0);
        _defineProperty20(this, "seasoning", void 0);
        _defineProperty20(this, "whetStone", void 0);
        _defineProperty20(this, "aioli", void 0);
        _defineProperty20(this, "spleenValue", 0);
        _defineProperty20(this, "baseDefaultModifiers", {
          forkMug: false,
          seasoning: false,
          whetStone: false,
          aioli: false,
          mayoflex: false,
          refinedPalate: have($effect(_templateObject2613 || (_templateObject2613 = _taggedTemplateLiteral72(["Refined Palate"])))),
          garish: have($effect(_templateObject2713 || (_templateObject2713 = _taggedTemplateLiteral72(["Gar-ish"])))),
          saucemaven: have($skill(_templateObject2811 || (_templateObject2811 = _taggedTemplateLiteral72(["Saucemaven"])))),
          pinkyRing: have($item(_templateObject2911 || (_templateObject2911 = _taggedTemplateLiteral72(["mafia pinky ring"])))) && (0, import_kolmafia77.canEquip)($item(_templateObject3011 || (_templateObject3011 = _taggedTemplateLiteral72(["mafia pinky ring"])))),
          tuxedoShirt: have($item(_templateObject3124 || (_templateObject3124 = _taggedTemplateLiteral72(["tuxedo shirt"])))) && (0, import_kolmafia77.canEquip)($item(_templateObject3213 || (_templateObject3213 = _taggedTemplateLiteral72(["tuxedo shirt"]))))
        });
        this.mpa = mpa;
        var fork = menu.find(function(item14) {
          return item14.item === $item(_templateObject3312 || (_templateObject3312 = _taggedTemplateLiteral72(["Ol' Scratch's salad fork"])));
        });
        if (fork) this.fork = fork;
        var mug = menu.find(function(item14) {
          return item14.item === $item(_templateObject3411 || (_templateObject3411 = _taggedTemplateLiteral72(["Frosty's frosty mug"])));
        });
        if (mug) this.mug = mug;
        var seasoning = menu.find(function(item14) {
          return item14.item === $item(_templateObject3510 || (_templateObject3510 = _taggedTemplateLiteral72(["Special Seasoning"])));
        });
        if (seasoning) this.seasoning = seasoning;
        var whetStone = menu.find(function(item14) {
          return item14.item === $item(_templateObject3610 || (_templateObject3610 = _taggedTemplateLiteral72(["whet stone"])));
        });
        if (whetStone) this.whetStone = whetStone;
        var aioli = menu.find(function(item14) {
          return item14.item === $item(_templateObject3710 || (_templateObject3710 = _taggedTemplateLiteral72(["mini kiwi aioli"])));
        });
        if (aioli) this.aioli = aioli;
        this.mayoLookup = /* @__PURE__ */ new Map();
        if (installed3()) {
          var _loop = function _loop2() {
            var mayo = _arr[_i];
            var menuItem = menu.find(function(item14) {
              return item14.item === mayo;
            });
            if (menuItem) _this.mayoLookup.set(mayo, menuItem);
          };
          for (var _i = 0, _arr = [Mayo.flex, Mayo.zapine]; _i < _arr.length; _i++) {
            _loop();
          }
        }
        this.menu = menu.filter(function(item14) {
          return item14.organ;
        });
        if (menu.filter(function(item14) {
          return (0, import_kolmafia77.historicalPrice)(item14.item) === 0 || (0, import_kolmafia77.historicalAge)(item14.item) >= 1;
        }).length > 100) {
          (0, import_kolmafia77.mallPrices)("food");
          (0, import_kolmafia77.mallPrices)("booze");
        }
        var spleenItems = menu.filter(function(item14) {
          return (0, import_kolmafia77.itemType)(item14.item) === "spleen item";
        });
        spleenItems.sort(function(x, y) {
          return -(_this2.consumptionValue(x) / x.item.spleen - _this2.consumptionValue(y) / y.item.spleen);
        });
        if (spleenItems.length > 0) {
          var bestMarginalSpleenItem = spleenItems.find(function(spleenItem) {
            return spleenItem.maximum === void 0 || spleenItem.maximum * spleenItem.size >= (0, import_kolmafia77.spleenLimit)() - (0, import_kolmafia77.mySpleenUse)();
          });
          if (bestMarginalSpleenItem) {
            this.spleenValue = Math.max(0, this.consumptionValue(bestMarginalSpleenItem) / bestMarginalSpleenItem.size);
          }
        }
      }
      _createClass15(DietPlanner2, [{
        key: "consumptionValue",
        value: function consumptionValue(menuItem) {
          return this.consumptionHelpersAndValue(menuItem, {})[1];
        }
        /**
         * Determine which helpers will be used with a menu item and its resulting value.
         *
         * @param menuItem Menu item to check.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair [array of helpers and base menu item, value].
         */
      }, {
        key: "consumptionHelpersAndValue",
        value: function consumptionHelpersAndValue(menuItem, overrideModifiers) {
          var _menuItem$additionalV, _menuItem$additionalV2;
          var helpers = [];
          if (menuItem.itemType() === "food" && this.mayoLookup.size) {
            var mayo = menuItem.mayo ? this.mayoLookup.get(menuItem.mayo) : this.mayoLookup.get(Mayo.flex);
            if (mayo) helpers.push(mayo);
          }
          var defaultModifiers = _objectSpread9(_objectSpread9({}, this.baseDefaultModifiers), {}, {
            mayoflex: this.mayoLookup.size ? helpers.some(function(item14) {
              return item14.item === Mayo.flex;
            }) : false
          }, overrideModifiers);
          if (this.seasoning && menuItem.itemType() === "food" && this.mpa * seasoningAdventures(menuItem.item) > this.seasoning.price()) {
            helpers.push(this.seasoning);
          }
          if (this.whetStone && menuItem.itemType() === "food" && this.mpa > this.whetStone.price()) {
            helpers.push(this.whetStone);
          }
          if (this.aioli && menuItem.itemType() === "food" && this.mpa * menuItem.item.fullness > this.aioli.price()) {
            helpers.push(this.aioli);
          }
          var forkMug = menuItem.itemType() === "food" ? this.fork : menuItem.itemType() === "booze" ? this.mug : null;
          var forkMugPrice = forkMug ? forkMug.price() : Infinity;
          var baseCost = menuItem.price() + sum(helpers, function(item14) {
            return item14.price();
          });
          var valueRaw = _expectedAdventures(menuItem, defaultModifiers) * this.mpa - baseCost + ((_menuItem$additionalV = menuItem.additionalValue) !== null && _menuItem$additionalV !== void 0 ? _menuItem$additionalV : 0);
          var valueForkMug = _expectedAdventures(menuItem, _objectSpread9(_objectSpread9({}, defaultModifiers), {}, {
            forkMug: true
          })) * this.mpa - baseCost - forkMugPrice + ((_menuItem$additionalV2 = menuItem.additionalValue) !== null && _menuItem$additionalV2 !== void 0 ? _menuItem$additionalV2 : 0);
          var valueSpleen = $items(_templateObject3810 || (_templateObject3810 = _taggedTemplateLiteral72(["jar of fermented pickle juice, extra-greasy slider"]))).includes(menuItem.item) ? 5 * this.spleenValue : 0;
          return forkMug && valueForkMug > valueRaw ? [[].concat(helpers, [forkMug, menuItem]), valueForkMug + valueSpleen] : [[].concat(helpers, [menuItem]), valueRaw + valueSpleen];
        }
        /**
         * Plan an individual organ.
         *
         * @param organ Organ to plan
         * @param capacity Organ capacity.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair of [value, menu items and quantities].
         */
      }, {
        key: "planOrgan",
        value: function planOrgan(organ, capacity) {
          var _this = this;
          var overrideModifiers = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var submenu = this.menu.filter(function(menuItem) {
            return menuItem.organ === organ && (0, import_kolmafia77.myLevel)() >= menuItem.item.levelreq;
          });
          var knapsackValues = submenu.map(function(menuItem) {
            return [].concat(_toConsumableArray21(_this.consumptionHelpersAndValue(menuItem, overrideModifiers)), [menuItem.size, menuItem.maximum]);
          });
          return knapsack(knapsackValues, capacity);
        }
        /**
         * Plan organs.
         *
         * @param organCapacities Organ capacities.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair of [value, menu items and quantities].
         */
      }, {
        key: "planOrgans",
        value: function planOrgans(organCapacities) {
          var _this = this;
          var _ref5;
          var overrideModifiers = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var valuePlans = organCapacities.map(function(_ref) {
            var _ref2 = _slicedToArray24(_ref, 2), organ = _ref2[0], capacity = _ref2[1];
            return _this.planOrgan(organ, capacity, overrideModifiers);
          });
          return [sum(valuePlans, function(_ref3) {
            var _ref4 = _slicedToArray24(_ref3, 1), value = _ref4[0];
            return value;
          }), (_ref5 = []).concat.apply(_ref5, _toConsumableArray21(valuePlans.map(function(_ref6) {
            var _ref7 = _slicedToArray24(_ref6, 2), plan = _ref7[1];
            return plan;
          })))];
        }
        /**
         * Plan organs, retrying with and without each trial item. Runtime is
         * proportional to 2 ^ trialItems.length.
         *
         * @param organCapacities Organ capacities.
         * @param trialItems Items to rerun solver with and without.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair of [value, menu items and quantities].
         */
      }, {
        key: "planOrgansWithTrials",
        value: function planOrgansWithTrials(organCapacities, trialItems, overrideModifiers) {
          if (trialItems.length === 0) {
            return this.planOrgans(organCapacities, overrideModifiers);
          }
          var _trialItems$ = _slicedToArray24(trialItems[0], 2), trialItem = _trialItems$[0], organSizes = _trialItems$[1];
          if (trialItem.maximum !== void 0 && trialItem.maximum <= 0) {
            return this.planOrgansWithTrials(organCapacities, trialItems.slice(1), overrideModifiers);
          }
          var organCapacitiesWithMap = new Map(organCapacities);
          var _iterator = _createForOfIteratorHelper11(organSizes), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var _step$value = _slicedToArray24(_step.value, 2), organ = _step$value[0], size = _step$value[1];
              var current2 = organCapacitiesWithMap.get(organ);
              if (current2 === void 0) {
                return this.planOrgansWithTrials(organCapacities, trialItems.slice(1), overrideModifiers);
              }
              organCapacitiesWithMap.set(organ, current2 - size);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          var organCapacitiesWith = _toConsumableArray21(organCapacitiesWithMap);
          var isRefinedPalate = trialItem.item === $item(_templateObject3910 || (_templateObject3910 = _taggedTemplateLiteral72(["pocket wish"]))) && trialItem.effect === $effect(_templateObject4010 || (_templateObject4010 = _taggedTemplateLiteral72(["Refined Palate"]))) || trialItem.item === $item(_templateObject4113 || (_templateObject4113 = _taggedTemplateLiteral72(["toasted brie"])));
          var isGarish = trialItem.item === $item(_templateObject4212 || (_templateObject4212 = _taggedTemplateLiteral72(["pocket wish"]))) && trialItem.effect === $effect(_templateObject4311 || (_templateObject4311 = _taggedTemplateLiteral72(["Gar-ish"]))) || trialItem.item === $item(_templateObject4410 || (_templateObject4410 = _taggedTemplateLiteral72(["potion of the field gar"])));
          var _this$planOrgansWithT = this.planOrgansWithTrials(organCapacities, trialItems.slice(1), overrideModifiers), _this$planOrgansWithT2 = _slicedToArray24(_this$planOrgansWithT, 2), valueWithout = _this$planOrgansWithT2[0], planWithout = _this$planOrgansWithT2[1];
          var _this$planOrgansWithT3 = this.planOrgansWithTrials(organCapacitiesWith, trialItems.slice(1), _objectSpread9(_objectSpread9(_objectSpread9({}, overrideModifiers), isRefinedPalate ? {
            refinedPalate: true
          } : {}), isGarish ? {
            garish: true
          } : {})), _this$planOrgansWithT4 = _slicedToArray24(_this$planOrgansWithT3, 2), valueWith = _this$planOrgansWithT4[0], planWith = _this$planOrgansWithT4[1];
          var _this$consumptionHelp = this.consumptionHelpersAndValue(trialItem, {}), _this$consumptionHelp2 = _slicedToArray24(_this$consumptionHelp, 2), helpersAndItem = _this$consumptionHelp2[0], value = _this$consumptionHelp2[1];
          return valueWithout > valueWith + value ? [valueWithout, planWithout] : [valueWith + value, [].concat(_toConsumableArray21(planWith), [[helpersAndItem, 1]])];
        }
      }]);
      return DietPlanner2;
    }();
    interactingItems = [[$item(_templateObject4510 || (_templateObject4510 = _taggedTemplateLiteral72(["spice melange"]))), [["food", -3], ["booze", -3]]], [$item(_templateObject4610 || (_templateObject4610 = _taggedTemplateLiteral72(["Ultra Mega Sour Ball"]))), [["food", -3], ["booze", -3]]], [$item(_templateObject4710 || (_templateObject4710 = _taggedTemplateLiteral72(["The Plumber's mushroom stew"]))), [["food", 3], ["booze", -1]]], [$item(_templateObject4810 || (_templateObject4810 = _taggedTemplateLiteral72(["The Mad Liquor"]))), [["food", -1], ["booze", 3]]], [$item(_templateObject4910 || (_templateObject4910 = _taggedTemplateLiteral72(["Doc Clock's thyme cocktail"]))), [["food", -2], ["booze", 4]]], [$item(_templateObject5010 || (_templateObject5010 = _taggedTemplateLiteral72(["Mr. Burnsger"]))), [["food", 4], ["booze", -2]]], [$effect(_templateObject5111 || (_templateObject5111 = _taggedTemplateLiteral72(["Refined Palate"]))), []], [$item(_templateObject5211 || (_templateObject5211 = _taggedTemplateLiteral72(["toasted brie"]))), [["food", 2]]], [$effect(_templateObject5310 || (_templateObject5310 = _taggedTemplateLiteral72(["Gar-ish"]))), []], [$item(_templateObject5410 || (_templateObject5410 = _taggedTemplateLiteral72(["potion of the field gar"]))), []]];
    DietEntry = /* @__PURE__ */ function() {
      function DietEntry2(menuItems, quantity) {
        _classCallCheck15(this, DietEntry2);
        _defineProperty20(this, "quantity", void 0);
        _defineProperty20(this, "menuItems", void 0);
        this.menuItems = Object.freeze(menuItems);
        this.quantity = quantity;
      }
      _createClass15(DietEntry2, [{
        key: "target",
        value: function target() {
          return this.menuItems[this.menuItems.length - 1];
        }
      }, {
        key: "helpers",
        value: function helpers() {
          if (this.menuItems.length > 1) {
            return this.menuItems.slice(0, -1);
          }
          return [];
        }
      }, {
        key: "expectedAdventures",
        value: function expectedAdventures(diet) {
          {
            if (this.menuItems.length === 0 || this.quantity === 0) {
              return 0;
            } else {
              var items = this.menuItems.map(function(m) {
                return m.item;
              });
              var targetItem = this.menuItems[this.menuItems.length - 1].item;
              var fork = (0, import_kolmafia77.itemType)(targetItem) === "food" && items.includes($item(_templateObject574 || (_templateObject574 = _taggedTemplateLiteral72(["Ol' Scratch's salad fork"]))));
              var mug = (0, import_kolmafia77.itemType)(targetItem) === "booze" && items.includes($item(_templateObject584 || (_templateObject584 = _taggedTemplateLiteral72(["Frosty's frosty mug"]))));
              return this.quantity * _expectedAdventures(this.menuItems[this.menuItems.length - 1], {
                forkMug: fork || mug,
                seasoning: items.includes($item(_templateObject594 || (_templateObject594 = _taggedTemplateLiteral72(["Special Seasoning"])))),
                whetStone: items.includes($item(_templateObject604 || (_templateObject604 = _taggedTemplateLiteral72(["whet stone"])))),
                aioli: items.includes($item(_templateObject6110 || (_templateObject6110 = _taggedTemplateLiteral72(["mini kiwi aioli"])))),
                mayoflex: items.includes(Mayo.flex),
                refinedPalate: diet.refinedPalate,
                garish: diet.garish,
                saucemaven: diet.saucemaven,
                pinkyRing: diet.pinkyRing,
                tuxedoShirt: diet.tuxedoShirt
              });
            }
          }
        }
      }, {
        key: "expectedValue",
        value: function expectedValue(mpa, diet) {
          var method = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "gross";
          var gross = mpa * this.expectedAdventures(diet) + this.quantity * sum(this.menuItems, function(menuItem) {
            var _menuItem$additionalV3;
            return (_menuItem$additionalV3 = menuItem.additionalValue) !== null && _menuItem$additionalV3 !== void 0 ? _menuItem$additionalV3 : 0;
          });
          if (method === "gross") {
            return gross;
          } else {
            return gross - this.expectedPrice();
          }
        }
      }, {
        key: "expectedPrice",
        value: function expectedPrice() {
          return this.quantity * sum(this.menuItems, function(menuItem) {
            return menuItem.price();
          });
        }
      }]);
      return DietEntry2;
    }();
    Diet = /* @__PURE__ */ function() {
      function Diet2() {
        var entries = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        _classCallCheck15(this, Diet2);
        _defineProperty20(this, "entries", void 0);
        this.entries = entries;
      }
      _createClass15(Diet2, [{
        key: "refinedPalate",
        get: function get4() {
          return this.entries.some(function(dietEntry) {
            return dietEntry.menuItems.some(function(trialItem) {
              return trialItem.item === $item(_templateObject6210 || (_templateObject6210 = _taggedTemplateLiteral72(["pocket wish"]))) && trialItem.effect === $effect(_templateObject6310 || (_templateObject6310 = _taggedTemplateLiteral72(["Refined Palate"]))) || trialItem.item === $item(_templateObject6410 || (_templateObject6410 = _taggedTemplateLiteral72(["toasted brie"])));
            });
          });
        }
      }, {
        key: "garish",
        get: function get4() {
          return this.entries.some(function(dietEntry) {
            return dietEntry.menuItems.some(function(trialItem) {
              return trialItem.item === $item(_templateObject654 || (_templateObject654 = _taggedTemplateLiteral72(["pocket wish"]))) && trialItem.effect === $effect(_templateObject664 || (_templateObject664 = _taggedTemplateLiteral72(["Gar-ish"]))) || trialItem.item === $item(_templateObject674 || (_templateObject674 = _taggedTemplateLiteral72(["potion of the field gar"])));
            });
          });
        }
      }, {
        key: "saucemaven",
        get: function get4() {
          return have($skill(_templateObject684 || (_templateObject684 = _taggedTemplateLiteral72(["Saucemaven"]))));
        }
      }, {
        key: "tuxedoShirt",
        get: function get4() {
          return have($item(_templateObject694 || (_templateObject694 = _taggedTemplateLiteral72(["tuxedo shirt"])))) && (0, import_kolmafia77.canEquip)($item(_templateObject704 || (_templateObject704 = _taggedTemplateLiteral72(["tuxedo shirt"]))));
        }
      }, {
        key: "pinkyRing",
        get: function get4() {
          return have($item(_templateObject7110 || (_templateObject7110 = _taggedTemplateLiteral72(["mafia pinky ring"])))) && (0, import_kolmafia77.canEquip)($item(_templateObject7210 || (_templateObject7210 = _taggedTemplateLiteral72(["mafia pinky ring"]))));
        }
      }, {
        key: "expectedAdventures",
        value: function expectedAdventures() {
          var _this = this;
          return sum(this.entries, function(dietEntry) {
            return dietEntry.expectedAdventures(_this);
          });
        }
      }, {
        key: "expectedValue",
        value: function expectedValue(mpa) {
          var _this = this;
          var method = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "gross";
          return sum(this.entries, function(dietEntry) {
            return dietEntry.expectedValue(mpa, _this, method);
          });
        }
      }, {
        key: "expectedPrice",
        value: function expectedPrice() {
          return sum(this.entries, function(dietEntry) {
            return dietEntry.expectedPrice();
          });
        }
      }, {
        key: "copy",
        value: function copy() {
          return new Diet2(_toConsumableArray21(this.entries));
        }
      }], [{
        key: "from",
        value: function from(rawDiet) {
          var diet = rawDiet.map(function(item14) {
            var _item = _slicedToArray24(item14, 2), menuItems = _item[0], quantity = _item[1];
            return new DietEntry(menuItems, quantity);
          });
          return new Diet2(diet);
        }
      }, {
        key: "plan",
        value: function plan(mpa, menu) {
          var organCapacities = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
            food: "auto",
            booze: "auto",
            spleen: "auto"
          };
          var food = organCapacities.food, booze = organCapacities.booze, spleen = organCapacities.spleen;
          var plannerCapacity = [];
          if (food) {
            plannerCapacity.push(["food", food === "auto" ? null : food]);
          }
          if (booze) {
            plannerCapacity.push(["booze", booze === "auto" ? null : booze]);
          }
          if (spleen) {
            plannerCapacity.push(["spleen item", spleen === "auto" ? null : spleen]);
          }
          return Diet2.from(planDiet(mpa, menu, plannerCapacity));
        }
      }]);
      return Diet2;
    }();
  }
});

// node_modules/libram/dist/Dungeon.js
function _taggedTemplateLiteral73(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _createForOfIteratorHelper12(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray37(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _toConsumableArray22(arr) {
  return _arrayWithoutHoles22(arr) || _iterableToArray22(arr) || _unsupportedIterableToArray37(arr) || _nonIterableSpread22();
}
function _nonIterableSpread22() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray37(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray37(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray37(o, minLen);
}
function _iterableToArray22(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles22(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray37(arr);
}
function _arrayLikeToArray37(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck16(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties16(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey22(descriptor.key), descriptor);
  }
}
function _createClass16(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties16(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties16(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty21(obj, key, value) {
  key = _toPropertyKey22(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey22(t) {
  var i = _toPrimitive22(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive22(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var import_kolmafia78, _templateObject559, _templateObject2136, _templateObject3125, Dungeon, Dreadsylvania, Hobopolis, SlimeTube;
var init_Dungeon = __esm({
  "node_modules/libram/dist/Dungeon.js": function() {
    import_kolmafia78 = require("kolmafia");
    init_Clan();
    init_lib();
    init_template_string();
    init_utils();
    Dungeon = /* @__PURE__ */ function() {
      function Dungeon2(name_, loot, openAction, closeAction, openCost, openImage, closedImage) {
        _classCallCheck16(this, Dungeon2);
        _defineProperty21(this, "name_", void 0);
        _defineProperty21(this, "loot", void 0);
        _defineProperty21(this, "openAction", void 0);
        _defineProperty21(this, "closeAction", void 0);
        _defineProperty21(this, "openCost", void 0);
        _defineProperty21(this, "openImage", void 0);
        _defineProperty21(this, "closedImage", void 0);
        this.name_ = name_;
        this.loot = loot;
        this.openAction = openAction;
        this.closeAction = closeAction;
        this.openCost = openCost;
        this.openImage = openImage;
        this.closedImage = closedImage;
      }
      _createClass16(Dungeon2, [{
        key: "possibleLoot",
        get: function get4() {
          return _toConsumableArray22(this.loot);
        }
      }, {
        key: "name",
        get: function get4() {
          return this.name_;
        }
      }, {
        key: "distribute",
        value: function distribute(idOrname_) {
          var _this = this;
          var loot = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.loot;
          var distributeAllOfAGivenItem = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !(loot instanceof Map);
          var player = getPlayerFromIdOrName(idOrname_);
          var lootList = loot instanceof Map ? countedMapToArray(loot) : Array.isArray(loot) ? loot : [loot];
          var badLoot = lootList.find(function(lootItem) {
            return !_this.loot.includes(lootItem);
          });
          if (badLoot) {
            throw new Error("".concat(badLoot, " is not a valid piece of dungeon loot"));
          }
          var pageText = (0, import_kolmafia78.visitUrl)("clan_basement.php");
          if (!pageText.match(new RegExp(player.name, "i"))) {
            throw new Error("".concat(player.name, " cannot be distributed loot from ").concat((0, import_kolmafia78.getClanName)()));
          }
          var itemname_s = (0, import_kolmafia78.xpath)(pageText, "//tr/td[2]/b/text()");
          var whichLoots = (0, import_kolmafia78.xpath)(pageText, '//form[@action="clan_basement.php"]//input[@type="hidden"][@name_="whichloot"]/@value');
          itemname_s.forEach(function(itemname_, index) {
            if (lootList.includes((0, import_kolmafia78.toItem)(itemname_))) {
              (0, import_kolmafia78.visitUrl)("clan_basement.php?whichloot=".concat(whichLoots[index], "&recipient=").concat(player.id));
              if (!distributeAllOfAGivenItem) lootList.splice(lootList.indexOf((0, import_kolmafia78.toItem)(itemname_)));
            }
          });
        }
        /**
         * Close this dungeon
         *
         * @returns Whether the dungeon is now closed
         */
      }, {
        key: "close",
        value: function close() {
          (0, import_kolmafia78.visitUrl)("clan_basement.php?action=".concat(this.closeAction, "&confirm=true"), true);
          var pageText = (0, import_kolmafia78.visitUrl)("clan_basement.php");
          return pageText.includes(this.closedImage);
        }
        /**
         * Open an instance of this dungeon
         *
         * @param paymentPolicy How much meat should we put into the clan stash to open this dungeon?
         * @returns Whether the dungeon is now open
         */
      }, {
        key: "open",
        value: function open() {
          var paymentPolicy = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "Difference";
          var pageText = (0, import_kolmafia78.visitUrl)("clan_basement.php");
          if (pageText.includes(this.openImage)) return true;
          var clan = Clan.get();
          if (paymentPolicy === "All") {
            clan.putMeatInCoffer(this.openCost);
          } else {
            var stashMeat = clan.getMeatInCoffer();
            var payDifference = this.openCost - stashMeat;
            if (payDifference > 0) {
              if (paymentPolicy === "None") return false;
              clan.putMeatInCoffer(payDifference);
            }
          }
          (0, import_kolmafia78.visitUrl)("clan_basement.php?action=".concat(this.openAction), true);
          return (0, import_kolmafia78.visitUrl)("clan_basement.php").includes(this.openImage);
        }
        /**
         * @returns A counted map of all loot from this dungeon eligible for distribution
         */
      }, {
        key: "findLoot",
        value: function findLoot() {
          var result = /* @__PURE__ */ new Map();
          var pageText = (0, import_kolmafia78.visitUrl)("clan_basement.php");
          var _iterator = _createForOfIteratorHelper12(this.loot), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var _pageText$match$lengt, _pageText$match;
              var lootItem = _step.value;
              result.set(lootItem, (_pageText$match$lengt = (_pageText$match = pageText.match(new RegExp(lootItem.name, "g"))) === null || _pageText$match === void 0 ? void 0 : _pageText$match.length) !== null && _pageText$match$lengt !== void 0 ? _pageText$match$lengt : 0);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          return result;
        }
      }]);
      return Dungeon2;
    }();
    Dreadsylvania = new Dungeon("Dreadsylvania", $items(_templateObject559 || (_templateObject559 = _taggedTemplateLiteral73(["Great Wolf's headband, Great Wolf's right paw, Great Wolf's left paw, Great Wolf's lice, Great Wolf's rocket launcher, Great Wolf's beastly trousers, Drapes-You-Regally, Warms-Your-Tush, Covers-Your-Head, Protects-Your-Junk, Quiets-Your-Steps, Helps-You-Sleep, Mayor Ghost's khakis, Mayor Ghost's cloak, Mayor Ghost's toupee, Mayor Ghost's scissors, Mayor Ghost's sash, Mayor Ghost's gavel, zombie mariachi hat, zombie accordion, zombie mariachi pants, HOA regulation book, HOA zombie eyes, HOA citation pad, Unkillable Skeleton's skullcap, Unkillable Skeleton's shinguards, Unkillable Skeleton's breastplate, Unkillable Skeleton's shield, Unkillable Skeleton's sawsword, Unkillable Skeleton's restless leg, skull capacitor, Thunkula's drinking cap, Drunkula's silky pants, Drunkula's cape, Drunkula's ring of haze, Drunkula's wineglass, Drunkula's bell, bottle of Bloodweiser, bottle of Bloodweiser, bottle of Bloodweiser, bottle of Bloodweiser, electric Kool-Aid, electric Kool-Aid, electric Kool-Aid, electric Kool-Aid, ghost pepper, ghost pepper, ghost pepper, ghost pepper, Gets-You-Drunk, Gets-You-Drunk, Gets-You-Drunk, Gets-You-Drunk, wriggling severed nose, wriggling severed nose, wriggling severed nose, wriggling severed nose, Hunger\u2122 Sauce, Hunger\u2122 Sauce, Hunger\u2122 Sauce, Hunger\u2122 Sauce"]))), "translatemap", "foldmap", 1e6, "dvmap.gif", "foldmap.gif");
    Hobopolis = new Dungeon("Hobopolis", $items(_templateObject2136 || (_templateObject2136 = _taggedTemplateLiteral73(["Ol' Scratch's ash can, Ol' Scratch's ol' britches, Ol' Scratch's stovepipe hat, Ol' Scratch's infernal pitchfork, Ol' Scratch's manacles, Ol' Scratch's stove door, Frosty's carrot, Frosty's nailbat, Frosty's old silk hat, Frosty's arm, Frosty's iceball, Frosty's snowball sack, Oscus's dumpster waders, Oscus's pelt, Wand of Oscus, Oscus's flypaper pants, Oscus's garbage can lid, Oscus's neverending soda, Zombo's grievous greaves, Zombo's shield, Zombo's skullcap, Zombo's empty eye, Zombo's shoulder blade, Zombo's skull ring, Chester's bag of candy, Chester's cutoffs, Chester's moustache, Chester's Aquarius medallion, Chester's muscle shirt, Chester's sunglasses, Hodgman's bow tie, Hodgman's porkpie hat, Hodgman's lobsterskin pants, Hodgman's almanac, Hodgman's lucky sock, Hodgman's metal detector, Hodgman's varcolac paw, Hodgman's harmonica, Hodgman's garbage sticker, Hodgman's cane, Hodgman's whackin' stick, Hodgman's disgusting technicolor overcoat, Hodgman's imaginary hamster"]))), "cleansewer", "floodsewer", 1e6, "opengrate.gif", "sewergrate.gif");
    SlimeTube = new Dungeon("The Slime Tube", $items(_templateObject3125 || (_templateObject3125 = _taggedTemplateLiteral73(["slime-soaked brain, slime-soaked hypophysis, slime-soaked sweat gland, squirming Slime larva, caustic slime nodule, caustic slime nodule, hardened slime belt, hardened slime hat, hardened slime pants"]))), "cleanspot", "sealtube", 25e4, "slimehole.gif", "greasespot.gif");
  }
});

// node_modules/libram/dist/mood.js
function ownKeys10(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread10(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys10(Object(t), true).forEach(function(r2) {
      _defineProperty22(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys10(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _createForOfIteratorHelper13(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray38(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray38(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray38(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray38(o, minLen);
}
function _arrayLikeToArray38(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral74(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _callSuper4(t, o, e) {
  return o = _getPrototypeOf4(o), _possibleConstructorReturn4(t, _isNativeReflectConstruct4() ? Reflect.construct(o, e || [], _getPrototypeOf4(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn4(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized4(self);
}
function _assertThisInitialized4(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _isNativeReflectConstruct4() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct4 = function _isNativeReflectConstruct9() {
    return !!t;
  })();
}
function _getPrototypeOf4(o) {
  _getPrototypeOf4 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf9(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf4(o);
}
function _inherits5(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass) _setPrototypeOf5(subClass, superClass);
}
function _setPrototypeOf5(o, p) {
  _setPrototypeOf5 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf10(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf5(o, p);
}
function _defineProperty22(obj, key, value) {
  key = _toPropertyKey23(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _classCallCheck17(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties17(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey23(descriptor.key), descriptor);
  }
}
function _createClass17(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties17(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties17(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey23(t) {
  var i = _toPrimitive23(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive23(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var import_kolmafia79, _OscusSoda, _templateObject560, _templateObject2137, _MagicalSausages, _templateObject3126, _templateObject4106, _templateObject561, _templateObject651, _templateObject747, _templateObject839, _templateObject933, _templateObject1028, MpSource, OscusSoda, MagicalSausages, MoodElement, SkillMoodElement, PotionMoodElement, GenieMoodElement, CustomMoodElement, AsdonMoodElement, Mood;
var init_mood = __esm({
  "node_modules/libram/dist/mood.js": function() {
    import_kolmafia79 = require("kolmafia");
    init_lib();
    init_property();
    init_resources();
    init_template_string();
    init_utils();
    MpSource = /* @__PURE__ */ function() {
      function MpSource2() {
        _classCallCheck17(this, MpSource2);
      }
      _createClass17(MpSource2, [{
        key: "usesRemaining",
        value: function usesRemaining() {
          return 0;
        }
      }, {
        key: "availableMpMax",
        value: function availableMpMax() {
          return this.availableMpMin();
        }
      }]);
      return MpSource2;
    }();
    OscusSoda = /* @__PURE__ */ function(_MpSource) {
      _inherits5(OscusSoda2, _MpSource);
      function OscusSoda2() {
        _classCallCheck17(this, OscusSoda2);
        return _callSuper4(this, OscusSoda2, arguments);
      }
      _createClass17(OscusSoda2, [{
        key: "available",
        value: function available6() {
          return have($item(_templateObject560 || (_templateObject560 = _taggedTemplateLiteral74(["Oscus's neverending soda"]))));
        }
      }, {
        key: "usesRemaining",
        value: function usesRemaining() {
          return get("oscusSodaUsed") ? 0 : 1;
        }
      }, {
        key: "availableMpMin",
        value: function availableMpMin() {
          return this.available() && this.usesRemaining() > 0 ? 200 : 0;
        }
      }, {
        key: "availableMpMax",
        value: function availableMpMax() {
          return this.available() && this.usesRemaining() > 0 ? 300 : 0;
        }
      }, {
        key: "execute",
        value: function execute() {
          (0, import_kolmafia79.use)($item(_templateObject2137 || (_templateObject2137 = _taggedTemplateLiteral74(["Oscus's neverending soda"]))));
        }
      }]);
      return OscusSoda2;
    }(MpSource);
    _OscusSoda = OscusSoda;
    _defineProperty22(OscusSoda, "instance", new _OscusSoda());
    MagicalSausages = /* @__PURE__ */ function(_MpSource2) {
      _inherits5(MagicalSausages2, _MpSource2);
      function MagicalSausages2() {
        _classCallCheck17(this, MagicalSausages2);
        return _callSuper4(this, MagicalSausages2, arguments);
      }
      _createClass17(MagicalSausages2, [{
        key: "available",
        value: function available6() {
          return have($item(_templateObject3126 || (_templateObject3126 = _taggedTemplateLiteral74(["Kramco Sausage-o-Matic\u2122"]))));
        }
      }, {
        key: "usesRemaining",
        value: function usesRemaining() {
          var maxSausages = (0, import_kolmafia79.availableAmount)($item(_templateObject4106 || (_templateObject4106 = _taggedTemplateLiteral74(["magical sausage"])))) + (0, import_kolmafia79.availableAmount)($item(_templateObject561 || (_templateObject561 = _taggedTemplateLiteral74(["magical sausage casing"]))));
          return this.available() ? clamp(23 - get("_sausagesEaten"), 0, maxSausages) : 0;
        }
      }, {
        key: "availableMpMin",
        value: function availableMpMin() {
          return this.available() ? Math.min((0, import_kolmafia79.myMaxmp)(), 999) * this.usesRemaining() : 0;
        }
      }, {
        key: "execute",
        value: function execute() {
          var mpSpaceAvailable = (0, import_kolmafia79.myMaxmp)() - (0, import_kolmafia79.myMp)();
          if (mpSpaceAvailable < 700) return;
          var maxSausages = Math.min(this.usesRemaining(), Math.floor(((0, import_kolmafia79.myMaxmp)() - (0, import_kolmafia79.myMp)()) / Math.min((0, import_kolmafia79.myMaxmp)() - (0, import_kolmafia79.myMp)(), 999)));
          (0, import_kolmafia79.retrieveItem)(maxSausages, $item(_templateObject651 || (_templateObject651 = _taggedTemplateLiteral74(["magical sausage"]))));
          (0, import_kolmafia79.eat)(maxSausages, $item(_templateObject747 || (_templateObject747 = _taggedTemplateLiteral74(["magical sausage"]))));
        }
      }]);
      return MagicalSausages2;
    }(MpSource);
    _MagicalSausages = MagicalSausages;
    _defineProperty22(MagicalSausages, "instance", new _MagicalSausages());
    MoodElement = /* @__PURE__ */ function() {
      function MoodElement2() {
        _classCallCheck17(this, MoodElement2);
      }
      _createClass17(MoodElement2, [{
        key: "mpCostPerTurn",
        value: function mpCostPerTurn() {
          return 0;
        }
      }, {
        key: "turnIncrement",
        value: function turnIncrement() {
          return 1;
        }
      }]);
      return MoodElement2;
    }();
    SkillMoodElement = /* @__PURE__ */ function(_MoodElement) {
      _inherits5(SkillMoodElement2, _MoodElement);
      function SkillMoodElement2(skill) {
        var _this;
        _classCallCheck17(this, SkillMoodElement2);
        _this = _callSuper4(this, SkillMoodElement2);
        _defineProperty22(_assertThisInitialized4(_this), "skill", void 0);
        _this.skill = skill;
        return _this;
      }
      _createClass17(SkillMoodElement2, [{
        key: "mpCostPerTurn",
        value: function mpCostPerTurn() {
          var turns2 = (0, import_kolmafia79.turnsPerCast)(this.skill);
          return turns2 > 0 ? (0, import_kolmafia79.mpCost)(this.skill) / turns2 : 0;
        }
      }, {
        key: "turnIncrement",
        value: function turnIncrement() {
          return (0, import_kolmafia79.turnsPerCast)(this.skill);
        }
      }, {
        key: "execute",
        value: function execute(mood, ensureTurns) {
          var effect2 = (0, import_kolmafia79.toEffect)(this.skill);
          var initialTurns = (0, import_kolmafia79.haveEffect)(effect2);
          if (!(0, import_kolmafia79.haveSkill)(this.skill)) return false;
          if (initialTurns >= ensureTurns) return true;
          if (mood.options.songSlots.length > 0 && isSong(this.skill) && !have(effect2)) {
            var activeSongs = getActiveSongs();
            var _iterator = _createForOfIteratorHelper13(activeSongs), _step;
            try {
              var _loop = function _loop2() {
                var song2 = _step.value;
                var slot = mood.options.songSlots.find(function(slot2) {
                  return slot2.includes(song2);
                });
                if (!slot || slot.includes(effect2)) {
                  (0, import_kolmafia79.cliExecute)("shrug ".concat(song2));
                  return 1;
                }
              };
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                if (_loop()) break;
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
          }
          var oldRemainingCasts = -1;
          var remainingCasts = Math.ceil((ensureTurns - (0, import_kolmafia79.haveEffect)(effect2)) / (0, import_kolmafia79.turnsPerCast)(this.skill));
          while (remainingCasts > 0 && oldRemainingCasts !== remainingCasts) {
            var maxCasts = void 0;
            if ((0, import_kolmafia79.hpCost)(this.skill) > 0) {
              maxCasts = Math.max(0, Math.floor(((0, import_kolmafia79.myHp)() - 1) / (0, import_kolmafia79.hpCost)(this.skill)));
            } else {
              var cost = (0, import_kolmafia79.mpCost)(this.skill);
              maxCasts = Math.floor(Math.min(mood.availableMp(), (0, import_kolmafia79.myMp)()) / cost);
              if (maxCasts < remainingCasts) {
                var bestMp = Math.min(remainingCasts * (0, import_kolmafia79.mpCost)(this.skill), (0, import_kolmafia79.myMaxmp)());
                mood.moreMp(bestMp);
                maxCasts = Math.floor(Math.min(mood.availableMp(), (0, import_kolmafia79.myMp)()) / cost);
              }
            }
            var casts = clamp(remainingCasts, 0, Math.min(100, maxCasts));
            (0, import_kolmafia79.useSkill)(casts, this.skill);
            oldRemainingCasts = remainingCasts;
            remainingCasts = Math.ceil((ensureTurns - (0, import_kolmafia79.haveEffect)(effect2)) / (0, import_kolmafia79.turnsPerCast)(this.skill));
          }
          return (0, import_kolmafia79.haveEffect)(effect2) > ensureTurns;
        }
      }]);
      return SkillMoodElement2;
    }(MoodElement);
    PotionMoodElement = /* @__PURE__ */ function(_MoodElement2) {
      _inherits5(PotionMoodElement2, _MoodElement2);
      function PotionMoodElement2(potion, maxPricePerTurn) {
        var _this2;
        _classCallCheck17(this, PotionMoodElement2);
        _this2 = _callSuper4(this, PotionMoodElement2);
        _defineProperty22(_assertThisInitialized4(_this2), "potion", void 0);
        _defineProperty22(_assertThisInitialized4(_this2), "maxPricePerTurn", void 0);
        _this2.potion = potion;
        _this2.maxPricePerTurn = maxPricePerTurn;
        return _this2;
      }
      _createClass17(PotionMoodElement2, [{
        key: "execute",
        value: function execute(mood, ensureTurns) {
          var effect2 = (0, import_kolmafia79.effectModifier)(this.potion, "Effect");
          var effectTurns = (0, import_kolmafia79.haveEffect)(effect2);
          var turnsPerUse = (0, import_kolmafia79.numericModifier)(this.potion, "Effect Duration");
          if ((0, import_kolmafia79.mallPrice)(this.potion) > this.maxPricePerTurn * turnsPerUse) {
            return false;
          }
          if (effectTurns < ensureTurns) {
            var uses = Math.floor((ensureTurns - effectTurns) / turnsPerUse);
            var quantityToBuy = clamp(uses - (0, import_kolmafia79.availableAmount)(this.potion), 0, 100);
            (0, import_kolmafia79.buy)(quantityToBuy, this.potion, Math.floor(this.maxPricePerTurn * turnsPerUse));
            var quantityToUse = clamp(uses, 0, (0, import_kolmafia79.availableAmount)(this.potion));
            (0, import_kolmafia79.use)(quantityToUse, this.potion);
          }
          var remainingDifference = ensureTurns - (0, import_kolmafia79.haveEffect)(effect2);
          if (remainingDifference > 0) {
            var maxPrice = Math.floor(this.maxPricePerTurn * remainingDifference);
            if ((0, import_kolmafia79.mallPrice)(this.potion) <= maxPrice) {
              if ((0, import_kolmafia79.availableAmount)(this.potion) || (0, import_kolmafia79.buy)(1, this.potion, maxPrice)) {
                (0, import_kolmafia79.use)(1, this.potion);
              }
            }
          }
          return (0, import_kolmafia79.haveEffect)(effect2) >= ensureTurns;
        }
      }]);
      return PotionMoodElement2;
    }(MoodElement);
    GenieMoodElement = /* @__PURE__ */ function(_MoodElement3) {
      _inherits5(GenieMoodElement2, _MoodElement3);
      function GenieMoodElement2(effect2) {
        var _this3;
        _classCallCheck17(this, GenieMoodElement2);
        _this3 = _callSuper4(this, GenieMoodElement2);
        _defineProperty22(_assertThisInitialized4(_this3), "effect", void 0);
        _this3.effect = effect2;
        return _this3;
      }
      _createClass17(GenieMoodElement2, [{
        key: "execute",
        value: function execute(mood, ensureTurns) {
          if ((0, import_kolmafia79.haveEffect)(this.effect) >= ensureTurns) return true;
          var neededWishes = Math.ceil(((0, import_kolmafia79.haveEffect)(this.effect) - ensureTurns) / 20);
          var wishesToBuy = clamp(neededWishes - (0, import_kolmafia79.availableAmount)($item(_templateObject839 || (_templateObject839 = _taggedTemplateLiteral74(["pocket wish"])))), 0, 20);
          (0, import_kolmafia79.buy)(wishesToBuy, $item(_templateObject933 || (_templateObject933 = _taggedTemplateLiteral74(["pocket wish"]))), 5e4);
          var wishesToUse = clamp(neededWishes, 0, (0, import_kolmafia79.availableAmount)($item(_templateObject1028 || (_templateObject1028 = _taggedTemplateLiteral74(["pocket wish"])))));
          for (; wishesToUse > 0; wishesToUse--) {
            (0, import_kolmafia79.cliExecute)("genie effect ".concat(this.effect.name));
          }
          return (0, import_kolmafia79.haveEffect)(this.effect) >= ensureTurns;
        }
      }]);
      return GenieMoodElement2;
    }(MoodElement);
    CustomMoodElement = /* @__PURE__ */ function(_MoodElement4) {
      _inherits5(CustomMoodElement2, _MoodElement4);
      function CustomMoodElement2(effect2, gainEffect) {
        var _this4;
        _classCallCheck17(this, CustomMoodElement2);
        _this4 = _callSuper4(this, CustomMoodElement2);
        _defineProperty22(_assertThisInitialized4(_this4), "effect", void 0);
        _defineProperty22(_assertThisInitialized4(_this4), "gainEffect", void 0);
        _this4.effect = effect2;
        _this4.gainEffect = gainEffect !== null && gainEffect !== void 0 ? gainEffect : function() {
          return (0, import_kolmafia79.cliExecute)(effect2.default);
        };
        return _this4;
      }
      _createClass17(CustomMoodElement2, [{
        key: "execute",
        value: function execute(mood, ensureTurns) {
          var currentTurns = (0, import_kolmafia79.haveEffect)(this.effect);
          var lastCurrentTurns = -1;
          while (currentTurns < ensureTurns && currentTurns !== lastCurrentTurns) {
            this.gainEffect();
            lastCurrentTurns = currentTurns;
            currentTurns = (0, import_kolmafia79.haveEffect)(this.effect);
          }
          return (0, import_kolmafia79.haveEffect)(this.effect) > ensureTurns;
        }
      }]);
      return CustomMoodElement2;
    }(MoodElement);
    AsdonMoodElement = /* @__PURE__ */ function(_MoodElement5) {
      _inherits5(AsdonMoodElement2, _MoodElement5);
      function AsdonMoodElement2(effect2) {
        var _this5;
        var preferInventory = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        _classCallCheck17(this, AsdonMoodElement2);
        _this5 = _callSuper4(this, AsdonMoodElement2);
        _defineProperty22(_assertThisInitialized4(_this5), "effect", void 0);
        _defineProperty22(_assertThisInitialized4(_this5), "preferInventory", void 0);
        _this5.effect = effect2;
        _this5.preferInventory = preferInventory;
        return _this5;
      }
      _createClass17(AsdonMoodElement2, [{
        key: "execute",
        value: function execute(mood, ensureTurns) {
          return AsdonMartin_exports.drive(this.effect, ensureTurns, this.preferInventory);
        }
      }]);
      return AsdonMoodElement2;
    }(MoodElement);
    Mood = /* @__PURE__ */ function() {
      function Mood2() {
        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        _classCallCheck17(this, Mood2);
        _defineProperty22(this, "options", void 0);
        _defineProperty22(this, "elements", []);
        this.options = _objectSpread10(_objectSpread10({}, Mood2.defaultOptions), options);
      }
      _createClass17(Mood2, [{
        key: "availableMp",
        value: function availableMp() {
          return this.options.useNativeRestores ? Infinity : sum(this.options.mpSources, function(mpSource) {
            return mpSource.availableMpMin();
          }) + Math.max((0, import_kolmafia79.myMp)() - this.options.reserveMp, 0);
        }
      }, {
        key: "moreMp",
        value: function moreMp(minimumTarget) {
          if ((0, import_kolmafia79.myMp)() >= minimumTarget) return;
          var _iterator2 = _createForOfIteratorHelper13(this.options.mpSources), _step2;
          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
              var mpSource = _step2.value;
              if (mpSource.usesRemaining() > 0) {
                mpSource.execute();
                if ((0, import_kolmafia79.myMp)() >= minimumTarget) break;
              }
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
          if (this.options.useNativeRestores) {
            (0, import_kolmafia79.restoreMp)(minimumTarget);
          }
        }
        /**
         * Add a skill to the mood.
         *
         * @param skill Skill to add.
         * @returns This mood to enable chaining
         */
      }, {
        key: "skill",
        value: function skill(_skill) {
          this.elements.push(new SkillMoodElement(_skill));
          return this;
        }
        /**
         * Add an effect to the mood, with casting based on {effect.default}.
         *
         * @param effect Effect to add.
         * @param gainEffect How to gain the effect. Only runs if we don't have the effect.
         * @returns This mood to enable chaining
         */
      }, {
        key: "effect",
        value: function effect2(_effect, gainEffect) {
          var skill = (0, import_kolmafia79.toSkill)(_effect);
          if (!gainEffect && skill !== $skill.none) {
            this.skill(skill);
          } else {
            this.elements.push(new CustomMoodElement(_effect, gainEffect));
          }
          return this;
        }
        /**
         * Add a potion to the mood.
         *
         * @param potion Potion to add.
         * @param maxPricePerTurn Maximum price to pay per turn of the effect.
         * @returns This mood to enable chaining
         */
      }, {
        key: "potion",
        value: function potion(_potion, maxPricePerTurn) {
          this.elements.push(new PotionMoodElement(_potion, maxPricePerTurn));
          return this;
        }
        /**
         * Add an effect to acquire via pocket wishes to the mood.
         *
         * @param effect Effect to wish for in the mood.
         * @returns This mood to enable chaining
         */
      }, {
        key: "genie",
        value: function genie(effect2) {
          this.elements.push(new GenieMoodElement(effect2));
          return this;
        }
        /**
         * Add an Asdon Martin driving style to the mood.
         *
         * @param effect Driving style to add to the mood.
         * @returns This mood to enable chaining
         */
      }, {
        key: "drive",
        value: function drive2(effect2) {
          if (Object.values(AsdonMartin_exports.Driving).includes(effect2) && AsdonMartin_exports.installed()) {
            this.elements.push(new AsdonMoodElement(effect2));
          }
          return this;
        }
        /**
         * Execute the mood, trying to ensure {ensureTurns} of each effect.
         *
         * @param ensureTurns Turns of each effect to try and achieve.
         * @returns Whether or not we successfully got this many turns of every effect in the mood.
         */
      }, {
        key: "execute",
        value: function execute() {
          var ensureTurns = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
          var availableMp = this.availableMp();
          var totalMpPerTurn = sum(this.elements, function(element2) {
            return element2.mpCostPerTurn();
          });
          var potentialTurns = Math.floor(availableMp / totalMpPerTurn);
          var completeSuccess = true;
          var _iterator3 = _createForOfIteratorHelper13(this.elements), _step3;
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
              var element = _step3.value;
              var elementTurns = ensureTurns;
              if (element.mpCostPerTurn() > 0) {
                var elementPotentialTurns = Math.floor(potentialTurns / element.turnIncrement()) * element.turnIncrement();
                elementTurns = Math.min(ensureTurns, elementPotentialTurns);
              }
              completeSuccess = element.execute(this, elementTurns) && completeSuccess;
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
          this.moreMp(this.options.reserveMp);
          return completeSuccess;
        }
      }], [{
        key: "setDefaultOptions",
        value: (
          /**
           * Set default options for new Mood instances.
           *
           * @param options Default options for new Mood instances.
           */
          function setDefaultOptions(options) {
            Mood2.defaultOptions = _objectSpread10(_objectSpread10({}, Mood2.defaultOptions), options);
          }
        )
      }]);
      return Mood2;
    }();
    _defineProperty22(Mood, "defaultOptions", {
      songSlots: [],
      mpSources: [MagicalSausages.instance, OscusSoda.instance],
      reserveMp: 0,
      useNativeRestores: false
    });
  }
});

// node_modules/libram/dist/since.js
function _defineProperties18(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey24(descriptor.key), descriptor);
  }
}
function _createClass18(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties18(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties18(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey24(t) {
  var i = _toPrimitive24(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive24(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _classCallCheck18(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _callSuper5(t, o, e) {
  return o = _getPrototypeOf5(o), _possibleConstructorReturn5(t, _isNativeReflectConstruct5() ? Reflect.construct(o, e || [], _getPrototypeOf5(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn5(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized5(self);
}
function _assertThisInitialized5(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _inherits6(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass) _setPrototypeOf6(subClass, superClass);
}
function _wrapNativeSuper4(Class5) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper4 = function _wrapNativeSuper5(Class6) {
    if (Class6 === null || !_isNativeFunction4(Class6)) return Class6;
    if (typeof Class6 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class6)) return _cache.get(Class6);
      _cache.set(Class6, Wrapper);
    }
    function Wrapper() {
      return _construct4(Class6, arguments, _getPrototypeOf5(this).constructor);
    }
    Wrapper.prototype = Object.create(Class6.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });
    return _setPrototypeOf6(Wrapper, Class6);
  };
  return _wrapNativeSuper4(Class5);
}
function _construct4(t, e, r) {
  if (_isNativeReflectConstruct5()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && _setPrototypeOf6(p, r.prototype), p;
}
function _isNativeReflectConstruct5() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct5 = function _isNativeReflectConstruct9() {
    return !!t;
  })();
}
function _isNativeFunction4(fn) {
  try {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  } catch (e) {
    return typeof fn === "function";
  }
}
function _setPrototypeOf6(o, p) {
  _setPrototypeOf6 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf10(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf6(o, p);
}
function _getPrototypeOf5(o) {
  _getPrototypeOf5 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf9(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf5(o);
}
function getScriptName() {
  var _require$main;
  var scriptName2 = (_require$main = require.main) === null || _require$main === void 0 ? void 0 : _require$main.id;
  return scriptName2 ? "'".concat(scriptName2, "'") : "This script";
}
function sinceKolmafiaRevision(revision) {
  if (!Number.isInteger(revision)) {
    throw new TypeError("Invalid revision number ".concat(revision, " (must be an integer)"));
  }
  var currentRevision = (0, import_kolmafia80.getRevision)();
  if (currentRevision > 0 && currentRevision < revision) {
    throw new KolmafiaVersionError("".concat(getScriptName(), " requires revision r").concat(revision, " of kolmafia or higher (current: ").concat((0, import_kolmafia80.getRevision)(), "). Up-to-date builds can be found at https://ci.kolmafia.us/."));
  }
}
function sinceKolmafiaVersion(majorVersion, minorVersion) {
  if ((0, import_kolmafia80.getRevision)() >= 25720) {
    return;
  }
  if (!Number.isInteger(majorVersion)) {
    throw new TypeError("Invalid major version number ".concat(majorVersion, " (must be an integer)"));
  }
  if (!Number.isInteger(minorVersion)) {
    throw new TypeError("Invalid minor version number ".concat(minorVersion, " (must be an integer)"));
  }
  if (majorVersion > 21 || majorVersion === 20 && minorVersion > 9) {
    throw new Error("There were no versions released after 21.09. This command will always fail");
  }
  var versionStr = (0, import_kolmafia80.getVersion)();
  var versionStrMatch = /v(\d+)\.(\d+)/.exec(versionStr);
  if (!versionStrMatch) {
    throw new Error('Unexpected KoLmafia version string: "'.concat(versionStr, '". You may need to update the script.'));
  }
  var currentMajorVersion = Number(versionStrMatch[1]);
  var currentMinorVersion = Number(versionStrMatch[2]);
  if (currentMajorVersion < majorVersion || currentMajorVersion === majorVersion && currentMinorVersion < minorVersion) {
    throw new KolmafiaVersionError("".concat(getScriptName(), " requires version ").concat(majorVersion, ".").concat(minorVersion, " of kolmafia or higher (current: ").concat(currentMajorVersion, ".").concat(currentMinorVersion, "). Up-to-date builds can be found at https://ci.kolmafia.us/."));
  }
}
var import_kolmafia80, KolmafiaVersionError;
var init_since = __esm({
  "node_modules/libram/dist/since.js": function() {
    import_kolmafia80 = require("kolmafia");
    KolmafiaVersionError = /* @__PURE__ */ function(_Error) {
      _inherits6(KolmafiaVersionError2, _Error);
      function KolmafiaVersionError2(message) {
        var _this;
        _classCallCheck18(this, KolmafiaVersionError2);
        _this = _callSuper5(this, KolmafiaVersionError2, [message]);
        Object.setPrototypeOf(_assertThisInitialized5(_this), KolmafiaVersionError2.prototype);
        return _this;
      }
      return _createClass18(KolmafiaVersionError2);
    }(/* @__PURE__ */ _wrapNativeSuper4(Error));
    KolmafiaVersionError.prototype.name = "KolmafiaVersionError";
  }
});

// node_modules/libram/dist/url.js
function _toConsumableArray23(arr) {
  return _arrayWithoutHoles23(arr) || _iterableToArray23(arr) || _unsupportedIterableToArray39(arr) || _nonIterableSpread23();
}
function _nonIterableSpread23() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray23(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles23(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray39(arr);
}
function _slicedToArray25(arr, i) {
  return _arrayWithHoles25(arr) || _iterableToArrayLimit25(arr, i) || _unsupportedIterableToArray39(arr, i) || _nonIterableRest25();
}
function _nonIterableRest25() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit25(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles25(arr) {
  if (Array.isArray(arr)) return arr;
}
function _createForOfIteratorHelper14(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray39(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray39(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray39(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray39(o, minLen);
}
function _arrayLikeToArray39(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function fetchUrl(path3) {
  var query = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  var _options$method = options.method, method = _options$method === void 0 ? "POST" : _options$method;
  var url = buildUrl(path3, query);
  return (0, import_kolmafia81.visitUrl)(url, method === "POST", true);
}
function buildUrl(path3) {
  var query = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  var urlParams = Array.isArray(query) ? query : Object.entries(query);
  if (urlParams.length === 0) {
    return path3;
  }
  var chunks = [path3];
  var sep = path3.includes("?") ? "&" : "?";
  var _iterator = _createForOfIteratorHelper14(urlParams), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var param = _step.value;
      if (param.length !== 2) {
        throw new Error("Query parameter array may only contain pair elements");
      }
      var _param = _slicedToArray25(param, 2), key = _param[0], value = _param[1];
      chunks.push(sep);
      sep = "&";
      chunks.push(encodeURIComponent(key));
      if (value !== EMPTY_VALUE) {
        chunks.push("=");
        chunks.push(encodeURIComponent(value));
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return chunks.join("");
}
function combineQuery() {
  for (var _len = arguments.length, queries = new Array(_len), _key = 0; _key < _len; _key++) {
    queries[_key] = arguments[_key];
  }
  if (queries.length === 1) {
    return queries[0];
  }
  var result = [];
  for (var _i = 0, _queries = queries; _i < _queries.length; _i++) {
    var query = _queries[_i];
    if (Array.isArray(query)) {
      result.push.apply(result, _toConsumableArray23(query));
    } else {
      result.push.apply(result, _toConsumableArray23(Object.entries(query)));
    }
  }
  return result;
}
var import_kolmafia81, EMPTY_VALUE;
var init_url = __esm({
  "node_modules/libram/dist/url.js": function() {
    import_kolmafia81 = require("kolmafia");
    EMPTY_VALUE = Symbol("empty");
  }
});

// node_modules/libram/dist/Kmail.js
function _createForOfIteratorHelper15(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray40(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _toConsumableArray24(arr) {
  return _arrayWithoutHoles24(arr) || _iterableToArray24(arr) || _unsupportedIterableToArray40(arr) || _nonIterableSpread24();
}
function _nonIterableSpread24() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray24(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles24(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray40(arr);
}
function _slicedToArray26(arr, i) {
  return _arrayWithHoles26(arr) || _iterableToArrayLimit26(arr, i) || _unsupportedIterableToArray40(arr, i) || _nonIterableRest26();
}
function _nonIterableRest26() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray40(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray40(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray40(o, minLen);
}
function _arrayLikeToArray40(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit26(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles26(arr) {
  if (Array.isArray(arr)) return arr;
}
function _classCallCheck19(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties19(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey25(descriptor.key), descriptor);
  }
}
function _createClass19(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties19(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties19(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty23(obj, key, value) {
  key = _toPropertyKey25(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey25(t) {
  var i = _toPrimitive25(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive25(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var import_html_entities2, import_kolmafia82, Kmail;
var init_Kmail = __esm({
  "node_modules/libram/dist/Kmail.js": function() {
    import_html_entities2 = __toESM(require_lib(), 1);
    import_kolmafia82 = require("kolmafia");
    init_lib();
    init_url();
    init_utils();
    Kmail = /* @__PURE__ */ function() {
      function Kmail2(rawKmail) {
        _classCallCheck19(this, Kmail2);
        _defineProperty23(this, "id", void 0);
        _defineProperty23(this, "date", void 0);
        _defineProperty23(this, "type", void 0);
        _defineProperty23(this, "senderId", void 0);
        _defineProperty23(this, "senderName", void 0);
        _defineProperty23(this, "rawMessage", void 0);
        _defineProperty23(this, "_parsedMessageParts", void 0);
        this.id = Number(rawKmail.id);
        this.date = new Date(Number(rawKmail.azunixtime) * 1e3);
        this.type = rawKmail.type;
        this.senderId = Number(rawKmail.fromid);
        this.senderName = rawKmail.fromname;
        this.rawMessage = rawKmail.message;
      }
      _createClass19(Kmail2, [{
        key: "delete",
        value: function _delete() {
          return Kmail2.delete([this]) === 1;
        }
      }, {
        key: "_messageParts",
        get: function get4() {
          var _this$_parsedMessageP;
          return (_this$_parsedMessageP = this._parsedMessageParts) !== null && _this$_parsedMessageP !== void 0 ? _this$_parsedMessageP : this._parsedMessageParts = this._parseMessageParts();
        }
      }, {
        key: "_parseMessageParts",
        value: function _parseMessageParts() {
          var text = this.rawMessage;
          var insideText;
          if (this.type === "normal") {
            if (text.startsWith("<center>")) {
              var endIdx = text.indexOf("</center>");
              text = text.slice(endIdx + 9);
            }
          } else if (this.type === "giftshop") {
            var _text$split = text.split("<p>Inside Note:<p>");
            var _text$split2 = _slicedToArray26(_text$split, 2);
            text = _text$split2[0];
            insideText = _text$split2[1];
          }
          var split = function(s) {
            var idx = s.indexOf("<");
            if (idx === -1) return [s];
            return [s.slice(0, idx), s.slice(idx)];
          };
          var _split = split(text), _split2 = _slicedToArray26(_split, 2), outsideNote = _split2[0], _split2$ = _split2[1], outsideAttachments = _split2$ === void 0 ? null : _split2$;
          var _ref = insideText !== void 0 ? split(insideText) : [], _ref2 = _slicedToArray26(_ref, 2), _ref2$ = _ref2[0], insideNote = _ref2$ === void 0 ? null : _ref2$, _ref2$2 = _ref2[1], insideAttachments = _ref2$2 === void 0 ? null : _ref2$2;
          return {
            outsideNote: (0, import_html_entities2.decode)(outsideNote),
            outsideAttachments: outsideAttachments,
            insideNote: insideNote && (0, import_html_entities2.decode)(insideNote),
            insideAttachments: insideAttachments
          };
        }
        /**
         * Get message contents without any HTML from items or meat
         *
         * @returns Cleaned message contents
         */
      }, {
        key: "message",
        get: function get4() {
          var _this$_messageParts = this._messageParts, outsideNote = _this$_messageParts.outsideNote, insideNote = _this$_messageParts.insideNote;
          if (insideNote !== null) {
            return "".concat(outsideNote, "\n\nInside Note:\n").concat(insideNote);
          }
          return outsideNote;
        }
        /**
         * Get the note on the outside of the gift. If the kmail is not a gift,
         * this will be the entire message.
         *
         * @returns Note on the outside of the gift, or the entire message for non-gifts
         */
      }, {
        key: "outsideNote",
        get: function get4() {
          return this._messageParts.outsideNote;
        }
        /**
         * Get the note on the inside of the gift
         *
         * @returns Note on the inside of the gift
         */
      }, {
        key: "insideNote",
        get: function get4() {
          return this._messageParts.insideNote;
        }
        /**
         * Get items attached to the kmail
         *
         * @returns Map of items attached to the kmail and their quantities
         */
      }, {
        key: "items",
        value: function items() {
          var _this$_messageParts2 = this._messageParts, outsideAttachments = _this$_messageParts2.outsideAttachments, insideAttachments = _this$_messageParts2.insideAttachments;
          return extractItems("".concat(outsideAttachments).concat(insideAttachments));
        }
        /**
         * Get items attached to the outside of the gift, which should be
         * just the gift wrapper for giftshop items, and all items for normal kmails
         *
         * @returns Map of items attached to the kmail and their quantities
         */
      }, {
        key: "outsideItems",
        value: function outsideItems() {
          var outsideAttachments = this._messageParts.outsideAttachments;
          if (!outsideAttachments) return /* @__PURE__ */ new Map();
          return extractItems(outsideAttachments);
        }
        /**
         * Get items attached to the inside of the gift
         *
         * @returns Map of items attached to the kmail and their quantities
         */
      }, {
        key: "insideItems",
        value: function insideItems() {
          var insideAttachments = this._messageParts.insideAttachments;
          if (!insideAttachments) return /* @__PURE__ */ new Map();
          return extractItems(insideAttachments);
        }
        /**
         * Get meat attached to the kmail
         *
         * @returns Meat attached to the kmail
         */
      }, {
        key: "meat",
        value: function meat() {
          var _this$_messageParts3 = this._messageParts, outsideAttachments = _this$_messageParts3.outsideAttachments, insideAttachments = _this$_messageParts3.insideAttachments;
          if (!outsideAttachments && !insideAttachments) return 0;
          return (0, import_kolmafia82.extractMeat)("".concat(outsideAttachments).concat(insideAttachments));
        }
        /**
         * Reply to kmail
         *
         * @param message Message with which to reply
         * @param items Items to send
         * @param meat Meat to send
         * @see Kmail.send
         * @returns True if the kmail was successfully sent
         */
      }, {
        key: "reply",
        value: function reply() {
          var message = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
          var items = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
          var meat = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
          return Kmail2.send(this.senderId, message, items, meat);
        }
      }], [{
        key: "parse",
        value: (
          /**
           * Parses a kmail from KoL's native format
           *
           * @param rawKmail Kmail in the format supplies by api.php
           * @returns Parsed kmail
           */
          function parse(rawKmail) {
            return new Kmail2(rawKmail);
          }
        )
        /**
         * Returns all of the player's kmails
         *
         * @param count Number of kmails to fetch
         * @returns Parsed kmails
         */
      }, {
        key: "inbox",
        value: function inbox() {
          var count = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100;
          return JSON.parse((0, import_kolmafia82.visitUrl)("api.php?what=kmail&for=libram&count=".concat(count))).map(Kmail2.parse);
        }
        /**
         * Bulk delete kmails
         *
         * @param kmails Kmails to delete
         * @returns Number of kmails deleted
         */
      }, {
        key: "delete",
        value: function _delete(kmails) {
          var _results$match$, _results$match;
          var results = fetchUrl("messages.php", [["the_action", "delete"], ["box", "Inbox"], ["pwd", EMPTY_VALUE]].concat(_toConsumableArray24(kmails.map(function(k) {
            return ["sel".concat(k.id), "on"];
          }))));
          return Number((_results$match$ = (_results$match = results.match(/<td>(\d) messages? deleted.<\/td>/)) === null || _results$match === void 0 ? void 0 : _results$match[1]) !== null && _results$match$ !== void 0 ? _results$match$ : 0);
        }
      }, {
        key: "_genericSend",
        value: function _genericSend(to, message, items, meat, chunkSize, constructUrl, successString) {
          var m = meat;
          var sendableItems = _toConsumableArray24(arrayToCountedMap(items).entries()).filter(function(_ref3) {
            var _ref4 = _slicedToArray26(_ref3, 1), item14 = _ref4[0];
            return (0, import_kolmafia82.isGiftable)(item14);
          });
          var result = true;
          var chunks = chunk(sendableItems, chunkSize);
          var _iterator = _createForOfIteratorHelper15(chunks.length > 0 ? chunks : [null]), _step;
          try {
            var _loop = function _loop2() {
              var _c$length;
              var c = _step.value;
              var itemsQuery = {};
              if (c !== null) {
                c.forEach(function(_ref5, i) {
                  var _ref6 = _slicedToArray26(_ref5, 2), item14 = _ref6[0], quantity = _ref6[1];
                  itemsQuery["whichitem".concat(i + 1)] = item14.id;
                  itemsQuery["howmany".concat(i + 1)] = quantity;
                });
              }
              var _constructUrl = constructUrl({
                meat: m,
                chunkSize: (_c$length = c === null || c === void 0 ? void 0 : c.length) !== null && _c$length !== void 0 ? _c$length : 0
              }), path3 = _constructUrl.path, query = _constructUrl.query;
              var r = fetchUrl(path3, combineQuery(query, itemsQuery));
              if (r.includes("That player cannot receive Meat or items")) {
                return {
                  v: Kmail2.gift(to, message, items, meat)
                };
              }
              m = 0;
              result && (result = r.includes(successString));
            }, _ret;
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              _ret = _loop();
              if (_ret) return _ret.v;
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          return result;
        }
        /**
         * Sends a kmail to a player
         *
         * Sends multiple kmails if more than 11 unique item types are attached.
         * Ignores any ungiftable items.
         * Sends a gift package to players in run
         *
         * @param to The player name or id to receive the kmail
         * @param message The text contents of the message
         * @param items The items to be attached
         * @param meat The quantity of meat to be attached
         * @returns True if the kmail was successfully sent
         */
      }, {
        key: "send",
        value: function send(to) {
          var message = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
          var items = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
          var meat = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
          return Kmail2._genericSend(to, message, items, meat, 11, function(_ref7) {
            var meat2 = _ref7.meat;
            return {
              path: "sendmessage.php",
              query: {
                action: "send",
                pwd: EMPTY_VALUE,
                towho: to,
                message: message,
                sendmeat: meat2
              }
            };
          }, ">Message sent.</");
        }
        /**
         * Sends a gift to a player
         *
         * Sends multiple kmails if more than 3 unique item types are attached.
         * Ignores any ungiftable items.
         *
         * @param to The player name or id to receive the gift
         * @param message Message to send
         * @param items The items to be attached
         * @param meat The quantity of meat to be attached
         * @param insideNote The note on the inside of the gift
         * @returns True if the gift was successfully sent
         */
      }, {
        key: "gift",
        value: function gift(to) {
          var message = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
          var items = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
          var meat = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
          var insideNote = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "";
          return Kmail2._genericSend(to, message, items, meat, 3, function(_ref8) {
            var meat2 = _ref8.meat, chunkSize = _ref8.chunkSize;
            return {
              path: "town_sendgift.php",
              query: {
                action: "Yep.",
                pwd: EMPTY_VALUE,
                fromwhere: 0,
                note: message,
                insidenote: insideNote,
                towho: to,
                whichpackage: chunkSize,
                sendmeat: meat2
              }
            };
          }, ">Package sent.</");
        }
      }]);
      return Kmail2;
    }();
  }
});

// node_modules/libram/dist/console.js
var console_exports = {};
__export(console_exports, {
  error: function() {
    return error;
  },
  info: function() {
    return info;
  },
  log: function() {
    return log;
  },
  warn: function() {
    return warn;
  }
});
var import_kolmafia83, logColor, log, info, warn, error;
var init_console = __esm({
  "node_modules/libram/dist/console.js": function() {
    import_kolmafia83 = require("kolmafia");
    logColor = function(color) {
      return function() {
        for (var _len = arguments.length, args2 = new Array(_len), _key = 0; _key < _len; _key++) {
          args2[_key] = arguments[_key];
        }
        var output = args2.map(function(x) {
          return x.toString();
        }).join(" ");
        if (color) {
          (0, import_kolmafia83.print)(output, color);
        } else {
          (0, import_kolmafia83.print)(output);
        }
      };
    };
    log = logColor();
    info = logColor("blue");
    warn = logColor("red");
    error = logColor("red");
  }
});

// node_modules/libram/dist/session.js
function _classCallCheck20(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties20(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey26(descriptor.key), descriptor);
  }
}
function _createClass20(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties20(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties20(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty24(obj, key, value) {
  key = _toPropertyKey26(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey26(t) {
  var i = _toPrimitive26(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive26(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _createForOfIteratorHelper16(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray41(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _slicedToArray27(arr, i) {
  return _arrayWithHoles27(arr) || _iterableToArrayLimit27(arr, i) || _unsupportedIterableToArray41(arr, i) || _nonIterableRest27();
}
function _nonIterableRest27() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit27(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles27(arr) {
  if (Array.isArray(arr)) return arr;
}
function _taggedTemplateLiteral75(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray25(arr) {
  return _arrayWithoutHoles25(arr) || _iterableToArray25(arr) || _unsupportedIterableToArray41(arr) || _nonIterableSpread25();
}
function _nonIterableSpread25() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray41(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray41(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray41(o, minLen);
}
function _iterableToArray25(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles25(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray41(arr);
}
function _arrayLikeToArray41(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function mySessionItemsWrapper() {
  var sessionOnly = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  var manyToOne = function(primary, mapped) {
    return mapped.map(function(target) {
      return [target, primary];
    });
  };
  var foldable = function(item15) {
    return manyToOne(item15, getFoldGroup(item15));
  };
  var itemMappings = new Map([].concat(_toConsumableArray25(foldable($item(_templateObject565 || (_templateObject565 = _taggedTemplateLiteral75(["liar's pants"]))))), _toConsumableArray25(foldable($item(_templateObject2138 || (_templateObject2138 = _taggedTemplateLiteral75(["ice pick"]))))), _toConsumableArray25(manyToOne($item(_templateObject3127 || (_templateObject3127 = _taggedTemplateLiteral75(["Spooky Putty sheet"]))), [$item(_templateObject4107 || (_templateObject4107 = _taggedTemplateLiteral75(["Spooky Putty monster"])))].concat(_toConsumableArray25(getFoldGroup($item(_templateObject566 || (_templateObject566 = _taggedTemplateLiteral75(["Spooky Putty sheet"])))))))), _toConsumableArray25(foldable($item(_templateObject655 || (_templateObject655 = _taggedTemplateLiteral75(["stinky cheese sword"]))))), _toConsumableArray25(foldable($item(_templateObject748 || (_templateObject748 = _taggedTemplateLiteral75(["naughty paper shuriken"]))))), _toConsumableArray25(foldable($item(_templateObject840 || (_templateObject840 = _taggedTemplateLiteral75(["Loathing Legion knife"]))))), _toConsumableArray25(foldable($item(_templateObject934 || (_templateObject934 = _taggedTemplateLiteral75(["deceased crimbo tree"]))))), _toConsumableArray25(foldable($item(_templateObject1029 || (_templateObject1029 = _taggedTemplateLiteral75(["makeshift turban"]))))), _toConsumableArray25(foldable($item(_templateObject1126 || (_templateObject1126 = _taggedTemplateLiteral75(["turtle wax shield"]))))), _toConsumableArray25(foldable($item(_templateObject1225 || (_templateObject1225 = _taggedTemplateLiteral75(["metallic foil bow"]))))), _toConsumableArray25(foldable($item(_templateObject1323 || (_templateObject1323 = _taggedTemplateLiteral75(["ironic moustache"]))))), _toConsumableArray25(foldable($item(_templateObject1421 || (_templateObject1421 = _taggedTemplateLiteral75(["bugged balaclava"]))))), _toConsumableArray25(foldable($item(_templateObject1518 || (_templateObject1518 = _taggedTemplateLiteral75(["toggle switch (Bartend)"]))))), _toConsumableArray25(foldable($item(_templateObject1618 || (_templateObject1618 = _taggedTemplateLiteral75(["mushroom cap"]))))), _toConsumableArray25(manyToOne($item(_templateObject1718 || (_templateObject1718 = _taggedTemplateLiteral75(["can of Rain-Doh"]))), $items(_templateObject1818 || (_templateObject1818 = _taggedTemplateLiteral75(["empty Rain-Doh can"]))))), _toConsumableArray25(manyToOne($item(_templateObject1916 || (_templateObject1916 = _taggedTemplateLiteral75(["meteorite fragment"]))), $items(_templateObject2016 || (_templateObject2016 = _taggedTemplateLiteral75(["meteorite earring, meteorite necklace, meteorite ring"]))))), _toConsumableArray25(manyToOne($item(_templateObject2139 || (_templateObject2139 = _taggedTemplateLiteral75(["Sneaky Pete's leather jacket"]))), $items(_templateObject2218 || (_templateObject2218 = _taggedTemplateLiteral75(["Sneaky Pete's leather jacket (collar popped)"]))))), _toConsumableArray25(manyToOne($item(_templateObject2317 || (_templateObject2317 = _taggedTemplateLiteral75(["Boris's Helm"]))), $items(_templateObject2416 || (_templateObject2416 = _taggedTemplateLiteral75(["Boris's Helm (askew)"]))))), _toConsumableArray25(manyToOne($item(_templateObject2515 || (_templateObject2515 = _taggedTemplateLiteral75(["Jarlsberg's pan"]))), $items(_templateObject2614 || (_templateObject2614 = _taggedTemplateLiteral75(["Jarlsberg's pan (Cosmic portal mode)"]))))), _toConsumableArray25(manyToOne($item(_templateObject2714 || (_templateObject2714 = _taggedTemplateLiteral75(["tiny plastic sword"]))), $items(_templateObject2812 || (_templateObject2812 = _taggedTemplateLiteral75(["grogtini, bodyslam, dirty martini, vesper, cherry bomb, sangria del diablo"]))))), _toConsumableArray25(manyToOne($item(_templateObject2912 || (_templateObject2912 = _taggedTemplateLiteral75(["earthenware muffin tin"]))), $items(_templateObject3012 || (_templateObject3012 = _taggedTemplateLiteral75(["blueberry muffin, bran muffin, chocolate chip muffin"]))))), _toConsumableArray25(manyToOne($item(_templateObject3128 || (_templateObject3128 = _taggedTemplateLiteral75(["ChibiBuddy\u2122 (on)"]))), $items(_templateObject3214 || (_templateObject3214 = _taggedTemplateLiteral75(["ChibiBuddy\u2122 (off)"])))))));
  var inventory = /* @__PURE__ */ new Map();
  var invLocations = sessionOnly ? [import_kolmafia84.mySessionItems] : [import_kolmafia84.mySessionItems, import_kolmafia84.getCloset, import_kolmafia84.getDisplay, import_kolmafia84.getStorage];
  if (!sessionOnly) {
    for (var _i = 0, _Object$entries = Object.entries((0, import_kolmafia84.getCampground)()); _i < _Object$entries.length; _i++) {
      var _itemMappings$get, _inventory$get;
      var _Object$entries$_i = _slicedToArray27(_Object$entries[_i], 2), itemStr = _Object$entries$_i[0], quantity = _Object$entries$_i[1];
      if (!quantity) continue;
      var item14 = (0, import_kolmafia84.toItem)(itemStr);
      if (item14 === $item(_templateObject3313 || (_templateObject3313 = _taggedTemplateLiteral75(["big rock"])))) continue;
      var mappedItem = (_itemMappings$get = itemMappings.get(item14)) !== null && _itemMappings$get !== void 0 ? _itemMappings$get : item14;
      inventory.set(mappedItem, quantity + ((_inventory$get = inventory.get(mappedItem)) !== null && _inventory$get !== void 0 ? _inventory$get : 0));
    }
  }
  for (var _i2 = 0, _invLocations = invLocations; _i2 < _invLocations.length; _i2++) {
    var inventoryFunc = _invLocations[_i2];
    for (var _i3 = 0, _Object$entries2 = Object.entries(inventoryFunc()); _i3 < _Object$entries2.length; _i3++) {
      var _itemMappings$get2, _inventory$get2;
      var _Object$entries2$_i = _slicedToArray27(_Object$entries2[_i3], 2), _itemStr = _Object$entries2$_i[0], _quantity = _Object$entries2$_i[1];
      if (!_quantity) continue;
      var _item = (0, import_kolmafia84.toItem)(_itemStr);
      var _mappedItem = (_itemMappings$get2 = itemMappings.get(_item)) !== null && _itemMappings$get2 !== void 0 ? _itemMappings$get2 : _item;
      inventory.set(_mappedItem, _quantity + ((_inventory$get2 = inventory.get(_mappedItem)) !== null && _inventory$get2 !== void 0 ? _inventory$get2 : 0));
      if (inventory.get(_mappedItem) === 0) inventory.delete(_mappedItem);
    }
  }
  return inventory;
}
function inventoryOperation(a, b, op) {
  var difference = /* @__PURE__ */ new Map();
  var _iterator = _createForOfIteratorHelper16(new Set([].concat(_toConsumableArray25(a.keys()), _toConsumableArray25(b.keys())))), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _a$get, _b$get;
      var item14 = _step.value;
      difference.set(item14, op((_a$get = a.get(item14)) !== null && _a$get !== void 0 ? _a$get : 0, (_b$get = b.get(item14)) !== null && _b$get !== void 0 ? _b$get : 0));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var diffEntries = _toConsumableArray25(difference.entries());
  return new Map(diffEntries.filter(function(_ref) {
    var _ref2 = _slicedToArray27(_ref, 2), value = _ref2[1];
    return value !== 0;
  }));
}
var import_kolmafia84, _templateObject565, _templateObject2138, _templateObject3127, _templateObject4107, _templateObject566, _templateObject655, _templateObject748, _templateObject840, _templateObject934, _templateObject1029, _templateObject1126, _templateObject1225, _templateObject1323, _templateObject1421, _templateObject1518, _templateObject1618, _templateObject1718, _templateObject1818, _templateObject1916, _templateObject2016, _templateObject2139, _templateObject2218, _templateObject2317, _templateObject2416, _templateObject2515, _templateObject2614, _templateObject2714, _templateObject2812, _templateObject2912, _templateObject3012, _templateObject3128, _templateObject3214, _templateObject3313, Session;
var init_session = __esm({
  "node_modules/libram/dist/session.js": function() {
    import_kolmafia84 = require("kolmafia");
    init_lib();
    init_template_string();
    init_utils();
    Session = /* @__PURE__ */ function() {
      function Session2(meat, items, totalTurns) {
        _classCallCheck20(this, Session2);
        _defineProperty24(this, "meat", void 0);
        _defineProperty24(this, "items", void 0);
        _defineProperty24(this, "totalTurns", void 0);
        this.meat = meat;
        this.items = items;
        this.totalTurns = totalTurns;
      }
      _createClass20(Session2, [{
        key: "register",
        value: function register(target, quantity) {
          if (target === "meat") {
            this.meat += quantity;
          } else {
            var _this$items$get;
            this.items.set(target, ((_this$items$get = this.items.get(target)) !== null && _this$items$get !== void 0 ? _this$items$get : 0) + quantity);
          }
        }
        /**
         * Value this session
         *
         * @param itemValue a function that, when given an item, will give a meat value of the item
         * @returns ItemResult with the full value of this session given the input function
         */
      }, {
        key: "value",
        value: function value(itemValue) {
          var turns2 = this.totalTurns;
          var meat = Math.floor(this.meat);
          var itemDetails = _toConsumableArray25(this.items.entries()).map(function(_ref3) {
            var _ref4 = _slicedToArray27(_ref3, 2), item14 = _ref4[0], quantity = _ref4[1];
            return {
              item: item14,
              quantity: quantity,
              // only run itemValue if quantity is nonzero
              value: quantity ? itemValue(item14) * quantity : 0
            };
          });
          var items = Math.floor(sum(itemDetails, "value"));
          return {
            meat: meat,
            items: items,
            total: meat + items,
            itemDetails: itemDetails,
            turns: turns2
          };
        }
        /**
         * Subtract the contents of another session from this one, removing any items that have a resulting quantity of 0
         *  (this will ignore elements in b but not in a)
         *
         * @param other the session from which to pull values to remove from this session
         * @returns a new session representing the difference between this session and the other session
         */
      }, {
        key: "diff",
        value: function diff(other) {
          return new Session2(this.meat - other.meat, inventoryOperation(this.items, other.items, function(a, b) {
            return a - b;
          }), this.totalTurns - other.totalTurns);
        }
        /**
         * Subtract the contents of snasphot b from session a, removing any items that have a resulting quantity of 0
         *  (this will ignore elements in b but not in a)
         *
         * @param a the session from which to subtract elements
         * @param b the session from which to add elements
         * @returns a new session representing the difference between a and b
         */
      }, {
        key: "add",
        value: (
          /**
           * Generate a new session combining multiple sessions together
           *
           * @param other the session from which to add elements to this set
           * @returns a new session representing the addition of other to this
           */
          function add(other) {
            return new Session2(this.meat + other.meat, inventoryOperation(this.items, other.items, function(a, b) {
              return a + b;
            }), this.totalTurns + other.totalTurns);
          }
        )
        /**
         * Combine the contents of sessions
         *
         * @param sessions the set of sessions to combine together
         * @returns a new session representing the difference between a and b
         */
      }, {
        key: "toFile",
        value: (
          /**
           * Export this session to a file in the data/ directory. Conventionally this file should end in ".json"
           *
           * @param filename The file into which to export
           */
          function toFile(filename) {
            var val = {
              meat: this.meat,
              items: Object.fromEntries(this.items),
              totalTurns: this.totalTurns
            };
            (0, import_kolmafia84.bufferToFile)(JSON.stringify(val), Session2.getFilepath(filename));
          }
        )
        /**
         * Import a session from a file in the data/ directory. Conventionally the file should end in ".json"
         *
         * @param filename The file from which to import
         * @returns the session represented by the file
         */
      }, {
        key: "computeMPA",
        value: (
          /**
           * @param other the session to diff against this session when computing MPA
           * @param options options for computing MPA
           * @param options.value a function to compute the meat value of a given item
           * @param options.isOutlier a function to compute if an item is considered an outlier. By default, no items are outliers
           * @param options.excludeValue meat values to exclude when calculating specific portions of the MPA
           * @param options.excludeValue.meat how much meat to exclude when calculating the meat portion of MPA
           * @param options.excludeValue.item how much meat to exclude when calculating hte item portion of MPA
           * @returns an analysis of the effective MPA for the given session
           */
          function computeMPA(other, options) {
            return Session2.computeMPA(this, other, options);
          }
        )
      }], [{
        key: "diff",
        value: function diff(a, b) {
          return a.diff(b);
        }
      }, {
        key: "add",
        value: function add() {
          for (var _len = arguments.length, sessions = new Array(_len), _key = 0; _key < _len; _key++) {
            sessions[_key] = arguments[_key];
          }
          return sessions.reduce(function(previousSession, currentSession) {
            return previousSession.add(currentSession);
          });
        }
      }, {
        key: "getFilepath",
        value: function getFilepath(filename) {
          return filename.endsWith(".json") ? filename : "snapshots/".concat((0, import_kolmafia84.myName)(), "/").concat((0, import_kolmafia84.todayToString)(), "_").concat(filename, ".json");
        }
      }, {
        key: "fromFile",
        value: function fromFile(filename) {
          var fileValue = (0, import_kolmafia84.fileToBuffer)(Session2.getFilepath(filename));
          if (fileValue.length > 0) {
            var _val$totalTurns;
            var val = JSON.parse(fileValue);
            var parsedItems = Object.entries(val.items).map(function(_ref5) {
              var _ref6 = _slicedToArray27(_ref5, 2), itemStr = _ref6[0], quantity = _ref6[1];
              return [(0, import_kolmafia84.toItem)(itemStr), quantity];
            });
            return new Session2(val.meat, new Map(parsedItems), (_val$totalTurns = val.totalTurns) !== null && _val$totalTurns !== void 0 ? _val$totalTurns : 0);
          } else {
            return new Session2(0, /* @__PURE__ */ new Map(), 0);
          }
        }
        /**
         * Return the meat and items for the current session
         *
         * @param sessionOnly should closet, DC, and storage be ignored for the session calculation
         * @returns current session
         */
      }, {
        key: "current",
        value: function current2() {
          var sessionOnly = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
          var meat = sessionOnly ? [import_kolmafia84.mySessionMeat] : [import_kolmafia84.mySessionMeat, import_kolmafia84.myClosetMeat, import_kolmafia84.myStorageMeat];
          return new Session2(sum(meat, function(f) {
            return f();
          }), mySessionItemsWrapper(sessionOnly), (0, import_kolmafia84.totalTurnsPlayed)());
        }
        /**
         * @param baseline the base session to use when computing MPA
         * @param full the full session to use when computing MPA
         * @param options options for computing MPA
         * @param options.value a function to compute the meat value of a given item
         * @param options.isOutlier a function to compute if an item is considered an outlier. By default, no items are outliers
         * @param options.excludeValue meat values to exclude when calculating specific portions of the MPA
         * @param options.excludeValue.meat how much meat to exclude when calculating the meat portion of MPA
         * @param options.excludeValue.item how much meat to exclude when calculating hte item portion of MPA
         * @returns an analysis of the effective MPA for the given session
         */
      }, {
        key: "computeMPA",
        value: function computeMPA(baseline, full, options) {
          var _options$excludeValue, _excludeValue$meat, _excludeValue$item;
          var value = options.value;
          var excludeValue = (_options$excludeValue = options.excludeValue) !== null && _options$excludeValue !== void 0 ? _options$excludeValue : {
            meat: 0,
            item: 0
          };
          var isOutlier = options.isOutlier;
          var result = full.diff(baseline).value(value);
          var meatValue = result.meat - ((_excludeValue$meat = excludeValue.meat) !== null && _excludeValue$meat !== void 0 ? _excludeValue$meat : 0);
          var outlierItems = isOutlier ? result.itemDetails.filter(isOutlier) : [];
          var outliersValue = sum(outlierItems, function(detail) {
            return detail.value;
          });
          var itemValue = result.items - outliersValue - ((_excludeValue$item = excludeValue.item) !== null && _excludeValue$item !== void 0 ? _excludeValue$item : 0);
          var turns2 = result.turns;
          return {
            mpa: {
              effective: (meatValue + itemValue) / turns2,
              total: (meatValue + itemValue + outliersValue) / turns2,
              meat: meatValue / turns2,
              items: itemValue / turns2
            },
            values: {
              effective: meatValue + itemValue,
              total: meatValue + itemValue + outliersValue,
              meat: meatValue,
              items: itemValue
            },
            outlierItems: outlierItems,
            turns: turns2
          };
        }
      }]);
      return Session2;
    }();
  }
});

// node_modules/libram/dist/index.js
var dist_exports = {};
__export(dist_exports, {
  $bounties: function() {
    return $bounties;
  },
  $bounty: function() {
    return $bounty;
  },
  $class: function() {
    return $class;
  },
  $classes: function() {
    return $classes;
  },
  $coinmaster: function() {
    return $coinmaster;
  },
  $coinmasters: function() {
    return $coinmasters;
  },
  $effect: function() {
    return $effect;
  },
  $effects: function() {
    return $effects;
  },
  $element: function() {
    return $element;
  },
  $elements: function() {
    return $elements;
  },
  $familiar: function() {
    return $familiar;
  },
  $familiars: function() {
    return $familiars;
  },
  $item: function() {
    return $item;
  },
  $items: function() {
    return $items;
  },
  $location: function() {
    return $location;
  },
  $locations: function() {
    return $locations;
  },
  $modifier: function() {
    return $modifier;
  },
  $modifiers: function() {
    return $modifiers;
  },
  $monster: function() {
    return $monster;
  },
  $monsters: function() {
    return $monsters;
  },
  $path: function() {
    return $path;
  },
  $paths: function() {
    return $paths;
  },
  $phyla: function() {
    return $phyla;
  },
  $phylum: function() {
    return $phylum;
  },
  $servant: function() {
    return $servant;
  },
  $servants: function() {
    return $servants;
  },
  $skill: function() {
    return $skill;
  },
  $skills: function() {
    return $skills;
  },
  $slot: function() {
    return $slot;
  },
  $slots: function() {
    return $slots;
  },
  $stat: function() {
    return $stat;
  },
  $stats: function() {
    return $stats;
  },
  $thrall: function() {
    return $thrall;
  },
  $thralls: function() {
    return $thralls;
  },
  ActionSource: function() {
    return ActionSource;
  },
  AprilingBandHelmet: function() {
    return AprilingBandHelmet_exports;
  },
  AscendError: function() {
    return AscendError;
  },
  AscensionPrepError: function() {
    return AscensionPrepError;
  },
  AsdonMartin: function() {
    return AsdonMartin_exports;
  },
  AugustScepter: function() {
    return AugustScepter_exports;
  },
  AutumnAton: function() {
    return AutumnAton_exports;
  },
  Bandersnatch: function() {
    return Bandersnatch_exports;
  },
  BarrelShrine: function() {
    return BarrelShrine_exports;
  },
  BatWings: function() {
    return BatWings_exports;
  },
  BeachComb: function() {
    return BeachComb_exports;
  },
  BurningLeaves: function() {
    return BurningLeaves_exports;
  },
  CampAway: function() {
    return CampAway_exports;
  },
  Cartography: function() {
    return Cartography_exports;
  },
  ChateauMantegna: function() {
    return ChateauMantegna_exports;
  },
  ChestMimic: function() {
    return ChestMimic_exports;
  },
  CinchoDeMayo: function() {
    return CinchoDeMayo_exports;
  },
  Clan: function() {
    return Clan;
  },
  ClosedCircuitPayphone: function() {
    return ClosedCircuitPayphone_exports;
  },
  CombatLoversLocket: function() {
    return CombatLoversLocket_exports;
  },
  CommaChameleon: function() {
    return CommaChameleon_exports;
  },
  CommunityService: function() {
    return CommunityService;
  },
  ConspiracyIsland: function() {
    return ConspiracyIsland_exports;
  },
  Counter: function() {
    return counter_exports;
  },
  CrepeParachute: function() {
    return CrepeParachute_exports;
  },
  CrimboShrub: function() {
    return CrimboShrub_exports;
  },
  CrownOfThrones: function() {
    return CrownOfThrones_exports;
  },
  CrystalBall: function() {
    return CrystalBall_exports;
  },
  CursedMonkeyPaw: function() {
    return CursedMonkeyPaw_exports;
  },
  DNALab: function() {
    return DNALab_exports;
  },
  DaylightShavings: function() {
    return DaylightShavings_exports;
  },
  DeckOfEveryCard: function() {
    return DeckOfEveryCard_exports;
  },
  Diet: function() {
    return Diet;
  },
  Dinseylandfill: function() {
    return Dinseylandfill_exports;
  },
  Dreadsylvania: function() {
    return Dreadsylvania;
  },
  Dungeon: function() {
    return Dungeon;
  },
  EnsureError: function() {
    return EnsureError;
  },
  Environment: function() {
    return Environment;
  },
  EverfullDarts: function() {
    return EverfullDarts_exports;
  },
  FloristFriar: function() {
    return Florist_exports;
  },
  GingerBread: function() {
    return GingerBread_exports;
  },
  GreyGoose: function() {
    return GreyGoose_exports;
  },
  Guzzlr: function() {
    return Guzzlr_exports;
  },
  HeavyRains: function() {
    return HeavyRains_exports;
  },
  Hobopolis: function() {
    return Hobopolis;
  },
  Horsery: function() {
    return Horsery_exports;
  },
  InvalidMacroError: function() {
    return InvalidMacroError;
  },
  JuneCleaver: function() {
    return JuneCleaver_exports;
  },
  JungMan: function() {
    return JungMan_exports;
  },
  Kmail: function() {
    return Kmail;
  },
  KolGender: function() {
    return KolGender;
  },
  KolmafiaVersionError: function() {
    return KolmafiaVersionError;
  },
  Latte: function() {
    return LatteLoversMembersMug_exports;
  },
  Lifestyle: function() {
    return Lifestyle;
  },
  LookingGlass: function() {
    return LookingGlass_exports;
  },
  Macro: function() {
    return Macro;
  },
  MagicalSausages: function() {
    return MagicalSausages;
  },
  MayamCalendar: function() {
    return MayamCalendar_exports;
  },
  MayoClinic: function() {
    return MayoClinic_exports;
  },
  MenuItem: function() {
    return MenuItem;
  },
  Mood: function() {
    return Mood;
  },
  MpSource: function() {
    return MpSource;
  },
  MummingTrunk: function() {
    return MummingTrunk_exports;
  },
  NuclearAutumn: function() {
    return NuclearAutumn_exports;
  },
  ObtuseAngel: function() {
    return ObtuseAngel_exports;
  },
  OscusSoda: function() {
    return OscusSoda;
  },
  Pantogram: function() {
    return Pantogram_exports;
  },
  PocketProfessor: function() {
    return PocketProfessor_exports;
  },
  PropertiesManager: function() {
    return PropertiesManager;
  },
  RainDoh: function() {
    return RainDoh_exports;
  },
  RainDohBlackBox: function() {
    return RainDohBlackBox;
  },
  ReagnimatedGnome: function() {
    return ReagnimatedGnome_exports;
  },
  Requirement: function() {
    return Requirement;
  },
  RetroCape: function() {
    return RetroCape_exports;
  },
  Robortender: function() {
    return Robortender_exports;
  },
  Session: function() {
    return Session;
  },
  SlimeTube: function() {
    return SlimeTube;
  },
  Snapper: function() {
    return Snapper_exports;
  },
  SongBoom: function() {
    return SongBoom_exports;
  },
  SourceTerminal: function() {
    return SourceTerminal_exports;
  },
  Spacegate: function() {
    return Spacegate_exports;
  },
  SpookyPutty: function() {
    return SpookyPutty_exports;
  },
  SpookyPuttySheet: function() {
    return SpookyPuttySheet;
  },
  Stickers: function() {
    return Stickers_exports;
  },
  StillSuit: function() {
    return Stillsuit_exports;
  },
  StompingBoots: function() {
    return StompingBoots_exports;
  },
  StrictMacro: function() {
    return StrictMacro;
  },
  TakerSpace: function() {
    return TakerSpace_exports;
  },
  TearawayPants: function() {
    return TearawayPants_exports;
  },
  TrainSet: function() {
    return TrainSet_exports;
  },
  TunnelOfLove: function() {
    return TunnelOfLove_exports;
  },
  Wanderer: function() {
    return Wanderer;
  },
  WinterGarden: function() {
    return WinterGarden_exports;
  },
  Witchess: function() {
    return Witchess_exports;
  },
  actionSourcesAvailable: function() {
    return actionSourcesAvailable;
  },
  adventureMacro: function() {
    return adventureMacro;
  },
  adventureMacroAuto: function() {
    return adventureMacroAuto;
  },
  applyModes: function() {
    return applyModes;
  },
  arrayContains: function() {
    return arrayContains;
  },
  arrayEquals: function() {
    return arrayEquals;
  },
  arrayToCountedMap: function() {
    return arrayToCountedMap;
  },
  ascend: function() {
    return ascend;
  },
  bestLibramToCast: function() {
    return bestLibramToCast;
  },
  booleanModifiers: function() {
    return booleanModifiers;
  },
  booleanProperties: function() {
    return booleanProperties;
  },
  bulkAutosell: function() {
    return bulkAutosell;
  },
  bulkPutCloset: function() {
    return bulkPutCloset;
  },
  bulkPutDisplay: function() {
    return bulkPutDisplay;
  },
  bulkPutShop: function() {
    return bulkPutShop;
  },
  bulkPutStash: function() {
    return bulkPutStash;
  },
  bulkRepriceShop: function() {
    return bulkRepriceShop;
  },
  bulkSell: function() {
    return bulkSell;
  },
  bulkTakeCloset: function() {
    return bulkTakeCloset;
  },
  bulkTakeDisplay: function() {
    return bulkTakeDisplay;
  },
  bulkTakeShop: function() {
    return bulkTakeShop;
  },
  bulkTakeStash: function() {
    return bulkTakeStash;
  },
  bulkTakeStorage: function() {
    return bulkTakeStorage;
  },
  byClass: function() {
    return byClass;
  },
  byStat: function() {
    return byStat;
  },
  canRememberSong: function() {
    return canRememberSong;
  },
  canUse: function() {
    return canUse;
  },
  canVisitUrl: function() {
    return canVisitUrl;
  },
  chunk: function() {
    return chunk;
  },
  clamp: function() {
    return clamp;
  },
  clearMaximizerCache: function() {
    return clearMaximizerCache;
  },
  console: function() {
    return console_exports;
  },
  couldUseRainDohBlackBox: function() {
    return couldUseRainDohBlackBox;
  },
  couldUseSpookyPuttySheet: function() {
    return couldUseSpookyPuttySheet;
  },
  countedMapToArray: function() {
    return countedMapToArray;
  },
  countedMapToString: function() {
    return countedMapToString;
  },
  damageTakenByElement: function() {
    return damageTakenByElement;
  },
  directlyUse: function() {
    return directlyUse;
  },
  ensureBanish: function() {
    return ensureBanish;
  },
  ensureEffect: function() {
    return ensureEffect;
  },
  ensureFreeKill: function() {
    return ensureFreeKill;
  },
  ensureFreeRun: function() {
    return ensureFreeRun;
  },
  examine: function() {
    return examine;
  },
  expectedLibramSummon: function() {
    return expectedLibramSummon;
  },
  extractItems: function() {
    return extractItems;
  },
  familiarProperties: function() {
    return familiarProperties;
  },
  familiarTags: function() {
    return familiarTags;
  },
  findActionSource: function() {
    return findActionSource;
  },
  findFairyMultiplier: function() {
    return findFairyMultiplier;
  },
  findLeprechaunMultiplier: function() {
    return findLeprechaunMultiplier;
  },
  flat: function() {
    return flat;
  },
  freeCrafts: function() {
    return freeCrafts;
  },
  gameDay: function() {
    return gameDay;
  },
  get: function() {
    return get;
  },
  getActiveEffects: function() {
    return getActiveEffects;
  },
  getActiveSongs: function() {
    return getActiveSongs;
  },
  getAverage: function() {
    return getAverage;
  },
  getAverageAdventures: function() {
    return getAverageAdventures;
  },
  getBanishedMonsters: function() {
    return getBanishedMonsters;
  },
  getCombatFlags: function() {
    return getCombatFlags;
  },
  getCurrentModes: function() {
    return getCurrentModes;
  },
  getFamiliarTags: function() {
    return getFamiliarTags;
  },
  getFamiliarWandererChance: function() {
    return getFamiliarWandererChance;
  },
  getFoldGroup: function() {
    return getFoldGroup;
  },
  getKramcoWandererChance: function() {
    return getKramcoWandererChance;
  },
  getMacroId: function() {
    return getMacroId;
  },
  getModifier: function() {
    return get2;
  },
  getMonsterLocations: function() {
    return getMonsterLocations;
  },
  getPlayerFromIdOrName: function() {
    return getPlayerFromIdOrName;
  },
  getPlayerIdFromName: function() {
    return getPlayerIdFromName;
  },
  getPlayerNameFromId: function() {
    return getPlayerNameFromId;
  },
  getRange: function() {
    return getRange;
  },
  getRemainingLiver: function() {
    return getRemainingLiver;
  },
  getRemainingSpleen: function() {
    return getRemainingSpleen;
  },
  getRemainingStomach: function() {
    return getRemainingStomach;
  },
  getSaleValue: function() {
    return getSaleValue;
  },
  getScalingCap: function() {
    return getScalingCap;
  },
  getScalingRate: function() {
    return getScalingRate;
  },
  getSongCount: function() {
    return getSongCount;
  },
  getSongLimit: function() {
    return getSongLimit;
  },
  getTodaysHolidayWanderers: function() {
    return getTodaysHolidayWanderers;
  },
  getTotalModifier: function() {
    return getTotalModifier;
  },
  getTotalPuttyLikeCopiesMade: function() {
    return getTotalPuttyLikeCopiesMade;
  },
  getWandererChance: function() {
    return getWandererChance;
  },
  getZapGroup: function() {
    return getZapGroup;
  },
  have: function() {
    return have;
  },
  haveCounter: function() {
    return haveCounter;
  },
  haveInCampground: function() {
    return haveInCampground;
  },
  haveIntrinsic: function() {
    return haveIntrinsic;
  },
  haveWandererCounter: function() {
    return haveWandererCounter;
  },
  holidayWanderers: function() {
    return holidayWanderers;
  },
  invertMap: function() {
    return invertMap;
  },
  isBooleanProperty: function() {
    return isBooleanProperty;
  },
  isCurrentFamiliar: function() {
    return isCurrentFamiliar;
  },
  isFamiliarProperty: function() {
    return isFamiliarProperty;
  },
  isLocationProperty: function() {
    return isLocationProperty;
  },
  isMonsterProperty: function() {
    return isMonsterProperty;
  },
  isNumericOrStringProperty: function() {
    return isNumericOrStringProperty;
  },
  isNumericProperty: function() {
    return isNumericProperty;
  },
  isPhylumProperty: function() {
    return isPhylumProperty;
  },
  isSong: function() {
    return isSong;
  },
  isStatProperty: function() {
    return isStatProperty;
  },
  isStringProperty: function() {
    return isStringProperty;
  },
  isVoteWandererNow: function() {
    return isVoteWandererNow;
  },
  isWandererNow: function() {
    return isWandererNow;
  },
  lgrCurrencies: function() {
    return lgrCurrencies;
  },
  locationProperties: function() {
    return locationProperties;
  },
  logger: function() {
    return logger_default;
  },
  makeByXFunction: function() {
    return makeByXFunction;
  },
  maxBy: function() {
    return maxBy;
  },
  maximizeCached: function() {
    return maximizeCached;
  },
  mergeMaximizeOptions: function() {
    return mergeMaximizeOptions;
  },
  modeableItems: function() {
    return modeableItems;
  },
  modeableState: function() {
    return modeableState;
  },
  monsterProperties: function() {
    return monsterProperties;
  },
  multiSplit: function() {
    return multiSplit;
  },
  noneToNull: function() {
    return noneToNull;
  },
  notNull: function() {
    return notNull;
  },
  notNullish: function() {
    return notNullish;
  },
  numericModifiers: function() {
    return numericModifiers;
  },
  numericOrStringProperties: function() {
    return numericOrStringProperties;
  },
  numericProperties: function() {
    return numericProperties;
  },
  parseNumber: function() {
    return parseNumber;
  },
  permedSkills: function() {
    return permedSkills;
  },
  phylumProperties: function() {
    return phylumProperties;
  },
  possibleLibramSummons: function() {
    return possibleLibramSummons;
  },
  prepareAscension: function() {
    return prepareAscension;
  },
  property: function() {
    return property_exports;
  },
  propertyTypes: function() {
    return propertyTypes_exports;
  },
  questStep: function() {
    return questStep;
  },
  random: function() {
    return random;
  },
  realmAvailable: function() {
    return realmAvailable;
  },
  realmCurrency: function() {
    return realmCurrency;
  },
  realmTypes: function() {
    return realmTypes;
  },
  set: function() {
    return _set;
  },
  setCombatFlags: function() {
    return setCombatFlags;
  },
  setDefaultMaximizeOptions: function() {
    return setDefaultMaximizeOptions;
  },
  setEqual: function() {
    return setEqual;
  },
  setProperties: function() {
    return setProperties;
  },
  signIdToName: function() {
    return signIdToName;
  },
  signNameToId: function() {
    return signNameToId;
  },
  sinceKolmafiaRevision: function() {
    return sinceKolmafiaRevision;
  },
  sinceKolmafiaVersion: function() {
    return sinceKolmafiaVersion;
  },
  splitByCommasWithEscapes: function() {
    return splitByCommasWithEscapes;
  },
  statProperties: function() {
    return statProperties;
  },
  stringModifiers: function() {
    return stringModifiers;
  },
  stringProperties: function() {
    return stringProperties;
  },
  sum: function() {
    return sum;
  },
  sumNumbers: function() {
    return sumNumbers;
  },
  tc: function() {
    return tc;
  },
  telescope: function() {
    return telescope;
  },
  totalFamiliarWeight: function() {
    return totalFamiliarWeight;
  },
  tryFindBanish: function() {
    return tryFindBanish;
  },
  tryFindFreeKill: function() {
    return tryFindFreeKill;
  },
  tryFindFreeRun: function() {
    return tryFindFreeRun;
  },
  tuple: function() {
    return tuple;
  },
  undelay: function() {
    return undelay;
  },
  uneffect: function() {
    return uneffect;
  },
  unequip: function() {
    return unequip;
  },
  withBatch: function() {
    return withBatch;
  },
  withChoice: function() {
    return withChoice;
  },
  withChoices: function() {
    return withChoices;
  },
  withCombatFlags: function() {
    return withCombatFlags;
  },
  withProperties: function() {
    return withProperties;
  },
  withProperty: function() {
    return withProperty;
  }
});
var init_dist = __esm({
  "node_modules/libram/dist/index.js": function() {
    init_actions();
    init_ascend();
    init_Clan();
    init_challengePaths();
    init_combat();
    init_counter();
    init_diet();
    init_Dungeon();
    init_lib();
    init_maximize();
    init_modifierTypes();
    init_mood();
    init_moonSign();
    init_propertyTypes();
    init_propertyTyping();
    init_resources();
    init_since();
    init_template_string();
    init_Kmail();
    init_logger();
    init_console();
    init_property();
    init_propertyTypes();
    init_utils();
    init_property();
    init_modifier();
    init_session();
  }
});

// node_modules/garbo-lib/dist/value.js
var require_value = __commonJS({
  "node_modules/garbo-lib/dist/value.js": function(exports2) {
    "use strict";
    var _templateObject1091;
    var _templateObject2207;
    var _templateObject3188;
    var _templateObject4163;
    var _templateObject5146;
    var _templateObject6138;
    var _templateObject7128;
    var _templateObject8106;
    var _templateObject9103;
    var _templateObject10100;
    var _templateObject1180;
    var _templateObject1271;
    var _templateObject1370;
    var _templateObject1469;
    var _templateObject1568;
    var _templateObject1661;
    var _templateObject1758;
    var _templateObject1856;
    var _templateObject1951;
    var _templateObject2051;
    var _templateObject21105;
    var _templateObject2250;
    var _templateObject2346;
    var _templateObject2445;
    var _templateObject2544;
    var _templateObject2641;
    var _templateObject2741;
    var _templateObject2838;
    var _templateObject2938;
    var _templateObject3038;
    var _templateObject3189;
    var _templateObject3239;
    var _templateObject3338;
    var _templateObject3436;
    var _templateObject3535;
    var _templateObject3635;
    var _templateObject3735;
    var _templateObject3835;
    var _templateObject3932;
    var _templateObject4032;
    var _templateObject4164;
    var _templateObject4234;
    var _templateObject4333;
    var _templateObject4432;
    var _templateObject4532;
    var _templateObject4632;
    var _templateObject4732;
    var _templateObject4832;
    var _templateObject4932;
    var _templateObject5032;
    var _templateObject5147;
    var _templateObject5233;
    var _templateObject5332;
    var _templateObject5432;
    var _templateObject5531;
    var _templateObject5630;
    var _templateObject5729;
    var _templateObject5828;
    var _templateObject5926;
    var _templateObject6024;
    var _templateObject6139;
    var _templateObject6229;
    var _templateObject6329;
    var _templateObject6429;
    var _templateObject6528;
    var _templateObject6625;
    var _templateObject6721;
    function _createForOfIteratorHelper37(o, allowArrayLike) {
      var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray62(o)) || allowArrayLike && o && typeof o.length === "number") {
          if (it) o = it;
          var i = 0;
          var F = function F2() {
          };
          return { s: F, n: function n() {
            if (i >= o.length) return { done: true };
            return { done: false, value: o[i++] };
          }, e: function e(_e) {
            throw _e;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var normalCompletion = true, didErr = false, err;
      return { s: function s() {
        it = it.call(o);
      }, n: function n() {
        var step2 = it.next();
        normalCompletion = step2.done;
        return step2;
      }, e: function e(_e2) {
        didErr = true;
        err = _e2;
      }, f: function f() {
        try {
          if (!normalCompletion && it.return != null) it.return();
        } finally {
          if (didErr) throw err;
        }
      } };
    }
    function _taggedTemplateLiteral111(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    function _slicedToArray33(arr, i) {
      return _arrayWithHoles33(arr) || _iterableToArrayLimit33(arr, i) || _unsupportedIterableToArray62(arr, i) || _nonIterableRest33();
    }
    function _nonIterableRest33() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArrayLimit33(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles33(arr) {
      if (Array.isArray(arr)) return arr;
    }
    function _toConsumableArray37(arr) {
      return _arrayWithoutHoles37(arr) || _iterableToArray37(arr) || _unsupportedIterableToArray62(arr) || _nonIterableSpread37();
    }
    function _nonIterableSpread37() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray62(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray62(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray62(o, minLen);
    }
    function _iterableToArray37(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles37(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray62(arr);
    }
    function _arrayLikeToArray62(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.makeValue = void 0;
    var kolmafia_1 = require("kolmafia");
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    function makeValue2() {
      var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var regularValueCache = /* @__PURE__ */ new Map();
      var historicalValueCache = /* @__PURE__ */ new Map();
      var inputValues = options.itemValues ? _toConsumableArray37(options.itemValues.entries()).map(function(_ref) {
        var _ref2 = _slicedToArray33(_ref, 2), item14 = _ref2[0], val = _ref2[1];
        return [item14, function() {
          return (0, libram_1.undelay)(val);
        }];
      }) : [];
      var specialValueLookup = new Map([[(0, libram_1.$item)(_templateObject1091 || (_templateObject1091 = _taggedTemplateLiteral111(["Freddy Kruegerand"]))), currency.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject2207 || (_templateObject2207 = _taggedTemplateLiteral111(["bottle of Bloodweiser, electric Kool-Aid, Dreadsylvanian skeleton key"])))))], [(0, libram_1.$item)(_templateObject3188 || (_templateObject3188 = _taggedTemplateLiteral111(["Beach Buck"]))), currency((0, libram_1.$item)(_templateObject4163 || (_templateObject4163 = _taggedTemplateLiteral111(["one-day ticket to Spring Break Beach"]))))], [(0, libram_1.$item)(_templateObject5146 || (_templateObject5146 = _taggedTemplateLiteral111(["Coinspiracy"]))), currency.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject6138 || (_templateObject6138 = _taggedTemplateLiteral111(["Merc Core deployment orders, karma shawarma"])))))], [(0, libram_1.$item)(_templateObject7128 || (_templateObject7128 = _taggedTemplateLiteral111(["FunFunds\u2122"]))), currency((0, libram_1.$item)(_templateObject8106 || (_templateObject8106 = _taggedTemplateLiteral111(["one-day ticket to Dinseylandfill"]))))], [(0, libram_1.$item)(_templateObject9103 || (_templateObject9103 = _taggedTemplateLiteral111(["Volcoino"]))), currency((0, libram_1.$item)(_templateObject10100 || (_templateObject10100 = _taggedTemplateLiteral111(["one-day ticket to That 70s Volcano"]))))], [(0, libram_1.$item)(_templateObject1180 || (_templateObject1180 = _taggedTemplateLiteral111(["Wal-Mart gift certificate"]))), currency((0, libram_1.$item)(_templateObject1271 || (_templateObject1271 = _taggedTemplateLiteral111(["one-day ticket to The Glaciest"]))))], [(0, libram_1.$item)(_templateObject1370 || (_templateObject1370 = _taggedTemplateLiteral111(["Rubee\u2122"]))), currency((0, libram_1.$item)(_templateObject1469 || (_templateObject1469 = _taggedTemplateLiteral111(["FantasyRealm guest pass"]))))], [(0, libram_1.$item)(_templateObject1568 || (_templateObject1568 = _taggedTemplateLiteral111(["Guzzlrbuck"]))), currency((0, libram_1.$item)(_templateObject1661 || (_templateObject1661 = _taggedTemplateLiteral111(["Never Don't Stop Not Striving"]))))]].concat(_toConsumableArray37(complexCandy()), [[(0, libram_1.$item)(_templateObject1758 || (_templateObject1758 = _taggedTemplateLiteral111(["Merc Core deployment orders"]))), function() {
        return value((0, libram_1.$item)(_templateObject1856 || (_templateObject1856 = _taggedTemplateLiteral111(["one-day ticket to Conspiracy Island"]))));
      }], [(0, libram_1.$item)(_templateObject1951 || (_templateObject1951 = _taggedTemplateLiteral111(["free-range mushroom"]))), function() {
        return 3 * Math.max(value((0, libram_1.$item)(_templateObject2051 || (_templateObject2051 = _taggedTemplateLiteral111(["mushroom tea"])))) - value((0, libram_1.$item)(_templateObject21105 || (_templateObject21105 = _taggedTemplateLiteral111(["soda water"])))), value((0, libram_1.$item)(_templateObject2250 || (_templateObject2250 = _taggedTemplateLiteral111(["mushroom whiskey"])))) - value((0, libram_1.$item)(_templateObject2346 || (_templateObject2346 = _taggedTemplateLiteral111(["fermenting powder"])))), value((0, libram_1.$item)(_templateObject2445 || (_templateObject2445 = _taggedTemplateLiteral111(["mushroom filet"])))));
      }], [(0, libram_1.$item)(_templateObject2544 || (_templateObject2544 = _taggedTemplateLiteral111(["little firkin"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject2641 || (_templateObject2641 = _taggedTemplateLiteral111(["martini, screwdriver, strawberry daiquiri, margarita, vodka martini, tequila sunrise, bottle of Amontillado, barrel-aged martini, barrel gun"])))));
      }], [(0, libram_1.$item)(_templateObject2741 || (_templateObject2741 = _taggedTemplateLiteral111(["normal barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject2838 || (_templateObject2838 = _taggedTemplateLiteral111(["a little sump'm sump'm, pink pony, rockin' wagon, roll in the hay, slip 'n' slide, slap and tickle"])))));
      }], [(0, libram_1.$item)(_templateObject2938 || (_templateObject2938 = _taggedTemplateLiteral111(["big tun"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject3038 || (_templateObject3038 = _taggedTemplateLiteral111(["gibson, gin and tonic, mimosette, tequila sunset, vodka and tonic, zmobie"])))));
      }], [(0, libram_1.$item)(_templateObject3189 || (_templateObject3189 = _taggedTemplateLiteral111(["weathered barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject3239 || (_templateObject3239 = _taggedTemplateLiteral111(["bean burrito, enchanted bean burrito, jumping bean burrito"])))));
      }], [(0, libram_1.$item)(_templateObject3338 || (_templateObject3338 = _taggedTemplateLiteral111(["dusty barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject3436 || (_templateObject3436 = _taggedTemplateLiteral111(["spicy bean burrito, spicy enchanted bean burrito, spicy jumping bean burrito"])))));
      }], [(0, libram_1.$item)(_templateObject3535 || (_templateObject3535 = _taggedTemplateLiteral111(["disintegrating barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject3635 || (_templateObject3635 = _taggedTemplateLiteral111(["insanely spicy bean burrito, insanely spicy enchanted bean burrito, insanely spicy jumping bean burrito"])))));
      }], [(0, libram_1.$item)(_templateObject3735 || (_templateObject3735 = _taggedTemplateLiteral111(["moist barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject3835 || (_templateObject3835 = _taggedTemplateLiteral111(["cast, concentrated magicalness pill, enchanted barbell, giant moxie weed, Mountain Stream soda"])))));
      }], [(0, libram_1.$item)(_templateObject3932 || (_templateObject3932 = _taggedTemplateLiteral111(["rotting barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject4032 || (_templateObject4032 = _taggedTemplateLiteral111(["Doc Galaktik's Ailment Ointment, extra-strength strongness elixir, jug-o-magicalness, Marquis de Poivre soda, suntan lotion of moxiousness"])))));
      }], [(0, libram_1.$item)(_templateObject4164 || (_templateObject4164 = _taggedTemplateLiteral111(["mouldering barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject4234 || (_templateObject4234 = _taggedTemplateLiteral111(["creepy ginger ale, haunted battery, scroll of drastic healing, synthetic marrow, the funk"])))));
      }], [(0, libram_1.$item)(_templateObject4333 || (_templateObject4333 = _taggedTemplateLiteral111(["barnacled barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject4432 || (_templateObject4432 = _taggedTemplateLiteral111(["Alewife\u2122 Ale, bazookafish bubble gum, beefy fish meat, eel battery, glistening fish meat, ink bladder, pufferfish spine, shark cartilage, slick fish meat, slug of rum, slug of shochu, slug of vodka, temporary teardrop tattoo"])))));
      }], [(0, libram_1.$item)(_templateObject4532 || (_templateObject4532 = _taggedTemplateLiteral111(["psychoanalytic jar"]))), function() {
        return (
          // Exclude jick because he's rate-limited
          Math.max.apply(Math, _toConsumableArray37((0, libram_1.$items)(_templateObject4632 || (_templateObject4632 = _taggedTemplateLiteral111(["jar of psychoses (The Meatsmith), jar of psychoses (The Captain of the Gourd), jar of psychoses (The Crackpot Mystic), jar of psychoses (The Pretentious Artist), jar of psychoses (The Old Man), jar of psychoses (The Suspicious-Looking Guy)"]))).map(function(jar) {
            return value(jar);
          })))
        );
      }], [(0, libram_1.$item)(_templateObject4732 || (_templateObject4732 = _taggedTemplateLiteral111(["warbear whosit"]))), function() {
        return (0.35 * averageValue.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject4832 || (_templateObject4832 = _taggedTemplateLiteral111(["warbear auto-anvil, warbear chemistry lab, warbear high-efficiency still, warbear induction oven, warbear jackhammer drill press, warbear LP-ROM burner, warbear energy bracers, warbear exhaust manifold, warbear exo-arm, warbear foil hat, warbear laser beacon, warbear oil pan"]))))) + 0.65 * averageValue.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject4932 || (_templateObject4932 = _taggedTemplateLiteral111(["warbear metalworking primer, warbear beeping telegram, warbear gyrocopter, warbear procedural hilarity drone, warbear robo-camouflage unit, warbear sequential gaiety distribution system"])))))) / 100;
      }]], _toConsumableArray37((0, libram_1.$items)(_templateObject5032 || (_templateObject5032 = _taggedTemplateLiteral111(["worthless gewgaw, worthless knick-knack, worthless trinket"]))).map(function(i) {
        return [i, currency.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject5147 || (_templateObject5147 = _taggedTemplateLiteral111(["seal tooth, chisel, petrified noodles, jaba\xF1ero pepper, banjo strings, hot buttered roll, wooden figurine, ketchup, catsup, volleyball"])))).concat(_toConsumableArray37((0, kolmafia_1.myClass)() === (0, libram_1.$class)(_templateObject5233 || (_templateObject5233 = _taggedTemplateLiteral111(["Seal Clubber"]))) ? (0, libram_1.$items)(_templateObject5332 || (_templateObject5332 = _taggedTemplateLiteral111(["figurine of an ancient seal"]))) : [])))];
      })), [[(0, libram_1.$item)(_templateObject5432 || (_templateObject5432 = _taggedTemplateLiteral111(["Boris's key"]))), function() {
        return value((0, libram_1.$item)(_templateObject5531 || (_templateObject5531 = _taggedTemplateLiteral111(["Boris's key lime"])))) - value((0, libram_1.$item)(_templateObject5630 || (_templateObject5630 = _taggedTemplateLiteral111(["lime"]))));
      }], [(0, libram_1.$item)(_templateObject5729 || (_templateObject5729 = _taggedTemplateLiteral111(["Jarlsberg's key"]))), function() {
        return value((0, libram_1.$item)(_templateObject5828 || (_templateObject5828 = _taggedTemplateLiteral111(["Jarlsberg's key lime"])))) - value((0, libram_1.$item)(_templateObject5926 || (_templateObject5926 = _taggedTemplateLiteral111(["lime"]))));
      }], [(0, libram_1.$item)(_templateObject6024 || (_templateObject6024 = _taggedTemplateLiteral111(["Sneaky Pete's key"]))), function() {
        return value((0, libram_1.$item)(_templateObject6139 || (_templateObject6139 = _taggedTemplateLiteral111(["Sneaky Pete's key lime"])))) - value((0, libram_1.$item)(_templateObject6229 || (_templateObject6229 = _taggedTemplateLiteral111(["lime"]))));
      }], [(0, libram_1.$item)(_templateObject6329 || (_templateObject6329 = _taggedTemplateLiteral111(["fat loot token"]))), currency.apply(void 0, _toConsumableArray37((0, libram_1.$items)(_templateObject6429 || (_templateObject6429 = _taggedTemplateLiteral111(["Boris's key, Jarlsberg's key, Sneaky Pete's key, Boris's ring, Jarlsberg's earring, Sneaky Pete's breath spray, potato sprout, sewing kit, Spellbook: Singer's Faithful Ocelot, Spellbook: Drescher's Annoying Noise, Spellbook: Walberg's Dim Bulb, dried gelatinous cube"])))))], [(0, libram_1.$item)(_templateObject6528 || (_templateObject6528 = _taggedTemplateLiteral111(["inflammable leaf"]))), inflammableLeafCurrency()]], _toConsumableArray37(inputValues)));
      var exclusions = /* @__PURE__ */ new Set([
        // For tradeable items which can be "consumed" infinitely
        (0, libram_1.$item)(_templateObject6625 || (_templateObject6625 = _taggedTemplateLiteral111(["ChibiBuddy\u2122 (off)"])))
      ]);
      function saleValue(item14, useHistorical) {
        if (useHistorical) {
          if ((0, kolmafia_1.historicalAge)(item14) <= 7 && (0, kolmafia_1.historicalPrice)(item14) > 0) {
            var isMallMin = (0, kolmafia_1.historicalPrice)(item14) === Math.max(100, 2 * (0, kolmafia_1.autosellPrice)(item14));
            return isMallMin ? (0, kolmafia_1.autosellPrice)(item14) : 0.9 * (0, kolmafia_1.historicalPrice)(item14);
          }
        }
        return (0, libram_1.getSaleValue)(item14);
      }
      function currency() {
        for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {
          items[_key] = arguments[_key];
        }
        var unitCost = items.map(function(i) {
          var coinmaster = kolmafia_1.Coinmaster.all().find(function(c) {
            return (0, kolmafia_1.sellPrice)(c, i) > 0;
          });
          if (!coinmaster) {
            throw "Invalid coinmaster item ".concat(i);
          } else {
            return [i, (0, kolmafia_1.sellPrice)(coinmaster, i)];
          }
        });
        return function() {
          return Math.max.apply(Math, _toConsumableArray37(unitCost.map(function(_ref3) {
            var _ref4 = _slicedToArray33(_ref3, 2), item14 = _ref4[0], cost = _ref4[1];
            return value(item14) / cost;
          })));
        };
      }
      function inflammableLeafCurrency() {
        if (!libram_1.BurningLeaves.have()) return function() {
          return 0;
        };
        var ignored = (0, libram_1.$items)(_templateObject6721 || (_templateObject6721 = _taggedTemplateLiteral111(["lit leaf lasso, day shortener"])));
        var unitCost = _toConsumableArray37(libram_1.BurningLeaves.burnFor).filter(function(entry) {
          return entry[0] instanceof kolmafia_1.Item && entry[0].tradeable && !ignored.includes(entry[0]);
        });
        return function() {
          return Math.max.apply(Math, _toConsumableArray37(unitCost.map(function(_ref5) {
            var _ref6 = _slicedToArray33(_ref5, 2), item14 = _ref6[0], cost = _ref6[1];
            return value(item14) / cost;
          })));
        };
      }
      function complexCandy() {
        var candies = kolmafia_1.Item.all().filter(function(i) {
          return i.candyType === "complex";
        });
        var candyLookup = [[], [], [], [], []];
        var _iterator = _createForOfIteratorHelper37(candies), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var candy = _step.value;
            var id = (0, kolmafia_1.toInt)(candy) % 5;
            if (candy.tradeable) {
              candyLookup[id].push(candy);
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        var candyIdPrices = candies.filter(function(i) {
          return !i.tradeable;
        }).map(function(i) {
          return [i, function() {
            return Math.min.apply(Math, _toConsumableArray37(candyLookup[(0, kolmafia_1.toInt)(i) % 5].map(function(i2) {
              return value(i2);
            })));
          }];
        });
        return candyIdPrices;
      }
      function value(inputItem) {
        var _regularValueCache$ge;
        var useHistorical = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        var _ref7 = inputItem instanceof kolmafia_1.Item ? {
          item: inputItem,
          quantity: 1
        } : inputItem, item14 = _ref7.item, quantity = _ref7.quantity;
        if (exclusions.has(item14)) return 0;
        var cachedValue = (_regularValueCache$ge = regularValueCache.get(item14)) !== null && _regularValueCache$ge !== void 0 ? _regularValueCache$ge : useHistorical ? historicalValueCache.get(item14) : void 0;
        if (cachedValue === void 0) {
          var _specialValueCompute;
          var specialValueCompute = specialValueLookup.get(item14);
          var _value = (_specialValueCompute = specialValueCompute === null || specialValueCompute === void 0 ? void 0 : specialValueCompute()) !== null && _specialValueCompute !== void 0 ? _specialValueCompute : saleValue(item14, useHistorical);
          (useHistorical ? historicalValueCache : regularValueCache).set(item14, _value);
          return _value;
        }
        return quantity * cachedValue;
      }
      function averageValue() {
        for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          items[_key2] = arguments[_key2];
        }
        return (0, libram_1.sum)(items, value) / items.length;
      }
      return {
        averageValue: averageValue,
        value: value
      };
    }
    exports2.makeValue = makeValue2;
  }
});

// node_modules/garbo-lib/dist/wanderer/lib.js
var require_lib2 = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/lib.js": function(exports2) {
    "use strict";
    var _templateObject1091;
    var _templateObject2207;
    var _templateObject3188;
    var _templateObject4163;
    var _templateObject5146;
    var _templateObject6138;
    var _templateObject7128;
    var _templateObject8106;
    var _templateObject9103;
    var _templateObject10100;
    var _templateObject1180;
    var _templateObject1271;
    var _templateObject1370;
    var _templateObject1469;
    var _templateObject1568;
    var _templateObject1661;
    var _templateObject1758;
    var _templateObject1856;
    var _templateObject1951;
    var _templateObject2051;
    var _templateObject21105;
    var _templateObject2250;
    var _templateObject2346;
    var _templateObject2445;
    var _templateObject2544;
    var _templateObject2641;
    var _templateObject2741;
    function _defineProperties35(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey44(descriptor.key), descriptor);
      }
    }
    function _createClass35(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties35(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties35(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _classCallCheck35(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperty39(obj, key, value) {
      key = _toPropertyKey44(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey44(t) {
      var i = _toPrimitive44(t, "string");
      return "symbol" == typeof i ? i : String(i);
    }
    function _toPrimitive44(t, r) {
      if ("object" != typeof t || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != typeof i) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _toConsumableArray37(arr) {
      return _arrayWithoutHoles37(arr) || _iterableToArray37(arr) || _unsupportedIterableToArray62(arr) || _nonIterableSpread37();
    }
    function _nonIterableSpread37() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray62(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray62(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray62(o, minLen);
    }
    function _iterableToArray37(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles37(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray62(arr);
    }
    function _arrayLikeToArray62(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _taggedTemplateLiteral111(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.bofaValue = exports2.wandererTurnsAvailableToday = exports2.defaultFactory = exports2.WandererTarget = exports2.canWander = exports2.unlock = exports2.canAdventureOrUnlock = exports2.underwater = exports2.UnlockableZones = exports2.isDraggableFight = exports2.draggableFights = void 0;
    var kolmafia_1 = require("kolmafia");
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    exports2.draggableFights = ["backup", "wanderer", "yellow ray", "freefight"];
    function isDraggableFight(fight2) {
      return exports2.draggableFights.includes(fight2);
    }
    exports2.isDraggableFight = isDraggableFight;
    exports2.UnlockableZones = [{
      zone: "Spaaace",
      available: function() {
        return (0, libram_1.have)((0, libram_1.$effect)(_templateObject1091 || (_templateObject1091 = _taggedTemplateLiteral111(["Transpondent"]))));
      },
      unlocker: (0, libram_1.$item)(_templateObject2207 || (_templateObject2207 = _taggedTemplateLiteral111(["transporter transponder"]))),
      noInv: false
    }, {
      zone: "Wormwood",
      available: function() {
        return (0, libram_1.have)((0, libram_1.$effect)(_templateObject3188 || (_templateObject3188 = _taggedTemplateLiteral111(["Absinthe-Minded"]))));
      },
      unlocker: (0, libram_1.$item)(_templateObject4163 || (_templateObject4163 = _taggedTemplateLiteral111(["tiny bottle of absinthe"]))),
      noInv: false
    }, {
      zone: "Rabbit Hole",
      available: function() {
        return (0, libram_1.have)((0, libram_1.$effect)(_templateObject5146 || (_templateObject5146 = _taggedTemplateLiteral111(["Down the Rabbit Hole"]))));
      },
      unlocker: (0, libram_1.$item)(_templateObject6138 || (_templateObject6138 = _taggedTemplateLiteral111(['"DRINK ME" potion']))),
      noInv: false
    }, {
      zone: "Conspiracy Island",
      available: function() {
        return (0, libram_1.realmAvailable)("spooky");
      },
      unlocker: (0, libram_1.$item)(_templateObject7128 || (_templateObject7128 = _taggedTemplateLiteral111(["one-day ticket to Conspiracy Island"]))),
      noInv: true
    }, {
      zone: "Dinseylandfill",
      available: function() {
        return (0, libram_1.realmAvailable)("stench");
      },
      unlocker: (0, libram_1.$item)(_templateObject8106 || (_templateObject8106 = _taggedTemplateLiteral111(["one-day ticket to Dinseylandfill"]))),
      noInv: true
    }, {
      zone: "The Glaciest",
      available: function() {
        return (0, libram_1.realmAvailable)("cold");
      },
      unlocker: (0, libram_1.$item)(_templateObject9103 || (_templateObject9103 = _taggedTemplateLiteral111(["one-day ticket to The Glaciest"]))),
      noInv: true
    }, {
      zone: "Spring Break Beach",
      available: function() {
        return (0, libram_1.realmAvailable)("sleaze");
      },
      unlocker: (0, libram_1.$item)(_templateObject10100 || (_templateObject10100 = _taggedTemplateLiteral111(["one-day ticket to Spring Break Beach"]))),
      noInv: true
    }];
    function underwater(location) {
      return location.environment === "underwater";
    }
    exports2.underwater = underwater;
    var ILLEGAL_PARENTS = ["Clan Basement", "Psychoses", "PirateRealm", "A Monorail Station"];
    var ILLEGAL_ZONES = ["The Drip", "Suburbs"];
    var canAdventureOrUnlockSkipList = [].concat(_toConsumableArray37((0, libram_1.$locations)(_templateObject1180 || (_templateObject1180 = _taggedTemplateLiteral111(["The Oasis, The Bubblin' Caldera, Barrrney's Barrr, The F'c'le, The Poop Deck, Belowdecks, Madness Bakery, The Secret Government Laboratory, The Dire Warren, Inside the Palindome, The Haiku Dungeon, An Incredibly Strange Place (Bad Trip), An Incredibly Strange Place (Mediocre Trip), An Incredibly Strange Place (Great Trip), El Vibrato Island, The Daily Dungeon, Trick-or-Treating, Seaside Megalopolis, Frat House, Through the Spacegate"])))), _toConsumableArray37(kolmafia_1.Location.all().filter(function(_ref) {
      var parent = _ref.parent, zone = _ref.zone;
      return ILLEGAL_PARENTS.includes(parent) || ILLEGAL_ZONES.includes(zone);
    })));
    function canAdventureOrUnlock(loc) {
      var skiplist = _toConsumableArray37(canAdventureOrUnlockSkipList);
      if (!(0, libram_1.have)((0, libram_1.$item)(_templateObject1271 || (_templateObject1271 = _taggedTemplateLiteral111(["repaid diaper"])))) && (0, libram_1.have)((0, libram_1.$item)(_templateObject1370 || (_templateObject1370 = _taggedTemplateLiteral111(["Great Wolf's beastly trousers"]))))) {
        skiplist.push((0, libram_1.$location)(_templateObject1469 || (_templateObject1469 = _taggedTemplateLiteral111(["The Icy Peak"]))));
      }
      if (libram_1.GingerBread.minutesToNoon() === 0 || libram_1.GingerBread.minutesToMidnight() === 0) {
        skiplist.push.apply(skiplist, _toConsumableArray37(libram_1.GingerBread.LOCATIONS));
      }
      var canUnlock = exports2.UnlockableZones.some(function(z) {
        return loc.zone === z.zone && (z.available() || !z.noInv);
      });
      return !underwater(loc) && !skiplist.includes(loc) && ((0, kolmafia_1.canAdventure)(loc) || canUnlock);
    }
    exports2.canAdventureOrUnlock = canAdventureOrUnlock;
    function unlock(loc, value) {
      var unlockableZone = exports2.UnlockableZones.find(function(z) {
        return z.zone === loc.zone;
      });
      if (!unlockableZone) return (0, kolmafia_1.canAdventure)(loc);
      if (unlockableZone.available()) return true;
      if ((0, kolmafia_1.buy)(1, unlockableZone.unlocker, value) === 0) return false;
      return (0, kolmafia_1.use)(unlockableZone.unlocker);
    }
    exports2.unlock = unlock;
    var backupSkiplist = (0, libram_1.$locations)(_templateObject1568 || (_templateObject1568 = _taggedTemplateLiteral111(["The Overgrown Lot, The Skeleton Store, The Mansion of Dr. Weirdeaux, Professor Jacking's Huge-A-Ma-tron"])));
    var backupSafelist = (0, libram_1.$locations)(_templateObject1661 || (_templateObject1661 = _taggedTemplateLiteral111(["The Haunted Gallery, The Haunted Ballroom, The Haunted Library, The Penultimate Fantasy Airship, Cobb's Knob Barracks, The Castle in the Clouds in the Sky (Basement), The Castle in the Clouds in the Sky (Ground Floor), The Castle in the Clouds in the Sky (Top Floor), The Haiku Dungeon, Twin Peak, A Mob of Zeppelin Protesters, The Upper Chamber, Frat House"])));
    var yellowRaySafelist = (0, libram_1.$locations)(_templateObject1758 || (_templateObject1758 = _taggedTemplateLiteral111(["The Haunted Gallery, The Haunted Ballroom, The Haunted Library, Cobb's Knob Barracks, The Castle in the Clouds in the Sky (Basement), The Castle in the Clouds in the Sky (Ground Floor), The Haiku Dungeon, Twin Peak, A Mob of Zeppelin Protesters, The Upper Chamber"])));
    function canWanderTypeBackup(location) {
      return !backupSkiplist.includes(location) && (location.combatPercent >= 100 || backupSafelist.includes(location));
    }
    function canWanderTypeFreeFight(location) {
      if (location === (0, libram_1.$location)(_templateObject1856 || (_templateObject1856 = _taggedTemplateLiteral111(["The Fun-Guy Mansion"]))) && (0, libram_1.get)("funGuyMansionKills", 0) >= 100) {
        return false;
      }
      return !backupSkiplist.includes(location) && (location.combatPercent >= 100 || yellowRaySafelist.includes(location));
    }
    var wandererSkiplist = (0, libram_1.$locations)(_templateObject1951 || (_templateObject1951 = _taggedTemplateLiteral111(["The Batrat and Ratbat Burrow, Guano Junction, The Beanbat Chamber, A-Boo Peak, The Mouldering Mansion, The Rogue Windmill, The Stately Pleasure Dome"])));
    function canWanderTypeWander(location) {
      return !wandererSkiplist.includes(location) && location.wanderers;
    }
    function canWander(location, type) {
      if (underwater(location)) return false;
      switch (type) {
        case "backup":
          return canWanderTypeBackup(location);
        case "freefight":
        case "yellow ray":
          return canWanderTypeFreeFight(location);
        case "wanderer":
          return canWanderTypeWander(location);
      }
    }
    exports2.canWander = canWander;
    var WandererTarget = /* @__PURE__ */ _createClass35(
      /**
       * Process for determining where to put a wanderer to extract additional value from it
       * @param name name of this wanderer - for documentation/logging purposes
       * @param location returns the location to adventure to target this; null only if something goes wrong
       * @param value the expected additional value of putting a single wanderer-fight into the zone for this
       * @param prepareTurn attempt to set up, spending meat and or items as necessary
       */
      function WandererTarget2(name, location, value) {
        var prepareTurn = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : function() {
          return true;
        };
        _classCallCheck35(this, WandererTarget2);
        _defineProperty39(this, "name", void 0);
        _defineProperty39(this, "value", void 0);
        _defineProperty39(this, "location", void 0);
        _defineProperty39(this, "prepareTurn", void 0);
        this.name = name;
        this.value = value;
        this.location = location;
        this.prepareTurn = prepareTurn;
      }
    );
    exports2.WandererTarget = WandererTarget;
    function defaultFactory() {
      return [new WandererTarget("Default", (0, libram_1.$location)(_templateObject2051 || (_templateObject2051 = _taggedTemplateLiteral111(["The Haunted Kitchen"]))), 0)];
    }
    exports2.defaultFactory = defaultFactory;
    var WanderingSources = [{
      name: "CMG",
      item: (0, libram_1.$item)(_templateObject21105 || (_templateObject21105 = _taggedTemplateLiteral111(["cursed magnifying glass"]))),
      max: 3,
      property: "_voidFreeFights",
      type: "wanderer"
    }, {
      name: "Voter",
      item: (0, libram_1.$item)(_templateObject2250 || (_templateObject2250 = _taggedTemplateLiteral111(['"I Voted!" sticker']))),
      max: 3,
      property: "_voteFreeFights",
      type: "wanderer"
    }, {
      name: "Voter",
      item: (0, libram_1.$item)(_templateObject2346 || (_templateObject2346 = _taggedTemplateLiteral111(['"I Voted!" sticker']))),
      max: 3,
      property: "_voteFreeFights",
      type: "wanderer"
    }, {
      name: "Backup",
      item: (0, libram_1.$item)(_templateObject2445 || (_templateObject2445 = _taggedTemplateLiteral111(["backup camera"]))),
      max: 11,
      property: "_backUpUses",
      type: "backup"
    }];
    function wandererTurnsAvailableToday(options, location) {
      var canWanderCache = {
        backup: canWander(location, "backup"),
        wanderer: canWander(location, "wanderer"),
        "yellow ray": canWander(location, "yellow ray"),
        freefight: canWander(location, "freefight")
      };
      var digitize = canWanderCache["backup"] && options.digitzesRemaining ? options.digitzesRemaining(options.estimatedTurns()) : 0;
      var pigSkinnerRay = canWanderCache["backup"] && (0, libram_1.have)((0, libram_1.$skill)(_templateObject2544 || (_templateObject2544 = _taggedTemplateLiteral111(["Free-For-All"])))) ? Math.floor(options.estimatedTurns() / 25) : 0;
      var yellowRayCooldown = (0, libram_1.have)((0, libram_1.$skill)(_templateObject2641 || (_templateObject2641 = _taggedTemplateLiteral111(["Fondeluge"])))) ? 50 : 100;
      var yellowRay = canWanderCache["yellow ray"] ? Math.floor(options.estimatedTurns() / yellowRayCooldown) : 0;
      var wanderers2 = (0, libram_1.sum)(WanderingSources, function(source) {
        return canWanderCache[source.type] && (0, libram_1.have)(source.item) ? (0, libram_1.clamp)((0, libram_1.get)(source.property), 0, source.max) : 0;
      });
      return digitize + pigSkinnerRay + yellowRay + wanderers2;
    }
    exports2.wandererTurnsAvailableToday = wandererTurnsAvailableToday;
    var LIMITED_BOFA_DROPS = (0, libram_1.$items)(_templateObject2741 || (_templateObject2741 = _taggedTemplateLiteral111(["pocket wish, tattered scrap of paper"])));
    function bofaValue(_ref2, monster) {
      var plentifulMonsters = _ref2.plentifulMonsters, itemValue = _ref2.itemValue, effectValue = _ref2.effectValue;
      switch (monster.factType) {
        case "item": {
          var item14 = (0, kolmafia_1.itemFact)(monster);
          var quantity = (0, kolmafia_1.numericFact)(monster);
          if (LIMITED_BOFA_DROPS.includes(item14) && plentifulMonsters.some(function(monster2) {
            return (0, kolmafia_1.toItem)(monster2.fact) === item14;
          })) {
            return 0;
          }
          return quantity * itemValue(item14);
        }
        case "effect": {
          var effect2 = (0, kolmafia_1.effectFact)(monster);
          var duration = (0, kolmafia_1.numericFact)(monster);
          return effectValue(effect2, duration);
        }
        case "meat": {
          return (0, kolmafia_1.numericFact)(monster);
        }
        default:
          return 0;
      }
    }
    exports2.bofaValue = bofaValue;
  }
});

// node_modules/garbo-lib/dist/wanderer/guzzlr.js
var require_guzzlr = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/guzzlr.js": function(exports2) {
    "use strict";
    var _templateObject1091;
    function _taggedTemplateLiteral111(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.guzzlrFactory = void 0;
    var kolmafia_1 = require("kolmafia");
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    var lib_1 = require_lib2();
    function considerAbandon(options, locationSkiplist) {
      var location = libram_1.Guzzlr.getLocation();
      var remaningTurns = Math.ceil((100 - (0, libram_1.get)("guzzlrDeliveryProgress")) / (10 - (0, libram_1.get)("_guzzlrDeliveries")));
      (0, kolmafia_1.print)("Got guzzlr quest ".concat(libram_1.Guzzlr.getTier(), " at ").concat(libram_1.Guzzlr.getLocation(), " with remaining turns ").concat(remaningTurns));
      if (libram_1.Guzzlr.canAbandon() && // consider abandoning
      (!location || // if mafia failed to track the location correctly
      locationSkiplist.includes(location) || !(0, lib_1.canAdventureOrUnlock)(location) || // or the zone is marked as "generally cannot adv"
      options.ascend && (0, lib_1.wandererTurnsAvailableToday)(options, location) < remaningTurns)) {
        (0, kolmafia_1.print)("Abandoning...");
        libram_1.Guzzlr.abandon();
      }
    }
    function acceptGuzzlrQuest(options, locationSkiplist) {
      if (libram_1.Guzzlr.isQuestActive()) considerAbandon(options, locationSkiplist);
      while (!libram_1.Guzzlr.isQuestActive()) {
        (0, kolmafia_1.print)("Picking a guzzlr quest");
        if (libram_1.Guzzlr.canPlatinum() && !(options.prioritizeCappingGuzzlr && libram_1.Guzzlr.haveFullPlatinumBonus())) {
          libram_1.Guzzlr.acceptPlatinum();
        } else if (libram_1.Guzzlr.canGold() && (libram_1.Guzzlr.haveFullBronzeBonus() || !libram_1.Guzzlr.haveFullGoldBonus())) {
          libram_1.Guzzlr.acceptGold();
        } else {
          libram_1.Guzzlr.acceptBronze();
        }
        considerAbandon(options, locationSkiplist);
      }
    }
    function guzzlrValuePerTurn(buckValue, tier, guzzlrBooze) {
      var turnsToCompleteQuest = 100 / Math.max(3, 10 - (0, libram_1.get)("_guzzlrDeliveries"));
      var boozePrice = (0, kolmafia_1.mallPrice)(guzzlrBooze);
      switch (tier) {
        case null:
          return 0;
        case "bronze":
          return (3 * buckValue - boozePrice) / turnsToCompleteQuest;
        case "gold":
          return (6 * buckValue - boozePrice) / turnsToCompleteQuest;
        case "platinum":
          return (21.5 * buckValue - boozePrice) / turnsToCompleteQuest;
      }
    }
    function guzzlrFactory(_type, locationSkiplist, options) {
      if (libram_1.Guzzlr.have()) {
        var buckValue = options.itemValue((0, libram_1.$item)(_templateObject1091 || (_templateObject1091 = _taggedTemplateLiteral111(["Guzzlrbuck"]))));
        acceptGuzzlrQuest(options, locationSkiplist);
        var location = libram_1.Guzzlr.getLocation();
        if (location !== null) {
          var guzzlrBooze = libram_1.Guzzlr.getTier() === "platinum" ? libram_1.Guzzlr.getCheapestPlatinumCocktail() : libram_1.Guzzlr.getBooze();
          return guzzlrBooze ? [new lib_1.WandererTarget("Guzzlr", location, guzzlrValuePerTurn(buckValue, libram_1.Guzzlr.getTier(), guzzlrBooze), function() {
            if (!guzzlrBooze) {
              return false;
            }
            if (!(0, libram_1.have)(guzzlrBooze)) {
              var fancy = guzzlrBooze && (0, kolmafia_1.craftType)(guzzlrBooze).includes("fancy");
              if (guzzlrBooze && (!fancy || fancy && (0, libram_1.freeCrafts)("booze") > 0)) {
                (0, kolmafia_1.retrieveItem)(guzzlrBooze);
              } else if (guzzlrBooze) {
                (0, kolmafia_1.buy)(1, guzzlrBooze, buckValue * libram_1.Guzzlr.expectedReward());
              }
            }
            return (0, libram_1.have)(guzzlrBooze);
          })] : [];
        }
      }
      return [];
    }
    exports2.guzzlrFactory = guzzlrFactory;
  }
});

// node_modules/garbo-lib/dist/wanderer/lovebugs.js
var require_lovebugs = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/lovebugs.js": function(exports2) {
    "use strict";
    var _templateObject1091;
    var _templateObject2207;
    var _templateObject3188;
    var _templateObject4163;
    var _templateObject5146;
    var _templateObject6138;
    function _taggedTemplateLiteral111(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.lovebugsFactory = void 0;
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    var lib_1 = require_lib2();
    var LovebugTargets = [
      // exclude barf mountain because we spend most of our turns there anyway
      {
        element: "cold",
        location: (0, libram_1.$location)(_templateObject1091 || (_templateObject1091 = _taggedTemplateLiteral111(["VYKEA"]))),
        currency: (0, libram_1.$item)(_templateObject2207 || (_templateObject2207 = _taggedTemplateLiteral111(["Wal-Mart gift certificate"])))
      },
      {
        element: "sleaze",
        location: (0, libram_1.$location)(_templateObject3188 || (_templateObject3188 = _taggedTemplateLiteral111(["The Fun-Guy Mansion"]))),
        currency: (0, libram_1.$item)(_templateObject4163 || (_templateObject4163 = _taggedTemplateLiteral111(["Beach Buck"])))
      },
      {
        element: "spooky",
        location: (0, libram_1.$location)(_templateObject5146 || (_templateObject5146 = _taggedTemplateLiteral111(["The Deep Dark Jungle"]))),
        currency: (0, libram_1.$item)(_templateObject6138 || (_templateObject6138 = _taggedTemplateLiteral111(["Coinspiracy"])))
      }
    ];
    function lovebugsFactory(_type, _locationSkiplist, options) {
      if ((0, libram_1.get)("lovebugsUnlocked")) {
        return LovebugTargets.filter(function(t) {
          return (0, libram_1.realmAvailable)(t.element);
        }).map(function(t) {
          return new lib_1.WandererTarget("Lovebugs ".concat(t.location), t.location, options.itemValue(t.currency) * 0.05);
        });
      }
      return [];
    }
    exports2.lovebugsFactory = lovebugsFactory;
  }
});

// node_modules/garbo-lib/dist/wanderer/freefight.js
var require_freefight = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/freefight.js": function(exports2) {
    "use strict";
    function _toConsumableArray37(arr) {
      return _arrayWithoutHoles37(arr) || _iterableToArray37(arr) || _unsupportedIterableToArray62(arr) || _nonIterableSpread37();
    }
    function _nonIterableSpread37() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArray37(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles37(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray62(arr);
    }
    function _createForOfIteratorHelper37(o, allowArrayLike) {
      var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray62(o)) || allowArrayLike && o && typeof o.length === "number") {
          if (it) o = it;
          var i = 0;
          var F = function F2() {
          };
          return { s: F, n: function n() {
            if (i >= o.length) return { done: true };
            return { done: false, value: o[i++] };
          }, e: function e(_e) {
            throw _e;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var normalCompletion = true, didErr = false, err;
      return { s: function s() {
        it = it.call(o);
      }, n: function n() {
        var step2 = it.next();
        normalCompletion = step2.done;
        return step2;
      }, e: function e(_e2) {
        didErr = true;
        err = _e2;
      }, f: function f() {
        try {
          if (!normalCompletion && it.return != null) it.return();
        } finally {
          if (didErr) throw err;
        }
      } };
    }
    function _unsupportedIterableToArray62(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray62(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray62(o, minLen);
    }
    function _arrayLikeToArray62(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.freefightFactory = void 0;
    var kolmafia_1 = require("kolmafia");
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    var lib_1 = require_lib2();
    function averageYrValue(location, forceItemDrops, options) {
      var badAttributes = ["LUCKY", "ULTRARARE", "BOSS"];
      var rates = (0, kolmafia_1.appearanceRates)(location);
      var monsters = (0, kolmafia_1.getMonsters)(location).filter(function(m) {
        return !badAttributes.some(function(s) {
          return m.attributes.includes(s);
        }) && rates[m.name] > 0;
      });
      var canDuplicate = libram_1.SourceTerminal.have() && libram_1.SourceTerminal.duplicateUsesRemaining() > 0;
      if (monsters.length === 0) {
        return 0;
      } else {
        return (0, libram_1.sum)(monsters, function(m) {
          var items = (0, kolmafia_1.itemDropsArray)(m).filter(function(drop) {
            return ["", "n"].includes(drop.type);
          });
          var duplicateFactor = canDuplicate && !m.attributes.includes("NOCOPY") ? 2 : 1;
          var meatDrop = (0, libram_1.clamp)((m.minMeat + m.maxMeat) / 2, 0, 1e3);
          var itemDrop = duplicateFactor * (0, libram_1.sum)(items, function(drop) {
            var yrRate = (drop.type === "" && forceItemDrops ? 100 : drop.rate) / 100;
            return yrRate * options.itemValue(drop.drop);
          });
          return itemDrop + meatDrop + (0, lib_1.bofaValue)(options, m);
        }) / monsters.length;
      }
    }
    function monsterValues(forceItemDrops, options) {
      var values = /* @__PURE__ */ new Map();
      var _iterator = _createForOfIteratorHelper37(kolmafia_1.Location.all().filter(function(l) {
        return (0, lib_1.canAdventureOrUnlock)(l) && !(0, lib_1.underwater)(l);
      })), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var location = _step.value;
          values.set(location, averageYrValue(location, forceItemDrops, options) + options.freeFightExtraValue(location));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return values;
    }
    function freefightFactory(type, locationSkiplist, options) {
      if (type === "yellow ray" || type === "freefight") {
        var validLocations = kolmafia_1.Location.all().filter(function(location) {
          return (0, lib_1.canWander)(location, "yellow ray") && (0, lib_1.canAdventureOrUnlock)(location);
        });
        var locationValues = monsterValues(type === "yellow ray", options);
        var bestZones = new Set(validLocations.length > 0 ? [(0, libram_1.maxBy)(validLocations, function(l) {
          var _locationValues$get;
          return (_locationValues$get = locationValues.get(l)) !== null && _locationValues$get !== void 0 ? _locationValues$get : 0;
        })] : []);
        var _iterator2 = _createForOfIteratorHelper37(lib_1.UnlockableZones), _step2;
        try {
          var _loop = function _loop2() {
            var unlockableZone = _step2.value;
            var extraLocations = kolmafia_1.Location.all().filter(function(l) {
              return l.zone === unlockableZone.zone && !locationSkiplist.includes(l);
            });
            if (extraLocations.length > 0) {
              bestZones.add((0, libram_1.maxBy)(extraLocations, function(l) {
                var _locationValues$get3;
                return (_locationValues$get3 = locationValues.get(l)) !== null && _locationValues$get3 !== void 0 ? _locationValues$get3 : 0;
              }));
            }
          };
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            _loop();
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
        if (bestZones.size > 0) {
          return _toConsumableArray37(bestZones).map(function(l) {
            var _locationValues$get2;
            return new lib_1.WandererTarget("Yellow Ray ".concat(l), l, (_locationValues$get2 = locationValues.get(l)) !== null && _locationValues$get2 !== void 0 ? _locationValues$get2 : 0);
          });
        }
      }
      return [];
    }
    exports2.freefightFactory = freefightFactory;
  }
});

// node_modules/garbo-lib/dist/wanderer/eightbit.js
var require_eightbit = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/eightbit.js": function(exports2) {
    "use strict";
    var _templateObject1091;
    var _templateObject2207;
    var _templateObject3188;
    var _templateObject4163;
    var _templateObject5146;
    var _templateObject6138;
    function _taggedTemplateLiteral111(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.eightbitFactory = exports2.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST = exports2.bonusColor = void 0;
    var kolmafia_1 = require("kolmafia");
    var lib_1 = require_lib2();
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    exports2.bonusColor = ["black", "blue", "green", "red"];
    exports2.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST = 2e4;
    var locationColor = {
      black: (0, libram_1.$location)(_templateObject1091 || (_templateObject1091 = _taggedTemplateLiteral111(["Vanya's Castle"]))),
      blue: (0, libram_1.$location)(_templateObject2207 || (_templateObject2207 = _taggedTemplateLiteral111(["Megalo-City"]))),
      green: (0, libram_1.$location)(_templateObject3188 || (_templateObject3188 = _taggedTemplateLiteral111(["Hero's Field"]))),
      red: (0, libram_1.$location)(_templateObject4163 || (_templateObject4163 = _taggedTemplateLiteral111(["The Fungus Plains"])))
    };
    function value(color, options) {
      var denominator = options.ascend ? (0, libram_1.get)("8BitScore") - exports2.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST : exports2.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST;
      return options.itemValue((0, libram_1.$item)(_templateObject5146 || (_templateObject5146 = _taggedTemplateLiteral111(["fat loot token"])))) * (0, kolmafia_1.eightBitPoints)(locationColor[color]) / denominator;
    }
    function eightbitFactory(type, locationSkiplist, options) {
      if ((0, libram_1.have)((0, libram_1.$item)(_templateObject6138 || (_templateObject6138 = _taggedTemplateLiteral111(["continuum transfunctioner"])))) && type !== "backup" && (0, libram_1.get)("8BitScore") < exports2.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST) {
        return exports2.bonusColor.map(function(color) {
          return new lib_1.WandererTarget("8-bit (".concat(color, ")"), locationColor[color], value(color, options));
        }).filter(function(t) {
          return !locationSkiplist.includes(t.location);
        });
      }
      return [];
    }
    exports2.eightbitFactory = eightbitFactory;
  }
});

// node_modules/garbo-lib/dist/wanderer/index.js
var require_wanderer = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/index.js": function(exports2) {
    "use strict";
    var _templateObject1091;
    var _templateObject2207;
    var _templateObject3188;
    var _templateObject4163;
    var _templateObject5146;
    var _templateObject6138;
    var _templateObject7128;
    var _templateObject8106;
    var _templateObject9103;
    var _templateObject10100;
    var _templateObject1180;
    var _templateObject1271;
    var _templateObject1370;
    var _templateObject1469;
    var _templateObject1568;
    var _templateObject1661;
    var _templateObject1758;
    var _templateObject1856;
    var _templateObject1951;
    var _templateObject2051;
    var _templateObject21105;
    var _templateObject2250;
    var _templateObject2346;
    var _templateObject2445;
    var _templateObject2544;
    var _templateObject2641;
    var _templateObject2741;
    var _templateObject2838;
    var _templateObject2938;
    var _templateObject3038;
    var _templateObject3189;
    var _templateObject3239;
    function ownKeys19(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread19(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys19(Object(t), true).forEach(function(r2) {
          _defineProperty39(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys19(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck35(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties35(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey44(descriptor.key), descriptor);
      }
    }
    function _createClass35(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties35(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties35(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _defineProperty39(obj, key, value) {
      key = _toPropertyKey44(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey44(t) {
      var i = _toPrimitive44(t, "string");
      return "symbol" == typeof i ? i : String(i);
    }
    function _toPrimitive44(t, r) {
      if ("object" != typeof t || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != typeof i) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _toConsumableArray37(arr) {
      return _arrayWithoutHoles37(arr) || _iterableToArray37(arr) || _unsupportedIterableToArray62(arr) || _nonIterableSpread37();
    }
    function _nonIterableSpread37() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArray37(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles37(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray62(arr);
    }
    function _createForOfIteratorHelper37(o, allowArrayLike) {
      var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray62(o)) || allowArrayLike && o && typeof o.length === "number") {
          if (it) o = it;
          var i = 0;
          var F = function F2() {
          };
          return { s: F, n: function n() {
            if (i >= o.length) return { done: true };
            return { done: false, value: o[i++] };
          }, e: function e(_e) {
            throw _e;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var normalCompletion = true, didErr = false, err;
      return { s: function s() {
        it = it.call(o);
      }, n: function n() {
        var step2 = it.next();
        normalCompletion = step2.done;
        return step2;
      }, e: function e(_e2) {
        didErr = true;
        err = _e2;
      }, f: function f() {
        try {
          if (!normalCompletion && it.return != null) it.return();
        } finally {
          if (didErr) throw err;
        }
      } };
    }
    function _unsupportedIterableToArray62(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray62(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray62(o, minLen);
    }
    function _arrayLikeToArray62(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _taggedTemplateLiteral111(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.WandererManager = void 0;
    var kolmafia_1 = require("kolmafia");
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    var guzzlr_1 = require_guzzlr();
    var lib_1 = require_lib2();
    var lovebugs_1 = require_lovebugs();
    var freefight_1 = require_freefight();
    var eightbit_1 = require_eightbit();
    function sober() {
      return (0, kolmafia_1.myInebriety)() <= (0, kolmafia_1.inebrietyLimit)() + ((0, kolmafia_1.myFamiliar)() === (0, libram_1.$familiar)(_templateObject1091 || (_templateObject1091 = _taggedTemplateLiteral111(["Stooper"]))) ? -1 : 0);
    }
    var wanderFactories = [lib_1.defaultFactory, freefight_1.freefightFactory, lovebugs_1.lovebugsFactory, guzzlr_1.guzzlrFactory, eightbit_1.eightbitFactory];
    function bestWander(type, locationSkiplist, nameSkiplist, options) {
      var possibleLocations = /* @__PURE__ */ new Map();
      for (var _i = 0, _wanderFactories = wanderFactories; _i < _wanderFactories.length; _i++) {
        var wanderFactory = _wanderFactories[_i];
        var wanderTargets = wanderFactory(type, locationSkiplist, options);
        var _iterator = _createForOfIteratorHelper37(wanderTargets), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var wanderTarget = _step.value;
            if (!nameSkiplist.includes(wanderTarget.name) && !locationSkiplist.includes(wanderTarget.location) && (0, lib_1.canWander)(wanderTarget.location, type)) {
              var _possibleLocations$ge;
              var wandererLocation = (_possibleLocations$ge = possibleLocations.get(wanderTarget.location)) !== null && _possibleLocations$ge !== void 0 ? _possibleLocations$ge : {
                location: wanderTarget.location,
                targets: [],
                value: 0
              };
              wandererLocation.targets = [].concat(_toConsumableArray37(wandererLocation.targets), [wanderTarget]);
              wandererLocation.value += wanderTarget.value;
              possibleLocations.set(wandererLocation.location, wandererLocation);
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      if (possibleLocations.size === 0) {
        throw "Could not determine a wander target!";
      }
      return (0, libram_1.maxBy)(_toConsumableArray37(possibleLocations.values()), "value");
    }
    function wanderWhere(options, type) {
      var nameSkiplist = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      var locationSkiplist = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];
      var candidate = bestWander(type, locationSkiplist, nameSkiplist, options);
      var failed = candidate.targets.filter(function(target) {
        return !target.prepareTurn();
      });
      var badLocation = !(0, lib_1.canAdventureOrUnlock)(candidate.location) || !(0, lib_1.unlock)(candidate.location, candidate.value) || !(0, lib_1.canWander)(candidate.location, type) ? [candidate.location] : [];
      if (failed.length > 0 || badLocation.length > 0) {
        return wanderWhere(options, type, [].concat(_toConsumableArray37(nameSkiplist), _toConsumableArray37(failed.map(function(target) {
          return target.name;
        }))), [].concat(_toConsumableArray37(locationSkiplist), badLocation));
      } else {
        var targets = candidate.targets.map(function(t) {
          return t.name;
        }).join("; ");
        var value = candidate.value.toFixed(2);
        (0, kolmafia_1.print)("Wandering at ".concat(candidate.location, " for expected value ").concat(value, " (").concat(targets, ")"), (0, kolmafia_1.isDarkMode)() ? "yellow" : "blue");
        return candidate.location;
      }
    }
    var defaultWanderOptions = {
      drunkSafe: true,
      allowEquipment: true
    };
    var WandererManager = /* @__PURE__ */ function() {
      function WandererManager2(options) {
        _classCallCheck35(this, WandererManager2);
        _defineProperty39(this, "quartetChoice", (0, libram_1.get)("lastQuartetRequest") || 4);
        _defineProperty39(this, "unsupportedChoices", /* @__PURE__ */ new Map([
          [(0, libram_1.$location)(_templateObject2207 || (_templateObject2207 = _taggedTemplateLiteral111(["The Spooky Forest"]))), {
            502: 2,
            505: 2
          }],
          [(0, libram_1.$location)(_templateObject3188 || (_templateObject3188 = _taggedTemplateLiteral111(["Guano Junction"]))), {
            1427: 1
          }],
          [(0, libram_1.$location)(_templateObject4163 || (_templateObject4163 = _taggedTemplateLiteral111(["The Hidden Apartment Building"]))), {
            780: 6,
            1578: 6
          }],
          [(0, libram_1.$location)(_templateObject5146 || (_templateObject5146 = _taggedTemplateLiteral111(["The Black Forest"]))), {
            923: 1,
            924: 1
          }],
          [(0, libram_1.$location)(_templateObject6138 || (_templateObject6138 = _taggedTemplateLiteral111(["LavaCo\u2122 Lamp Factory"]))), {
            1091: 9
          }],
          [(0, libram_1.$location)(_templateObject7128 || (_templateObject7128 = _taggedTemplateLiteral111(["The Haunted Laboratory"]))), {
            884: 6
          }],
          [(0, libram_1.$location)(_templateObject8106 || (_templateObject8106 = _taggedTemplateLiteral111(["The Haunted Nursery"]))), {
            885: 6
          }],
          [(0, libram_1.$location)(_templateObject9103 || (_templateObject9103 = _taggedTemplateLiteral111(["The Haunted Storage Room"]))), {
            886: 6
          }],
          [(0, libram_1.$location)(_templateObject10100 || (_templateObject10100 = _taggedTemplateLiteral111(["The Haunted Ballroom"]))), {
            90: 3,
            106: this.quartetChoice
          }],
          [(0, libram_1.$location)(_templateObject1180 || (_templateObject1180 = _taggedTemplateLiteral111(["The Haunted Library"]))), {
            163: 4,
            888: 5,
            889: 5
          }],
          [(0, libram_1.$location)(_templateObject1271 || (_templateObject1271 = _taggedTemplateLiteral111(["The Haunted Gallery"]))), {
            89: 6,
            91: 2
          }],
          [(0, libram_1.$location)(_templateObject1370 || (_templateObject1370 = _taggedTemplateLiteral111(["The Hidden Park"]))), {
            789: 6
          }],
          [(0, libram_1.$location)(_templateObject1469 || (_templateObject1469 = _taggedTemplateLiteral111(["A Mob of Zeppelin Protesters"]))), {
            1432: 1,
            856: 2,
            857: 2,
            858: 2
          }],
          [(0, libram_1.$location)(_templateObject1568 || (_templateObject1568 = _taggedTemplateLiteral111(["A-Boo Peak"]))), {
            1430: 2
          }],
          [(0, libram_1.$location)(_templateObject1661 || (_templateObject1661 = _taggedTemplateLiteral111(["Sloppy Seconds Diner"]))), {
            919: 6
          }],
          [(0, libram_1.$location)(_templateObject1758 || (_templateObject1758 = _taggedTemplateLiteral111(["VYKEA"]))), {
            1115: 6
          }],
          [(0, libram_1.$location)(_templateObject1856 || (_templateObject1856 = _taggedTemplateLiteral111(["The Castle in the Clouds in the Sky (Basement)"]))), {
            669: 1,
            670: 4,
            671: 4
          }],
          [(0, libram_1.$location)(_templateObject1951 || (_templateObject1951 = _taggedTemplateLiteral111(["The Haunted Bedroom"]))), {
            876: 1,
            877: 1,
            878: 1,
            879: 2,
            880: 2
            // a dumb 75 meat club
          }],
          [(0, libram_1.$location)(_templateObject2051 || (_templateObject2051 = _taggedTemplateLiteral111(["The Copperhead Club"]))), {
            855: 4
          }],
          [(0, libram_1.$location)(_templateObject21105 || (_templateObject21105 = _taggedTemplateLiteral111(["The Haunted Bathroom"]))), {
            882: 2
          }],
          [(0, libram_1.$location)(_templateObject2250 || (_templateObject2250 = _taggedTemplateLiteral111(["The Castle in the Clouds in the Sky (Top Floor)"]))), {
            1431: 1,
            675: 4,
            676: 4,
            677: 1,
            678: 3
            // Go to Steampunk choice
          }],
          [(0, libram_1.$location)(_templateObject2346 || (_templateObject2346 = _taggedTemplateLiteral111(["The Castle in the Clouds in the Sky (Ground Floor)"]))), {
            672: 3,
            673: 3,
            674: 3,
            1026: 3
            // Skip
          }],
          [(0, libram_1.$location)(_templateObject2445 || (_templateObject2445 = _taggedTemplateLiteral111(["The Hidden Office Building"]))), {
            786: 6
          }],
          [(0, libram_1.$location)(_templateObject2544 || (_templateObject2544 = _taggedTemplateLiteral111(["Cobb's Knob Barracks"]))), {
            522: 2
          }],
          [(0, libram_1.$location)(_templateObject2641 || (_templateObject2641 = _taggedTemplateLiteral111(["The Penultimate Fantasy Airship"]))), {
            178: 2,
            182: 1
          }],
          [(0, libram_1.$location)(_templateObject2741 || (_templateObject2741 = _taggedTemplateLiteral111(["The Haiku Dungeon"]))), {
            297: 3
          }],
          [(0, libram_1.$location)(_templateObject2838 || (_templateObject2838 = _taggedTemplateLiteral111(["Frat House"]))), {
            1425: 4
          }]
          // fight eXtreme Sports Orcs
        ]));
        _defineProperty39(this, "equipment", new Map([].concat(_toConsumableArray37(kolmafia_1.Location.all().filter(function(l) {
          return l.zone === "The 8-Bit Realm";
        }).map(function(l) {
          return [l, (0, libram_1.$items)(_templateObject2938 || (_templateObject2938 = _taggedTemplateLiteral111(["continuum transfunctioner"])))];
        })), [[(0, libram_1.$location)(_templateObject3038 || (_templateObject3038 = _taggedTemplateLiteral111(["Shadow Rift (The 8-Bit Realm)"]))), (0, libram_1.$items)(_templateObject3189 || (_templateObject3189 = _taggedTemplateLiteral111(["continuum transfunctioner"])))]])));
        _defineProperty39(this, "cacheKey", "");
        _defineProperty39(this, "targets", {});
        _defineProperty39(this, "options", void 0);
        this.options = options;
      }
      _createClass35(WandererManager2, [{
        key: "getTarget",
        value: function getTarget(wanderer) {
          var _this$targets, _ref2, _this$targets$_ref;
          var _ref = (0, lib_1.isDraggableFight)(wanderer) ? {
            draggableFight: wanderer,
            options: {}
          } : {
            draggableFight: wanderer.wanderer,
            options: wanderer
          }, draggableFight = _ref.draggableFight, options = _ref.options;
          var _defaultWanderOptions = _objectSpread19(_objectSpread19({}, defaultWanderOptions), options), drunkSafe = _defaultWanderOptions.drunkSafe, allowEquipment = _defaultWanderOptions.allowEquipment;
          var newKey = "".concat((0, kolmafia_1.myTotalTurnsSpent)(), ";").concat((0, kolmafia_1.totalTurnsPlayed)(), ";").concat((0, libram_1.get)("familiarSweat"));
          if (this.cacheKey !== newKey) this.clear();
          this.cacheKey = newKey;
          var locationSkipList = allowEquipment ? [] : _toConsumableArray37(this.equipment.keys());
          return sober() || !drunkSafe ? (_this$targets$_ref = (_this$targets = this.targets)[_ref2 = "".concat(draggableFight, ":").concat(allowEquipment)]) !== null && _this$targets$_ref !== void 0 ? _this$targets$_ref : _this$targets[_ref2] = wanderWhere(this.options, draggableFight, [], locationSkipList) : (0, libram_1.$location)(_templateObject3239 || (_templateObject3239 = _taggedTemplateLiteral111(["Drunken Stupor"])));
        }
      }, {
        key: "getChoices",
        value: function getChoices(wanderer) {
          var _this$unsupportedChoi;
          return (_this$unsupportedChoi = this.unsupportedChoices.get(this.getTarget(wanderer))) !== null && _this$unsupportedChoi !== void 0 ? _this$unsupportedChoi : {};
        }
      }, {
        key: "clear",
        value: function clear() {
          this.targets = {};
        }
      }, {
        key: "getEquipment",
        value: function getEquipment(wanderer) {
          var _this$equipment$get;
          return (_this$equipment$get = this.equipment.get(this.getTarget(wanderer))) !== null && _this$equipment$get !== void 0 ? _this$equipment$get : [];
        }
      }]);
      return WandererManager2;
    }();
    exports2.WandererManager = WandererManager;
  }
});

// node_modules/garbo-lib/dist/index.js
var require_dist = __commonJS({
  "node_modules/garbo-lib/dist/index.js": function(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.WandererManager = exports2.makeValue = void 0;
    var value_1 = require_value();
    Object.defineProperty(exports2, "makeValue", {
      enumerable: true,
      get: function get4() {
        return value_1.makeValue;
      }
    });
    var wanderer_1 = require_wanderer();
    Object.defineProperty(exports2, "WandererManager", {
      enumerable: true,
      get: function get4() {
        return wanderer_1.WandererManager;
      }
    });
  }
});

// src/main.ts
var main_exports = {};
__export(main_exports, {
  main: function() {
    return main;
  }
});
module.exports = __toCommonJS(main_exports);
var import_kolmafia122 = require("kolmafia");

// src/tasks/level1.ts
var import_kolmafia106 = require("kolmafia");
init_dist();

// src/engine/priority.ts
var import_kolmafia105 = require("kolmafia");
init_dist();

// src/engine/combat.ts
var import_kolmafia89 = require("kolmafia");
init_dist();

// node_modules/grimoire-kolmafia/dist/args.js
var import_kolmafia85 = require("kolmafia");
function _createForOfIteratorHelper17(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray42(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e3) {
    didErr = true;
    err = _e3;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray42(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray42(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray42(o, minLen);
}
function _arrayLikeToArray42(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function ownKeys11(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread11(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys11(Object(t), true).forEach(function(r2) {
      _defineProperty25(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys11(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty25(obj, key, value) {
  key = _toPropertyKey27(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _classCallCheck21(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties21(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey27(descriptor.key), descriptor);
  }
}
function _createClass21(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties21(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties21(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey27(t) {
  var i = _toPrimitive27(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive27(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var Args = /* @__PURE__ */ function() {
  function Args2() {
    _classCallCheck21(this, Args2);
  }
  _createClass21(Args2, null, [{
    key: "custom",
    value: function custom(spec, _parser, valueHelpName) {
      var _a, _b;
      var raw_options = (_a = spec.options) === null || _a === void 0 ? void 0 : _a.map(function(option) {
        return option[0];
      });
      if ("default" in spec && raw_options) {
        if (!raw_options.includes(spec.default)) {
          throw "Invalid default value ".concat(spec.default);
        }
      }
      return _objectSpread11(_objectSpread11({}, spec), {}, {
        valueHelpName: valueHelpName,
        parser: function(value) {
          var parsed_value = _parser(value);
          if (parsed_value === void 0 || parsed_value instanceof ParseError) return parsed_value;
          if (raw_options) {
            if (!raw_options.includes(parsed_value)) {
              return new ParseError("received ".concat(value, " which was not in the allowed options"));
            }
          }
          return parsed_value;
        },
        options: (_b = spec.options) === null || _b === void 0 ? void 0 : _b.map(function(a) {
          return ["".concat(a[0]), a[1]];
        })
      });
    }
  }, {
    key: "arrayFromArg",
    value: function arrayFromArg(spec, argFromSpec) {
      var _a, _b, _c;
      var spec_without_default = _objectSpread11({}, spec);
      if ("default" in spec_without_default) delete spec_without_default["default"];
      var arg = argFromSpec.call(this, spec_without_default);
      var raw_options = (_a = spec.options) === null || _a === void 0 ? void 0 : _a.map(function(option) {
        return option[0];
      });
      if ("default" in spec && raw_options) {
        var _iterator = _createForOfIteratorHelper17(spec.default), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var default_entry = _step.value;
            if (!raw_options.includes(default_entry)) throw "Invalid default value ".concat(spec.default);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      var separator = (_b = spec.separator) !== null && _b !== void 0 ? _b : ",";
      var arrayParser = function(value) {
        var values = value.split(separator);
        if (!spec.noTrim) values = values.map(function(v) {
          return v.trim();
        });
        var result = values.map(function(v) {
          return arg.parser(v);
        });
        var error2 = result.find(function(v) {
          return v instanceof ParseError;
        });
        if (error2) return error2;
        var failure_index = result.indexOf(void 0);
        if (failure_index !== -1) return new ParseError("components expected ".concat(arg.valueHelpName, " but could not parse ").concat(values[failure_index]));
        return result;
      };
      return _objectSpread11(_objectSpread11({}, spec), {}, {
        valueHelpName: "".concat(arg.valueHelpName).concat(separator, " ").concat(arg.valueHelpName).concat(separator, " ..."),
        parser: arrayParser,
        options: (_c = spec.options) === null || _c === void 0 ? void 0 : _c.map(function(a) {
          return ["".concat(a[0]), a[1]];
        })
      });
    }
  }, {
    key: "string",
    value: function string(spec) {
      return this.custom(spec, function(value) {
        return value;
      }, "TEXT");
    }
  }, {
    key: "strings",
    value: function strings(spec) {
      return this.arrayFromArg(spec, this.string);
    }
  }, {
    key: "number",
    value: function number(spec) {
      return this.custom(spec, function(value) {
        return isNaN(Number(value)) ? void 0 : Number(value);
      }, "NUMBER");
    }
  }, {
    key: "numbers",
    value: function numbers(spec) {
      return this.arrayFromArg(spec, this.number);
    }
  }, {
    key: "boolean",
    value: function boolean(spec) {
      return this.custom(spec, function(value) {
        if (value.toLowerCase() === "true") return true;
        if (value.toLowerCase() === "false") return false;
        return void 0;
      }, "BOOLEAN");
    }
  }, {
    key: "booleans",
    value: function booleans(spec) {
      return this.arrayFromArg(spec, this.boolean);
    }
  }, {
    key: "flag",
    value: function flag(spec) {
      return this.custom(spec, function(value) {
        if (value.toLowerCase() === "true") return true;
        if (value.toLowerCase() === "false") return false;
        return void 0;
      }, "FLAG");
    }
  }, {
    key: "class",
    value: function _class(spec) {
      return this.custom(spec, function(value) {
        var match = import_kolmafia85.Class.get(value);
        if (match.toString().toUpperCase() === value.toString().toUpperCase()) return match;
        if (!isNaN(Number(value))) return match;
        return void 0;
      }, "CLASS");
    }
  }, {
    key: "classes",
    value: function classes(spec) {
      return this.arrayFromArg(spec, this.class);
    }
  }, {
    key: "effect",
    value: function effect2(spec) {
      return this.custom(spec, import_kolmafia85.Effect.get, "EFFECT");
    }
  }, {
    key: "effects",
    value: function effects(spec) {
      return this.arrayFromArg(spec, this.effect);
    }
  }, {
    key: "familiar",
    value: function familiar10(spec) {
      return this.custom(spec, import_kolmafia85.Familiar.get, "FAMILIAR");
    }
  }, {
    key: "familiars",
    value: function familiars(spec) {
      return this.arrayFromArg(spec, this.familiar);
    }
  }, {
    key: "item",
    value: function item14(spec) {
      return this.custom(spec, import_kolmafia85.Item.get, "ITEM");
    }
  }, {
    key: "items",
    value: function items(spec) {
      return this.arrayFromArg(spec, this.item);
    }
  }, {
    key: "location",
    value: function location(spec) {
      return this.custom(spec, import_kolmafia85.Location.get, "LOCATION");
    }
  }, {
    key: "locations",
    value: function locations(spec) {
      return this.arrayFromArg(spec, this.location);
    }
  }, {
    key: "monster",
    value: function monster(spec) {
      return this.custom(spec, import_kolmafia85.Monster.get, "MONSTER");
    }
  }, {
    key: "monsters",
    value: function monsters(spec) {
      return this.arrayFromArg(spec, this.monster);
    }
  }, {
    key: "path",
    value: function path3(spec) {
      return this.custom(spec, import_kolmafia85.Path.get, "PATH");
    }
  }, {
    key: "paths",
    value: function paths(spec) {
      return this.arrayFromArg(spec, this.path);
    }
  }, {
    key: "skill",
    value: function skill(spec) {
      return this.custom(spec, import_kolmafia85.Skill.get, "SKILL");
    }
  }, {
    key: "skills",
    value: function skills3(spec) {
      return this.arrayFromArg(spec, this.skill);
    }
    /**
     * Create a group of arguments that will be printed separately in the help.
     *
     * Note that keys in the group must still be globally distinct.
     *
     * @param groupName The display name for the group in help.
     * @param args A JS object specifying the script arguments. Its values should
     *    be {@link Arg} objects (created by Args.string, Args.number, or others)
     *    or groups of arguments (created by Args.group).
     */
  }, {
    key: "group",
    value: function group(groupName, args2) {
      return {
        name: groupName,
        args: args2
      };
    }
    /**
     * Create a set of input arguments for a script.
     * @param scriptName Prefix for property names; often the name of the script.
     * @param scriptHelp Brief description of this script, for the help message.
     * @param args A JS object specifying the script arguments. Its values should
     *    be {@link Arg} objects (created by Args.string, Args.number, or others)
     *    or groups of arguments (created by Args.group).
     * @param options Config options for the args and arg parser.
     * @returns An object which can hold parsed argument values. The keys of this
     *    object are identical to the keys in 'args'.
     */
  }, {
    key: "create",
    value: function create4(scriptName2, scriptHelp, args2, options) {
      _traverse(args2, function(keySpec, key) {
        if (key === "help" || keySpec.key === "help") throw "help is a reserved argument name";
      });
      var argsWithHelp = _objectSpread11(_objectSpread11({}, args2), {}, {
        help: this.flag({
          help: "Show this message and exit.",
          setting: ""
        })
      });
      var res = _objectSpread11(_objectSpread11({}, _loadDefaultValues(argsWithHelp)), {}, _defineProperty25(_defineProperty25(_defineProperty25(_defineProperty25({}, specSymbol, argsWithHelp), scriptSymbol, scriptName2), scriptHelpSymbol, scriptHelp), optionsSymbol, options !== null && options !== void 0 ? options : {}));
      if (options === null || options === void 0 ? void 0 : options.positionalArgs) {
        var keys = [];
        var metadata = Args2.getMetadata(res);
        metadata.traverse(function(keySpec, key) {
          var _a;
          keys.push((_a = keySpec.key) !== null && _a !== void 0 ? _a : key);
        });
        var _iterator2 = _createForOfIteratorHelper17(options.positionalArgs), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var arg = _step2.value;
            if (!keys.includes(arg)) throw "Unknown key for positional arg: ".concat(arg);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      return res;
    }
    /**
     * Parse the command line input into the provided script arguments.
     * @param args An object to hold the parsed argument values, from Args.create(*).
     * @param command The command line input.
     * @param includeSettings If true, parse values from settings as well.
     */
  }, {
    key: "fill",
    value: function fill2(args2, command) {
      var includeSettings = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
      var _a;
      var metadata = Args2.getMetadata(args2);
      var keys = /* @__PURE__ */ new Set();
      var flags = /* @__PURE__ */ new Set();
      metadata.traverse(function(keySpec, key) {
        var _a2;
        var name = (_a2 = keySpec.key) !== null && _a2 !== void 0 ? _a2 : key;
        if (flags.has(name) || keys.has(name)) throw "Duplicate arg key ".concat(name, " is not allowed");
        if (keySpec.valueHelpName === "FLAG") flags.add(name);
        else keys.add(name);
      });
      if (includeSettings) {
        metadata.traverseAndMaybeSet(args2, function(keySpec, key) {
          var _a2, _b;
          var setting = (_a2 = keySpec.setting) !== null && _a2 !== void 0 ? _a2 : "".concat(metadata.scriptName, "_").concat((_b = keySpec.key) !== null && _b !== void 0 ? _b : key);
          if (setting === "") return void 0;
          var value_str = (0, import_kolmafia85.getProperty)(setting);
          if (value_str === "") return void 0;
          return parseAndValidate(keySpec, "Setting ".concat(setting), value_str);
        });
      }
      if (command === void 0 || command === "") return;
      var parsed = new CommandParser(command, keys, flags, (_a = metadata.options.positionalArgs) !== null && _a !== void 0 ? _a : []).parse();
      metadata.traverseAndMaybeSet(args2, function(keySpec, key) {
        var _a2;
        var argKey = (_a2 = keySpec.key) !== null && _a2 !== void 0 ? _a2 : key;
        var value_str = parsed.get(argKey);
        if (value_str === void 0) return void 0;
        return parseAndValidate(keySpec, "Argument ".concat(argKey), value_str);
      });
    }
    /**
     * Parse command line input into a new set of script arguments.
     * @param scriptName Prefix to use in property names; typically the name of the script.
     * @param scriptHelp Brief description of this script, for the help message.
     * @param spec An object specifying the script arguments.
     * @param command The command line input.
     * @param options Config options for the args and arg parser.
     */
  }, {
    key: "parse",
    value: function parse(scriptName2, scriptHelp, spec, command, options) {
      var args2 = this.create(scriptName2, scriptHelp, spec, options);
      this.fill(args2, command);
      return args2;
    }
    /**
     * Print a description of the script arguments to the CLI.
     *
     * First, all top-level argument descriptions are printed in the order they
     * were defined. Afterwards, descriptions for groups of arguments are printed
     * in the order they were defined.
     *
     * @param args An object of parsed arguments, from Args.create(*).
     * @param maxOptionsToDisplay If given, do not list more than this many options for each arg.
     */
  }, {
    key: "showHelp",
    value: function showHelp(args2, maxOptionsToDisplay) {
      var _a;
      var metadata = Args2.getMetadata(args2);
      (0, import_kolmafia85.printHtml)("".concat(metadata.scriptHelp));
      (0, import_kolmafia85.printHtml)("");
      (0, import_kolmafia85.printHtml)("<b>".concat((_a = metadata.options.defaultGroupName) !== null && _a !== void 0 ? _a : "Options", ":</b>"));
      metadata.traverse(function(arg, key) {
        var _a2, _b, _c, _d, _e;
        if (arg.hidden) return;
        var nameText = "<font color='".concat((0, import_kolmafia85.isDarkMode)() ? "yellow" : "blue", "'>").concat((_a2 = arg.key) !== null && _a2 !== void 0 ? _a2 : key, "</font>");
        var valueText = arg.valueHelpName === "FLAG" ? "" : "<font color='purple'>".concat(arg.valueHelpName, "</font>");
        var helpText = (_b = arg.help) !== null && _b !== void 0 ? _b : "";
        var defaultText = "default" in arg ? "<font color='#888888'>[default: ".concat(arg.default, "]</font>") : "";
        var settingText = arg.setting === "" ? "" : "<font color='#888888'>[setting: ".concat((_c = arg.setting) !== null && _c !== void 0 ? _c : "".concat(metadata.scriptName, "_").concat((_d = arg.key) !== null && _d !== void 0 ? _d : key), "]</font>");
        (0, import_kolmafia85.printHtml)("&nbsp;&nbsp;".concat([nameText, valueText, "-", helpText, defaultText, settingText].join(" ")));
        var valueOptions = (_e = arg.options) !== null && _e !== void 0 ? _e : [];
        if (valueOptions.length < (maxOptionsToDisplay !== null && maxOptionsToDisplay !== void 0 ? maxOptionsToDisplay : Number.MAX_VALUE)) {
          var _iterator3 = _createForOfIteratorHelper17(valueOptions), _step3;
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
              var option = _step3.value;
              if (option.length === 1 || option[1] === void 0) {
                (0, import_kolmafia85.printHtml)("&nbsp;&nbsp;&nbsp;&nbsp;<font color='blue'>".concat(nameText, "</font> ").concat(option[0]));
              } else {
                (0, import_kolmafia85.printHtml)("&nbsp;&nbsp;&nbsp;&nbsp;<font color='blue'>".concat(nameText, "</font> ").concat(option[0], " - ").concat(option[1]));
              }
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
        }
      }, function(group) {
        (0, import_kolmafia85.printHtml)("");
        (0, import_kolmafia85.printHtml)("<b>".concat(group.name, ":</b>"));
      });
    }
    /**
     * Load the metadata information for a set of arguments. Only for advanced usage.
     *
     * @param args A JS object specifying the script arguments. Its values should
     *    be {@link Arg} objects (created by Args.string, Args.number, or others)
     *    or groups of arguments (created by Args.group).
     * @returns A class containing metadata information.
     */
  }, {
    key: "getMetadata",
    value: function getMetadata(args2) {
      return new WrappedArgMetadata(args2);
    }
  }]);
  return Args2;
}();
var ParseError = /* @__PURE__ */ _createClass21(function ParseError2(message) {
  _classCallCheck21(this, ParseError2);
  this.message = message;
});
var specSymbol = Symbol("spec");
var scriptSymbol = Symbol("script");
var scriptHelpSymbol = Symbol("scriptHelp");
var optionsSymbol = Symbol("options");
function parseAndValidate(arg, source, value) {
  var parsed_value;
  try {
    parsed_value = arg.parser(value);
  } catch (_a) {
    parsed_value = void 0;
  }
  if (parsed_value === void 0) throw "".concat(source, " expected ").concat(arg.valueHelpName, " but could not parse ").concat(value);
  if (parsed_value instanceof ParseError) throw "".concat(source, " ").concat(parsed_value.message);
  return parsed_value;
}
var WrappedArgMetadata = /* @__PURE__ */ function() {
  function WrappedArgMetadata2(args2) {
    _classCallCheck21(this, WrappedArgMetadata2);
    this.spec = args2[specSymbol];
    this.scriptName = args2[scriptSymbol];
    this.scriptHelp = args2[scriptHelpSymbol];
    this.options = args2[optionsSymbol];
  }
  _createClass21(WrappedArgMetadata2, [{
    key: "loadDefaultValues",
    value: function loadDefaultValues() {
      return _loadDefaultValues(this.spec);
    }
    /**
     * Traverse the spec and possibly generate a value for each argument.
     *
     * @param result The object to hold the resulting argument values, typically
     *    the result of loadDefaultValues().
     * @param setTo A function to generate an argument value from each arg spec.
     *    If this function returns undefined, then the argument value is unchanged.
     */
  }, {
    key: "traverseAndMaybeSet",
    value: function traverseAndMaybeSet(result, setTo) {
      return _traverseAndMaybeSet(this.spec, result, setTo);
    }
    /**
     * Traverse the spec and call a method for each argument.
     *
     * @param process A function to call at each arg spec.
     */
  }, {
    key: "traverse",
    value: function traverse(process, onGroup) {
      return _traverse(this.spec, process, onGroup);
    }
  }]);
  return WrappedArgMetadata2;
}();
function _loadDefaultValues(spec) {
  var result = {};
  for (var k in spec) {
    var argSpec = spec[k];
    if ("args" in argSpec) {
      result[k] = _loadDefaultValues(argSpec.args);
    } else {
      if ("default" in argSpec) result[k] = argSpec.default;
      else result[k] = void 0;
    }
  }
  return result;
}
function _traverseAndMaybeSet(spec, result, setTo) {
  var groups = [];
  for (var k in spec) {
    var argSpec = spec[k];
    if ("args" in argSpec) {
      groups.push([argSpec, k]);
    } else {
      var value = setTo(argSpec, k);
      if (value === void 0) continue;
      result[k] = value;
    }
  }
  for (var _i = 0, _groups = groups; _i < _groups.length; _i++) {
    var group_and_key = _groups[_i];
    _traverseAndMaybeSet(group_and_key[0].args, result[group_and_key[1]], setTo);
  }
}
function _traverse(spec, process, onGroup) {
  var groups = [];
  for (var k in spec) {
    var argSpec = spec[k];
    if ("args" in argSpec) {
      groups.push([argSpec, k]);
    } else {
      process(argSpec, k);
    }
  }
  for (var _i2 = 0, _groups2 = groups; _i2 < _groups2.length; _i2++) {
    var group_and_key = _groups2[_i2];
    onGroup === null || onGroup === void 0 ? void 0 : onGroup(group_and_key[0], group_and_key[1]);
    _traverse(group_and_key[0].args, process, onGroup);
  }
}
var CommandParser = /* @__PURE__ */ function() {
  function CommandParser2(command, keys, flags, positionalArgs) {
    _classCallCheck21(this, CommandParser2);
    this.command = command;
    this.index = 0;
    this.keys = keys;
    this.flags = flags;
    this.positionalArgs = positionalArgs;
    this.positionalArgsParsed = 0;
  }
  _createClass21(CommandParser2, [{
    key: "parse",
    value: function parse() {
      var _a, _b, _c, _d;
      this.index = 0;
      var result = /* @__PURE__ */ new Map();
      while (!this.finished()) {
        var parsing_negative_flag = false;
        if (this.peek() === "!") {
          parsing_negative_flag = true;
          this.consume(["!"]);
        }
        var startIndex = this.index;
        var key = this.parseKey();
        if (result.has(key)) {
          throw "Duplicate key ".concat(key, " (first set to ").concat((_a = result.get(key)) !== null && _a !== void 0 ? _a : "", ")");
        }
        if (this.flags.has(key)) {
          result.set(key, parsing_negative_flag ? "false" : "true");
          if (this.peek() === "=") throw "Flag ".concat(key, " cannot be assigned a value");
          if (!this.finished()) this.consume([" "]);
          this.prevUnquotedKey = void 0;
        } else if (this.keys.has(key)) {
          this.consume(["=", " "]);
          var value = this.parseValue();
          if (["'", '"'].includes((_b = this.prev()) !== null && _b !== void 0 ? _b : "")) this.prevUnquotedKey = void 0;
          else this.prevUnquotedKey = key;
          if (!this.finished()) this.consume([" "]);
          result.set(key, value);
        } else if (this.positionalArgsParsed < this.positionalArgs.length && this.peek() !== "=") {
          var positionalKey = this.positionalArgs[this.positionalArgsParsed];
          this.positionalArgsParsed++;
          this.index = startIndex;
          var _value = this.parseValue();
          if (["'", '"'].includes((_c = this.prev()) !== null && _c !== void 0 ? _c : "")) this.prevUnquotedKey = void 0;
          else this.prevUnquotedKey = key;
          if (!this.finished()) this.consume([" "]);
          if (result.has(positionalKey)) throw "Cannot assign ".concat(_value, " to ").concat(positionalKey, " (positionally) since ").concat(positionalKey, " was already set to ").concat((_d = result.get(positionalKey)) !== null && _d !== void 0 ? _d : "");
          result.set(positionalKey, _value);
        } else {
          if (this.prevUnquotedKey && this.peek() !== "=") throw "Unknown argument: ".concat(key, " (if this should have been parsed as part of ").concat(this.prevUnquotedKey, ", you should surround the entire value in quotes)");
          else throw "Unknown argument: ".concat(key);
        }
      }
      return result;
    }
    /**
     * @returns True if the entire command has been parsed.
     */
  }, {
    key: "finished",
    value: function finished() {
      return this.index >= this.command.length;
    }
    /**
     * @returns The next character to parse, if it exists.
     */
  }, {
    key: "peek",
    value: function peek() {
      if (this.index >= this.command.length) return void 0;
      return this.command.charAt(this.index);
    }
    /**
     * @returns The character just parsed, if it exists.
     */
  }, {
    key: "prev",
    value: function prev() {
      if (this.index <= 0) return void 0;
      if (this.index >= this.command.length + 1) return void 0;
      return this.command.charAt(this.index - 1);
    }
    /**
     * Advance the internal marker over the next expected character.
     * Throws an error on unexpected characters.
     *
     * @param allowed Characters that are expected.
     */
  }, {
    key: "consume",
    value: function consume(allowed) {
      var _a;
      if (this.finished()) throw "Expected ".concat(allowed);
      if (allowed.includes((_a = this.peek()) !== null && _a !== void 0 ? _a : "")) {
        this.index += 1;
      }
    }
    /**
     * Find the next occurance of one of the provided characters, or the end of
     * the string if the characters never appear again.
     *
     * @param searchValue The characters to locate.
     */
  }, {
    key: "findNext",
    value: function findNext(searchValue) {
      var result = this.command.length;
      var _iterator4 = _createForOfIteratorHelper17(searchValue), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var value = _step4.value;
          var index = this.command.indexOf(value, this.index);
          if (index !== -1 && index < result) result = index;
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return result;
    }
    /**
     * Starting from the internal marker, parse a single key.
     * This also advances the internal marker.
     *
     * @returns The next key.
     */
  }, {
    key: "parseKey",
    value: function parseKey() {
      var keyEnd = this.findNext(["=", " "]);
      var key = this.command.substring(this.index, keyEnd);
      this.index = keyEnd;
      return key;
    }
    /**
     * Starting from the internal marker, parse a single value.
     * This also advances the internal marker.
     *
     * Values are a single word or enclosed in matching quotes, i.e. one of:
     *    "[^"]*"
     *    '[^']*"
     *    [^'"][^ ]*
     *
     * @returns The next value.
     */
  }, {
    key: "parseValue",
    value: function parseValue() {
      var _a, _b;
      var valueEnder = " ";
      var quotes = ["'", '"'];
      if (quotes.includes((_a = this.peek()) !== null && _a !== void 0 ? _a : "")) {
        valueEnder = (_b = this.peek()) !== null && _b !== void 0 ? _b : "";
        this.consume([valueEnder]);
      }
      var valueEnd = this.findNext([valueEnder]);
      var value = this.command.substring(this.index, valueEnd);
      if (valueEnder !== " " && valueEnd === this.command.length) {
        throw "No closing ".concat(valueEnder, " found for ").concat(valueEnder).concat(value);
      }
      this.index = valueEnd;
      if (valueEnder !== " ") this.consume([valueEnder]);
      return value;
    }
  }]);
  return CommandParser2;
}();

// node_modules/grimoire-kolmafia/dist/combat.js
var import_kolmafia86 = require("kolmafia");
init_dist();
function _callSuper6(t, o, e) {
  return o = _getPrototypeOf6(o), _possibleConstructorReturn6(t, _isNativeReflectConstruct6() ? Reflect.construct(o, e || [], _getPrototypeOf6(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn6(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized6(self);
}
function _assertThisInitialized6(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _isNativeReflectConstruct6() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct6 = function _isNativeReflectConstruct9() {
    return !!t;
  })();
}
function _getPrototypeOf6(o) {
  _getPrototypeOf6 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf9(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf6(o);
}
function _inherits7(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass) _setPrototypeOf7(subClass, superClass);
}
function _setPrototypeOf7(o, p) {
  _setPrototypeOf7 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf10(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf7(o, p);
}
function _toConsumableArray26(arr) {
  return _arrayWithoutHoles26(arr) || _iterableToArray26(arr) || _unsupportedIterableToArray43(arr) || _nonIterableSpread26();
}
function _nonIterableSpread26() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray26(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles26(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray43(arr);
}
function _createForOfIteratorHelper18(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray43(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray43(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray43(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray43(o, minLen);
}
function _arrayLikeToArray43(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck22(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties22(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey28(descriptor.key), descriptor);
  }
}
function _createClass22(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties22(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties22(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey28(t) {
  var i = _toPrimitive28(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive28(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var CombatStrategy = /* @__PURE__ */ function() {
  function CombatStrategy3() {
    _classCallCheck22(this, CombatStrategy3);
    this.macros = /* @__PURE__ */ new Map();
    this.autoattacks = /* @__PURE__ */ new Map();
    this.actions = /* @__PURE__ */ new Map();
    this.ccs_entries = /* @__PURE__ */ new Map();
  }
  _createClass22(CombatStrategy3, [{
    key: "macro",
    value: function macro(_macro, monsters, prepend) {
      var _a, _b;
      if (monsters === void 0) {
        if (this.default_macro === void 0) this.default_macro = [];
        if (prepend) this.default_macro.unshift(_macro);
        else this.default_macro.push(_macro);
      } else {
        if (monsters instanceof import_kolmafia86.Monster) monsters = [monsters];
        var _iterator = _createForOfIteratorHelper18(monsters), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var monster = _step.value;
            if (!this.macros.has(monster)) this.macros.set(monster, []);
            if (prepend) (_a = this.macros.get(monster)) === null || _a === void 0 ? void 0 : _a.unshift(_macro);
            else (_b = this.macros.get(monster)) === null || _b === void 0 ? void 0 : _b.push(_macro);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      return this;
    }
    /**
     * Add a macro to perform as an autoattack for this monster. If multiple
     * macros are given for the same monster, they are concatinated.
     *
     * @param macro The macro to perform as autoattack.
     * @param monsters Which monsters to use the macro on. If not given, add the
     *  macro as a general macro.
     * @param prepend If true, add the macro before all previous autoattack
     *    macros for the same monster. If false, add after all previous macros.
     * @returns this
     */
  }, {
    key: "autoattack",
    value: function autoattack(macro, monsters, prepend) {
      var _a, _b;
      if (monsters === void 0) {
        if (this.default_autoattack === void 0) this.default_autoattack = [];
        if (prepend) this.default_autoattack.unshift(macro);
        else this.default_autoattack.push(macro);
      } else {
        if (monsters instanceof import_kolmafia86.Monster) monsters = [monsters];
        var _iterator2 = _createForOfIteratorHelper18(monsters), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var monster = _step2.value;
            if (!this.autoattacks.has(monster)) this.autoattacks.set(monster, []);
            if (prepend) (_a = this.autoattacks.get(monster)) === null || _a === void 0 ? void 0 : _a.unshift(macro);
            else (_b = this.autoattacks.get(monster)) === null || _b === void 0 ? void 0 : _b.push(macro);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      return this;
    }
    /**
     * Add a macro to perform at the start of combat.
     * @param macro The macro to perform.
     * @param prepend If true, add the macro before all previous starting
     *    macros. If false, add after all previous starting macros.
     * @returns this
     */
  }, {
    key: "startingMacro",
    value: function startingMacro(macro, prepend) {
      if (this.starting_macro === void 0) this.starting_macro = [];
      if (prepend) this.starting_macro.unshift(macro);
      else this.starting_macro.push(macro);
      return this;
    }
    /**
     * Add an action to perform for this monster. Only one action can be set for
     * each monster; any previous actions are overwritten.
     *
     * @param action The action to perform.
     * @param monsters Which monsters to use the action on. If not given, set the
     *  action as the general action for all monsters.
     * @returns this
     */
  }, {
    key: "action",
    value: function action(_action, monsters) {
      if (monsters === void 0) {
        this.default_action = _action;
      } else if (monsters instanceof import_kolmafia86.Monster) {
        this.actions.set(monsters, _action);
      } else {
        var _iterator3 = _createForOfIteratorHelper18(monsters), _step3;
        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
            var monster = _step3.value;
            this.actions.set(monster, _action);
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      }
      return this;
    }
    /**
     * Add a separate entry in the grimoire-generated CCS file for the specified
     * monster. If multiple entries are given for the same monster, they are
     * concatinated.
     *
     * This should typically be only used rarely, on monsters for which KoL does
     * not support macros in combat (e.g. rampaging adding machine).
     *
     * @param entry The entry to add for the given monster.
     * @param monsters Which monsters to add the entry to.
     * @param prepend If true, add the entry before all previous entries. If
     *   false, add after all previous entries.
     */
  }, {
    key: "ccs",
    value: function ccs(entry, monsters, prepend) {
      var _a, _b;
      if (monsters instanceof import_kolmafia86.Monster) monsters = [monsters];
      var _iterator4 = _createForOfIteratorHelper18(monsters), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var monster = _step4.value;
          if (!this.ccs_entries.has(monster)) this.ccs_entries.set(monster, []);
          if (prepend) (_a = this.ccs_entries.get(monster)) === null || _a === void 0 ? void 0 : _a.unshift(entry);
          else (_b = this.ccs_entries.get(monster)) === null || _b === void 0 ? void 0 : _b.push(entry);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return this;
    }
    /**
     * Check if the provided action was requested for any monsters, or for the
     * general action.
     */
  }, {
    key: "can",
    value: function can(action) {
      if (action === this.default_action) return true;
      return Array.from(this.actions.values()).includes(action);
    }
    /**
     * Return the general action (if it exists).
     */
  }, {
    key: "getDefaultAction",
    value: function getDefaultAction() {
      return this.default_action;
    }
    /**
     * Return all monsters where the provided action was requested.
     */
  }, {
    key: "where",
    value: function where(action) {
      var _this = this;
      return Array.from(this.actions.keys()).filter(function(key) {
        return _this.actions.get(key) === action;
      });
    }
    /**
     * Return the requested action (if it exists) for the provided monster.
     */
  }, {
    key: "currentStrategy",
    value: function currentStrategy(monster) {
      var _a;
      return (_a = this.actions.get(monster)) !== null && _a !== void 0 ? _a : this.default_action;
    }
    /**
     * Perform a deep copy of this combat strategy.
     */
  }, {
    key: "clone",
    value: function clone() {
      var result = new CombatStrategy3();
      if (this.starting_macro) result.starting_macro = _toConsumableArray26(this.starting_macro);
      if (this.default_macro) result.default_macro = _toConsumableArray26(this.default_macro);
      var _iterator5 = _createForOfIteratorHelper18(this.macros), _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          var pair = _step5.value;
          result.macros.set(pair[0], _toConsumableArray26(pair[1]));
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
      if (this.default_autoattack) result.default_autoattack = _toConsumableArray26(this.default_autoattack);
      var _iterator6 = _createForOfIteratorHelper18(this.autoattacks), _step6;
      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
          var _pair = _step6.value;
          result.autoattacks.set(_pair[0], _toConsumableArray26(_pair[1]));
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
      result.default_action = this.default_action;
      var _iterator7 = _createForOfIteratorHelper18(this.actions), _step7;
      try {
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
          var _pair2 = _step7.value;
          result.actions.set(_pair2[0], _pair2[1]);
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }
      var _iterator8 = _createForOfIteratorHelper18(this.ccs_entries), _step8;
      try {
        for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
          var _pair3 = _step8.value;
          result.ccs_entries.set(_pair3[0], _toConsumableArray26(_pair3[1]));
        }
      } catch (err) {
        _iterator8.e(err);
      } finally {
        _iterator8.f();
      }
      return result;
    }
    /**
     * Compile this combat strategy into a complete macro.
     *
     * @param resources The resources to use to fulfil actions.
     * @param defaults Macros to perform for each action without a resource.
     * @param location The adventuring location, if known.
     * @returns The compiled macro.
     */
  }, {
    key: "compile",
    value: function compile(resources, defaults, location) {
      var _a, _b;
      var result = new Macro();
      if (this.starting_macro) {
        result.step.apply(result, _toConsumableArray26(this.starting_macro.map(function(macro2) {
          return undelay(macro2);
        })));
      }
      var monster_macros = new CompressedMacro();
      this.macros.forEach(function(value, key) {
        var _Macro;
        monster_macros.add(key, (_Macro = new Macro()).step.apply(_Macro, _toConsumableArray26(value.map(function(macro2) {
          return undelay(macro2);
        }))));
      });
      result.step(monster_macros.compile());
      if (this.default_macro) result.step.apply(result, _toConsumableArray26(this.default_macro.map(function(macro2) {
        return undelay(macro2);
      })));
      var monster_actions = new CompressedMacro();
      this.actions.forEach(function(action, key) {
        var _a2, _b2;
        var macro2 = (_a2 = resources.getMacro(action)) !== null && _a2 !== void 0 ? _a2 : (_b2 = defaults === null || defaults === void 0 ? void 0 : defaults[action]) === null || _b2 === void 0 ? void 0 : _b2.call(defaults, key);
        if (macro2) monster_actions.add(key, new Macro().step(macro2));
      });
      result.step(monster_actions.compile());
      if (this.default_action) {
        var macro = (_a = resources.getMacro(this.default_action)) !== null && _a !== void 0 ? _a : (_b = defaults === null || defaults === void 0 ? void 0 : defaults[this.default_action]) === null || _b === void 0 ? void 0 : _b.call(defaults, location);
        if (macro) result.step(macro);
      }
      return result;
    }
    /**
     * Compile the autoattack of this combat strategy into a complete macro.
     *
     * @returns The compiled autoattack macro.
     */
  }, {
    key: "compileAutoattack",
    value: function compileAutoattack() {
      var result = new Macro();
      var monster_macros = new CompressedMacro();
      this.autoattacks.forEach(function(value, key) {
        var _Macro2;
        monster_macros.add(key, (_Macro2 = new Macro()).step.apply(_Macro2, _toConsumableArray26(value.map(function(macro) {
          return undelay(macro);
        }))));
      });
      result.step(monster_macros.compile());
      if (this.default_autoattack) result.step.apply(result, _toConsumableArray26(this.default_autoattack.map(function(macro) {
        return undelay(macro);
      })));
      return result;
    }
    /**
     * Compile the CCS entries of this combat strategy into a single array.
     *
     * @returns The lines of a CCS file, not including the [default] macro.
     */
  }, {
    key: "compileCcs",
    value: function compileCcs() {
      var result = [];
      var _iterator9 = _createForOfIteratorHelper18(this.ccs_entries), _step9;
      try {
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done; ) {
          var ccs_entry = _step9.value;
          result.push.apply(result, ["[".concat(ccs_entry[0].name, "]")].concat(_toConsumableArray26(ccs_entry[1])));
        }
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }
      return result;
    }
    /**
     * For advanced users, this method will generate a fluent API for requesting
     * actions. That is, it allows you to do
     *   combat.banish(monster1).kill(monster2)
     * instead of
     *   combat.action("banish", monster1).action("kill", monster2)
     *
     * Example usage:
     *   const myActions = ["kill", "banish"] as const;
     *   class MyCombatStrategy extends CombatStrategy.withActions(myActions) {}
     *
     *   const foo: MyCombatStrategy = new MyCombatStrategy();
     *   const bar: MyCombatStrategy = foo.banish($monster`crate`).kill($monster`tumbleweed`);
     */
  }], [{
    key: "withActions",
    value: function withActions(actions) {
      var CombatStrategyWithActions = /* @__PURE__ */ function(_this) {
        _inherits7(CombatStrategyWithActions2, _this);
        function CombatStrategyWithActions2() {
          _classCallCheck22(this, CombatStrategyWithActions2);
          return _callSuper6(this, CombatStrategyWithActions2, arguments);
        }
        return _createClass22(CombatStrategyWithActions2);
      }(this);
      var proto = CombatStrategyWithActions.prototype;
      var _iterator10 = _createForOfIteratorHelper18(actions), _step10;
      try {
        var _loop = function _loop2() {
          var action = _step10.value;
          proto[action] = function(monsters) {
            return this.action(action, monsters);
          };
        };
        for (_iterator10.s(); !(_step10 = _iterator10.n()).done; ) {
          _loop();
        }
      } catch (err) {
        _iterator10.e(err);
      } finally {
        _iterator10.f();
      }
      return CombatStrategyWithActions;
    }
  }]);
  return CombatStrategy3;
}();
var CompressedMacro = /* @__PURE__ */ function() {
  function CompressedMacro2() {
    _classCallCheck22(this, CompressedMacro2);
    this.components = /* @__PURE__ */ new Map();
  }
  _createClass22(CompressedMacro2, [{
    key: "add",
    value: function add(monster, macro) {
      var _a;
      var macro_text = macro.toString();
      if (macro_text.length === 0) return;
      if (!this.components.has(macro_text)) this.components.set(macro_text, [monster]);
      else (_a = this.components.get(macro_text)) === null || _a === void 0 ? void 0 : _a.push(monster);
    }
    /**
     * Compile the compressed form of the macro.
     */
  }, {
    key: "compile",
    value: function compile() {
      var result = new Macro();
      this.components.forEach(function(monsters, macro) {
        var condition = monsters.map(function(mon) {
          return "monsterid ".concat(mon.id);
        }).join(" || ");
        result.if_(condition, macro);
      });
      return result;
    }
  }]);
  return CompressedMacro2;
}();
var CombatResources = /* @__PURE__ */ function() {
  function CombatResources2() {
    _classCallCheck22(this, CombatResources2);
    this.resources = /* @__PURE__ */ new Map();
  }
  _createClass22(CombatResources2, [{
    key: "provide",
    value: function provide(action, resource) {
      if (resource === void 0) return;
      this.resources.set(action, resource);
    }
    /**
     * Return true if the provided action has a resource provided.
     */
  }, {
    key: "has",
    value: function has(action) {
      return this.resources.has(action);
    }
    /**
     * Return all provided combat resources.
     */
  }, {
    key: "all",
    value: function all2() {
      return Array.from(this.resources.values());
    }
    /**
     * Get the macro provided by the resource for this action, or undefined if
     * no resource was provided.
     */
  }, {
    key: "getMacro",
    value: function getMacro(action) {
      var resource = this.resources.get(action);
      if (resource === void 0) return void 0;
      if (resource.do instanceof import_kolmafia86.Item) return new Macro().item(resource.do);
      if (resource.do instanceof import_kolmafia86.Skill) return new Macro().skill(resource.do);
      return undelay(resource.do);
    }
  }]);
  return CombatResources2;
}();

// node_modules/grimoire-kolmafia/dist/engine.js
init_dist();
var import_kolmafia88 = require("kolmafia");

// node_modules/grimoire-kolmafia/dist/outfit.js
var import_kolmafia87 = require("kolmafia");
init_dist();
var _templateObject567;
var _templateObject2140;
var _templateObject3129;
var _templateObject4108;
var _templateObject568;
var _templateObject656;
var _templateObject749;
var _templateObject841;
var _templateObject935;
var _templateObject1030;
var _templateObject1127;
var _templateObject1226;
var _templateObject1324;
var _templateObject1422;
var _templateObject1519;
var _templateObject1619;
var _templateObject1719;
var _templateObject1819;
var _templateObject1917;
var _templateObject2017;
var _templateObject2141;
var _templateObject2219;
var _templateObject2318;
var _templateObject2417;
var _templateObject2516;
var _templateObject2615;
var _templateObject2715;
var _templateObject2813;
var _templateObject2913;
var _templateObject3013;
var _templateObject3130;
var _templateObject3215;
var _templateObject3314;
var _templateObject3412;
var _templateObject3511;
var _templateObject3611;
var _templateObject3711;
var _templateObject3811;
var _templateObject3911;
var _templateObject4011;
var _templateObject4114;
var _templateObject4213;
var _templateObject4312;
var _templateObject4411;
var _templateObject4511;
var _templateObject4611;
var _templateObject4711;
var _templateObject4811;
var _templateObject4911;
var _templateObject5011;
var _templateObject5112;
var _templateObject5212;
var _templateObject5311;
var _templateObject5411;
var _templateObject5510;
var _templateObject569;
var _templateObject575;
var _templateObject585;
var _templateObject595;
var _templateObject605;
var _templateObject6111;
function ownKeys12(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread12(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys12(Object(t), true).forEach(function(r2) {
      _defineProperty26(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys12(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty26(obj, key, value) {
  key = _toPropertyKey29(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray28(arr, i) {
  return _arrayWithHoles28(arr) || _iterableToArrayLimit28(arr, i) || _unsupportedIterableToArray44(arr, i) || _nonIterableRest28();
}
function _nonIterableRest28() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit28(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles28(arr) {
  if (Array.isArray(arr)) return arr;
}
function _createForOfIteratorHelper19(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray44(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e3) {
    didErr = true;
    err = _e3;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _taggedTemplateLiteral76(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray27(arr) {
  return _arrayWithoutHoles27(arr) || _iterableToArray27(arr) || _unsupportedIterableToArray44(arr) || _nonIterableSpread27();
}
function _nonIterableSpread27() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray44(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray44(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray44(o, minLen);
}
function _iterableToArray27(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles27(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray44(arr);
}
function _arrayLikeToArray44(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck23(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties23(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey29(descriptor.key), descriptor);
  }
}
function _createClass23(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties23(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties23(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey29(t) {
  var i = _toPrimitive29(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive29(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var FORCE_REFRESH_REQUIREMENT = new Requirement([], {
  forceUpdate: true
});
var outfitSlots = ["hat", "back", "weapon", "offhand", "shirt", "pants", "acc1", "acc2", "acc3", "famequip"];
var weaponHands = function(i) {
  return i ? (0, import_kolmafia87.weaponHands)(i) : 0;
};
var modeableCommands2 = ["backupcamera", "umbrella", "snowsuit", "edpiece", "retrocape", "parka", "jillcandle"];
var Outfit = /* @__PURE__ */ function() {
  function Outfit2() {
    _classCallCheck23(this, Outfit2);
    this.equips = /* @__PURE__ */ new Map();
    this.riders = /* @__PURE__ */ new Map();
    this.modes = {};
    this.skipDefaults = false;
    this.modifier = [];
    this.avoid = [];
    this.bonuses = /* @__PURE__ */ new Map();
    this.postActions = [];
    this.preActions = [];
  }
  _createClass23(Outfit2, [{
    key: "equippedAmount",
    value: (
      /**
       * Check how many of an item is equipped on the outfit.
       */
      function equippedAmount9(item14) {
        return _toConsumableArray27(this.equips.values()).filter(function(i) {
          return i === item14;
        }).length;
      }
    )
  }, {
    key: "isAvailable",
    value: function isAvailable(item14) {
      var _a;
      if ((_a = this.avoid) === null || _a === void 0 ? void 0 : _a.includes(item14)) return false;
      if (!have(item14, this.equippedAmount(item14) + 1)) return false;
      if ((0, import_kolmafia87.booleanModifier)(item14, "Single Equip") && this.equippedAmount(item14) > 0) return false;
      return true;
    }
    /**
     * Check whether an item is equipped on the outfit, optionally in a specific slot.
     */
  }, {
    key: "haveEquipped",
    value: function haveEquipped15(item14, slot) {
      if (slot === void 0) return this.equippedAmount(item14) > 0;
      return this.equips.get(slot) === item14;
    }
  }, {
    key: "equipItemNone",
    value: function equipItemNone(item14, slot) {
      if (item14 !== $item.none) return false;
      if (slot === void 0) return true;
      if (this.equips.has(slot)) return false;
      this.equips.set(slot, item14);
      return true;
    }
  }, {
    key: "equipNonAccessory",
    value: function equipNonAccessory(item14, slot) {
      if ($slots(_templateObject567 || (_templateObject567 = _taggedTemplateLiteral76(["acc1, acc2, acc3"]))).includes((0, import_kolmafia87.toSlot)(item14))) return false;
      if (slot !== void 0 && slot !== (0, import_kolmafia87.toSlot)(item14)) return false;
      if (this.equips.has((0, import_kolmafia87.toSlot)(item14))) return false;
      switch ((0, import_kolmafia87.toSlot)(item14)) {
        case $slot(_templateObject2140 || (_templateObject2140 = _taggedTemplateLiteral76(["off-hand"]))):
          if (this.equips.has($slot(_templateObject3129 || (_templateObject3129 = _taggedTemplateLiteral76(["weapon"])))) && weaponHands(this.equips.get($slot(_templateObject4108 || (_templateObject4108 = _taggedTemplateLiteral76(["weapon"]))))) !== 1) {
            return false;
          }
          break;
        case $slot(_templateObject568 || (_templateObject568 = _taggedTemplateLiteral76(["familiar"]))):
          if (this.familiar !== void 0 && !(0, import_kolmafia87.canEquip)(this.familiar, item14)) return false;
      }
      if ((0, import_kolmafia87.toSlot)(item14) !== $slot(_templateObject656 || (_templateObject656 = _taggedTemplateLiteral76(["familiar"]))) && !(0, import_kolmafia87.canEquip)(item14)) return false;
      this.equips.set((0, import_kolmafia87.toSlot)(item14), item14);
      return true;
    }
  }, {
    key: "equipAccessory",
    value: function equipAccessory(item14, slot) {
      var _this = this;
      if (![void 0].concat(_toConsumableArray27($slots(_templateObject749 || (_templateObject749 = _taggedTemplateLiteral76(["acc1, acc2, acc3"]))))).includes(slot)) return false;
      if ((0, import_kolmafia87.toSlot)(item14) !== $slot(_templateObject841 || (_templateObject841 = _taggedTemplateLiteral76(["acc1"])))) return false;
      if (!(0, import_kolmafia87.canEquip)(item14)) return false;
      if (slot === void 0) {
        var empty = $slots(_templateObject935 || (_templateObject935 = _taggedTemplateLiteral76(["acc1, acc2, acc3"]))).find(function(s) {
          return !_this.equips.has(s);
        });
        if (empty === void 0) return false;
        this.equips.set(empty, item14);
      } else {
        if (this.equips.has(slot)) return false;
        this.equips.set(slot, item14);
      }
      return true;
    }
  }, {
    key: "equipUsingDualWield",
    value: function equipUsingDualWield(item14, slot) {
      if (![void 0, $slot(_templateObject1030 || (_templateObject1030 = _taggedTemplateLiteral76(["off-hand"])))].includes(slot)) return false;
      if ((0, import_kolmafia87.toSlot)(item14) !== $slot(_templateObject1127 || (_templateObject1127 = _taggedTemplateLiteral76(["weapon"])))) return false;
      if (this.equips.has($slot(_templateObject1226 || (_templateObject1226 = _taggedTemplateLiteral76(["weapon"])))) && weaponHands(this.equips.get($slot(_templateObject1324 || (_templateObject1324 = _taggedTemplateLiteral76(["weapon"]))))) !== 1) {
        return false;
      }
      if (this.equips.has($slot(_templateObject1422 || (_templateObject1422 = _taggedTemplateLiteral76(["off-hand"]))))) return false;
      if (!have($skill(_templateObject1519 || (_templateObject1519 = _taggedTemplateLiteral76(["Double-Fisted Skull Smashing"]))))) return false;
      if (weaponHands(item14) !== 1) return false;
      if (!(0, import_kolmafia87.canEquip)(item14)) return false;
      this.equips.set($slot(_templateObject1619 || (_templateObject1619 = _taggedTemplateLiteral76(["off-hand"]))), item14);
      return true;
    }
  }, {
    key: "getHoldingFamiliar",
    value: function getHoldingFamiliar(item14) {
      switch ((0, import_kolmafia87.toSlot)(item14)) {
        case $slot(_templateObject1719 || (_templateObject1719 = _taggedTemplateLiteral76(["weapon"]))):
          return $familiar(_templateObject1819 || (_templateObject1819 = _taggedTemplateLiteral76(["Disembodied Hand"])));
        case $slot(_templateObject1917 || (_templateObject1917 = _taggedTemplateLiteral76(["off-hand"]))):
          return $familiar(_templateObject2017 || (_templateObject2017 = _taggedTemplateLiteral76(["Left-Hand Man"])));
        default:
          return void 0;
      }
    }
    /**
     * Returns the bonus value associated with a given item.
     *
     * @param item The item to check the bonus of.
     * @returns The bonus assigned to that item.
     */
  }, {
    key: "getBonus",
    value: function getBonus(item14) {
      var _a;
      return (_a = this.bonuses.get(item14)) !== null && _a !== void 0 ? _a : 0;
    }
    /**
     * Applies a value to any existing bonus this item has, using a rule assigned by the `reducer` parameter
     *
     * @param item The item to try to apply a bonus to.
     * @param value The value to try to apply.
     * @param reducer Function that combines new and current bonus
     * @returns The total assigned bonus to that item.
     */
  }, {
    key: "applyBonus",
    value: function applyBonus(item14, value, reducer) {
      var previous = this.getBonus(item14);
      return this.setBonus(item14, reducer(value, previous));
    }
    /**
     * Sets the bonus value of an item equal to a given value, overriding any current bonus assigned.
     *
     * @param item The item to try to apply a bonus to.
     * @param value The value to try to apply.
     * @returns The total assigned bonus to that item.
     */
  }, {
    key: "setBonus",
    value: function setBonus(item14, value) {
      this.bonuses.set(item14, value);
      return value;
    }
    /**
     * Adds a value to any existing bonus this item has
     *
     * @param item The item to try to add a bonus to.
     * @param value The value to try to add.
     * @returns The total assigned bonus to that item.
     */
  }, {
    key: "addBonus",
    value: function addBonus(item14, value) {
      return this.applyBonus(item14, value, function(a, b) {
        return a + b;
      });
    }
    /**
     * Apply the given items' bonuses to the outfit, using a rule given by the reducer
     *
     * @param items A map containing items and their bonuses
     * @param reducer A way of combining new bonuses with existing bonuses
     */
  }, {
    key: "applyBonuses",
    value: function applyBonuses(items, reducer) {
      var _iterator = _createForOfIteratorHelper19(items), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var _step$value = _slicedToArray28(_step.value, 2), item14 = _step$value[0], value = _step$value[1];
          this.applyBonus(item14, value, reducer);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
     * Sets the bonuses of the given items, overriding existing bonuses
     *
     * @param items Map containing items and bonuses
     */
  }, {
    key: "setBonuses",
    value: function setBonuses(items) {
      this.applyBonuses(items, function(a) {
        return a;
      });
    }
    /**
     * Adds the bonuses of the given items to any existing bonuses they ahave
     *
     * @param items Map containing items and bonuses
     */
  }, {
    key: "addBonuses",
    value: function addBonuses(items) {
      this.applyBonuses(items, function(a, b) {
        return a + b;
      });
    }
  }, {
    key: "equipUsingFamiliar",
    value: function equipUsingFamiliar(item14, slot) {
      if (![void 0, $slot(_templateObject2141 || (_templateObject2141 = _taggedTemplateLiteral76(["familiar"])))].includes(slot)) return false;
      if (this.equips.has($slot(_templateObject2219 || (_templateObject2219 = _taggedTemplateLiteral76(["familiar"]))))) return false;
      if ((0, import_kolmafia87.booleanModifier)(item14, "Single Equip")) return false;
      var familiar10 = this.getHoldingFamiliar(item14);
      if (familiar10 === void 0 || !this.equip(familiar10)) return false;
      this.equips.set($slot(_templateObject2318 || (_templateObject2318 = _taggedTemplateLiteral76(["familiar"]))), item14);
      return true;
    }
  }, {
    key: "equipItem",
    value: function equipItem(item14, slot) {
      return this.haveEquipped(item14, slot) || this.equipItemNone(item14, slot) || this.isAvailable(item14) && (this.equipNonAccessory(item14, slot) || this.equipAccessory(item14, slot) || this.equipUsingDualWield(item14, slot) || this.equipUsingFamiliar(item14, slot));
    }
  }, {
    key: "equipFamiliar",
    value: function equipFamiliar(familiar10) {
      if (familiar10 === this.familiar) return true;
      if (this.familiar !== void 0) return false;
      if (familiar10 !== $familiar.none) {
        if (!have(familiar10)) return false;
        if (Array.from(this.riders.values()).includes(familiar10)) return false;
      }
      var item14 = this.equips.get($slot(_templateObject2417 || (_templateObject2417 = _taggedTemplateLiteral76(["familiar"]))));
      if (item14 !== void 0 && item14 !== $item.none && !(0, import_kolmafia87.canEquip)(familiar10, item14)) return false;
      this.familiar = familiar10;
      return true;
    }
  }, {
    key: "equipSpec",
    value: function equipSpec(spec) {
      var _this$avoid;
      var _a, _b, _c, _d, _e, _f;
      var succeeded = true;
      for (var _i = 0, _outfitSlots2 = outfitSlots; _i < _outfitSlots2.length; _i++) {
        var slotName = _outfitSlots2[_i];
        var slot = (_a = (/* @__PURE__ */ new Map([["famequip", $slot(_templateObject2516 || (_templateObject2516 = _taggedTemplateLiteral76(["familiar"])))], ["offhand", $slot(_templateObject2615 || (_templateObject2615 = _taggedTemplateLiteral76(["off-hand"])))]])).get(slotName)) !== null && _a !== void 0 ? _a : (0, import_kolmafia87.toSlot)(slotName);
        var itemOrItems = spec[slotName];
        if (itemOrItems !== void 0 && !this.equip(itemOrItems, slot)) succeeded = false;
      }
      var _iterator2 = _createForOfIteratorHelper19((_b = spec === null || spec === void 0 ? void 0 : spec.equip) !== null && _b !== void 0 ? _b : []), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var item14 = _step2.value;
          if (!this.equip(item14)) succeeded = false;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      if ((spec === null || spec === void 0 ? void 0 : spec.familiar) !== void 0) {
        if (!this.equip(spec.familiar)) succeeded = false;
      }
      (_this$avoid = this.avoid).push.apply(_this$avoid, _toConsumableArray27((_c = spec === null || spec === void 0 ? void 0 : spec.avoid) !== null && _c !== void 0 ? _c : []));
      this.skipDefaults = this.skipDefaults || ((_d = spec.skipDefaults) !== null && _d !== void 0 ? _d : false);
      if (spec.modifier) {
        var _this$modifier;
        if (Array.isArray(spec.modifier)) (_this$modifier = this.modifier).push.apply(_this$modifier, _toConsumableArray27(spec.modifier));
        else this.modifier.push(spec.modifier);
      }
      if (spec.modes) {
        if (!this.setModes(spec.modes)) {
          succeeded = false;
        }
      }
      if (spec.riders) {
        if (spec.riders["buddy-bjorn"] && !this.bjornify(spec.riders["buddy-bjorn"])) succeeded = false;
        if (spec.riders["crown-of-thrones"] && !this.enthrone(spec.riders["crown-of-thrones"])) succeeded = false;
      }
      if (spec.bonuses) {
        this.addBonuses(spec.bonuses);
      }
      this.beforeDress.apply(this, _toConsumableArray27((_e = spec.beforeDress) !== null && _e !== void 0 ? _e : []));
      this.afterDress.apply(this, _toConsumableArray27((_f = spec.afterDress) !== null && _f !== void 0 ? _f : []));
      return succeeded;
    }
    /**
     * Equip the first thing that can be equipped to the outfit.
     *
     * @param things The things to equip.
     * @param slot The slot to equip them.
     * @returns True if one of the things is equipped, and false otherwise.
     */
  }, {
    key: "equipFirst",
    value: function equipFirst2(things, slot) {
      var _this = this;
      if (things.length === 0) return true;
      return things.some(function(val) {
        return _this.equip(val, slot);
      });
    }
    /**
     * Equip a thing to the outfit.
     *
     * If no slot is given, then the thing will be equipped wherever possible
     * (possibly using dual-wielding, any of the accessory slots, or as
     * familiar equipment). If it is impossible to add this thing anywhere to
     * the outfit, this function will return false.
     *
     * If a slot is given, the item will be equipped only in that slot. If the
     * slot is filled with a different item, this function will return false.
     *
     * If the thing is already equipped in the provided slot, or if no slot is
     * given and the thing is already equipped in any slot, this function will
     * return true and not change the outfit.
     *
     * @param thing The thing or things to equip.
     * @param slot The slot to equip them.
     * @returns True if the thing was sucessfully equipped, and false otherwise.
     */
  }, {
    key: "equip",
    value: function equip10(thing, slot) {
      var _this = this;
      if (Array.isArray(thing)) {
        if (slot !== void 0) return this.equipFirst(thing, slot);
        return thing.every(function(val) {
          return _this.equip(val);
        });
      }
      if (thing instanceof import_kolmafia87.Item) return this.equipItem(thing, slot);
      if (thing instanceof import_kolmafia87.Familiar) return this.equipFamiliar(thing);
      if (thing instanceof Outfit2) return this.equipSpec(thing.spec());
      return this.equipSpec(thing);
    }
  }, {
    key: "equipRider",
    value: (
      /**
       * Add a rider to the outfit.
       *
       * This function does *not* equip the corresponding item; it must be equipped separately.
       *
       * If a familiar is already specified as the rider that is different from the provided target, this function will return false and not change the rider.
       * @param target The familiar to use as the rider, or a ranked list of familiars to try to use as the rider.
       * @returns True if we successfully set the slot to a valid rider.
       */
      function equipRider(target, slot) {
        var _this = this;
        var current2 = this.riders.get(slot);
        var targets = Array.isArray(target) ? target : [target];
        if (current2) {
          return targets.includes(current2);
        }
        var otherRiders = _toConsumableArray27(this.riders.entries()).filter(function(_ref) {
          var _ref2 = _slicedToArray28(_ref, 1), key = _ref2[0];
          return slot !== key;
        }).map(function(_ref3) {
          var _ref4 = _slicedToArray28(_ref3, 2), value = _ref4[1];
          return value;
        });
        var fam = targets.find(function(f) {
          return have(f) && _this.familiar !== f && !otherRiders.includes(f);
        });
        if (fam) {
          this.riders.set(slot, fam);
          return true;
        }
        return false;
      }
    )
    /**
     * Add a bjornified familiar to the outfit.
     *
     * This function does *not* equip the buddy bjorn itself; it must be equipped separately.
     *
     * If a familiar is already specified for the buddy bjorn that is different from the provided target, this function will return false and not change the buddy bjorn.
     * @param target The familiar to bjornify, or a ranked list of familiars to try to bjornify.
     * @returns True if we successfully set the bjorn to a valid target.
     */
  }, {
    key: "bjornify",
    value: function bjornify(target) {
      return this.equipRider(target, $slot(_templateObject2715 || (_templateObject2715 = _taggedTemplateLiteral76(["buddy-bjorn"]))));
    }
    /**
     * Add anenthroned familiar to the outfit.
     *
     * This function does *not* equip the crown of thrones itself; it must be equipped separately.
     *
     * If a familiar is already specified for the crown of thrones that is different from the provided target, this function will return false and not change the crown of thrones.
     * @param target The familiar to enthrone, or a ranked list of familiars to try to enthrone.
     * @returns True if we successfully set the enthrone to a valid target.
     */
  }, {
    key: "enthrone",
    value: function enthrone(target) {
      return this.equipRider(target, $slot(_templateObject2813 || (_templateObject2813 = _taggedTemplateLiteral76(["crown-of-thrones"]))));
    }
    /**
     * Set the provided modes for items that may be equipped in the outfit.
     *
     * This function does *not* equip items for the set modes; they must be
     * equipped separately.
     *
     * If a mode is already set for an item that is different from the provided
     * mode, this function will return false and not change the mode for that
     * item. (But other modes might still be changed if they are compatible.)
     *
     * Note that the superhero and instuctions of a retrocape can be set
     * independently (`undefined` is treated as "don't care").
     *
     * @param modes Modes to set in this outfit.
     * @returns True if all modes were sucessfully set, and false otherwise.
     */
  }, {
    key: "setModes",
    value: function setModes(modes) {
      var _a, _b;
      var compatible = true;
      for (var _i2 = 0, _modeableCommands = modeableCommands2; _i2 < _modeableCommands.length; _i2++) {
        var mode = _modeableCommands[_i2];
        if (mode === "retrocape") continue;
        if (this.modes[mode] && modes[mode] && this.modes[mode] !== modes[mode]) {
          compatible = false;
        }
      }
      if (this.modes["retrocape"] && modes["retrocape"]) {
        if (this.modes["retrocape"][0] && modes["retrocape"][0] && this.modes["retrocape"][0] !== modes["retrocape"][0]) {
          compatible = false;
        }
        if (this.modes["retrocape"][1] && modes["retrocape"][1] && this.modes["retrocape"][1] !== modes["retrocape"][1]) {
          compatible = false;
        }
        this.modes["retrocape"][0] = (_a = this.modes["retrocape"][0]) !== null && _a !== void 0 ? _a : modes["retrocape"][0];
        this.modes["retrocape"][1] = (_b = this.modes["retrocape"][1]) !== null && _b !== void 0 ? _b : modes["retrocape"][1];
      }
      this.modes = _objectSpread12(_objectSpread12({}, modes), this.modes);
      return compatible;
    }
    /**
     * Check if it is possible to equip a thing to this outfit using .equip().
     *
     * This does not change the current outfit.
     *
     * @param thing The thing to equip.
     * @param slot The slot to equip them.
     * @returns True if this thing can be equipped.
     */
  }, {
    key: "canEquip",
    value: function canEquip9(thing, slot) {
      var outfit2 = this.clone();
      return outfit2.equip(thing, slot);
    }
    /**
     * Check if it is possible to equip a thing to this outfit using .equip(); if it is, do so.
     *
     * This does change the current outfit.
     * @param thing The thing to equip.
     * @param slot The slot to equip them.
     * @returns True if this thing was successfully equipped.
     */
  }, {
    key: "tryEquip",
    value: function tryEquip(thing, slot) {
      return this.canEquip(thing, slot) && this.equip(thing, slot);
    }
  }, {
    key: "afterDress",
    value: function afterDress() {
      var _this$postActions;
      (_this$postActions = this.postActions).push.apply(_this$postActions, arguments);
    }
  }, {
    key: "beforeDress",
    value: function beforeDress() {
      var _this$preActions;
      (_this$preActions = this.preActions).push.apply(_this$preActions, arguments);
    }
    /**
     * Equip this outfit.
     */
  }, {
    key: "_dress",
    value: function _dress(refreshed) {
      var _this = this;
      if (this.familiar) (0, import_kolmafia87.useFamiliar)(this.familiar);
      var targetEquipment = Array.from(this.equips.values());
      var usedSlots = /* @__PURE__ */ new Set();
      var nonaccessorySlots = $slots(_templateObject2913 || (_templateObject2913 = _taggedTemplateLiteral76(["weapon, off-hand, hat, back, shirt, pants, familiar"])));
      var bjorn = this.riders.get($slot(_templateObject3013 || (_templateObject3013 = _taggedTemplateLiteral76(["buddy-bjorn"]))));
      if (bjorn && (this.equips.get($slot(_templateObject3130 || (_templateObject3130 = _taggedTemplateLiteral76(["back"])))) === $item(_templateObject3215 || (_templateObject3215 = _taggedTemplateLiteral76(["Buddy Bjorn"]))) || this.getBonus($item(_templateObject3314 || (_templateObject3314 = _taggedTemplateLiteral76(["Buddy Bjorn"])))))) {
        usedSlots.add($slot(_templateObject3412 || (_templateObject3412 = _taggedTemplateLiteral76(["buddy-bjorn"]))));
        usedSlots.add($slot(_templateObject3511 || (_templateObject3511 = _taggedTemplateLiteral76(["crown-of-thrones"]))));
      }
      var crown = this.riders.get($slot(_templateObject3611 || (_templateObject3611 = _taggedTemplateLiteral76(["crown-of-thrones"]))));
      if (crown && (this.equips.get($slot(_templateObject3711 || (_templateObject3711 = _taggedTemplateLiteral76(["hat"])))) === $item(_templateObject3811 || (_templateObject3811 = _taggedTemplateLiteral76(["Crown of Thrones"]))) || this.getBonus($item(_templateObject3911 || (_templateObject3911 = _taggedTemplateLiteral76(["Crown of Thrones"])))))) {
        usedSlots.add($slot(_templateObject4011 || (_templateObject4011 = _taggedTemplateLiteral76(["buddy-bjorn"]))));
        usedSlots.add($slot(_templateObject4114 || (_templateObject4114 = _taggedTemplateLiteral76(["crown-of-thrones"]))));
      }
      var _iterator3 = _createForOfIteratorHelper19(nonaccessorySlots), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var slot = _step3.value;
          if (targetEquipment.includes((0, import_kolmafia87.equippedItem)(slot)) && this.equips.get(slot) !== (0, import_kolmafia87.equippedItem)(slot) || this.avoid.includes((0, import_kolmafia87.equippedItem)(slot)) || slot === $slot(_templateObject4911 || (_templateObject4911 = _taggedTemplateLiteral76(["weapon"]))) && weaponHands((0, import_kolmafia87.equippedItem)(slot)) !== 1 && this.equips.has($slot(_templateObject5011 || (_templateObject5011 = _taggedTemplateLiteral76(["offhand"])))) && !this.equips.has($slot(_templateObject5112 || (_templateObject5112 = _taggedTemplateLiteral76(["weapon"]))))) (0, import_kolmafia87.equip)(slot, $item.none);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      var _iterator4 = _createForOfIteratorHelper19(nonaccessorySlots), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var _slot = _step4.value;
          var equipment = this.equips.get(_slot);
          if (equipment) {
            (0, import_kolmafia87.equip)(_slot, equipment);
            usedSlots.add(_slot);
          }
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      var accessorySlots = $slots(_templateObject4213 || (_templateObject4213 = _taggedTemplateLiteral76(["acc1, acc2, acc3"])));
      var accessoryEquips = accessorySlots.map(function(slot2) {
        return _this.equips.get(slot2);
      }).filter(function(item14) {
        return item14 !== void 0;
      });
      var missingAccessories = [];
      var _iterator5 = _createForOfIteratorHelper19(accessoryEquips), _step5;
      try {
        var _loop = function _loop3() {
          var accessory2 = _step5.value;
          var alreadyEquipped = accessorySlots.find(function(slot2) {
            return !usedSlots.has(slot2) && (0, import_kolmafia87.equippedItem)(slot2) === accessory2;
          });
          if (alreadyEquipped) {
            usedSlots.add(alreadyEquipped);
          } else {
            missingAccessories.push(accessory2);
          }
        };
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          _loop();
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
      for (var _i3 = 0, _missingAccessories = missingAccessories; _i3 < _missingAccessories.length; _i3++) {
        var accessory = _missingAccessories[_i3];
        var unusedSlot = accessorySlots.find(function(slot2) {
          return !usedSlots.has(slot2);
        });
        if (unusedSlot === void 0) {
          throw "No accessory slots remaining";
        }
        (0, import_kolmafia87.equip)(unusedSlot, accessory);
        usedSlots.add(unusedSlot);
      }
      var modes = convertToLibramModes(this.modes);
      if (this.modifier.length > 0 || _toConsumableArray27(this.bonuses).filter(function(_ref5) {
        var _ref6 = _slicedToArray28(_ref5, 2), value = _ref6[1];
        return value;
      }).length > 0) {
        var allRequirements = [new Requirement(this.modifier, {
          preventSlot: _toConsumableArray27(usedSlots),
          preventEquip: this.avoid,
          modes: modes,
          bonusEquip: this.bonuses
        })];
        if (refreshed) allRequirements.push(FORCE_REFRESH_REQUIREMENT);
        if (!Requirement.merge(allRequirements).maximize()) {
          if (!refreshed) {
            (0, import_kolmafia87.cliExecute)("refresh inventory");
            this._dress(true);
            return;
          } else throw new Error("Failed to maximize properly!");
        }
        (0, import_kolmafia87.logprint)("Maximize: ".concat(this.modifier));
      }
      applyModes(modes);
      if (bjorn && (0, import_kolmafia87.haveEquipped)($item(_templateObject4312 || (_templateObject4312 = _taggedTemplateLiteral76(["Buddy Bjorn"]))))) {
        if ((0, import_kolmafia87.myEnthronedFamiliar)() === bjorn) (0, import_kolmafia87.enthroneFamiliar)($familiar.none);
        if ((0, import_kolmafia87.myBjornedFamiliar)() !== bjorn) (0, import_kolmafia87.bjornifyFamiliar)(bjorn);
      }
      if (crown && (0, import_kolmafia87.haveEquipped)($item(_templateObject4411 || (_templateObject4411 = _taggedTemplateLiteral76(["Crown of Thrones"]))))) {
        if ((0, import_kolmafia87.myBjornedFamiliar)() === crown) (0, import_kolmafia87.bjornifyFamiliar)($familiar.none);
        if ((0, import_kolmafia87.myEnthronedFamiliar)() !== crown) (0, import_kolmafia87.enthroneFamiliar)(crown);
      }
      if (this.familiar !== void 0 && (0, import_kolmafia87.myFamiliar)() !== this.familiar) throw "Failed to fully dress (expected: familiar ".concat(this.familiar, ")");
      var _iterator6 = _createForOfIteratorHelper19(nonaccessorySlots), _step6;
      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
          var _slot2 = _step6.value;
          if (this.equips.has(_slot2) && (0, import_kolmafia87.equippedItem)(_slot2) !== this.equips.get(_slot2)) {
            throw "Failed to fully dress (expected: ".concat(_slot2, " ").concat(this.equips.get(_slot2), ")");
          }
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
      var _iterator7 = _createForOfIteratorHelper19(accessoryEquips), _step7;
      try {
        var _loop2 = function _loop22() {
          var accessory2 = _step7.value;
          if ((0, import_kolmafia87.equippedAmount)(accessory2) < accessoryEquips.filter(function(acc) {
            return acc === accessory2;
          }).length) {
            throw "Failed to fully dress (expected: acc ".concat(accessory2, ")");
          }
        };
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
          _loop2();
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }
      for (var _i4 = 0, _arr = [[$slot(_templateObject4511 || (_templateObject4511 = _taggedTemplateLiteral76(["buddy-bjorn"]))), $item(_templateObject4611 || (_templateObject4611 = _taggedTemplateLiteral76(["Buddy Bjorn"]))), import_kolmafia87.myBjornedFamiliar], [$slot(_templateObject4711 || (_templateObject4711 = _taggedTemplateLiteral76(["crown-of-thrones"]))), $item(_templateObject4811 || (_templateObject4811 = _taggedTemplateLiteral76(["Crown of Thrones"]))), import_kolmafia87.myEnthronedFamiliar]]; _i4 < _arr.length; _i4++) {
        var _arr$_i = _slicedToArray28(_arr[_i4], 3), rider = _arr$_i[0], throne = _arr$_i[1], checkingFunction = _arr$_i[2];
        var wanted = this.riders.get(rider);
        if (_toConsumableArray27(this.equips.values()).includes(throne) && wanted && checkingFunction() !== wanted) {
          throw "Failed to fully dress: (expected ".concat(rider, " ").concat(wanted, ")");
        }
      }
    }
  }, {
    key: "dress",
    value: function dress() {
      var _iterator8 = _createForOfIteratorHelper19(this.preActions), _step8;
      try {
        for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
          var action = _step8.value;
          action();
        }
      } catch (err) {
        _iterator8.e(err);
      } finally {
        _iterator8.f();
      }
      this._dress(false);
      var _iterator9 = _createForOfIteratorHelper19(this.postActions), _step9;
      try {
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done; ) {
          var _action = _step9.value;
          _action();
        }
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }
    }
    /**
     * Build an Outfit identical to this outfit.
     */
  }, {
    key: "clone",
    value: function clone() {
      var result = new Outfit2();
      result.equips = new Map(this.equips);
      result.skipDefaults = this.skipDefaults;
      result.familiar = this.familiar;
      result.modifier = _toConsumableArray27(this.modifier);
      result.avoid = _toConsumableArray27(this.avoid);
      result.modes = _objectSpread12({}, this.modes);
      result.riders = new Map(this.riders);
      result.bonuses = new Map(this.bonuses);
      result.beforeDress.apply(result, _toConsumableArray27(this.preActions));
      result.afterDress.apply(result, _toConsumableArray27(this.postActions));
      return result;
    }
    /**
     * Build an OutfitSpec identical to this outfit.
     */
  }, {
    key: "spec",
    value: function spec() {
      var _a;
      var result = {
        modifier: _toConsumableArray27(this.modifier),
        avoid: _toConsumableArray27(this.avoid),
        skipDefaults: this.skipDefaults,
        modes: _objectSpread12({}, this.modes),
        bonuses: new Map(this.bonuses)
      };
      if (this.familiar) result.familiar = this.familiar;
      for (var _i5 = 0, _outfitSlots2 = outfitSlots; _i5 < _outfitSlots2.length; _i5++) {
        var slotName = _outfitSlots2[_i5];
        var entry = this.equips.get((_a = (/* @__PURE__ */ new Map([["famequip", $slot(_templateObject5212 || (_templateObject5212 = _taggedTemplateLiteral76(["familiar"])))], ["offhand", $slot(_templateObject5311 || (_templateObject5311 = _taggedTemplateLiteral76(["off-hand"])))]])).get(slotName)) !== null && _a !== void 0 ? _a : (0, import_kolmafia87.toSlot)(slotName));
        if (entry) result[slotName] = entry;
      }
      var riders = {};
      var buddyRider = this.riders.get($slot(_templateObject5411 || (_templateObject5411 = _taggedTemplateLiteral76(["buddy-bjorn"]))));
      if (buddyRider !== void 0) riders["buddy-bjorn"] = buddyRider;
      var throneRider = this.riders.get($slot(_templateObject5510 || (_templateObject5510 = _taggedTemplateLiteral76(["crown-of-thrones"]))));
      if (throneRider !== void 0) riders["crown-of-thrones"] = throneRider;
      if (buddyRider !== void 0 || throneRider !== void 0) result.riders = riders;
      if (this.preActions.length) result.beforeDress = this.preActions;
      if (this.postActions.length) result.afterDress = this.postActions;
      return result;
    }
  }], [{
    key: "current",
    value: function current2() {
      var _a;
      var outfit2 = new Outfit2();
      var familiar10 = (0, import_kolmafia87.myFamiliar)();
      if (outfit2.equip(familiar10)) {
        throw "Failed to create outfit from current state (expected: familiar ".concat(familiar10, ")");
      }
      for (var _i6 = 0, _outfitSlots3 = outfitSlots; _i6 < _outfitSlots3.length; _i6++) {
        var slotName = _outfitSlots3[_i6];
        var slot = (_a = (/* @__PURE__ */ new Map([["famequip", $slot(_templateObject569 || (_templateObject569 = _taggedTemplateLiteral76(["familiar"])))], ["offhand", $slot(_templateObject575 || (_templateObject575 = _taggedTemplateLiteral76(["off-hand"])))]])).get(slotName)) !== null && _a !== void 0 ? _a : (0, import_kolmafia87.toSlot)(slotName);
        var item14 = (0, import_kolmafia87.equippedItem)(slot);
        if (!outfit2.equip(item14, slot)) {
          throw "Failed to create outfit from current state (expected: ".concat(slot, " ").concat(item14, ")");
        }
      }
      if ((0, import_kolmafia87.haveEquipped)($item(_templateObject585 || (_templateObject585 = _taggedTemplateLiteral76(["Crown of Thrones"]))))) outfit2.riders.set($slot(_templateObject595 || (_templateObject595 = _taggedTemplateLiteral76(["crown-of-thrones"]))), (0, import_kolmafia87.myEnthronedFamiliar)());
      if ((0, import_kolmafia87.haveEquipped)($item(_templateObject605 || (_templateObject605 = _taggedTemplateLiteral76(["Buddy Bjorn"]))))) outfit2.riders.set($slot(_templateObject6111 || (_templateObject6111 = _taggedTemplateLiteral76(["buddy-bjorn"]))), (0, import_kolmafia87.myBjornedFamiliar)());
      outfit2.setModes(getCurrentModes2());
      return outfit2;
    }
  }, {
    key: "from",
    value: function from(spec) {
      var error2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
      var _a;
      var outfit2 = new Outfit2();
      if (spec instanceof Requirement) {
        var result = {};
        result.modifier = spec.maximizeParameters;
        if ((_a = spec.maximizeOptions.forceEquip) === null || _a === void 0 ? void 0 : _a.length) {
          result.equip = spec.maximizeOptions.forceEquip;
        }
        result.avoid = spec.maximizeOptions.preventEquip;
        result.bonuses = spec.maximizeOptions.bonusEquip;
        if (spec.maximizeOptions.modes) {
          result.modes = convertFromLibramModes(spec.maximizeOptions.modes);
        }
        var cleanedResult = Object.fromEntries(_toConsumableArray27(Object.entries(result)).filter(function(_ref7) {
          var _ref8 = _slicedToArray28(_ref7, 2), v = _ref8[1];
          return v !== void 0;
        }));
        return Outfit2.from(cleanedResult);
      }
      var success = outfit2.equip(spec);
      if (!success && error2) throw error2;
      return success ? outfit2 : null;
    }
  }]);
  return Outfit2;
}();
function convertToLibramModes(modes) {
  var _a;
  return {
    backupcamera: modes["backupcamera"],
    umbrella: modes["umbrella"],
    snowsuit: modes["snowsuit"],
    edpiece: modes["edpiece"],
    retrocape: (_a = modes["retrocape"]) === null || _a === void 0 ? void 0 : _a.filter(function(s) {
      return s !== void 0;
    }).join(" "),
    parka: modes["parka"],
    jillcandle: modes["jillcandle"]
  };
}
function convertFromLibramModes(modes) {
  return modes.retrocape ? _objectSpread12(_objectSpread12({}, modes), {}, {
    retrocape: modes.retrocape.split(" ")
  }) : modes;
}
function getCurrentModes2() {
  return {
    backupcamera: getMode("backupCameraMode", ["ml", "meat", "init"]),
    umbrella: getMode("umbrellaState", ["broken", "forward-facing", "bucket style", "pitchfork style", "constantly twirling", "cocoon"]),
    snowsuit: getMode("snowsuit", ["eyebrows", "smirk", "nose", "goatee", "hat"]),
    edpiece: getMode("edPiece", ["bear", "owl", "puma", "hyena", "mouse", "weasel", "fish"]),
    retrocape: [getMode("retroCapeSuperhero", ["vampire", "heck", "robot"]), getMode("retroCapeWashingInstructions", ["hold", "thrill", "kiss", "kill"])],
    parka: getMode("parkaMode", ["kachungasaur", "dilophosaur", "ghostasaurus", "spikolodon", "pterodactyl"]),
    jillcandle: getMode("jillcandle", ["disco", "ultraviolet", "reading", "red"])
  };
}
function getMode(property, options) {
  var val = get(property, "");
  return options.find(function(s) {
    return s === val;
  });
}

// node_modules/grimoire-kolmafia/dist/engine.js
var _templateObject570;
var _templateObject2142;
function _taggedTemplateLiteral77(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray28(arr) {
  return _arrayWithoutHoles28(arr) || _iterableToArray28(arr) || _unsupportedIterableToArray45(arr) || _nonIterableSpread28();
}
function _nonIterableSpread28() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray28(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles28(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray45(arr);
}
function _slicedToArray29(arr, i) {
  return _arrayWithHoles29(arr) || _iterableToArrayLimit29(arr, i) || _unsupportedIterableToArray45(arr, i) || _nonIterableRest29();
}
function _nonIterableRest29() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit29(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles29(arr) {
  if (Array.isArray(arr)) return arr;
}
function _createForOfIteratorHelper20(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray45(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e3) {
    didErr = true;
    err = _e3;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray45(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray45(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray45(o, minLen);
}
function _arrayLikeToArray45(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function ownKeys13(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread13(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys13(Object(t), true).forEach(function(r2) {
      _defineProperty27(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys13(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty27(obj, key, value) {
  key = _toPropertyKey30(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _defineProperties24(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey30(descriptor.key), descriptor);
  }
}
function _createClass24(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties24(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties24(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey30(t) {
  var i = _toPrimitive30(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive30(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _classCallCheck24(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
var grimoireCCS = "grimoire_macro";
var Engine = /* @__PURE__ */ function() {
  function Engine3(tasks, options) {
    var _this = this;
    _classCallCheck24(this, Engine3);
    this.attempts = {};
    this.propertyManager = new PropertiesManager();
    this.tasks_by_name = /* @__PURE__ */ new Map();
    this.cachedCcsContents = "";
    this.options = options !== null && options !== void 0 ? options : {};
    this.tasks = tasks.map(function(task2) {
      return _objectSpread13(_objectSpread13({}, _this.options.default_task_options), task2);
    });
    var _iterator = _createForOfIteratorHelper20(this.tasks), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var task = _step.value;
        this.tasks_by_name.set(task.name, task);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    this.initPropertiesManager(this.propertyManager);
  }
  _createClass24(Engine3, [{
    key: "getNextTask",
    value: function getNextTask() {
      var _this = this;
      return this.tasks.find(function(task) {
        return _this.available(task);
      });
    }
    /**
     * Continually get the next task and execute it.
     * @param actions If given, only perform up to this many tasks.
     */
  }, {
    key: "run",
    value: function run(actions) {
      for (var i = 0; i < (actions !== null && actions !== void 0 ? actions : Infinity); i++) {
        var task = this.getNextTask();
        if (!task) return;
        this.execute(task);
      }
    }
    /**
     * Close the engine and reset all properties.
     * After this has been called, this object should not be used.
     */
  }, {
    key: "destruct",
    value: function destruct() {
      this.propertyManager.resetAll();
      (0, import_kolmafia88.setAutoAttack)(0);
    }
    /**
     * Check if the given task is available at this moment.
     * @returns true if all dependencies are complete and the task is ready.
     *  Note that dependencies are not checked transitively. That is, if
     *  A depends on B which depends on C, then A is ready if B is complete
     *  (regardless of if C is complete or not).
     */
  }, {
    key: "available",
    value: function available6(task) {
      var _a, _b;
      if (((_a = task.limit) === null || _a === void 0 ? void 0 : _a.skip) !== void 0 && this.attempts[task.name] >= task.limit.skip) return false;
      var _iterator2 = _createForOfIteratorHelper20((_b = task.after) !== null && _b !== void 0 ? _b : []), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var after = _step2.value;
          var after_task = this.tasks_by_name.get(after);
          if (after_task === void 0) throw "Unknown task dependency ".concat(after, " on ").concat(task.name);
          if (!after_task.completed()) return false;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      if (task.ready && !task.ready()) return false;
      if (task.completed()) return false;
      return true;
    }
    /**
     * Perform all steps to execute the provided task.
     * This is the main entry point for the Engine.
     * @param task The current executing task.
     */
  }, {
    key: "execute",
    value: function execute(task) {
      var _a, _b, _c, _d, _e;
      (0, import_kolmafia88.print)("");
      (0, import_kolmafia88.print)("Executing ".concat(task.name), "blue");
      var postcondition = (_b = (_a = task.limit) === null || _a === void 0 ? void 0 : _a.guard) === null || _b === void 0 ? void 0 : _b.call(_a);
      this.acquireItems(task);
      this.acquireEffects(task);
      var task_combat = (_d = (_c = task.combat) === null || _c === void 0 ? void 0 : _c.clone()) !== null && _d !== void 0 ? _d : new CombatStrategy();
      var outfit2 = this.createOutfit(task);
      var task_resources = new CombatResources();
      this.customize(task, outfit2, task_combat, task_resources);
      this.dress(task, outfit2);
      this.setCombat(task, task_combat, task_resources);
      this.setChoices(task, this.propertyManager);
      var _iterator3 = _createForOfIteratorHelper20(task_resources.all()), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var resource = _step3.value;
          (_e = resource.prepare) === null || _e === void 0 ? void 0 : _e.call(resource);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      this.prepare(task);
      this.do(task);
      while (this.shouldRepeatAdv(task)) {
        _set("lastEncounter", "");
        this.do(task);
      }
      this.post(task);
      this.markAttempt(task);
      this.checkLimits(task, postcondition);
    }
    /**
     * Acquire all items for the task.
     * @param task The current executing task.
     */
  }, {
    key: "acquireItems",
    value: function acquireItems(task) {
      var _a;
      var acquire = undelay(task.acquire);
      var _iterator4 = _createForOfIteratorHelper20(acquire || []), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var to_get = _step4.value;
          var num_needed = (_a = to_get.num) !== null && _a !== void 0 ? _a : 1;
          var num_have = (0, import_kolmafia88.itemAmount)(to_get.item) + (0, import_kolmafia88.equippedAmount)(to_get.item);
          if (num_needed <= num_have) continue;
          if (to_get.useful !== void 0 && !to_get.useful()) continue;
          if (to_get.get) {
            to_get.get();
          } else if (to_get.price !== void 0) {
            (0, import_kolmafia88.buy)(to_get.item, num_needed - num_have, to_get.price);
          } else if (Object.keys((0, import_kolmafia88.getRelated)(to_get.item, "fold")).length > 0) {
            (0, import_kolmafia88.cliExecute)("fold ".concat(to_get.item));
          } else {
            (0, import_kolmafia88.retrieveItem)(to_get.item, num_needed);
          }
          if ((0, import_kolmafia88.itemAmount)(to_get.item) + (0, import_kolmafia88.equippedAmount)(to_get.item) < num_needed && !to_get.optional) {
            throw "Task ".concat(task.name, " was unable to acquire ").concat(num_needed, " ").concat(to_get.item);
          }
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }
    /**
     * Acquire all effects for the task.
     * @param task The current executing task.
     */
  }, {
    key: "acquireEffects",
    value: function acquireEffects(task) {
      var _a;
      var effects = (_a = undelay(task.effects)) !== null && _a !== void 0 ? _a : [];
      var songs = effects.filter(function(effect3) {
        return isSong(effect3);
      });
      if (songs.length > maxSongs()) throw "Too many AT songs";
      var extraSongs = Object.keys((0, import_kolmafia88.myEffects)()).map(function(effectName) {
        return (0, import_kolmafia88.toEffect)(effectName);
      }).filter(function(effect3) {
        return isSong(effect3) && !songs.includes(effect3);
      });
      while (songs.length + extraSongs.length > maxSongs()) {
        var toRemove = extraSongs.pop();
        if (toRemove === void 0) {
          break;
        } else {
          uneffect(toRemove);
        }
      }
      var _iterator5 = _createForOfIteratorHelper20(effects), _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          var effect2 = _step5.value;
          ensureEffect(effect2);
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
    }
    /**
     * Create an outfit for the task with all required equipment.
     * @param task The current executing task.
     */
  }, {
    key: "createOutfit",
    value: function createOutfit(task) {
      var spec = undelay(task.outfit);
      if (spec instanceof Outfit) return spec.clone();
      var outfit2 = new Outfit();
      if (spec !== void 0) {
        if (!outfit2.equip(spec) && !this.options.allow_partial_outfits) {
          throw "Unable to equip all items for ".concat(task.name);
        }
      }
      return outfit2;
    }
    /**
     * Equip the outfit for the task.
     * @param task The current executing task.
     * @param outfit The outfit for the task, possibly augmented by the engine.
     */
  }, {
    key: "dress",
    value: function dress(task, outfit2) {
      if (task.do instanceof import_kolmafia88.Location) (0, import_kolmafia88.setLocation)(task.do);
      outfit2.dress();
    }
    /* eslint-disable @typescript-eslint/no-unused-vars */
    /**
     * Perform any engine-specific customization for the outfit and combat plan.
     *
     * This is a natural method to override in order to:
     *   * Enable the use of any resources in the outfit or combat (e.g., allocate banishers).
     *   * Equip a default outfit.
     *   * Determine additional monster macros at a global level (e.g., use flyers).
     * @param task The current executing task.
     * @param outfit The outfit for the task.
     * @param combat The combat strategy so far for the task.
     * @param resources The combat resources assigned so far for the task.
     */
  }, {
    key: "customize",
    value: function customize(task, outfit2, combat, resources) {
    }
    /* eslint-enable @typescript-eslint/no-unused-vars */
    /**
     * Set the choice settings for the task.
     * @param task The current executing task.
     * @param manager The property manager to use.
     */
  }, {
    key: "setChoices",
    value: function setChoices(task, manager) {
      var _a;
      for (var _i = 0, _Object$entries = Object.entries(undelay((_a = task.choices) !== null && _a !== void 0 ? _a : {})); _i < _Object$entries.length; _i++) {
        var _Object$entries$_i = _slicedToArray29(_Object$entries[_i], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];
        if (value === void 0) continue;
        manager.setChoice(parseInt(key), value);
      }
    }
    /**
     * Save the combat macro for this task.
     * @param task The current executing task.
     * @param task_combat The completed combat strategy far for the task.
     * @param task_resources The combat resources assigned for the task.
     */
  }, {
    key: "setCombat",
    value: function setCombat(task, task_combat, task_resources) {
      var _a;
      var macro = task_combat.compile(task_resources, (_a = this.options) === null || _a === void 0 ? void 0 : _a.combat_defaults, task.do instanceof import_kolmafia88.Location ? task.do : void 0);
      macro.save();
      if (!this.options.ccs) {
        var otherCCSEntries = task_combat.compileCcs();
        var ccsContents = ["[default]", '"'.concat(macro.toString(), '"')].concat(_toConsumableArray28(otherCCSEntries)).join("\n");
        (0, import_kolmafia88.logprint)("CCS: ".concat(ccsContents.replace("\n", "\\n ")));
        if (ccsContents !== this.cachedCcsContents) {
          (0, import_kolmafia88.writeCcs)(ccsContents, grimoireCCS);
          (0, import_kolmafia88.cliExecute)("ccs ".concat(grimoireCCS));
          this.cachedCcsContents = ccsContents;
        }
      }
      var autoattack = task_combat.compileAutoattack();
      if (autoattack.toString().length > 1) {
        (0, import_kolmafia88.logprint)("Autoattack macro: ".concat(autoattack.toString()));
        autoattack.setAutoAttack();
      } else {
        (0, import_kolmafia88.setAutoAttack)(0);
      }
    }
    /**
     * Do any task-specific preparation.
     * @param task The current executing task.
     */
  }, {
    key: "prepare",
    value: function prepare(task) {
      var _a;
      (_a = task.prepare) === null || _a === void 0 ? void 0 : _a.call(task);
    }
    /**
     * Actually perform the task.
     * @param task The current executing task.
     */
  }, {
    key: "do",
    value: function _do(task) {
      var result = typeof task.do === "function" ? task.do() : task.do;
      if (result instanceof import_kolmafia88.Location) (0, import_kolmafia88.adv1)(result, -1, "");
      (0, import_kolmafia88.runCombat)();
      while ((0, import_kolmafia88.inMultiFight)()) (0, import_kolmafia88.runCombat)();
      if ((0, import_kolmafia88.choiceFollowsFight)()) (0, import_kolmafia88.runChoice)(-1);
    }
    /**
     * Check if the task.do should be immediately repeated without any prep.
     *
     * By default, this is only used to repeat a task if we hit one of:
     *   1. Halloweener dog noncombats,
     *   2. June cleaver noncombats,
     *   3. Lil' Doctor™ bag noncombat, or
     *   4. Turtle taming noncombats.
     * @param task The current executing task.
     * @returns True if the task should be immediately repeated.
     */
  }, {
    key: "shouldRepeatAdv",
    value: function shouldRepeatAdv(task) {
      return task.do instanceof import_kolmafia88.Location && lastEncounterWasWanderingNC();
    }
    /**
     * Do any task-specific wrapup activities.
     * @param task The current executing task.
     */
  }, {
    key: "post",
    value: function post(task) {
      var _a;
      (_a = task.post) === null || _a === void 0 ? void 0 : _a.call(task);
    }
    /**
     * Mark that an attempt was made on the current task.
     * @param task The current executing task.
     */
  }, {
    key: "markAttempt",
    value: function markAttempt(task) {
      if (!(task.name in this.attempts)) this.attempts[task.name] = 0;
      this.attempts[task.name]++;
    }
    /**
     * Check if the task has passed any of its internal limits.
     * @param task The task to check.
     * @throws An error if any of the internal limits have been passed.
     */
  }, {
    key: "checkLimits",
    value: function checkLimits(task, postcondition) {
      var _a;
      if (!task.limit) return;
      var failureMessage = task.limit.message ? " ".concat(task.limit.message) : "";
      if (!task.completed()) {
        if (task.limit.tries && this.attempts[task.name] >= task.limit.tries) throw "Task ".concat(task.name, " did not complete within ").concat(task.limit.tries, " attempts. Please check what went wrong.").concat(failureMessage);
        if (task.limit.soft && this.attempts[task.name] >= task.limit.soft) throw "Task ".concat(task.name, " did not complete within ").concat(task.limit.soft, " attempts. Please check what went wrong (you may just be unlucky).").concat(failureMessage);
        if (task.limit.turns && task.do instanceof import_kolmafia88.Location && task.do.turnsSpent >= task.limit.turns) throw "Task ".concat(task.name, " did not complete within ").concat(task.limit.turns, " turns. Please check what went wrong.").concat(failureMessage);
        if (task.limit.unready && ((_a = task.ready) === null || _a === void 0 ? void 0 : _a.call(task))) throw "Task ".concat(task.name, " is still ready, but it should not be. Please check what went wrong.").concat(failureMessage);
        if (task.limit.completed) throw "Task ".concat(task.name, " is not completed, but it should be. Please check what went wrong.").concat(failureMessage);
      }
      if (postcondition && !postcondition()) {
        throw "Task ".concat(task.name, " failed its guard. Please check what went wrong.").concat(failureMessage);
      }
    }
  }, {
    key: "getDefaultSettings",
    value: function getDefaultSettings() {
      return this.constructor.defaultSettings;
    }
    /**
     * Initialize properties for the script.
     * @param manager The properties manager to use.
     */
  }, {
    key: "initPropertiesManager",
    value: function initPropertiesManager(manager) {
      var _a;
      manager.set(this.getDefaultSettings());
      if (this.options.ccs !== "") {
        if (this.options.ccs === void 0 && (0, import_kolmafia88.readCcs)(grimoireCCS) === "") {
          (0, import_kolmafia88.writeCcs)("[ default ]\nabort", grimoireCCS);
        }
        manager.set({
          customCombatScript: (_a = this.options.ccs) !== null && _a !== void 0 ? _a : grimoireCCS
        });
      }
    }
  }]);
  return Engine3;
}();
Engine.defaultSettings = {
  logPreferenceChange: true,
  logPreferenceChangeFilter: _toConsumableArray28(new Set([].concat(_toConsumableArray28(get("logPreferenceChangeFilter").split(",")), ["libram_savedMacro", "maximizerMRUList", "testudinalTeachings", "_lastCombatStarted"]))).sort().filter(function(a) {
    return a;
  }).join(","),
  battleAction: "custom combat script",
  autoSatisfyWithMall: true,
  autoSatisfyWithNPCs: true,
  autoSatisfyWithCoinmasters: true,
  autoSatisfyWithStash: false,
  dontStopForCounters: true,
  maximizerFoldables: true,
  hpAutoRecovery: "-0.05",
  hpAutoRecoveryTarget: "0.0",
  mpAutoRecovery: "-0.05",
  mpAutoRecoveryTarget: "0.0",
  afterAdventureScript: "",
  betweenBattleScript: "",
  choiceAdventureScript: "",
  familiarScript: "",
  currentMood: "apathetic",
  autoTuxedo: true,
  autoPinkyRing: true,
  autoGarish: true,
  allowNonMoodBurning: false,
  allowSummonBurning: true,
  libramSkillsSoftcore: "none"
};
function maxSongs() {
  return have($skill(_templateObject570 || (_templateObject570 = _taggedTemplateLiteral77(["Mariachi Memory"])))) ? 4 : 3;
}
var wanderingNCs = /* @__PURE__ */ new Set([
  // Halloweener dog noncombats
  "Wooof! Wooooooof!",
  "Playing Fetch*",
  // June cleaver noncombats
  "Aunts not Ants",
  "Bath Time",
  "Beware of Aligator",
  "Delicious Sprouts",
  "Hypnotic Master",
  "Lost and Found",
  "Poetic Justice",
  "Summer Days",
  "Teacher's Pet",
  // Lil' Doctor™ bag noncombat
  "A Pound of Cure",
  // Turtle taming noncombats
  "Nantucket Snapper",
  "Blue Monday",
  "Capital!",
  "Training Day",
  "Boxed In",
  "Duel Nature",
  "Slow Food",
  "A Rolling Turtle Gathers No Moss",
  "Slow Road to Hell",
  "C'mere, Little Fella",
  "The Real Victims",
  "Like That Time in Tortuga",
  "Cleansing your Palette",
  "Harem Scarum",
  "Turtle in peril",
  "No Man, No Hole",
  "Slow and Steady Wins the Brawl",
  "Stormy Weather",
  "Turtles of the Universe",
  "O Turtle Were Art Thou",
  "Allow 6-8 Weeks For Delivery",
  "Kick the Can",
  "Turtles All The Way Around",
  "More eXtreme Than Usual",
  "Jewel in the Rough",
  "The worst kind of drowning",
  "Even Tamer Than Usual",
  "Never Break the Chain",
  "Close, but Yes Cigar",
  "Armchair Quarterback",
  "This Turtle Rocks!",
  "Really Sticking Her Neck Out",
  "It Came from Beneath the Sewer? Great!",
  "Don't Be Alarmed, Now",
  "Puttin' it on Wax",
  "More Like... Hurtle",
  "Musk! Musk! Musk!",
  "Silent Strolling"
]);
var zoneSpecificNCs = /* @__PURE__ */ new Map([
  ["The Horror...", $locations(_templateObject2142 || (_templateObject2142 = _taggedTemplateLiteral77(["Frat House"])))]
  // Duplicate choice name
]);
function lastEncounterWasWanderingNC() {
  var _a, _b;
  var last = get("lastEncounter");
  if (zoneSpecificNCs.has(last)) {
    var zones = (_a = zoneSpecificNCs.get(last)) !== null && _a !== void 0 ? _a : [];
    return zones.includes((_b = get("lastAdventure")) !== null && _b !== void 0 ? _b : $location.none);
  } else {
    return wanderingNCs.has(last);
  }
}

// node_modules/grimoire-kolmafia/dist/route.js
function ownKeys14(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread14(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys14(Object(t), true).forEach(function(r2) {
      _defineProperty28(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys14(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty28(obj, key, value) {
  key = _toPropertyKey31(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey31(t) {
  var i = _toPrimitive31(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive31(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _createForOfIteratorHelper21(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray46(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray46(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray46(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray46(o, minLen);
}
function _arrayLikeToArray46(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function getTasks(quests2) {
  var implicitAfter = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var _a, _b;
  var result = [];
  var _iterator = _createForOfIteratorHelper21(quests2), _step;
  try {
    var _loop = function _loop2() {
      var quest = _step.value;
      var questCompleted = quest.completed;
      var questReady = quest.ready;
      var _iterator3 = _createForOfIteratorHelper21(quest.tasks), _step3;
      try {
        var _loop22 = function _loop23() {
          var task2 = _step3.value;
          var renamedTask = _objectSpread14({}, task2);
          renamedTask.name = "".concat(quest.name, "/").concat(task2.name);
          renamedTask.after = (_a = task2.after) === null || _a === void 0 ? void 0 : _a.map(function(after2) {
            return after2.includes("/") ? after2 : "".concat(quest.name, "/").concat(after2);
          });
          if (implicitAfter && task2.after === void 0 && result.length > 0) renamedTask.after = [result[result.length - 1].name];
          if (questCompleted !== void 0) {
            var taskCompleted = task2.completed;
            renamedTask.completed = function() {
              return questCompleted() || taskCompleted();
            };
          }
          var taskReady = renamedTask.ready;
          if (questReady !== void 0 && taskReady !== void 0) {
            renamedTask.ready = function() {
              return questReady() && taskReady();
            };
          } else if (questReady !== void 0) {
            renamedTask.ready = function() {
              return questReady();
            };
          }
          result.push(renamedTask);
        };
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          _loop22();
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    };
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      _loop();
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var names = /* @__PURE__ */ new Set();
  for (var _i = 0, _result = result; _i < _result.length; _i++) {
    var task = _result[_i];
    names.add(task.name);
  }
  for (var _i2 = 0, _result2 = result; _i2 < _result2.length; _i2++) {
    var _task = _result2[_i2];
    var _iterator2 = _createForOfIteratorHelper21((_b = _task.after) !== null && _b !== void 0 ? _b : []), _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
        var after = _step2.value;
        if (!names.has(after)) {
          throw "Unknown task dependency ".concat(after, " of ").concat(_task.name);
        }
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  return result;
}
function orderByRoute(tasks, routing2, ignore_missing_tasks) {
  var priorities = /* @__PURE__ */ new Map();
  var _iterator4 = _createForOfIteratorHelper21(tasks), _step4;
  try {
    for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
      var task = _step4.value;
      priorities.set(task.name, [1e3, task]);
    }
  } catch (err) {
    _iterator4.e(err);
  } finally {
    _iterator4.f();
  }
  function setPriorityRecursive(task2, priority) {
    var _a;
    var old_priority = priorities.get(task2);
    if (old_priority === void 0) {
      if (ignore_missing_tasks) return;
      throw "Unknown routing task ".concat(task2);
    }
    if (old_priority[0] <= priority) return;
    priorities.set(task2, [priority, old_priority[1]]);
    var _iterator5 = _createForOfIteratorHelper21((_a = old_priority[1].after) !== null && _a !== void 0 ? _a : []), _step5;
    try {
      for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
        var requirement = _step5.value;
        setPriorityRecursive(requirement, priority - 0.01);
      }
    } catch (err) {
      _iterator5.e(err);
    } finally {
      _iterator5.f();
    }
  }
  for (var i = 0; i < routing2.length; i++) {
    setPriorityRecursive(routing2[i], i);
  }
  var result = tasks.slice();
  result.sort(function(a, b) {
    return (priorities.get(a.name) || [1e3])[0] - (priorities.get(b.name) || [1e3])[0];
  });
  return result;
}

// node_modules/grimoire-kolmafia/dist/task.js
init_dist();
function step(questName) {
  var stringStep = get(questName);
  if (stringStep === "unstarted") return -1;
  else if (stringStep === "started") return 0;
  else if (stringStep === "finished") return 999;
  else {
    if (stringStep.substring(0, 4) !== "step") {
      throw "Quest state parsing error.";
    }
    return parseInt(stringStep.substring(4), 10);
  }
}

// node_modules/grimoire-kolmafia/dist/limit.js
init_dist();
function _classCallCheck25(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties25(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey32(descriptor.key), descriptor);
  }
}
function _createClass25(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties25(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties25(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey32(t) {
  var i = _toPrimitive32(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive32(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var Guards = /* @__PURE__ */ function() {
  function Guards2() {
    _classCallCheck25(this, Guards2);
  }
  _createClass25(Guards2, null, [{
    key: "create",
    value: (
      /**
       * A guard that computes a value before the task executes which is available
       * for the condition checker.
       * @param before
       * @param after
       */
      function create4(before, after) {
        return function() {
          var old = before();
          return function() {
            return after(old);
          };
        };
      }
    )
    /**
     * A guard that asserts a condition holds after the task executes.
     * @param condition A condition that should return true if the task
     *    sucessfully executed.
     */
  }, {
    key: "after",
    value: function after(condition) {
      return function() {
        return condition;
      };
    }
    /**
     * A guard that asserts the provided property changed.
     * @param property The property to check.
     */
  }, {
    key: "changed",
    value: function changed(property) {
      return this.create(function() {
        return get(property);
      }, function(old) {
        return get(property) !== old;
      });
    }
  }]);
  return Guards2;
}();

// src/engine/combat.ts
var _templateObject571;
var _templateObject2143;
var _templateObject3131;
var _templateObject4109;
var _templateObject576;
function _taggedTemplateLiteral78(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _defineProperties26(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey33(descriptor.key), descriptor);
  }
}
function _createClass26(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties26(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties26(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey33(t) {
  var i = _toPrimitive33(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive33(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _classCallCheck26(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _callSuper7(t, o, e) {
  return o = _getPrototypeOf7(o), _possibleConstructorReturn7(t, _isNativeReflectConstruct7() ? Reflect.construct(o, e || [], _getPrototypeOf7(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn7(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized7(self);
}
function _assertThisInitialized7(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _isNativeReflectConstruct7() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct7 = function _isNativeReflectConstruct9() {
    return !!t;
  })();
}
function _getPrototypeOf7(o) {
  _getPrototypeOf7 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf9(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf7(o);
}
function _inherits8(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass) _setPrototypeOf8(subClass, superClass);
}
function _setPrototypeOf8(o, p) {
  _setPrototypeOf8 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf10(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf8(o, p);
}
var myActions = [
  "ignore",
  // Task doesn't care what happens
  "ignoreSoftBanish",
  // Do not seek out a banish, but it is advantageous to have it
  "ignoreNoBanish",
  // Task doesn't care what happens, as long as it is not banished
  "kill",
  // Task needs to kill it, with or without a free kill
  "killFree",
  // Task needs to kill it with a free kill
  "killHard",
  // Task needs to kill it without using a free kill (i.e., boss, or already free)
  "banish",
  // Task doesn't care what happens, but banishing is useful
  "abort",
  // Abort the macro and the script; an error has occured
  "killItem",
  // Kill with an item boost,
  "yellowRay",
  // Kill with a drop-everything YR action
  "forceItems"
  // Force items to drop with a YR or saber
];
var CombatStrategy2 = /* @__PURE__ */ function(_BaseCombatStrategy$w) {
  _inherits8(CombatStrategy3, _BaseCombatStrategy$w);
  function CombatStrategy3() {
    _classCallCheck26(this, CombatStrategy3);
    return _callSuper7(this, CombatStrategy3, arguments);
  }
  return _createClass26(CombatStrategy3);
}(CombatStrategy.withActions(myActions));
var MyActionDefaults = /* @__PURE__ */ function() {
  function MyActionDefaults2() {
    _classCallCheck26(this, MyActionDefaults2);
  }
  _createClass26(MyActionDefaults2, [{
    key: "ignore",
    value: function ignore(target) {
      return this.kill(target);
    }
  }, {
    key: "ignoreSoftBanish",
    value: function ignoreSoftBanish(target) {
      return this.kill(target);
    }
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
  }, {
    key: "kill",
    value: function kill(target) {
      return killMacro(false);
    }
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
  }, {
    key: "killHard",
    value: function killHard(target) {
      return killMacro(true);
    }
  }, {
    key: "ignoreNoBanish",
    value: function ignoreNoBanish(target) {
      return this.kill(target);
    }
  }, {
    key: "killFree",
    value: function killFree() {
      return this.abort();
    }
    // Abort if no resource provided
  }, {
    key: "banish",
    value: function banish(target) {
      return this.kill(target);
    }
  }, {
    key: "abort",
    value: function abort2() {
      return new Macro().abort();
    }
  }, {
    key: "killItem",
    value: function killItem(target) {
      return this.kill(target);
    }
  }, {
    key: "yellowRay",
    value: function yellowRay(target) {
      return this.killItem(target);
    }
  }, {
    key: "forceItems",
    value: function forceItems(target) {
      return this.killItem(target);
    }
  }]);
  return MyActionDefaults2;
}();
function killMacro(hard) {
  var result = new Macro();
  if ((0, import_kolmafia89.haveEquipped)($item(_templateObject571 || (_templateObject571 = _taggedTemplateLiteral78(["Everfull Dart Holster"]))))) {
    if (!hard && (0, import_kolmafia89.myLevel)() >= 12) {
      result.trySkill($skill(_templateObject2143 || (_templateObject2143 = _taggedTemplateLiteral78(["Darts: Aim for the Bullseye"]))));
    }
    result.trySkill($skill(_templateObject3131 || (_templateObject3131 = _taggedTemplateLiteral78(["Darts: Throw at %part1"]))));
  }
  if (!(0, import_kolmafia89.haveEquipped)($item(_templateObject4109 || (_templateObject4109 = _taggedTemplateLiteral78(["June cleaver"]))))) {
    result.while_("!mpbelow 6", new Macro().skill($skill(_templateObject576 || (_templateObject576 = _taggedTemplateLiteral78(["Saucestorm"])))));
  }
  return result.attack().repeat();
}

// src/engine/moods.ts
var import_kolmafia104 = require("kolmafia");
init_dist();

// src/engine/resources.ts
var import_kolmafia103 = require("kolmafia");
init_dist();

// src/lib.ts
var import_kolmafia90 = require("kolmafia");
init_dist();
var import_garbo_lib = __toESM(require_dist());
var _templateObject577;
var _templateObject2144;
var _templateObject3132;
var _templateObject4115;
var _templateObject578;
var _templateObject657;
var _templateObject750;
var _templateObject844;
var _templateObject936;
var _templateObject1031;
var _templateObject1128;
var _templateObject1227;
var _templateObject1325;
var _templateObject1423;
var _templateObject1520;
var _templateObject1620;
var _templateObject1720;
var _templateObject1820;
var _templateObject1918;
var _templateObject2018;
var _templateObject2145;
var _templateObject2220;
var _templateObject2319;
var _templateObject2418;
var _templateObject2517;
var _templateObject2616;
var _templateObject2716;
var _templateObject2814;
var _templateObject2914;
var _templateObject3014;
var _templateObject3133;
var _templateObject3216;
var _templateObject3315;
function _taggedTemplateLiteral79(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function debug(message, color) {
  if (color) {
    (0, import_kolmafia90.print)(message, color);
  } else {
    (0, import_kolmafia90.print)(message);
  }
}
function convertMilliseconds(milliseconds) {
  var seconds = milliseconds / 1e3;
  var minutes = Math.floor(seconds / 60);
  var secondsLeft = Math.round((seconds - minutes * 60) * 1e3) / 1e3;
  var hours = Math.floor(minutes / 60);
  var minutesLeft = Math.round(minutes - hours * 60);
  return (hours !== 0 ? "".concat(hours, " hours, ") : "") + (minutesLeft !== 0 ? "".concat(minutesLeft, " minutes, ") : "") + (secondsLeft !== 0 ? "".concat(secondsLeft, " seconds") : "");
}
function atLevel(level) {
  return (0, import_kolmafia90.myLevel)() >= level;
}
var legionForms = [$item(_templateObject577 || (_templateObject577 = _taggedTemplateLiteral79(["Loathing Legion abacus"]))), $item(_templateObject2144 || (_templateObject2144 = _taggedTemplateLiteral79(["Loathing Legion can opener"]))), $item(_templateObject3132 || (_templateObject3132 = _taggedTemplateLiteral79(["Loathing Legion chainsaw"]))), $item(_templateObject4115 || (_templateObject4115 = _taggedTemplateLiteral79(["Loathing Legion corkscrew"]))), $item(_templateObject578 || (_templateObject578 = _taggedTemplateLiteral79(["Loathing Legion defibrillator"]))), $item(_templateObject657 || (_templateObject657 = _taggedTemplateLiteral79(["Loathing Legion double prism"]))), $item(_templateObject750 || (_templateObject750 = _taggedTemplateLiteral79(["Loathing Legion electric knife"]))), $item(_templateObject844 || (_templateObject844 = _taggedTemplateLiteral79(["Loathing Legion flamethrower"]))), $item(_templateObject936 || (_templateObject936 = _taggedTemplateLiteral79(["Loathing Legion hammer"]))), $item(_templateObject1031 || (_templateObject1031 = _taggedTemplateLiteral79(["Loathing Legion helicopter"]))), $item(_templateObject1128 || (_templateObject1128 = _taggedTemplateLiteral79(["Loathing Legion jackhammer"]))), $item(_templateObject1227 || (_templateObject1227 = _taggedTemplateLiteral79(["Loathing Legion kitchen sink"]))), $item(_templateObject1325 || (_templateObject1325 = _taggedTemplateLiteral79(["Loathing Legion knife"]))), $item(_templateObject1423 || (_templateObject1423 = _taggedTemplateLiteral79(["Loathing Legion many-purpose hook"]))), $item(_templateObject1520 || (_templateObject1520 = _taggedTemplateLiteral79(["Loathing Legion moondial"]))), $item(_templateObject1620 || (_templateObject1620 = _taggedTemplateLiteral79(["Loathing Legion necktie"]))), $item(_templateObject1720 || (_templateObject1720 = _taggedTemplateLiteral79(["Loathing Legion pizza stone"]))), $item(_templateObject1820 || (_templateObject1820 = _taggedTemplateLiteral79(["Loathing Legion rollerblades"]))), $item(_templateObject1918 || (_templateObject1918 = _taggedTemplateLiteral79(["Loathing Legion tape measure"]))), $item(_templateObject2018 || (_templateObject2018 = _taggedTemplateLiteral79(["Loathing Legion tattoo needle"]))), $item(_templateObject2145 || (_templateObject2145 = _taggedTemplateLiteral79(["Loathing Legion universal screwdriver"])))];
function haveLoathingLegion() {
  return legionForms.some(function(item14) {
    return have(item14);
  });
}
function tuneSnapper(phylum) {
  if ((0, import_kolmafia90.myFamiliar)() === $familiar(_templateObject2220 || (_templateObject2220 = _taggedTemplateLiteral79(["Red-Nosed Snapper"]))) && Snapper_exports.getTrackedPhylum() !== phylum) {
    Snapper_exports.trackPhylum(phylum);
  }
}
var cachedHaveFlorest = void 0;
function haveFlorest() {
  if (step("questL02Larva") === -1) return false;
  if (cachedHaveFlorest === void 0) {
    var village = (0, import_kolmafia90.visitUrl)("forestvillage.php");
    cachedHaveFlorest = village.includes("action=fv_friar");
  }
  return cachedHaveFlorest;
}
function underStandard() {
  return false;
}
var microphoneForms = [$item(_templateObject2319 || (_templateObject2319 = _taggedTemplateLiteral79(["Loathing Idol Microphone"]))), $item(_templateObject2418 || (_templateObject2418 = _taggedTemplateLiteral79(["Loathing Idol Microphone (75% charged)"]))), $item(_templateObject2517 || (_templateObject2517 = _taggedTemplateLiteral79(["Loathing Idol Microphone (50% charged)"]))), $item(_templateObject2616 || (_templateObject2616 = _taggedTemplateLiteral79(["Loathing Idol Microphone (25% charged)"])))];
function haveLoathingIdolMicrophone() {
  return microphoneForms.some(function(item14) {
    return have(item14);
  });
}
function getMonsters4(where) {
  if (where === void 0) return [];
  if (where === $location(_templateObject2716 || (_templateObject2716 = _taggedTemplateLiteral79(["The VERY Unquiet Garves"])))) {
    return $monsters(_templateObject2814 || (_templateObject2814 = _taggedTemplateLiteral79(["basic lihc, party skelteon, corpulent zobmie, grave rober zmobie, senile lihc, slick lihc, gluttonous ghuol, gaunt ghuol"])));
  }
  return Object.entries((0, import_kolmafia90.appearanceRates)(where)).filter(function(i) {
    return i[1] > 0;
  }).map(function(i) {
    return import_kolmafia90.Monster.get(i[0]);
  });
}
function primestatId() {
  switch ((0, import_kolmafia90.myPrimestat)()) {
    case $stat(_templateObject2914 || (_templateObject2914 = _taggedTemplateLiteral79(["Muscle"]))):
      return 1;
    case $stat(_templateObject3014 || (_templateObject3014 = _taggedTemplateLiteral79(["Mysticality"]))):
      return 2;
    case $stat(_templateObject3133 || (_templateObject3133 = _taggedTemplateLiteral79(["Moxie"]))):
      return 3;
  }
  return 1;
}
function cosmicBowlingBallReady() {
  return have($item(_templateObject3216 || (_templateObject3216 = _taggedTemplateLiteral79(["cosmic bowling ball"])))) || get("cosmicBowlingBallReturnCombats") === 0;
}
var _valueFunctions = void 0;
function garboValueFunctions() {
  if (!_valueFunctions) {
    _valueFunctions = (0, import_garbo_lib.makeValue)({
      itemValues: /* @__PURE__ */ new Map([[$item(_templateObject3315 || (_templateObject3315 = _taggedTemplateLiteral79(["fake hand"]))), 5e4]])
    });
  }
  return _valueFunctions;
}
function garboValue(item14) {
  var useHistorical = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  return garboValueFunctions().value(item14, useHistorical);
}
function garboAverageValue() {
  var _garboValueFunctions;
  return (_garboValueFunctions = garboValueFunctions()).averageValue.apply(_garboValueFunctions, arguments);
}

// src/args.ts
init_dist();
var _templateObject579;
var _templateObject2146;
var _templateObject3134;
var _templateObject4116;
var _templateObject580;
var _templateObject658;
var _templateObject751;
var _templateObject845;
function _taggedTemplateLiteral80(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var worksheds = [[$item(_templateObject579 || (_templateObject579 = _taggedTemplateLiteral80(["none"]))), "Do nothing"], [$item(_templateObject2146 || (_templateObject2146 = _taggedTemplateLiteral80(["model train set"]))), "Swap to model train set"], [$item(_templateObject3134 || (_templateObject3134 = _taggedTemplateLiteral80(["cold medicine cabinet"]))), "Swap to cold medicine cabinet"], [$item(_templateObject4116 || (_templateObject4116 = _taggedTemplateLiteral80(["Asdon Martin keyfob (on ring)"]))), "Swap to asdon martin keyfob"], [$item(_templateObject580 || (_templateObject580 = _taggedTemplateLiteral80(["TakerSpace letter of Marque"]))), "Swap to TakerSpace letter of Marque"]];
var args = Args.create("loopsmol", 'This is a script to complete Shrunken Adventurer Softcore runs. Run "loopsmol sim" without quotes to check if this script will work for you.\n\nYou must ascend manually into a Shrunken Adventurer Softcore run before running the script. Seal Clubber under a Vole sign is recommended for now. Astral mask or astral belt are both useful, but neither is required.\n\nThe arguments accepted by the script are listed below. Note that you can combine multiple options; for example "loopsmol pulls=18 fax=false" will save 2 pulls and avoid using a faxbot. Most options also have an associated setting to set an option permanently; for example "set loopsmol_pulls=18" will cause the script to always save 2 pulls (unless overriden by using the pulls option at runtime).', {
  sim: Args.flag({
    help: "Check if you have the requirements to run this script.",
    setting: ""
  }),
  version: Args.flag({
    help: "Show script version and exit.",
    setting: ""
  }),
  major: Args.group("Major Options", {
    pulls: Args.number({
      help: "Number of pulls to use. Lower this if you would like to save some pulls to use for in-ronin farming. (Note that this argument is not needed if you pull all your farming items before running the script).",
      default: 20
    }),
    workshed: Args.item({
      help: "Workshed item to place in an empty workshed at the start of the run.",
      default: $item(_templateObject658 || (_templateObject658 = _taggedTemplateLiteral80(["model train set"]))),
      options: worksheds
    }),
    swapworkshed: Args.item({
      help: "Workshed item to place in a workshed to replace the cold medicine cabinet.",
      default: $item(_templateObject751 || (_templateObject751 = _taggedTemplateLiteral80(["none"]))),
      options: worksheds
    })
  }),
  minor: Args.group("Minor Options", {
    fax: Args.boolean({
      help: "Use a fax to summon a monster. Set to false if the faxbots are offline.",
      default: true
    }),
    lgr: Args.flag({
      help: "Pull a lucky gold ring. If pulled, it will be equipped during many combats.",
      default: false
    }),
    jellies: Args.flag({
      help: "Use your Space Jellyfish to get stench jellies during the war (this may reduce your goose familiar exp).",
      default: false
    }),
    profitFamiliar: Args.flag({
      help: "Use free familiar turns for familiar related profits.",
      default: false
    }),
    pvp: Args.flag({
      help: "Break your hippy stone at the start of the run.",
      default: false
    }),
    wand: Args.flag({
      help: "Always get the zap wand.",
      default: false
    }),
    forcelocket: Args.flag({
      help: "Always equip the combat lover's locket, in order to get monsters inside quickly.",
      default: false
    }),
    skipbackups: Args.flag({
      help: "Don't use any Backup Camera Backups.",
      default: false
    }),
    saveember: Args.flag({
      help: "Don't use sept-ember censer.",
      default: false
    }),
    savelocket: Args.number({
      help: "Number of uses of the combat lover's locket to save.",
      default: 0
    }),
    savetuba: Args.flag({
      help: "Don't use Apriling Band Helmet's Tuba summon.",
      default: false
    }),
    luck: Args.number({
      help: 'Multiply the threshold for stopping execution when "you may just be unlucky". Increasing this can be dangerous and cause the script to waste more adventures; use at your own risk.',
      default: 1
    }),
    saveparka: Args.number({
      help: "Number of spikolodon spikes to save (max 5).",
      default: 0
    }),
    voterbooth: Args.flag({
      help: "Attempt to use the voter booth if we have access.",
      default: true
    }),
    stillsuit: Args.familiar({
      help: "Equip the stillsuit to this familiar during the run",
      setting: "stillsuitFamiliar",
      default: $familiar(_templateObject845 || (_templateObject845 = _taggedTemplateLiteral80(["Gelatinous Cubeling"])))
    }),
    skipfork: Args.flag({
      help: "Skip salad forking; note that this may cause failure due to lack of remaining adventures",
      default: false
    }),
    skipmug: Args.flag({
      help: "Skip frosty mug; note that this may cause failure due to lack of remaining adventures",
      default: false
    }),
    skipmilk: Args.flag({
      help: "Skip milk of magnesium",
      default: true
    }),
    delevel: Args.flag({
      help: "Delevel to level 13 with hot dogs before fighting the NS",
      default: false
    }),
    tune: Args.string({
      help: "Use your hewn moon-rune spoon to retune to this sign after dieting."
    }),
    warProfiteering: Args.flag({
      help: "Once we have 20 gauze garters, convert war items into items that autosell for meat",
      default: false
    })
  }),
  debug: Args.group("Debug Options", {
    actions: Args.number({
      help: "Maximum number of actions to perform, if given. Can be used to execute just a few steps at a time."
    }),
    verbose: Args.flag({
      help: "Print out a list of possible tasks at each step.",
      default: false
    }),
    verboseequip: Args.flag({
      help: "Print out equipment usage before each task to the CLI."
    }),
    ignoretasks: Args.string({
      help: "A comma-separated list of task names that should not be done. Can be used as a workaround for script bugs where a task is crashing."
    }),
    completedtasks: Args.string({
      help: "A comma-separated list of task names the should be treated as completed. Can be used as a workaround for script bugs."
    }),
    list: Args.flag({
      help: "Show the status of all tasks and exit.",
      setting: ""
    }),
    settings: Args.flag({
      help: "Show the parsed value for all arguments and exit.",
      setting: ""
    }),
    lastasdonbumperturn: Args.number({
      help: "Set the last usage of Asdon Martin: Spring-Loaded Front Bumper, in case of a tracking issue",
      hidden: true
    }),
    ignorekeys: Args.flag({
      help: "Ignore the check that all keys can be obtained. Typically for hardcore, if you plan to get your own keys",
      default: false
    }),
    halt: Args.number({
      help: "Halt when you have this number of adventures remaining or fewer",
      default: 0
    })
  })
}, {
  defaultGroupName: "Commands"
});
var scriptName = Args.getMetadata(args).scriptName;
function toTempPref(name) {
  return "_".concat(scriptName, "_").concat(name);
}

// src/tasks/level8.ts
var import_kolmafia102 = require("kolmafia");
init_dist();

// src/tasks/level12.ts
var import_kolmafia92 = require("kolmafia");
init_dist();

// src/engine/task.ts
var import_kolmafia91 = require("kolmafia");
init_dist();
var NCForce = /* @__PURE__ */ function(NCForce2) {
  NCForce2[NCForce2["No"] = 0] = "No";
  NCForce2[NCForce2["Yes"] = 1] = "Yes";
  NCForce2[NCForce2["Eventually"] = 2] = "Eventually";
  return NCForce2;
}({});
function hasDelay(task) {
  if (!task.delay) return false;
  if (!(task.do instanceof import_kolmafia91.Location)) return false;
  return task.do.turnsSpent < undelay(task.delay);
}

// src/tasks/level12.ts
var _templateObject581;
var _templateObject2147;
var _templateObject3135;
var _templateObject4117;
var _templateObject586;
var _templateObject659;
var _templateObject754;
var _templateObject846;
var _templateObject937;
var _templateObject1032;
var _templateObject1129;
var _templateObject1228;
var _templateObject1326;
var _templateObject1424;
var _templateObject1521;
var _templateObject1621;
var _templateObject1721;
var _templateObject1821;
var _templateObject1919;
var _templateObject2019;
var _templateObject2148;
var _templateObject2221;
var _templateObject2320;
var _templateObject2419;
var _templateObject2518;
var _templateObject2617;
var _templateObject2717;
var _templateObject2815;
var _templateObject2915;
var _templateObject3015;
var _templateObject3136;
var _templateObject3217;
var _templateObject3316;
var _templateObject3413;
var _templateObject3512;
var _templateObject3612;
var _templateObject3712;
var _templateObject3812;
var _templateObject3912;
var _templateObject4012;
var _templateObject4118;
var _templateObject4214;
var _templateObject4313;
var _templateObject4412;
var _templateObject4512;
var _templateObject4612;
var _templateObject4712;
var _templateObject4812;
var _templateObject4912;
var _templateObject5012;
var _templateObject5113;
var _templateObject5213;
var _templateObject5312;
var _templateObject5412;
var _templateObject5511;
var _templateObject5610;
var _templateObject5710;
var _templateObject587;
var _templateObject596;
var _templateObject606;
var _templateObject6112;
var _templateObject6211;
var _templateObject6311;
var _templateObject6411;
var _templateObject6510;
var _templateObject665;
var _templateObject675;
var _templateObject685;
var _templateObject695;
var _templateObject705;
var _templateObject7111;
var _templateObject7211;
var _templateObject7310;
var _templateObject7410;
var _templateObject755;
var _templateObject764;
var _templateObject774;
var _templateObject784;
var _templateObject793;
var _templateObject803;
var _templateObject8110;
var _templateObject8210;
var _templateObject8310;
var _templateObject847;
var _templateObject854;
var _templateObject863;
var _templateObject873;
var _templateObject883;
var _templateObject892;
var _templateObject902;
var _templateObject9110;
var _templateObject9210;
var _templateObject938;
var _templateObject943;
var _templateObject953;
var _templateObject963;
var _templateObject973;
var _templateObject983;
var _templateObject992;
var _templateObject1002;
var _templateObject10110;
var _templateObject10210;
var _templateObject1033;
var _templateObject1042;
var _templateObject1052;
var _templateObject1062;
var _templateObject1072;
var _templateObject1082;
var _templateObject1092;
var _templateObject1102;
var _templateObject11110;
var _templateObject11210;
var _templateObject1132;
var _templateObject1142;
var _templateObject1152;
var _templateObject1162;
var _templateObject1172;
var _templateObject1182;
var _templateObject1192;
var _templateObject1202;
var _templateObject12110;
var _templateObject1229;
var _templateObject1232;
var _templateObject1242;
var _templateObject1252;
var _templateObject1262;
var _templateObject1272;
var _templateObject1282;
var _templateObject1292;
var _templateObject1302;
var _templateObject13110;
var _templateObject1327;
var _templateObject1332;
var _templateObject1342;
var _templateObject1352;
var _templateObject1362;
var _templateObject1372;
var _templateObject1382;
var _templateObject1392;
var _templateObject1402;
var _templateObject14110;
var _templateObject1425;
var _templateObject1432;
var _templateObject1442;
var _templateObject1452;
var _templateObject1462;
var _templateObject1472;
var _templateObject1482;
var _templateObject1492;
var _templateObject1502;
var _templateObject15110;
var _templateObject1522;
var _templateObject1532;
var _templateObject1542;
var _templateObject1552;
var _templateObject1562;
var _templateObject1572;
var _templateObject1582;
var _templateObject1592;
var _templateObject1602;
var _templateObject16110;
var _templateObject1622;
var _templateObject1632;
var _templateObject1642;
var _templateObject1652;
var _templateObject1662;
var _templateObject1672;
var _templateObject1682;
var _templateObject1692;
var _templateObject1702;
var _templateObject17110;
var _templateObject1722;
var _templateObject1732;
var _templateObject1742;
var _templateObject1752;
var _templateObject1762;
var _templateObject1772;
var _templateObject1782;
var _templateObject1792;
var _templateObject1802;
var _templateObject18110;
var _templateObject1822;
var _templateObject1832;
var _templateObject1842;
var _templateObject1852;
var _templateObject1862;
var _templateObject1872;
var _templateObject1882;
var _templateObject1892;
var _templateObject1902;
var _templateObject19110;
var _templateObject1922;
var _templateObject1932;
var _templateObject1942;
var _templateObject1952;
var _templateObject1962;
var _templateObject1972;
var _templateObject1982;
var _templateObject1992;
var _templateObject2002;
var _templateObject20110;
var _templateObject2022;
var _templateObject2032;
var _templateObject2042;
var _templateObject2052;
var _templateObject2062;
var _templateObject2072;
var _templateObject2082;
var _templateObject2092;
var _templateObject21010;
var _templateObject21110;
var _templateObject21210;
var _templateObject21310;
var _templateObject2149;
var _templateObject2152;
var _templateObject2162;
var _templateObject2172;
var _templateObject2182;
var _templateObject2192;
var _templateObject2202;
var _templateObject22110;
var _templateObject2222;
var _templateObject2232;
var _templateObject2242;
var _templateObject2252;
var _templateObject2262;
var _templateObject2272;
function _createForOfIteratorHelper22(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray47(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray47(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray47(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray47(o, minLen);
}
function _arrayLikeToArray47(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral81(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function flyersDone() {
  return get("flyeredML") >= 1e4;
}
var warHeroes = [$monster(_templateObject581 || (_templateObject581 = _taggedTemplateLiteral81(["C.A.R.N.I.V.O.R.E. Operative"]))), $monster(_templateObject2147 || (_templateObject2147 = _taggedTemplateLiteral81(["Glass of Orange Juice"]))), $monster(_templateObject3135 || (_templateObject3135 = _taggedTemplateLiteral81(["Neil"]))), $monster(_templateObject4117 || (_templateObject4117 = _taggedTemplateLiteral81(["Slow Talkin' Elliot"]))), $monster(_templateObject586 || (_templateObject586 = _taggedTemplateLiteral81(["Zim Merman"])))];
var Flyers = [{
  name: "Flyers Start",
  after: ["Enrage"],
  completed: function() {
    return have($item(_templateObject659 || (_templateObject659 = _taggedTemplateLiteral81(["rock band flyers"])))) || get("sidequestArenaCompleted") !== "none";
  },
  outfit: {
    equip: $items(_templateObject754 || (_templateObject754 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin"])))
  },
  do: function() {
    (0, import_kolmafia92.visitUrl)("bigisland.php?place=concert&pwd");
  },
  freeaction: true,
  limit: {
    tries: 1
  }
}, {
  name: "Flyers End",
  after: ["Flyers Start"],
  priority: function() {
    return Priorities.Free;
  },
  ready: function() {
    return flyersDone();
  },
  // Buffer for mafia tracking
  completed: function() {
    return get("sidequestArenaCompleted") !== "none";
  },
  outfit: {
    equip: $items(_templateObject846 || (_templateObject846 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin"])))
  },
  do: function() {
    (0, import_kolmafia92.visitUrl)("bigisland.php?place=concert&pwd");
    (0, import_kolmafia92.cliExecute)("refresh inv");
    if (have($item(_templateObject937 || (_templateObject937 = _taggedTemplateLiteral81(["rock band flyers"]))))) {
      debug("Mafia tracking was incorrect for rock band flyers; continuing to flyer...");
      _set(toTempPref("flyeredML_buffer"), get(toTempPref("flyeredML_buffer"), 0) + (get("flyeredML") - 9900));
      _set("flyeredML", 9900);
    } else if (get(toTempPref("flyeredML_buffer"), 0) > 0) {
      var real = get("flyeredML") + get(toTempPref("flyeredML_buffer"), 0);
      debug("Mafia tracking was incorrect for rock band flyers; quest completed at ".concat(real));
    }
  },
  freeaction: true,
  limit: {
    soft: 10,
    message: "See https://kolmafia.us/threads/flyeredml-tracking-wrong.27567/"
  }
}];
var Lighthouse = [{
  name: "Lighthouse",
  after: ["Enrage"],
  completed: function() {
    return (0, import_kolmafia92.itemAmount)($item(_templateObject1032 || (_templateObject1032 = _taggedTemplateLiteral81(["barrel of gunpowder"])))) >= 5 || get("sidequestLighthouseCompleted") !== "none";
  },
  priority: function() {
    if (AutumnAton_exports.have()) {
      if ($location(_templateObject1129 || (_templateObject1129 = _taggedTemplateLiteral81(["Sonofa Beach"]))).turnsSpent === 0) return Priorities.GoodAutumnaton;
      else if ((0, import_kolmafia92.myTurncount)() < 400) return Priorities.BadAutumnaton;
    }
    return Priorities.None;
  },
  do: $location(_templateObject1228 || (_templateObject1228 = _taggedTemplateLiteral81(["Sonofa Beach"]))),
  outfit: function() {
    if (AutumnAton_exports.have() || !have($item(_templateObject1326 || (_templateObject1326 = _taggedTemplateLiteral81(["Fourth of May Cosplay Saber"]))))) return {
      modifier: "+combat"
    };
    if (get("_saberForceMonster") !== $monster(_templateObject1424 || (_templateObject1424 = _taggedTemplateLiteral81(["lobsterfrogman"]))) || get("_saberForceMonsterCount") === 0) {
      return {
        modifier: "+combat",
        equip: $items(_templateObject1521 || (_templateObject1521 = _taggedTemplateLiteral81(["Fourth of May Cosplay Saber"])))
      };
    }
    if (get("_saberForceMonsterCount") === 1 && (0, import_kolmafia92.itemAmount)($item(_templateObject1621 || (_templateObject1621 = _taggedTemplateLiteral81(["barrel of gunpowder"])))) < 4) {
      return {
        equip: $items(_templateObject1721 || (_templateObject1721 = _taggedTemplateLiteral81(["Fourth of May Cosplay Saber"])))
      };
    }
    return {};
  },
  combat: new CombatStrategy2().macro(function() {
    if ((0, import_kolmafia92.equippedAmount)($item(_templateObject1821 || (_templateObject1821 = _taggedTemplateLiteral81(["Fourth of May Cosplay Saber"])))) > 0 && !AutumnAton_exports.have() && get("_saberForceUses") < 5 && (get("_saberForceMonster") !== $monster(_templateObject1919 || (_templateObject1919 = _taggedTemplateLiteral81(["lobsterfrogman"]))) || get("_saberForceMonsterCount") === 0 || get("_saberForceMonsterCount") === 1 && (0, import_kolmafia92.itemAmount)($item(_templateObject2019 || (_templateObject2019 = _taggedTemplateLiteral81(["barrel of gunpowder"])))) < 4)) {
      return new Macro().skill($skill(_templateObject2148 || (_templateObject2148 = _taggedTemplateLiteral81(["Use the Force"]))));
    }
    return new Macro();
  }).kill($monster(_templateObject2221 || (_templateObject2221 = _taggedTemplateLiteral81(["lobsterfrogman"])))),
  orbtargets: function() {
    return void 0;
  },
  expectbeatenup: function() {
    return get("lastEncounter") === "Zerg Rush";
  },
  choices: {
    1387: 2
  },
  limit: {
    soft: 40,
    guard: Guards.create(function() {
      return (0, import_kolmafia92.itemAmount)($item(_templateObject2320 || (_templateObject2320 = _taggedTemplateLiteral81(["figurine of a sleek seal"]))));
    }, function(sleek) {
      return !AutumnAton_exports.have() || $location(_templateObject2419 || (_templateObject2419 = _taggedTemplateLiteral81(["Sonofa Beach"]))).turnsSpent > 0 || $location(_templateObject2518 || (_templateObject2518 = _taggedTemplateLiteral81(["Sonofa Beach"]))).turnsSpent === 0 && (0, import_kolmafia92.itemAmount)($item(_templateObject2617 || (_templateObject2617 = _taggedTemplateLiteral81(["figurine of a sleek seal"])))) === sleek + 3;
    })
  }
}, {
  name: "Lighthouse End",
  after: ["Lighthouse"],
  completed: function() {
    return get("sidequestLighthouseCompleted") !== "none";
  },
  outfit: {
    equip: $items(_templateObject2717 || (_templateObject2717 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin"])))
  },
  do: function() {
    (0, import_kolmafia92.visitUrl)("bigisland.php?place=lighthouse&action=pyro&pwd");
  },
  freeaction: true,
  limit: {
    tries: 1
  }
}];
var Junkyard = [{
  name: "Junkyard Start",
  after: ["Enrage"],
  completed: function() {
    return have($item(_templateObject2815 || (_templateObject2815 = _taggedTemplateLiteral81(["molybdenum magnet"])))) || get("sidequestJunkyardCompleted") !== "none";
  },
  outfit: {
    equip: $items(_templateObject2915 || (_templateObject2915 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin"])))
  },
  do: function() {
    (0, import_kolmafia92.visitUrl)("bigisland.php?action=junkman&pwd");
  },
  freeaction: true,
  limit: {
    tries: 1
  }
}, {
  name: "Junkyard Hammer",
  after: ["Junkyard Start"],
  prepare: function() {
    fillHp();
    customRestoreMp(50);
  },
  completed: function() {
    return have($item(_templateObject3015 || (_templateObject3015 = _taggedTemplateLiteral81(["molybdenum hammer"])))) || get("sidequestJunkyardCompleted") !== "none";
  },
  acquire: [{
    item: $item(_templateObject3136 || (_templateObject3136 = _taggedTemplateLiteral81(["seal tooth"])))
  }],
  outfit: {
    equip: $items(_templateObject3217 || (_templateObject3217 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin"]))),
    avoid: $items(_templateObject3316 || (_templateObject3316 = _taggedTemplateLiteral81(["carnivorous potted plant"])))
  },
  do: $location(_templateObject3413 || (_templateObject3413 = _taggedTemplateLiteral81(["Next to that Barrel with Something Burning in it"]))),
  orbtargets: function() {
    return $monsters(_templateObject3512 || (_templateObject3512 = _taggedTemplateLiteral81(["batwinged gremlin, batwinged gremlin (tool)"])));
  },
  combat: new CombatStrategy2().macro(new Macro().trySkill($skill(_templateObject3612 || (_templateObject3612 = _taggedTemplateLiteral81(["Curse of Weaksauce"])))).trySkill($skill(_templateObject3712 || (_templateObject3712 = _taggedTemplateLiteral81(["Micrometeorite"])))).while_("!match whips out && !times 28 && !hpbelow 30", new Macro().item($item(_templateObject3812 || (_templateObject3812 = _taggedTemplateLiteral81(["seal tooth"]))))).if_("match whips out", new Macro().item("molybdenum magnet")), $monster(_templateObject3912 || (_templateObject3912 = _taggedTemplateLiteral81(["batwinged gremlin (tool)"])))).banish($monster(_templateObject4012 || (_templateObject4012 = _taggedTemplateLiteral81(["A.M.C. gremlin"])))).kill($monster(_templateObject4118 || (_templateObject4118 = _taggedTemplateLiteral81(["batwinged gremlin (tool)"])))).banish($monsters(_templateObject4214 || (_templateObject4214 = _taggedTemplateLiteral81(["batwinged gremlin, vegetable gremlin"])))),
  nofightingfamiliars: true,
  limit: {
    soft: 15
  }
}, {
  name: "Junkyard Wrench",
  after: ["Junkyard Start"],
  prepare: function() {
    fillHp();
    customRestoreMp(50);
  },
  completed: function() {
    return have($item(_templateObject4313 || (_templateObject4313 = _taggedTemplateLiteral81(["molybdenum crescent wrench"])))) || get("sidequestJunkyardCompleted") !== "none";
  },
  acquire: [{
    item: $item(_templateObject4412 || (_templateObject4412 = _taggedTemplateLiteral81(["seal tooth"])))
  }],
  outfit: {
    equip: $items(_templateObject4512 || (_templateObject4512 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin"]))),
    avoid: $items(_templateObject4612 || (_templateObject4612 = _taggedTemplateLiteral81(["carnivorous potted plant"])))
  },
  do: $location(_templateObject4712 || (_templateObject4712 = _taggedTemplateLiteral81(["Over Where the Old Tires Are"]))),
  orbtargets: function() {
    return $monsters(_templateObject4812 || (_templateObject4812 = _taggedTemplateLiteral81(["erudite gremlin, erudite gremlin (tool)"])));
  },
  combat: new CombatStrategy2().macro(new Macro().trySkill($skill(_templateObject4912 || (_templateObject4912 = _taggedTemplateLiteral81(["Curse of Weaksauce"])))).trySkill($skill(_templateObject5012 || (_templateObject5012 = _taggedTemplateLiteral81(["Micrometeorite"])))).while_("!match whips out && !times 28 && !hpbelow 30", new Macro().item($item(_templateObject5113 || (_templateObject5113 = _taggedTemplateLiteral81(["seal tooth"]))))).if_("match whips out", new Macro().item("molybdenum magnet")), $monster(_templateObject5213 || (_templateObject5213 = _taggedTemplateLiteral81(["erudite gremlin (tool)"])))).banish($monster(_templateObject5312 || (_templateObject5312 = _taggedTemplateLiteral81(["A.M.C. gremlin"])))).kill($monster(_templateObject5412 || (_templateObject5412 = _taggedTemplateLiteral81(["erudite gremlin (tool)"])))).banish($monsters(_templateObject5511 || (_templateObject5511 = _taggedTemplateLiteral81(["erudite gremlin, spider gremlin"])))),
  nofightingfamiliars: true,
  limit: {
    soft: 15
  }
}, {
  name: "Junkyard Pliers",
  after: ["Junkyard Start"],
  acquire: [{
    item: $item(_templateObject5610 || (_templateObject5610 = _taggedTemplateLiteral81(["seal tooth"])))
  }],
  prepare: function() {
    fillHp();
    customRestoreMp(50);
  },
  completed: function() {
    return have($item(_templateObject5710 || (_templateObject5710 = _taggedTemplateLiteral81(["molybdenum pliers"])))) || get("sidequestJunkyardCompleted") !== "none";
  },
  outfit: {
    equip: $items(_templateObject587 || (_templateObject587 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin"]))),
    avoid: $items(_templateObject596 || (_templateObject596 = _taggedTemplateLiteral81(["carnivorous potted plant"])))
  },
  do: $location(_templateObject606 || (_templateObject606 = _taggedTemplateLiteral81(["Near an Abandoned Refrigerator"]))),
  orbtargets: function() {
    return $monsters(_templateObject6112 || (_templateObject6112 = _taggedTemplateLiteral81(["spider gremlin, spider gremlin (tool)"])));
  },
  combat: new CombatStrategy2().macro(new Macro().trySkill($skill(_templateObject6211 || (_templateObject6211 = _taggedTemplateLiteral81(["Curse of Weaksauce"])))).trySkill($skill(_templateObject6311 || (_templateObject6311 = _taggedTemplateLiteral81(["Micrometeorite"])))).while_("!match whips out && !times 28 && !hpbelow 30", new Macro().item($item(_templateObject6411 || (_templateObject6411 = _taggedTemplateLiteral81(["seal tooth"]))))).if_("match whips out", new Macro().item("molybdenum magnet")), $monster(_templateObject6510 || (_templateObject6510 = _taggedTemplateLiteral81(["spider gremlin (tool)"])))).banish($monster(_templateObject665 || (_templateObject665 = _taggedTemplateLiteral81(["A.M.C. gremlin"])))).kill($monster(_templateObject675 || (_templateObject675 = _taggedTemplateLiteral81(["spider gremlin (tool)"])))).banish($monsters(_templateObject685 || (_templateObject685 = _taggedTemplateLiteral81(["batwinged gremlin, spider gremlin"])))),
  nofightingfamiliars: true,
  limit: {
    soft: 15
  }
}, {
  name: "Junkyard Screwdriver",
  after: ["Junkyard Start"],
  prepare: function() {
    fillHp();
    customRestoreMp(50);
  },
  completed: function() {
    return have($item(_templateObject695 || (_templateObject695 = _taggedTemplateLiteral81(["molybdenum screwdriver"])))) || get("sidequestJunkyardCompleted") !== "none";
  },
  acquire: [{
    item: $item(_templateObject705 || (_templateObject705 = _taggedTemplateLiteral81(["seal tooth"])))
  }],
  outfit: {
    equip: $items(_templateObject7111 || (_templateObject7111 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin"]))),
    avoid: $items(_templateObject7211 || (_templateObject7211 = _taggedTemplateLiteral81(["carnivorous potted plant"])))
  },
  do: $location(_templateObject7310 || (_templateObject7310 = _taggedTemplateLiteral81(["Out by that Rusted-Out Car"]))),
  orbtargets: function() {
    return $monsters(_templateObject7410 || (_templateObject7410 = _taggedTemplateLiteral81(["vegetable gremlin, vegetable gremlin (tool)"])));
  },
  combat: new CombatStrategy2().macro(new Macro().trySkill($skill(_templateObject755 || (_templateObject755 = _taggedTemplateLiteral81(["Curse of Weaksauce"])))).trySkill($skill(_templateObject764 || (_templateObject764 = _taggedTemplateLiteral81(["Micrometeorite"])))).while_("!match whips out && !times 28 && !hpbelow 30", new Macro().item($item(_templateObject774 || (_templateObject774 = _taggedTemplateLiteral81(["seal tooth"]))))).if_("match whips out", new Macro().item("molybdenum magnet")), $monster(_templateObject784 || (_templateObject784 = _taggedTemplateLiteral81(["vegetable gremlin (tool)"])))).banish($monster(_templateObject793 || (_templateObject793 = _taggedTemplateLiteral81(["A.M.C. gremlin"])))).kill($monster(_templateObject803 || (_templateObject803 = _taggedTemplateLiteral81(["vegetable gremlin (tool)"])))).banish($monsters(_templateObject8110 || (_templateObject8110 = _taggedTemplateLiteral81(["erudite gremlin, vegetable gremlin"])))),
  nofightingfamiliars: true,
  limit: {
    soft: 15
  }
}, {
  name: "Junkyard End",
  after: ["Junkyard Hammer", "Junkyard Wrench", "Junkyard Pliers", "Junkyard Screwdriver"],
  completed: function() {
    return get("sidequestJunkyardCompleted") !== "none";
  },
  outfit: {
    equip: $items(_templateObject8210 || (_templateObject8210 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin"])))
  },
  do: function() {
    (0, import_kolmafia92.visitUrl)("bigisland.php?action=junkman&pwd");
  },
  freeaction: true,
  limit: {
    tries: 1
  }
}];
var Orchard = [{
  name: "Orchard Hatching",
  after: ["Enrage"],
  completed: function() {
    return have($item(_templateObject8310 || (_templateObject8310 = _taggedTemplateLiteral81(["filthworm hatchling scent gland"])))) || have($effect(_templateObject847 || (_templateObject847 = _taggedTemplateLiteral81(["Filthworm Larva Stench"])))) || have($item(_templateObject854 || (_templateObject854 = _taggedTemplateLiteral81(["filthworm drone scent gland"])))) || have($effect(_templateObject863 || (_templateObject863 = _taggedTemplateLiteral81(["Filthworm Drone Stench"])))) || have($item(_templateObject873 || (_templateObject873 = _taggedTemplateLiteral81(["filthworm royal guard scent gland"])))) || have($effect(_templateObject883 || (_templateObject883 = _taggedTemplateLiteral81(["Filthworm Guard Stench"])))) || have($item(_templateObject892 || (_templateObject892 = _taggedTemplateLiteral81(["heart of the filthworm queen"])))) || get("sidequestOrchardCompleted") !== "none";
  },
  do: $location(_templateObject902 || (_templateObject902 = _taggedTemplateLiteral81(["The Hatching Chamber"]))),
  outfit: function() {
    if (yellowRayPossible()) return {
      familiar: args.minor.jellies ? $familiar(_templateObject9110 || (_templateObject9110 = _taggedTemplateLiteral81(["Space Jellyfish"]))) : void 0
    };
    else return {
      modifier: "item"
    };
  },
  combat: new CombatStrategy2().yellowRay($monster(_templateObject9210 || (_templateObject9210 = _taggedTemplateLiteral81(["larval filthworm"])))).startingMacro(Macro.trySkill($skill(_templateObject938 || (_templateObject938 = _taggedTemplateLiteral81(["Extract Jelly"]))))).macro(function() {
    return Macro.externalIf(have($skill(_templateObject943 || (_templateObject943 = _taggedTemplateLiteral81(["Emotionally Chipped"])))) && get("_feelEnvyUsed") < 3 && have($effect(_templateObject953 || (_templateObject953 = _taggedTemplateLiteral81(["Everything Looks Yellow"])))), Macro.trySkill($skill(_templateObject963 || (_templateObject963 = _taggedTemplateLiteral81(["Feel Envy"])))), Macro.trySkill($skill(_templateObject973 || (_templateObject973 = _taggedTemplateLiteral81(["Fire Extinguisher: Polar Vortex"])))));
  }),
  limit: {
    soft: 10
  }
}, {
  name: "Orchard Feeding",
  after: ["Orchard Hatching"],
  completed: function() {
    return have($item(_templateObject983 || (_templateObject983 = _taggedTemplateLiteral81(["filthworm drone scent gland"])))) || have($effect(_templateObject992 || (_templateObject992 = _taggedTemplateLiteral81(["Filthworm Drone Stench"])))) || have($item(_templateObject1002 || (_templateObject1002 = _taggedTemplateLiteral81(["filthworm royal guard scent gland"])))) || have($effect(_templateObject10110 || (_templateObject10110 = _taggedTemplateLiteral81(["Filthworm Guard Stench"])))) || have($item(_templateObject10210 || (_templateObject10210 = _taggedTemplateLiteral81(["heart of the filthworm queen"])))) || get("sidequestOrchardCompleted") !== "none";
  },
  do: $location(_templateObject1033 || (_templateObject1033 = _taggedTemplateLiteral81(["The Feeding Chamber"]))),
  outfit: function() {
    if (yellowRayPossible()) return {
      familiar: args.minor.jellies ? $familiar(_templateObject1042 || (_templateObject1042 = _taggedTemplateLiteral81(["Space Jellyfish"]))) : void 0
    };
    else if (have($item(_templateObject1052 || (_templateObject1052 = _taggedTemplateLiteral81(["industrial fire extinguisher"])))) && get("_fireExtinguisherCharge") >= 10) return {
      equip: $items(_templateObject1062 || (_templateObject1062 = _taggedTemplateLiteral81(["industrial fire extinguisher"])))
    };
    else return {
      modifier: "item"
    };
  },
  combat: new CombatStrategy2().yellowRay($monster(_templateObject1072 || (_templateObject1072 = _taggedTemplateLiteral81(["filthworm drone"])))).startingMacro(Macro.trySkill($skill(_templateObject1082 || (_templateObject1082 = _taggedTemplateLiteral81(["Extract Jelly"]))))).macro(function() {
    return Macro.externalIf(have($skill(_templateObject1092 || (_templateObject1092 = _taggedTemplateLiteral81(["Emotionally Chipped"])))) && get("_feelEnvyUsed") < 3 && have($effect(_templateObject1102 || (_templateObject1102 = _taggedTemplateLiteral81(["Everything Looks Yellow"])))), Macro.trySkill($skill(_templateObject11110 || (_templateObject11110 = _taggedTemplateLiteral81(["Feel Envy"])))), Macro.trySkill($skill(_templateObject11210 || (_templateObject11210 = _taggedTemplateLiteral81(["Fire Extinguisher: Polar Vortex"])))));
  }),
  effects: $effects(_templateObject1132 || (_templateObject1132 = _taggedTemplateLiteral81(["Filthworm Larva Stench"]))),
  limit: {
    soft: 10
  }
}, {
  name: "Orchard Guard",
  after: ["Orchard Feeding"],
  completed: function() {
    return have($item(_templateObject1142 || (_templateObject1142 = _taggedTemplateLiteral81(["filthworm royal guard scent gland"])))) || have($effect(_templateObject1152 || (_templateObject1152 = _taggedTemplateLiteral81(["Filthworm Guard Stench"])))) || have($item(_templateObject1162 || (_templateObject1162 = _taggedTemplateLiteral81(["heart of the filthworm queen"])))) || get("sidequestOrchardCompleted") !== "none";
  },
  do: $location(_templateObject1172 || (_templateObject1172 = _taggedTemplateLiteral81(["The Royal Guard Chamber"]))),
  effects: $effects(_templateObject1182 || (_templateObject1182 = _taggedTemplateLiteral81(["Filthworm Drone Stench"]))),
  outfit: function() {
    if (yellowRayPossible()) return {
      familiar: args.minor.jellies ? $familiar(_templateObject1192 || (_templateObject1192 = _taggedTemplateLiteral81(["Space Jellyfish"]))) : void 0
    };
    else if (have($item(_templateObject1202 || (_templateObject1202 = _taggedTemplateLiteral81(["industrial fire extinguisher"])))) && get("_fireExtinguisherCharge") >= 10) return {
      equip: $items(_templateObject12110 || (_templateObject12110 = _taggedTemplateLiteral81(["industrial fire extinguisher"])))
    };
    else return {
      modifier: "item"
    };
  },
  combat: new CombatStrategy2().yellowRay($monster(_templateObject1229 || (_templateObject1229 = _taggedTemplateLiteral81(["filthworm royal guard"])))).startingMacro(Macro.trySkill($skill(_templateObject1232 || (_templateObject1232 = _taggedTemplateLiteral81(["Extract Jelly"]))))).macro(function() {
    return Macro.externalIf(have($skill(_templateObject1242 || (_templateObject1242 = _taggedTemplateLiteral81(["Emotionally Chipped"])))) && get("_feelEnvyUsed") < 3 && have($effect(_templateObject1252 || (_templateObject1252 = _taggedTemplateLiteral81(["Everything Looks Yellow"])))), Macro.trySkill($skill(_templateObject1262 || (_templateObject1262 = _taggedTemplateLiteral81(["Feel Envy"])))), Macro.trySkill($skill(_templateObject1272 || (_templateObject1272 = _taggedTemplateLiteral81(["Fire Extinguisher: Polar Vortex"])))));
  }),
  limit: {
    soft: 10
  }
}, {
  name: "Orchard Queen",
  after: ["Orchard Guard"],
  completed: function() {
    return have($item(_templateObject1282 || (_templateObject1282 = _taggedTemplateLiteral81(["heart of the filthworm queen"])))) || get("sidequestOrchardCompleted") !== "none";
  },
  do: $location(_templateObject1292 || (_templateObject1292 = _taggedTemplateLiteral81(["The Filthworm Queen's Chamber"]))),
  effects: $effects(_templateObject1302 || (_templateObject1302 = _taggedTemplateLiteral81(["Filthworm Guard Stench"]))),
  outfit: function() {
    return {
      familiar: args.minor.jellies ? $familiar(_templateObject13110 || (_templateObject13110 = _taggedTemplateLiteral81(["Space Jellyfish"]))) : void 0
    };
  },
  combat: new CombatStrategy2().kill().macro(Macro.trySkill($skill(_templateObject1327 || (_templateObject1327 = _taggedTemplateLiteral81(["Extract Jelly"]))))),
  limit: {
    tries: 2
  },
  // allow wanderer
  boss: true
}, {
  name: "Orchard Finish",
  after: ["Orchard Queen", "Open Orchard"],
  completed: function() {
    return get("sidequestOrchardCompleted") !== "none";
  },
  outfit: {
    equip: $items(_templateObject1332 || (_templateObject1332 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin"])))
  },
  do: function() {
    (0, import_kolmafia92.visitUrl)("bigisland.php?place=orchard&action=stand&pwd");
  },
  freeaction: true,
  limit: {
    tries: 1
  }
}];
var Nuns = [{
  name: "Nuns",
  after: ["Open Nuns"],
  completed: function() {
    return get("sidequestNunsCompleted") !== "none";
  },
  priority: function() {
    return have($effect(_templateObject1342 || (_templateObject1342 = _taggedTemplateLiteral81(["Winklered"])))) ? Priorities.Effect : Priorities.None;
  },
  prepare: function() {
    if (have($item(_templateObject1352 || (_templateObject1352 = _taggedTemplateLiteral81(["SongBoom\u2122 BoomBox"])))) && get("boomBoxSong") !== "Total Eclipse of Your Meat") (0, import_kolmafia92.cliExecute)("boombox meat");
    if (!get("concertVisited")) ensureEffect($effect(_templateObject1362 || (_templateObject1362 = _taggedTemplateLiteral81(["Winklered"]))));
    $items(_templateObject1372 || (_templateObject1372 = _taggedTemplateLiteral81(["flapper fly, autumn dollar, pink candy heart"]))).filter(function(i) {
      return have(i, 2) && !have((0, import_kolmafia92.effectModifier)(i, "Effect"));
    }).forEach(function(i) {
      return (0, import_kolmafia92.use)(i);
    });
    if (have($item(_templateObject1382 || (_templateObject1382 = _taggedTemplateLiteral81(["pocket wish"])))) && !have($effect(_templateObject1392 || (_templateObject1392 = _taggedTemplateLiteral81(["Sinuses For Miles"]))))) {
      (0, import_kolmafia92.cliExecute)("genie effect sinuses for miles");
    }
    if (have($item(_templateObject1402 || (_templateObject1402 = _taggedTemplateLiteral81(["savings bond"]))))) ensureEffect($effect(_templateObject14110 || (_templateObject14110 = _taggedTemplateLiteral81(["Earning Interest"]))));
    fillHp();
  },
  do: $location(_templateObject1425 || (_templateObject1425 = _taggedTemplateLiteral81(["The Themthar Hills"]))),
  post: function() {
    if (get("sidequestNunsCompleted") !== "none" && have($effect(_templateObject1432 || (_templateObject1432 = _taggedTemplateLiteral81(["Friendly Chops"])))) && have($item(_templateObject1442 || (_templateObject1442 = _taggedTemplateLiteral81(["soft green echo eyedrop antidote"]))))) {
      uneffect($effect(_templateObject1452 || (_templateObject1452 = _taggedTemplateLiteral81(["Friendly Chops"]))));
    }
  },
  outfit: function() {
    if (have($familiar(_templateObject1462 || (_templateObject1462 = _taggedTemplateLiteral81(["Trick-or-Treating Tot"])))) && have($item(_templateObject1472 || (_templateObject1472 = _taggedTemplateLiteral81(["li'l pirate costume"]))))) {
      return {
        modifier: "meat",
        familiar: $familiar(_templateObject1482 || (_templateObject1482 = _taggedTemplateLiteral81(["Trick-or-Treating Tot"]))),
        equip: $items(_templateObject1492 || (_templateObject1492 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin, li'l pirate costume"])))
      };
    }
    return {
      modifier: "meat",
      equip: $items(_templateObject1502 || (_templateObject1502 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin, amulet coin"])))
      // Use amulet coin (if we have) to avoid using orb
    };
  },
  freecombat: true,
  // Do not equip cmg or carn plant
  combat: new CombatStrategy2().macro(new Macro().trySkill($skill(_templateObject15110 || (_templateObject15110 = _taggedTemplateLiteral81(["Micrometeorite"])))).trySkill($skill(_templateObject1522 || (_templateObject1522 = _taggedTemplateLiteral81(["Curse of Weaksauce"])))).trySkill($skill(_templateObject1532 || (_templateObject1532 = _taggedTemplateLiteral81(["Bowl Straight Up"])))).trySkill($skill(_templateObject1542 || (_templateObject1542 = _taggedTemplateLiteral81(["Sing Along"]))))).killHard(),
  limit: {
    soft: 30
  },
  boss: true
}];
var WarQuest = {
  name: "War",
  tasks: [{
    name: "Start",
    after: [],
    ready: function() {
      return atLevel(12) && councilSafe();
    },
    completed: function() {
      return step("questL12War") !== -1;
    },
    do: function() {
      return (0, import_kolmafia92.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Outfit Hippy",
    after: ["Misc/Unlock Island"],
    ready: function() {
      return get("skillLevel144") === 0 || atLevel(12) || get("_universeCalculated") >= get("skillLevel144");
    },
    completed: function() {
      return have($item(_templateObject1552 || (_templateObject1552 = _taggedTemplateLiteral81(["filthy corduroys"])))) && have($item(_templateObject1562 || (_templateObject1562 = _taggedTemplateLiteral81(["filthy knitted dread sack"])))) || have($item(_templateObject1572 || (_templateObject1572 = _taggedTemplateLiteral81(["beer helmet"])))) && have($item(_templateObject1582 || (_templateObject1582 = _taggedTemplateLiteral81(["distressed denim pants"])))) && have($item(_templateObject1592 || (_templateObject1592 = _taggedTemplateLiteral81(["bejeweled pledge pin"]))));
    },
    do: $location(_templateObject1602 || (_templateObject1602 = _taggedTemplateLiteral81(["Hippy Camp"]))),
    limit: {
      soft: 10
    },
    choices: function() {
      return {
        136: have($item(_templateObject16110 || (_templateObject16110 = _taggedTemplateLiteral81(["filthy corduroys"])))) ? 2 : 1,
        137: have($item(_templateObject1622 || (_templateObject1622 = _taggedTemplateLiteral81(["filthy corduroys"])))) ? 1 : 2
      };
    },
    outfit: function() {
      if (forceItemPossible()) return {
        modifier: "+combat",
        familiar: args.minor.jellies ? $familiar(_templateObject1632 || (_templateObject1632 = _taggedTemplateLiteral81(["Space Jellyfish"]))) : void 0
      };
      else return {
        modifier: "item"
        // use goose for item instead of jellyfish
      };
    },
    combat: new CombatStrategy2().forceItems().macro(Macro.trySkill($skill(_templateObject1642 || (_templateObject1642 = _taggedTemplateLiteral81(["Extract Jelly"])))))
  }, {
    name: "Outfit Frat",
    after: ["Start", "Outfit Hippy"],
    completed: function() {
      return have($item(_templateObject1652 || (_templateObject1652 = _taggedTemplateLiteral81(["beer helmet"])))) && have($item(_templateObject1662 || (_templateObject1662 = _taggedTemplateLiteral81(["distressed denim pants"])))) && have($item(_templateObject1672 || (_templateObject1672 = _taggedTemplateLiteral81(["bejeweled pledge pin"]))));
    },
    do: $location(_templateObject1682 || (_templateObject1682 = _taggedTemplateLiteral81(["Frat House"]))),
    limit: {
      soft: 10
    },
    choices: {
      142: 3,
      143: 3,
      144: 3,
      145: 1,
      146: 3,
      1433: 3
    },
    outfit: function() {
      if (forceItemPossible()) return {
        equip: $items(_templateObject1692 || (_templateObject1692 = _taggedTemplateLiteral81(["filthy corduroys, filthy knitted dread sack"]))),
        modifier: "+combat"
      };
      else return {
        equip: $items(_templateObject1702 || (_templateObject1702 = _taggedTemplateLiteral81(["filthy corduroys, filthy knitted dread sack"]))),
        modifier: "item"
      };
    },
    combat: new CombatStrategy2().forceItems()
  }, {
    name: "Enrage",
    after: ["Start", "Misc/Unlock Island", "Misc/Unlock Island Submarine", "Outfit Frat"],
    ready: function() {
      return (0, import_kolmafia92.myBasestat)($stat(_templateObject17110 || (_templateObject17110 = _taggedTemplateLiteral81(["mysticality"])))) >= 70;
    },
    completed: function() {
      return step("questL12War") >= 1;
    },
    prepare: function() {
      if ((0, import_kolmafia92.myHp)() < 80 && (0, import_kolmafia92.myHp)() < (0, import_kolmafia92.myMaxhp)()) (0, import_kolmafia92.restoreHp)((0, import_kolmafia92.myMaxhp)() < 80 ? (0, import_kolmafia92.myMaxhp)() : 80);
      if (have($item(_templateObject1722 || (_templateObject1722 = _taggedTemplateLiteral81(["candy cane sword cane"])))) || have($skill(_templateObject1732 || (_templateObject1732 = _taggedTemplateLiteral81(["Comprehensive Cartography"]))))) tryForceNC();
      tryPlayApriling("-combat");
    },
    outfit: function() {
      var _result$equip;
      var result = {
        equip: $items(_templateObject1742 || (_templateObject1742 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin"]))),
        familiar: args.minor.jellies ? $familiar(_templateObject1752 || (_templateObject1752 = _taggedTemplateLiteral81(["Space Jellyfish"]))) : void 0,
        modifier: "-combat"
      };
      if (!have($skill(_templateObject1762 || (_templateObject1762 = _taggedTemplateLiteral81(["Comprehensive Cartography"]))))) (_result$equip = result.equip) === null || _result$equip === void 0 || _result$equip.push($item(_templateObject1772 || (_templateObject1772 = _taggedTemplateLiteral81(["candy cane sword cane"]))));
      return result;
    },
    combat: new CombatStrategy2().macro(Macro.trySkill($skill(_templateObject1782 || (_templateObject1782 = _taggedTemplateLiteral81(["Extract Jelly"]))))),
    do: $location(_templateObject1792 || (_templateObject1792 = _taggedTemplateLiteral81(["Wartime Hippy Camp (Frat Disguise)"]))),
    choices: function() {
      if ((0, import_kolmafia92.haveEquipped)($item(_templateObject1802 || (_templateObject1802 = _taggedTemplateLiteral81(["candy cane sword cane"]))))) return {
        139: 4,
        140: 4,
        141: 3,
        142: 3,
        143: 3,
        144: 3,
        145: 1,
        146: 3,
        1433: 3
      };
      else return {
        139: 3,
        140: 3,
        141: 3,
        142: 3,
        143: 3,
        144: 3,
        145: 1,
        146: 3,
        1433: 3
      };
    },
    ncforce: function() {
      if (have($item(_templateObject18110 || (_templateObject18110 = _taggedTemplateLiteral81(["candy cane sword cane"])))) || have($skill(_templateObject1822 || (_templateObject1822 = _taggedTemplateLiteral81(["Comprehensive Cartography"]))))) {
        return NCForce.Yes;
      }
      return NCForce.No;
    },
    limit: {
      soft: 20
    }
  }].concat(Flyers, Lighthouse, Junkyard, [{
    name: "Open Orchard",
    after: ["Flyers End", "Lighthouse End", "Junkyard End"],
    acquire: [{
      item: $item(_templateObject1832 || (_templateObject1832 = _taggedTemplateLiteral81(["beer helmet"])))
    }, {
      item: $item(_templateObject1842 || (_templateObject1842 = _taggedTemplateLiteral81(["distressed denim pants"])))
    }, {
      item: $item(_templateObject1852 || (_templateObject1852 = _taggedTemplateLiteral81(["bejeweled pledge pin"])))
    }],
    completed: function() {
      return get("hippiesDefeated") >= 64;
    },
    outfit: function() {
      var jelly = args.minor.jellies ? $familiar(_templateObject1862 || (_templateObject1862 = _taggedTemplateLiteral81(["Space Jellyfish"]))) : void 0;
      if (have($item(_templateObject1872 || (_templateObject1872 = _taggedTemplateLiteral81(["Sheriff moustache"])))) && have($item(_templateObject1882 || (_templateObject1882 = _taggedTemplateLiteral81(["Sheriff badge"])))) && have($item(_templateObject1892 || (_templateObject1892 = _taggedTemplateLiteral81(["Sheriff pistol"])))) && get("_assertYourAuthorityCast", 0) < 3) {
        return {
          equip: $items(_templateObject1902 || (_templateObject1902 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin, Sheriff moustache, Sheriff badge, Sheriff pistol"]))),
          familiar: !have($effect(_templateObject19110 || (_templateObject19110 = _taggedTemplateLiteral81(["Citizen of a Zone"])))) && have($familiar(_templateObject1922 || (_templateObject1922 = _taggedTemplateLiteral81(["Patriotic Eagle"])))) ? $familiar(_templateObject1932 || (_templateObject1932 = _taggedTemplateLiteral81(["Patriotic Eagle"]))) : jelly
        };
      }
      return {
        equip: $items(_templateObject1942 || (_templateObject1942 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin"]))),
        familiar: !have($effect(_templateObject1952 || (_templateObject1952 = _taggedTemplateLiteral81(["Citizen of a Zone"])))) && have($familiar(_templateObject1962 || (_templateObject1962 = _taggedTemplateLiteral81(["Patriotic Eagle"])))) ? $familiar(_templateObject1972 || (_templateObject1972 = _taggedTemplateLiteral81(["Patriotic Eagle"]))) : jelly
      };
    },
    do: $location(_templateObject1982 || (_templateObject1982 = _taggedTemplateLiteral81(["The Battlefield (Frat Uniform)"]))),
    post: dimesForGarters,
    combat: new CombatStrategy2().killHard(warHeroes).kill().macro(Macro.trySkill($skill(_templateObject1992 || (_templateObject1992 = _taggedTemplateLiteral81(["%fn, let's pledge allegiance to a Zone"])))).trySkill($skill(_templateObject2002 || (_templateObject2002 = _taggedTemplateLiteral81(["Extract Jelly"])))).trySkill($skill(_templateObject20110 || (_templateObject20110 = _taggedTemplateLiteral81(["Assert your Authority"]))))),
    limit: {
      tries: 10
    }
  }], Orchard, [{
    name: "Open Nuns",
    after: ["Orchard Finish"],
    acquire: [{
      item: $item(_templateObject2022 || (_templateObject2022 = _taggedTemplateLiteral81(["beer helmet"])))
    }, {
      item: $item(_templateObject2032 || (_templateObject2032 = _taggedTemplateLiteral81(["distressed denim pants"])))
    }, {
      item: $item(_templateObject2042 || (_templateObject2042 = _taggedTemplateLiteral81(["bejeweled pledge pin"])))
    }],
    completed: function() {
      return get("hippiesDefeated") >= 192;
    },
    outfit: function() {
      return {
        equip: $items(_templateObject2052 || (_templateObject2052 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin"]))),
        familiar: args.minor.jellies ? $familiar(_templateObject2062 || (_templateObject2062 = _taggedTemplateLiteral81(["Space Jellyfish"]))) : void 0
      };
    },
    do: $location(_templateObject2072 || (_templateObject2072 = _taggedTemplateLiteral81(["The Battlefield (Frat Uniform)"]))),
    combat: new CombatStrategy2().kill().killHard(warHeroes).macro(Macro.trySkill($skill(_templateObject2082 || (_templateObject2082 = _taggedTemplateLiteral81(["Extract Jelly"]))))),
    limit: {
      tries: 9
    }
  }], Nuns, [{
    name: "Clear",
    after: ["Nuns"],
    acquire: [{
      item: $item(_templateObject2092 || (_templateObject2092 = _taggedTemplateLiteral81(["beer helmet"])))
    }, {
      item: $item(_templateObject21010 || (_templateObject21010 = _taggedTemplateLiteral81(["distressed denim pants"])))
    }, {
      item: $item(_templateObject21110 || (_templateObject21110 = _taggedTemplateLiteral81(["bejeweled pledge pin"])))
    }],
    completed: function() {
      return get("hippiesDefeated") >= 1e3;
    },
    outfit: function() {
      var result = {
        equip: $items(_templateObject21210 || (_templateObject21210 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin"])))
      };
      if (args.minor.jellies) {
        result.familiar = $familiar(_templateObject21310 || (_templateObject21310 = _taggedTemplateLiteral81(["Space Jellyfish"])));
      }
      return result;
    },
    do: $location(_templateObject2149 || (_templateObject2149 = _taggedTemplateLiteral81(["The Battlefield (Frat Uniform)"]))),
    post: dimesForGarters,
    combat: new CombatStrategy2().kill().killHard(warHeroes).macro(Macro.trySkill($skill(_templateObject2152 || (_templateObject2152 = _taggedTemplateLiteral81(["Extract Jelly"]))))),
    limit: {
      tries: 30
    }
  }, {
    name: "Boss Hippie",
    after: ["Clear"],
    completed: function() {
      return step("questL12War") === 999;
    },
    outfit: function() {
      return {
        equip: $items(_templateObject2162 || (_templateObject2162 = _taggedTemplateLiteral81(["beer helmet, distressed denim pants, bejeweled pledge pin"]))),
        familiar: args.minor.jellies ? $familiar(_templateObject2172 || (_templateObject2172 = _taggedTemplateLiteral81(["Space Jellyfish"]))) : void 0
      };
    },
    prepare: function() {
      dimesForGarters();
      fillHp();
    },
    do: function() {
      (0, import_kolmafia92.visitUrl)("bigisland.php?place=camp&whichcamp=1&confirm7=1");
      (0, import_kolmafia92.visitUrl)("bigisland.php?action=bossfight&pwd");
    },
    combat: new CombatStrategy2().killHard().macro(Macro.trySkill($skill(_templateObject2182 || (_templateObject2182 = _taggedTemplateLiteral81(["Extract Jelly"]))))),
    limit: {
      tries: 1
    },
    boss: true
  }])
};
function councilSafe() {
  return !atLevel(12) || have($item(_templateObject2192 || (_templateObject2192 = _taggedTemplateLiteral81(["filthy corduroys"])))) && have($item(_templateObject2202 || (_templateObject2202 = _taggedTemplateLiteral81(["filthy knitted dread sack"])))) || have($item(_templateObject22110 || (_templateObject22110 = _taggedTemplateLiteral81(["beer helmet"])))) && have($item(_templateObject2222 || (_templateObject2222 = _taggedTemplateLiteral81(["distressed denim pants"])))) && have($item(_templateObject2232 || (_templateObject2232 = _taggedTemplateLiteral81(["bejeweled pledge pin"]))));
}
function dimesForGarters() {
  if ((0, import_kolmafia92.myTurncount)() >= 1e3) return;
  var to_sell = $items(_templateObject2242 || (_templateObject2242 = _taggedTemplateLiteral81(["pink clay bead, purple clay bead, green clay bead, communications windchimes, bullet-proof corduroys, round purple sunglasses, reinforced beaded headband"])));
  var _iterator = _createForOfIteratorHelper22(to_sell), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var it = _step.value;
      if ((0, import_kolmafia92.itemAmount)(it) > 0) (0, import_kolmafia92.sell)(it.buyer, (0, import_kolmafia92.itemAmount)(it), it);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  if ((0, import_kolmafia92.itemAmount)($item(_templateObject2252 || (_templateObject2252 = _taggedTemplateLiteral81(["gauze garter"])))) < 20) {
    if ($coinmaster(_templateObject2262 || (_templateObject2262 = _taggedTemplateLiteral81(["Quartersmaster"]))).availableTokens >= 2) (0, import_kolmafia92.cliExecute)("make * gauze garter");
  } else if (args.minor.warProfiteering) {
    if ($coinmaster(_templateObject2272 || (_templateObject2272 = _taggedTemplateLiteral81(["Quartersmaster"]))).availableTokens >= 5) (0, import_kolmafia92.cliExecute)("make * commemorative war stein");
  }
}

// src/tasks/summons.ts
var import_kolmafia93 = require("kolmafia");
init_dist();
var _templateObject588;
var _templateObject2150;
var _templateObject3137;
var _templateObject4119;
var _templateObject589;
var _templateObject660;
var _templateObject756;
var _templateObject848;
var _templateObject939;
var _templateObject1034;
var _templateObject1130;
var _templateObject1230;
var _templateObject1328;
var _templateObject1426;
var _templateObject1523;
var _templateObject1623;
var _templateObject1723;
var _templateObject1823;
var _templateObject1920;
var _templateObject2020;
var _templateObject2151;
var _templateObject2223;
var _templateObject2321;
var _templateObject2420;
var _templateObject2519;
var _templateObject2618;
var _templateObject2718;
var _templateObject2816;
var _templateObject2916;
var _templateObject3016;
var _templateObject3138;
var _templateObject3218;
var _templateObject3317;
var _templateObject3414;
var _templateObject3513;
var _templateObject3613;
var _templateObject3713;
var _templateObject3813;
var _templateObject3913;
var _templateObject4013;
var _templateObject4120;
var _templateObject4215;
var _templateObject4314;
var _templateObject4413;
var _templateObject4513;
var _templateObject4613;
var _templateObject4713;
var _templateObject4813;
var _templateObject4913;
var _templateObject5013;
var _templateObject5114;
var _templateObject5214;
var _templateObject5313;
var _templateObject5413;
var _templateObject5512;
var _templateObject5611;
var _templateObject5711;
var _templateObject5810;
function ownKeys15(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread15(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys15(Object(t), true).forEach(function(r2) {
      _defineProperty29(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys15(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _createForOfIteratorHelper23(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray48(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray48(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray48(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray48(o, minLen);
}
function _arrayLikeToArray48(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck27(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties27(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey34(descriptor.key), descriptor);
  }
}
function _createClass27(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties27(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties27(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty29(obj, key, value) {
  key = _toPropertyKey34(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey34(t) {
  var i = _toPrimitive34(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive34(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral82(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var summonTargets = [{
  target: $monster(_templateObject588 || (_templateObject588 = _taggedTemplateLiteral82(["War Frat 151st Infantryman"]))),
  priority: function() {
    return Priorities.Start;
  },
  completed: function() {
    return have($item(_templateObject2150 || (_templateObject2150 = _taggedTemplateLiteral82(["beer helmet"])))) && have($item(_templateObject3137 || (_templateObject3137 = _taggedTemplateLiteral82(["distressed denim pants"])))) && have($item(_templateObject4119 || (_templateObject4119 = _taggedTemplateLiteral82(["bejeweled pledge pin"]))));
  },
  after: [],
  outfit: {
    equip: $items(_templateObject589 || (_templateObject589 = _taggedTemplateLiteral82(["unwrapped knock-off retro superhero cape"]))),
    modes: {
      retrocape: ["heck", "hold"]
    },
    avoid: $items(_templateObject660 || (_templateObject660 = _taggedTemplateLiteral82(["carnivorous potted plant"])))
  },
  combat: new CombatStrategy2().yellowRay()
}, {
  target: $monster(_templateObject756 || (_templateObject756 = _taggedTemplateLiteral82(["mountain man"]))),
  after: [],
  ready: function() {
    return (0, import_kolmafia93.myMeat)() >= 1e3 && // YR the War frat first
    have($item(_templateObject848 || (_templateObject848 = _taggedTemplateLiteral82(["beer helmet"])))) && have($item(_templateObject939 || (_templateObject939 = _taggedTemplateLiteral82(["distressed denim pants"])))) && have($item(_templateObject1034 || (_templateObject1034 = _taggedTemplateLiteral82(["bejeweled pledge pin"]))));
  },
  completed: function() {
    return oresNeeded() === 0;
  },
  priority: function() {
    return have($effect(_templateObject1130 || (_templateObject1130 = _taggedTemplateLiteral82(["Everything Looks Yellow"])))) ? Priorities.BadYR : Priorities.None;
  },
  outfit: function() {
    if (yellowRayPossible()) return {
      equip: $items(_templateObject1230 || (_templateObject1230 = _taggedTemplateLiteral82(["unwrapped knock-off retro superhero cape"]))),
      modes: {
        retrocape: ["heck", "hold"]
      },
      avoid: $items(_templateObject1328 || (_templateObject1328 = _taggedTemplateLiteral82(["carnivorous potted plant"])))
    };
    else return {
      equip: $items(_templateObject1426 || (_templateObject1426 = _taggedTemplateLiteral82(["unwrapped knock-off retro superhero cape"]))),
      modes: {
        retrocape: ["heck", "hold"]
      },
      modifier: "item"
    };
  },
  combat: new CombatStrategy2().yellowRay().macro(function() {
    var result = new Macro();
    if (have($effect(_templateObject1523 || (_templateObject1523 = _taggedTemplateLiteral82(["Everything Looks Yellow"]))))) {
      if (!have($item(_templateObject1623 || (_templateObject1623 = _taggedTemplateLiteral82(["Spooky VHS Tape"]))))) result.trySkill($skill(_templateObject1723 || (_templateObject1723 = _taggedTemplateLiteral82(["Feel Envy"]))));
      if (!have($skill(_templateObject1823 || (_templateObject1823 = _taggedTemplateLiteral82(["Feel Envy"])))) || get("_feelEnvyUsed")) result.tryItem($item(_templateObject1920 || (_templateObject1920 = _taggedTemplateLiteral82(["Spooky VHS Tape"]))));
    }
    return result;
  }),
  tries: 3
}, {
  target: $monster(_templateObject2020 || (_templateObject2020 = _taggedTemplateLiteral82(["Astrologer of Shub-Jigguwatt"]))),
  after: [],
  completed: function() {
    return have($item(_templateObject2151 || (_templateObject2151 = _taggedTemplateLiteral82(["star chart"])))) || have($item(_templateObject2223 || (_templateObject2223 = _taggedTemplateLiteral82(["Richard's star key"])))) || get("nsTowerDoorKeysUsed").includes("Richard's star key") || !have($item(_templateObject2321 || (_templateObject2321 = _taggedTemplateLiteral82(["Cargo Cultist Shorts"])))) || get("_cargoPocketEmptied");
  },
  prepare: function() {
    fillHp();
  },
  outfit: {
    equip: $items(_templateObject2420 || (_templateObject2420 = _taggedTemplateLiteral82(["June cleaver"])))
  },
  combat: new CombatStrategy2().macro(Macro.trySkill($skill(_templateObject2519 || (_templateObject2519 = _taggedTemplateLiteral82(["Micrometeorite"])))).trySkill($skill(_templateObject2618 || (_templateObject2618 = _taggedTemplateLiteral82(["Curse of Weaksauce"]))))).kill()
}, {
  target: $monster(_templateObject2718 || (_templateObject2718 = _taggedTemplateLiteral82(["Astronomer"]))),
  after: ["Astrologer Of Shub-Jigguwatt"],
  completed: function() {
    return have($item(_templateObject2816 || (_templateObject2816 = _taggedTemplateLiteral82(["star chart"])))) || have($item(_templateObject2916 || (_templateObject2916 = _taggedTemplateLiteral82(["Richard's star key"])))) || get("nsTowerDoorKeysUsed").includes("Richard's star key");
  },
  combat: new CombatStrategy2().kill()
}, {
  target: $monster(_templateObject3016 || (_templateObject3016 = _taggedTemplateLiteral82(["Astronomer"]))),
  after: [],
  ready: function() {
    return !have($item(_templateObject3138 || (_templateObject3138 = _taggedTemplateLiteral82(["Cargo Cultist Shorts"])))) || get("_cargoPocketEmptied");
  },
  completed: function() {
    return have($item(_templateObject3218 || (_templateObject3218 = _taggedTemplateLiteral82(["star chart"])))) || have($item(_templateObject3317 || (_templateObject3317 = _taggedTemplateLiteral82(["Richard's star key"])))) || get("nsTowerDoorKeysUsed").includes("Richard's star key");
  },
  combat: new CombatStrategy2().kill()
}, {
  target: $monster(_templateObject3414 || (_templateObject3414 = _taggedTemplateLiteral82(["Camel's Toe"]))),
  after: [],
  priority: function() {
    if (!have($familiar(_templateObject3513 || (_templateObject3513 = _taggedTemplateLiteral82(["Melodramedary"]))))) return Priorities.None;
    if (get("camelSpit") < 100) return Priorities.BadCamel;
    return Priorities.GoodCamel;
  },
  completed: function() {
    return get("lastCopyableMonster") === $monster(_templateObject3613 || (_templateObject3613 = _taggedTemplateLiteral82(["Camel's Toe"]))) || (0, import_kolmafia93.itemAmount)($item(_templateObject3713 || (_templateObject3713 = _taggedTemplateLiteral82(["star"])))) >= 8 && (0, import_kolmafia93.itemAmount)($item(_templateObject3813 || (_templateObject3813 = _taggedTemplateLiteral82(["line"])))) >= 7 || have($item(_templateObject3913 || (_templateObject3913 = _taggedTemplateLiteral82(["Richard's star key"])))) || get("nsTowerDoorKeysUsed").includes("Richard's star key");
  },
  outfit: function() {
    if (get("camelSpit") === 100) return {
      modifier: "item",
      familiar: $familiar(_templateObject4013 || (_templateObject4013 = _taggedTemplateLiteral82(["Melodramedary"]))),
      avoid: $items(_templateObject4120 || (_templateObject4120 = _taggedTemplateLiteral82(["carnivorous potted plant"])))
    };
    return {
      modifier: "item"
    };
  },
  combat: new CombatStrategy2().macro(Macro.trySkill($skill(_templateObject4215 || (_templateObject4215 = _taggedTemplateLiteral82(["%fn, spit on them!"]))))).killItem()
}, {
  target: $monster(_templateObject4314 || (_templateObject4314 = _taggedTemplateLiteral82(["Baa'baa'bu'ran"]))),
  after: [],
  completed: function() {
    return (0, import_kolmafia93.itemAmount)($item(_templateObject4413 || (_templateObject4413 = _taggedTemplateLiteral82(["stone wool"])))) >= 2 || (0, import_kolmafia93.itemAmount)($item(_templateObject4513 || (_templateObject4513 = _taggedTemplateLiteral82(["stone wool"])))) === 1 && have($item(_templateObject4613 || (_templateObject4613 = _taggedTemplateLiteral82(["the Nostril of the Serpent"])))) || step("questL11Worship") >= 3;
  },
  outfit: {
    modifier: "item"
  },
  combat: new CombatStrategy2().killItem()
}];
var summonSources = [{
  name: "Numberology",
  available: function() {
    if (get("skillLevel144") === 0) return 0;
    if (get("_universeCalculated") === 3) return 0;
    return get("_universeCalculated") < get("skillLevel144") ? 1 : 0;
  },
  ready: function() {
    return Object.values((0, import_kolmafia93.reverseNumberology)()).includes(51);
  },
  canFight: function(mon) {
    return mon === $monster(_templateObject4713 || (_templateObject4713 = _taggedTemplateLiteral82(["War Frat 151st Infantryman"])));
  },
  // Only use for war frat
  summon: function() {
    return (0, import_kolmafia93.cliExecute)("numberology 51");
  }
}, {
  name: "White Page",
  available: function() {
    return have($item(_templateObject4813 || (_templateObject4813 = _taggedTemplateLiteral82(["white page"])))) ? 1 : 0;
  },
  canFight: function(mon) {
    return mon === $monster(_templateObject4913 || (_templateObject4913 = _taggedTemplateLiteral82(["white lion"])));
  },
  summon: function() {
    return (0, import_kolmafia93.use)($item(_templateObject5013 || (_templateObject5013 = _taggedTemplateLiteral82(["white page"]))));
  }
}, {
  name: "Combat Locket",
  available: function() {
    return CombatLoversLocket_exports.have() ? CombatLoversLocket_exports.reminiscesLeft() - args.minor.savelocket : 0;
  },
  canFight: function(mon) {
    return CombatLoversLocket_exports.availableLocketMonsters().includes(mon);
  },
  summon: function(mon) {
    return CombatLoversLocket_exports.reminisce(mon);
  }
}, {
  name: "Cargo Shorts",
  available: function() {
    return have($item(_templateObject5114 || (_templateObject5114 = _taggedTemplateLiteral82(["Cargo Cultist Shorts"])))) && !get("_cargoPocketEmptied") ? 1 : 0;
  },
  canFight: function(mon) {
    return mon === $monster(_templateObject5214 || (_templateObject5214 = _taggedTemplateLiteral82(["Astrologer of Shub-Jigguwatt"])));
  },
  summon: function(mon) {
    if (mon === $monster(_templateObject5313 || (_templateObject5313 = _taggedTemplateLiteral82(["Astrologer of Shub-Jigguwatt"])))) {
      (0, import_kolmafia93.cliExecute)("cargo 533");
      (0, import_kolmafia93.use)($item(_templateObject5413 || (_templateObject5413 = _taggedTemplateLiteral82(["greasy desk bell"]))));
    }
  }
}, {
  name: "Fax",
  available: function() {
    if (args.minor.fax && !underStandard() && !get("_photocopyUsed") && have($item(_templateObject5512 || (_templateObject5512 = _taggedTemplateLiteral82(["Clan VIP Lounge key"]))))) return 1;
    return 0;
  },
  canFight: function(mon) {
    return (0, import_kolmafia93.canFaxbot)(mon);
  },
  summon: function(mon) {
    var _find;
    var faxbot = (_find = ["OnlyFax", "CheeseFax", "EasyFax"].find(function(bot) {
      return (0, import_kolmafia93.isOnline)(bot);
    })) !== null && _find !== void 0 ? _find : "CheeseFax";
    for (var i = 0; i < 6; i++) {
      if (i % 3 === 0) (0, import_kolmafia93.chatPrivate)(faxbot, mon.name);
      (0, import_kolmafia93.wait)(10 + i);
      if (checkFax(mon)) break;
    }
    if (!checkFax(mon)) {
      if (!(0, import_kolmafia93.isOnline)(faxbot)) throw "Failed to acquire photocopied ".concat(mon.name, ". Faxbot ").concat(faxbot, " appears to be offline.");
      throw "Failed to acquire photocopied ".concat(mon.name, " but ").concat(faxbot, " is online.");
    }
    (0, import_kolmafia93.use)($item(_templateObject5611 || (_templateObject5611 = _taggedTemplateLiteral82(["photocopied monster"]))));
  }
}, {
  name: "Wish",
  available: function() {
    return have($item(_templateObject5711 || (_templateObject5711 = _taggedTemplateLiteral82(["genie bottle"])))) ? 3 - get("_genieWishesUsed") : 0;
  },
  canFight: function() {
    return true;
  },
  summon: function(mon) {
    (0, import_kolmafia93.cliExecute)("genie monster ".concat(mon.name));
    (0, import_kolmafia93.visitUrl)("main.php");
  }
}];
function checkFax(mon) {
  if (!have($item(_templateObject5810 || (_templateObject5810 = _taggedTemplateLiteral82(["photocopied monster"]))))) (0, import_kolmafia93.cliExecute)("fax receive");
  if (get("photocopyMonster") === mon) return true;
  (0, import_kolmafia93.cliExecute)("fax send");
  return false;
}
var SummonStrategy = /* @__PURE__ */ function() {
  function SummonStrategy2(targets, sources) {
    _classCallCheck27(this, SummonStrategy2);
    _defineProperty29(this, "targets", void 0);
    _defineProperty29(this, "sources", void 0);
    _defineProperty29(this, "plan", /* @__PURE__ */ new Map());
    this.targets = targets;
    this.sources = sources;
  }
  _createClass27(SummonStrategy2, [{
    key: "update",
    value: function update() {
      this.plan.clear();
      var targets = this.targets.filter(function(t) {
        return !t.completed();
      }).map(function(t) {
        return t.target;
      });
      var _iterator = _createForOfIteratorHelper23(this.sources), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var source = _step.value;
          var available6 = source.available();
          var _iterator2 = _createForOfIteratorHelper23(targets), _step2;
          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
              var target = _step2.value;
              if (available6 > 0 && !this.plan.has(target) && source.canFight(target)) {
                this.plan.set(target, source);
                available6 -= 1;
              }
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "getSourceFor",
    value: function getSourceFor(monster) {
      return this.plan.get(monster);
    }
  }, {
    key: "sourceReadyFor",
    value: function sourceReadyFor(monster) {
      var source = this.getSourceFor(monster);
      if (source === void 0) return false;
      if (source.ready === void 0) return true;
      return source.ready();
    }
  }]);
  return SummonStrategy2;
}();
var summonStrategy = new SummonStrategy(summonTargets, summonSources);
var SummonQuest = {
  name: "Summon",
  tasks: summonTargets.map(function(task) {
    var _task$tries;
    return _objectSpread15(_objectSpread15({}, task), {}, {
      name: task.target.name.replace(/(^\w|\s\w)/g, function(m) {
        return m.toUpperCase();
      }),
      // capitalize first letter of each word
      ready: function() {
        var _task$ready, _task$ready2;
        return ((_task$ready = (_task$ready2 = task.ready) === null || _task$ready2 === void 0 ? void 0 : _task$ready2.call(task)) !== null && _task$ready !== void 0 ? _task$ready : true) && summonStrategy.sourceReadyFor(task.target);
      },
      do: function() {
        var source = summonStrategy.getSourceFor(task.target);
        if (source) {
          debug("Summon source: ".concat(source.name));
          source.summon(task.target);
        } else throw "Unable to find summon source for ".concat(task.target.name);
        (0, import_kolmafia93.runCombat)();
      },
      limit: {
        tries: (_task$tries = task.tries) !== null && _task$tries !== void 0 ? _task$tries : 1
      }
    });
  })
};

// src/engine/outfit.ts
var import_kolmafia101 = require("kolmafia");
init_dist();

// src/tasks/keys.ts
var import_kolmafia100 = require("kolmafia");
init_dist();

// src/tasks/misc.ts
var import_kolmafia99 = require("kolmafia");
init_dist();

// src/engine/engine.ts
var import_kolmafia96 = require("kolmafia");
init_dist();
var import_kolmafia97 = require("kolmafia");

// src/engine/state.ts
var import_kolmafia94 = require("kolmafia");
init_dist();
var _templateObject590;
var _templateObject2153;
var _templateObject3139;
function _slicedToArray30(arr, i) {
  return _arrayWithHoles30(arr) || _iterableToArrayLimit30(arr, i) || _unsupportedIterableToArray49(arr, i) || _nonIterableRest30();
}
function _nonIterableRest30() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit30(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles30(arr) {
  if (Array.isArray(arr)) return arr;
}
function _createForOfIteratorHelper24(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray49(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _toConsumableArray29(arr) {
  return _arrayWithoutHoles29(arr) || _iterableToArray29(arr) || _unsupportedIterableToArray49(arr) || _nonIterableSpread29();
}
function _nonIterableSpread29() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray49(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray49(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray49(o, minLen);
}
function _iterableToArray29(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles29(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray49(arr);
}
function _arrayLikeToArray49(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral83(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck28(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties28(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey35(descriptor.key), descriptor);
  }
}
function _createClass28(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties28(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties28(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty30(obj, key, value) {
  key = _toPropertyKey35(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey35(t) {
  var i = _toPrimitive35(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive35(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var GameState = /* @__PURE__ */ function() {
  function GameState2() {
    _classCallCheck28(this, GameState2);
    _defineProperty30(this, "_banishes", void 0);
    _defineProperty30(this, "_orb", void 0);
  }
  _createClass28(GameState2, [{
    key: "banishes",
    value: function banishes() {
      if (this._banishes === void 0) {
        this._banishes = new BanishState();
      }
      return this._banishes;
    }
  }, {
    key: "orb",
    value: function orb2() {
      if (this._orb === void 0) {
        this._orb = new OrbState();
      }
      return this._orb;
    }
  }, {
    key: "invalidate",
    value: function invalidate() {
      this._banishes = void 0;
      this._orb = void 0;
    }
  }]);
  return GameState2;
}();
var BanishState = /* @__PURE__ */ function() {
  function BanishState2() {
    _classCallCheck28(this, BanishState2);
    _defineProperty30(this, "already_banished", void 0);
    var banished = getBanishedMonsters();
    if (underStandard()) banished.delete($item(_templateObject590 || (_templateObject590 = _taggedTemplateLiteral83(["ice house"]))));
    this.already_banished = new Map(Array.from(banished, function(entry) {
      return [entry[1], entry[0]];
    }));
  }
  _createClass28(BanishState2, [{
    key: "isPartiallyBanished",
    value: function isPartiallyBanished(task) {
      var _this = this;
      var _task$combat$where, _task$combat, _task$combat$where2, _task$combat2, _task$combat3, _task$combat4;
      var targets = [];
      targets.push.apply(targets, _toConsumableArray29((_task$combat$where = (_task$combat = task.combat) === null || _task$combat === void 0 ? void 0 : _task$combat.where("banish")) !== null && _task$combat$where !== void 0 ? _task$combat$where : []));
      targets.push.apply(targets, _toConsumableArray29((_task$combat$where2 = (_task$combat2 = task.combat) === null || _task$combat2 === void 0 ? void 0 : _task$combat2.where("ignoreSoftBanish")) !== null && _task$combat$where2 !== void 0 ? _task$combat$where2 : []));
      if ((((_task$combat3 = task.combat) === null || _task$combat3 === void 0 ? void 0 : _task$combat3.getDefaultAction()) === "banish" || ((_task$combat4 = task.combat) === null || _task$combat4 === void 0 ? void 0 : _task$combat4.getDefaultAction()) === "ignoreSoftBanish") && task.do instanceof import_kolmafia94.Location) {
        var _iterator = _createForOfIteratorHelper24(getMonsters4(task.do)), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var _task$combat5;
            var monster = _step.value;
            var strat = (_task$combat5 = task.combat) === null || _task$combat5 === void 0 ? void 0 : _task$combat5.currentStrategy(monster);
            if (strat === "banish" || strat === "ignoreSoftBanish") {
              targets.push(monster);
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      return targets.find(function(monster2) {
        return _this.already_banished.has(monster2) && _this.already_banished.get(monster2) !== $item(_templateObject2153 || (_templateObject2153 = _taggedTemplateLiteral83(["ice house"])));
      }) !== void 0;
    }
    // Return true if some of the monsters in the task are banished
  }, {
    key: "numPartiallyBanished",
    value: function numPartiallyBanished(task) {
      var _this = this;
      var _task$combat$where3, _task$combat6, _task$combat$where4, _task$combat7, _task$combat8, _task$combat9;
      var targets = [];
      targets.push.apply(targets, _toConsumableArray29((_task$combat$where3 = (_task$combat6 = task.combat) === null || _task$combat6 === void 0 ? void 0 : _task$combat6.where("banish")) !== null && _task$combat$where3 !== void 0 ? _task$combat$where3 : []));
      targets.push.apply(targets, _toConsumableArray29((_task$combat$where4 = (_task$combat7 = task.combat) === null || _task$combat7 === void 0 ? void 0 : _task$combat7.where("ignoreSoftBanish")) !== null && _task$combat$where4 !== void 0 ? _task$combat$where4 : []));
      if ((((_task$combat8 = task.combat) === null || _task$combat8 === void 0 ? void 0 : _task$combat8.getDefaultAction()) === "banish" || ((_task$combat9 = task.combat) === null || _task$combat9 === void 0 ? void 0 : _task$combat9.getDefaultAction()) === "ignoreSoftBanish") && task.do instanceof import_kolmafia94.Location) {
        var _iterator2 = _createForOfIteratorHelper24(getMonsters4(task.do)), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var _task$combat10;
            var monster = _step2.value;
            var strat = (_task$combat10 = task.combat) === null || _task$combat10 === void 0 ? void 0 : _task$combat10.currentStrategy(monster);
            if (strat === "banish" || strat === "ignoreSoftBanish") {
              targets.push(monster);
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      return targets.filter(function(monster2) {
        return _this.already_banished.has(monster2) && _this.already_banished.get(monster2) !== $item(_templateObject3139 || (_templateObject3139 = _taggedTemplateLiteral83(["ice house"])));
      }).length;
    }
    // Return true if all requested monsters in the task are banished
  }, {
    key: "isFullyBanished",
    value: function isFullyBanished(task) {
      var _this = this;
      var _task$combat11;
      return ((_task$combat11 = task.combat) === null || _task$combat11 === void 0 || (_task$combat11 = _task$combat11.where("banish")) === null || _task$combat11 === void 0 ? void 0 : _task$combat11.find(function(monster) {
        return !_this.already_banished.has(monster);
      })) === void 0;
    }
  }]);
  return BanishState2;
}();
var OrbState = /* @__PURE__ */ function() {
  function OrbState2() {
    _classCallCheck28(this, OrbState2);
    _defineProperty30(this, "predictions", void 0);
    var initialPrediction = get("crystalBallPredictions");
    (0, import_kolmafia94.visitUrl)("inventory.php?ponder=1", false);
    if (get("crystalBallPredictions") !== initialPrediction && args.debug.verbose) {
      (0, import_kolmafia94.print)("Verbose: Tracking misalignment on orb.");
    }
    this.predictions = new Map(get("crystalBallPredictions").split("|").filter(Boolean).map(function(element) {
      return element.split(":");
    }).filter(function(tuple2) {
      return tuple2.length === 3;
    }).map(function(_ref) {
      var _ref2 = _slicedToArray30(_ref, 3), location = _ref2[1], monster = _ref2[2];
      return [(0, import_kolmafia94.toLocation)(location), (0, import_kolmafia94.toMonster)(monster)];
    }));
  }
  _createClass28(OrbState2, [{
    key: "prediction",
    value: function prediction(loc) {
      return this.predictions.get(loc);
    }
  }]);
  return OrbState2;
}();
var globalStateCache = new GameState();

// src/tasks/pulls.ts
var import_kolmafia95 = require("kolmafia");
init_dist();
var _templateObject591;
var _templateObject2154;
var _templateObject3140;
var _templateObject4121;
var _templateObject597;
var _templateObject661;
var _templateObject757;
var _templateObject849;
var _templateObject940;
var _templateObject1035;
var _templateObject1131;
var _templateObject1231;
var _templateObject1329;
var _templateObject1427;
var _templateObject1524;
var _templateObject1624;
var _templateObject1724;
var _templateObject1824;
var _templateObject1921;
var _templateObject2021;
var _templateObject2155;
var _templateObject2224;
var _templateObject2322;
var _templateObject2421;
var _templateObject2520;
var _templateObject2619;
var _templateObject2719;
var _templateObject2817;
var _templateObject2917;
var _templateObject3017;
var _templateObject3141;
var _templateObject3219;
var _templateObject3318;
var _templateObject3415;
var _templateObject3514;
var _templateObject3614;
var _templateObject3714;
var _templateObject3814;
var _templateObject3914;
var _templateObject4014;
var _templateObject4122;
var _templateObject4216;
var _templateObject4315;
var _templateObject4414;
var _templateObject4514;
var _templateObject4614;
var _templateObject4714;
var _templateObject4814;
var _templateObject4914;
var _templateObject5014;
var _templateObject5115;
var _templateObject5215;
var _templateObject5314;
var _templateObject5414;
var _templateObject5513;
var _templateObject5612;
var _templateObject5712;
var _templateObject5811;
var _templateObject598;
var _templateObject607;
var _templateObject6113;
var _templateObject6212;
var _templateObject6312;
var _templateObject6412;
var _templateObject6511;
var _templateObject666;
var _templateObject676;
var _templateObject686;
var _templateObject696;
var _templateObject706;
function _toConsumableArray30(arr) {
  return _arrayWithoutHoles30(arr) || _iterableToArray30(arr) || _unsupportedIterableToArray50(arr) || _nonIterableSpread30();
}
function _nonIterableSpread30() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray30(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles30(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray50(arr);
}
function _createForOfIteratorHelper25(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray50(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray50(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray50(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray50(o, minLen);
}
function _arrayLikeToArray50(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck29(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties29(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey36(descriptor.key), descriptor);
  }
}
function _createClass29(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties29(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties29(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty31(obj, key, value) {
  key = _toPropertyKey36(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey36(t) {
  var i = _toPrimitive36(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive36(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral84(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var pulls = [
  // Food
  {
    name: "Cookbookbat Food of Legend",
    pull: function() {
      var result = [];
      if (!get("calzoneOfLegendEaten")) result.push($item(_templateObject591 || (_templateObject591 = _taggedTemplateLiteral84(["Calzone of Legend"]))));
      if (!get("pizzaOfLegendEaten")) result.push($item(_templateObject2154 || (_templateObject2154 = _taggedTemplateLiteral84(["Pizza of Legend"]))));
      if (!get("deepDishOfLegendEaten")) result.push($item(_templateObject3140 || (_templateObject3140 = _taggedTemplateLiteral84(["Deep Dish of Legend"]))));
      return result;
    },
    useful: function() {
      if ((0, import_kolmafia95.myFullness)() >= 1) return false;
      if ((0, import_kolmafia95.myDaycount)() > 1 && (0, import_kolmafia95.myAdventures)() > 5) return void 0;
      return true;
    }
  },
  {
    pull: $item(_templateObject4121 || (_templateObject4121 = _taggedTemplateLiteral84(["Ol' Scratch's salad fork"]))),
    useful: function() {
      if (args.minor.skipfork) return false;
      if ((0, import_kolmafia95.myFullness)() >= 1) return false;
      if ((0, import_kolmafia95.myDaycount)() > 1 && (0, import_kolmafia95.myAdventures)() > 5) return void 0;
      return true;
    },
    price: 4e5
  },
  {
    pull: $item(_templateObject597 || (_templateObject597 = _taggedTemplateLiteral84(["crepe paper parachute cape"]))),
    optional: true
  },
  {
    pull: $item(_templateObject661 || (_templateObject661 = _taggedTemplateLiteral84(["Frosty's frosty mug"]))),
    useful: function() {
      if (args.minor.skipmug) return false;
      if ((0, import_kolmafia95.myInebriety)() >= 1) return false;
      if ((0, import_kolmafia95.myDaycount)() > 1 && (0, import_kolmafia95.myAdventures)() > 5) return void 0;
      return true;
    },
    price: 2e5
  },
  {
    pull: $item(_templateObject757 || (_templateObject757 = _taggedTemplateLiteral84(["Bowl of Infinite Jelly"]))),
    useful: function() {
      return (0, import_kolmafia95.myFullness)() === 0;
    },
    optional: true
  },
  {
    pull: $item(_templateObject849 || (_templateObject849 = _taggedTemplateLiteral84(["milk of magnesium"]))),
    useful: function() {
      if (args.minor.skipmilk) return false;
      if (get("_milkOfMagnesiumUsed")) return false;
      if ((0, import_kolmafia95.myFullness)() >= 1) return false;
      if ((0, import_kolmafia95.myDaycount)() > 1 && (0, import_kolmafia95.myAdventures)() > 5) return void 0;
      return true;
    }
  },
  // Hero keys
  {
    pull: $item(_templateObject940 || (_templateObject940 = _taggedTemplateLiteral84(["daily dungeon malware"]))),
    useful: function() {
      return keyStrategy.useful(Keys.Malware);
    }
  },
  {
    name: "Key Zappable",
    pull: function() {
      return keyStrategy.getZapChoice(0);
    },
    useful: function() {
      return keyStrategy.useful(Keys.Zap);
    },
    duplicate: true
  },
  {
    name: "Key Zappable 2",
    pull: function() {
      return keyStrategy.getZapChoice(1);
    },
    useful: function() {
      return keyStrategy.useful(Keys.Zap2);
    },
    duplicate: true
  },
  // Other adventure pulls
  {
    pull: $item(_templateObject1035 || (_templateObject1035 = _taggedTemplateLiteral84(["mafia thumb ring"]))),
    optional: true
  },
  {
    pull: $item(_templateObject1131 || (_templateObject1131 = _taggedTemplateLiteral84(["carnivorous potted plant"]))),
    optional: true
  },
  // Survivability pulls
  {
    pull: $item(_templateObject1231 || (_templateObject1231 = _taggedTemplateLiteral84(["nurse's hat"])))
  },
  {
    pull: $item(_templateObject1329 || (_templateObject1329 = _taggedTemplateLiteral84(["sea salt scrubs"]))),
    useful: function() {
      return have($skill(_templateObject1427 || (_templateObject1427 = _taggedTemplateLiteral84(["Torso Awareness"]))));
    }
  },
  {
    pull: $item(_templateObject1524 || (_templateObject1524 = _taggedTemplateLiteral84(["hopping socks"]))),
    // +max MP item
    useful: function() {
      return !have($skill(_templateObject1624 || (_templateObject1624 = _taggedTemplateLiteral84(["Torso Awareness"])))) && !have($item(_templateObject1724 || (_templateObject1724 = _taggedTemplateLiteral84(["SpinMaster\u2122 lathe"]))));
    }
  },
  // General pulls
  {
    pull: $item(_templateObject1824 || (_templateObject1824 = _taggedTemplateLiteral84(["lucky gold ring"]))),
    useful: function() {
      return args.minor.lgr;
    },
    optional: true,
    description: 'Farming currency; see the argument "lgr"'
  },
  {
    name: "Ore",
    pull: function() {
      return get("trapperOre") === "" ? void 0 : import_kolmafia95.Item.get(get("trapperOre"));
    },
    useful: function() {
      if (trainSetAvailable()) return false;
      if ((0, import_kolmafia95.itemAmount)($item(_templateObject1921 || (_templateObject1921 = _taggedTemplateLiteral84(["asbestos ore"])))) >= 3 && (0, import_kolmafia95.itemAmount)($item(_templateObject2021 || (_templateObject2021 = _taggedTemplateLiteral84(["linoleum ore"])))) >= 3 && (0, import_kolmafia95.itemAmount)($item(_templateObject2155 || (_templateObject2155 = _taggedTemplateLiteral84(["chrome ore"])))) >= 3) return false;
      if (have($item(_templateObject2224 || (_templateObject2224 = _taggedTemplateLiteral84(["Deck of Every Card"]))))) return false;
      if (get("trapperOre") === "") return void 0;
      return (0, import_kolmafia95.itemAmount)(import_kolmafia95.Item.get(get("trapperOre"))) < 3 && step("questL08Trapper") < 2;
    },
    duplicate: true
  },
  {
    pull: $item(_templateObject2322 || (_templateObject2322 = _taggedTemplateLiteral84(["1,970 carat gold"]))),
    useful: function() {
      if (underStandard()) return false;
      if ((0, import_kolmafia95.myMeat)() < 200 && step("questM05Toot") > 0 && !have($item(_templateObject2421 || (_templateObject2421 = _taggedTemplateLiteral84(["letter from King Ralph XI"]))))) return true;
      if ((0, import_kolmafia95.myMeat)() < 4e3 && step("questL11Black") === 2 && !have($item(_templateObject2520 || (_templateObject2520 = _taggedTemplateLiteral84(["forged identification documents"]))))) return true;
      if (step("questL11Black") > 2) return false;
      return void 0;
    }
  },
  {
    pull: $item(_templateObject2619 || (_templateObject2619 = _taggedTemplateLiteral84(["1952 Mickey Mantle card"]))),
    useful: function() {
      if (have($item(_templateObject2719 || (_templateObject2719 = _taggedTemplateLiteral84(["forged identification documents"])))) || step("questL11Black") >= 4) return false;
      if (step("questL11Black") >= 2 && (0, import_kolmafia95.myTurncount)() >= 200) return true;
      return void 0;
    }
  },
  {
    pull: $items(_templateObject2817 || (_templateObject2817 = _taggedTemplateLiteral84(["Greatest American Pants, navel ring of navel gazing, peppermint parasol"]))),
    optional: true,
    name: "Runaway IoTM"
  },
  {
    pull: $items(_templateObject2917 || (_templateObject2917 = _taggedTemplateLiteral84(["aquaviolet jub-jub bird, charpuce jub-jub bird, crimsilion jub-jub bird, stomp box"]))),
    optional: true,
    name: "Runaway Comma IoTM",
    useful: function() {
      return have($familiar(_templateObject3017 || (_templateObject3017 = _taggedTemplateLiteral84(["Comma Chameleon"])))) && !have($familiar(_templateObject3141 || (_templateObject3141 = _taggedTemplateLiteral84(["Frumious Bandersnatch"])))) && !have($familiar(_templateObject3219 || (_templateObject3219 = _taggedTemplateLiteral84(["Pair of Stomping Boots"]))));
    },
    post: function() {
      var bestCommaPull = $items(_templateObject3318 || (_templateObject3318 = _taggedTemplateLiteral84(["aquaviolet jub-jub bird, charpuce jub-jub bird, crimsilion jub-jub bird, stomp box"]))).find(function(f) {
        return have(f);
      });
      if (bestCommaPull !== void 0) {
        (0, import_kolmafia95.visitUrl)("inv_equip.php?which=2&action=equip&whichitem=".concat((0, import_kolmafia95.toInt)(bestCommaPull), "&pwd"));
        (0, import_kolmafia95.visitUrl)("charpane.php");
        (0, import_kolmafia95.cliExecute)("set _commaRunDone = true");
      }
    }
  },
  {
    pull: $item(_templateObject3415 || (_templateObject3415 = _taggedTemplateLiteral84(["ring of conflict"]))),
    // Last chance for -5% combat frequency
    useful: function() {
      return !have($item(_templateObject3514 || (_templateObject3514 = _taggedTemplateLiteral84(["unbreakable umbrella"])))) && !have($item(_templateObject3614 || (_templateObject3614 = _taggedTemplateLiteral84(["Space Trip safety headphones"])))) && (0, import_kolmafia95.storageAmount)($item(_templateObject3714 || (_templateObject3714 = _taggedTemplateLiteral84(["Space Trip safety headphones"])))) === 0 && !have($item(_templateObject3814 || (_templateObject3814 = _taggedTemplateLiteral84(["protonic accelerator pack"]))));
    }
  },
  {
    pull: $item(_templateObject3914 || (_templateObject3914 = _taggedTemplateLiteral84(["antique machete"])))
  },
  {
    pull: $item(_templateObject4014 || (_templateObject4014 = _taggedTemplateLiteral84(["book of matches"]))),
    useful: function() {
      return !((have($item(_templateObject4122 || (_templateObject4122 = _taggedTemplateLiteral84(["cosmic bowling ball"])))) || get("cosmicBowlingBallReturnCombats", -1) >= 0) && have($skill(_templateObject4216 || (_templateObject4216 = _taggedTemplateLiteral84(["Map the Monsters"])))) && have($familiar(_templateObject4315 || (_templateObject4315 = _taggedTemplateLiteral84(["Melodramedary"])))));
    }
  },
  {
    pull: $item(_templateObject4414 || (_templateObject4414 = _taggedTemplateLiteral84(["blackberry galoshes"]))),
    useful: function() {
      return step("questL11Black") < 2;
    }
  },
  {
    pull: $item(_templateObject4514 || (_templateObject4514 = _taggedTemplateLiteral84(["Buddy Bjorn"]))),
    useful: function() {
      return yellowSubmarinePossible(true);
    },
    optional: true
  },
  {
    pull: $item(_templateObject4614 || (_templateObject4614 = _taggedTemplateLiteral84(["killing jar"]))),
    useful: function() {
      if (step("questM20Necklace") < 4) return void 0;
      return !have($familiar(_templateObject4714 || (_templateObject4714 = _taggedTemplateLiteral84(["Melodramedary"])))) && (get("gnasirProgress") & 4) === 0 && get("desertExploration") < 100;
    }
  },
  {
    pull: $item(_templateObject4814 || (_templateObject4814 = _taggedTemplateLiteral84(["old patched suit-pants"]))),
    optional: true
  },
  {
    pull: $item(_templateObject4914 || (_templateObject4914 = _taggedTemplateLiteral84(["transparent pants"]))),
    optional: true,
    useful: function() {
      return !have($item(_templateObject5014 || (_templateObject5014 = _taggedTemplateLiteral84(["designer sweatpants"]))));
    }
  },
  {
    pull: $item(_templateObject5115 || (_templateObject5115 = _taggedTemplateLiteral84(["deck of lewd playing cards"]))),
    optional: true
  },
  {
    pull: $item(_templateObject5215 || (_templateObject5215 = _taggedTemplateLiteral84(["gravy boat"]))),
    useful: function() {
      return !underStandard();
    }
  },
  {
    pull: $item(_templateObject5314 || (_templateObject5314 = _taggedTemplateLiteral84(["Mohawk wig"]))),
    useful: function() {
      if (have($skill(_templateObject5414 || (_templateObject5414 = _taggedTemplateLiteral84(["Emotionally Chipped"]))))) return false;
      if (have($item(_templateObject5513 || (_templateObject5513 = _taggedTemplateLiteral84(["S.O.C.K."]))))) return true;
      return void 0;
    }
  },
  {
    pull: $item(_templateObject5612 || (_templateObject5612 = _taggedTemplateLiteral84(["11-leaf clover"]))),
    duplicate: true,
    useful: function() {
      return get("zeppelinProtestors") < 80;
    }
  },
  {
    pull: $item(_templateObject5712 || (_templateObject5712 = _taggedTemplateLiteral84(["wet stew"]))),
    useful: function() {
      return step("questL11Palindome") < 5 && !have($item(_templateObject5811 || (_templateObject5811 = _taggedTemplateLiteral84(["wet stunt nut stew"])))) && !have($item(_templateObject598 || (_templateObject598 = _taggedTemplateLiteral84(["wet stew"])))) && (!have($item(_templateObject607 || (_templateObject607 = _taggedTemplateLiteral84(["lion oil"])))) || !have($item(_templateObject6113 || (_templateObject6113 = _taggedTemplateLiteral84(["bird rib"])))));
    }
  },
  {
    pull: $item(_templateObject6212 || (_templateObject6212 = _taggedTemplateLiteral84(["Flash Liquidizer Ultra Dousing Accessory"])))
  },
  {
    pull: $item(_templateObject6312 || (_templateObject6312 = _taggedTemplateLiteral84(["Shore Inc. Ship Trip Scrip"]))),
    useful: function() {
      var scripNeeded = 4;
      scripNeeded -= (0, import_kolmafia95.itemAmount)($item(_templateObject6412 || (_templateObject6412 = _taggedTemplateLiteral84(["Shore Inc. Ship Trip Scrip"]))));
      if (have($item(_templateObject6511 || (_templateObject6511 = _taggedTemplateLiteral84(["dinghy plans"])))) || have($item(_templateObject666 || (_templateObject666 = _taggedTemplateLiteral84(["dingy dinghy"])))) || have($item(_templateObject676 || (_templateObject676 = _taggedTemplateLiteral84(["junk junk"])))) || have($item(_templateObject686 || (_templateObject686 = _taggedTemplateLiteral84(["skeletal skiff"])))) || have($item(_templateObject696 || (_templateObject696 = _taggedTemplateLiteral84(["yellow submarine"]))))) scripNeeded -= 3;
      if (have($item(_templateObject706 || (_templateObject706 = _taggedTemplateLiteral84(["UV-resistant compass"]))))) scripNeeded -= 1;
      return scripNeeded > 0;
    },
    optional: true
  }
];
var Pull = /* @__PURE__ */ function() {
  function Pull2(spec) {
    var _spec$duplicate, _spec$optional, _spec$useful, _spec$post;
    _classCallCheck29(this, Pull2);
    _defineProperty31(this, "items", void 0);
    _defineProperty31(this, "name", void 0);
    _defineProperty31(this, "optional", void 0);
    _defineProperty31(this, "duplicate", void 0);
    _defineProperty31(this, "useful", void 0);
    _defineProperty31(this, "post", void 0);
    _defineProperty31(this, "description", void 0);
    _defineProperty31(this, "price", void 0);
    if ("name" in spec) {
      var _spec$description;
      this.name = spec.name;
      this.description = (_spec$description = spec.description) !== null && _spec$description !== void 0 ? _spec$description : spec.name;
    } else {
      this.name = spec.pull.name;
      this.description = spec.description;
    }
    var pull = spec.pull;
    if (pull instanceof import_kolmafia95.Item) {
      this.items = function() {
        return [pull];
      };
    } else if (typeof pull === "function") {
      this.items = function() {
        var result = pull();
        if (result === void 0 || result instanceof import_kolmafia95.Item) return [result];
        return result;
      };
    } else {
      this.items = function() {
        return pull;
      };
    }
    this.duplicate = (_spec$duplicate = spec.duplicate) !== null && _spec$duplicate !== void 0 ? _spec$duplicate : false;
    this.optional = (_spec$optional = spec.optional) !== null && _spec$optional !== void 0 ? _spec$optional : false;
    this.useful = (_spec$useful = spec.useful) !== null && _spec$useful !== void 0 ? _spec$useful : function() {
      return true;
    };
    this.price = spec.price;
    this.post = (_spec$post = spec.post) !== null && _spec$post !== void 0 ? _spec$post : function() {
      null;
    };
  }
  _createClass29(Pull2, [{
    key: "wasPulled",
    value: function wasPulled(pulled) {
      var _iterator = _createForOfIteratorHelper25(this.items()), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var item14 = _step.value;
          if (item14 === void 0) continue;
          if (!this.duplicate && have(item14)) return true;
          if (pulled.has(item14)) return true;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return false;
    }
  }, {
    key: "shouldPull",
    value: function shouldPull() {
      var needed = this.useful();
      if (needed === false) return false;
      var _iterator2 = _createForOfIteratorHelper25(this.items()), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var item14 = _step2.value;
          if (item14 === void 0) return void 0;
          if (!(0, import_kolmafia95.isUnrestricted)(item14) && underStandard()) continue;
          if ((0, import_kolmafia95.storageAmount)(item14) > 0) return needed;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      if (this.optional) return false;
      return needed;
    }
  }, {
    key: "pull",
    value: function pull() {
      var _iterator3 = _createForOfIteratorHelper25(this.items()), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var _this$price;
          var item14 = _step3.value;
          if (item14 === void 0) throw "Unable to pull ".concat(this.name, "; the desired item is undefined");
          if (!(0, import_kolmafia95.isUnrestricted)(item14) && underStandard()) continue;
          if ((0, import_kolmafia95.storageAmount)(item14) > 0 || (0, import_kolmafia95.buyUsingStorage)(1, item14, (_this$price = this.price) !== null && _this$price !== void 0 ? _this$price : 1e5)) {
            (0, import_kolmafia95.cliExecute)("pull ".concat(item14.name));
            _set(toTempPref("pullsUsed"), get(toTempPref("pullsUsed"), 0) + 1);
            return;
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }
  }]);
  return Pull2;
}();
var PullState = /* @__PURE__ */ function(PullState2) {
  PullState2[PullState2["PULLED"] = 0] = "PULLED";
  PullState2[PullState2["READY"] = 1] = "READY";
  PullState2[PullState2["MAYBE_UNSURE"] = 2] = "MAYBE_UNSURE";
  PullState2[PullState2["MAYBE_IFROOM"] = 3] = "MAYBE_IFROOM";
  PullState2[PullState2["UNNEEDED"] = 4] = "UNNEEDED";
  return PullState2;
}(PullState || {});
var PullStrategy = /* @__PURE__ */ function() {
  function PullStrategy2(pulls2) {
    _classCallCheck29(this, PullStrategy2);
    _defineProperty31(this, "pulls", void 0);
    _defineProperty31(this, "enabled", void 0);
    this.pulls = pulls2.map(function(pull) {
      return new Pull(pull);
    });
    this.enabled = pulls2.map(function() {
      return PullState.MAYBE_UNSURE;
    });
  }
  _createClass29(PullStrategy2, [{
    key: "update",
    value: function update() {
      var pulled = new Set(get("_roninStoragePulls").split(",").map(function(id) {
        return parseInt(id);
      }).filter(function(id) {
        return id > 0;
      }).map(function(id) {
        return import_kolmafia95.Item.get(id);
      }));
      var count = (0, import_kolmafia95.pullsRemaining)() - (20 - args.major.pulls);
      if ((0, import_kolmafia95.inHardcore)() || (0, import_kolmafia95.myTurncount)() >= 1e3) count = 0;
      for (var i = 0; i < this.pulls.length; i++) {
        if (this.pulls[i].wasPulled(pulled)) {
          this.enabled[i] = PullState.PULLED;
          continue;
        }
        switch (this.pulls[i].shouldPull()) {
          case false:
            this.enabled[i] = PullState.UNNEEDED;
            continue;
          case true:
            this.enabled[i] = count > 0 ? PullState.READY : PullState.MAYBE_IFROOM;
            count--;
            continue;
          case void 0:
            this.enabled[i] = PullState.MAYBE_UNSURE;
            count--;
            continue;
        }
      }
    }
  }, {
    key: "pullsUsed",
    value: function pullsUsed() {
      return get("_roninStoragePulls").split(",").length;
    }
    /**
     * Attempt to pull the provided item without distrupting the plan.
     *
     * This will only work if the item is listed as a possible pull in the list,
     * but its ready() method is returning undefined, so it is MAYBE_UNSURE in
     * the current pull strategy.
     *
     * @param item The item to check.
     * @returns True if the item was pulled.
     */
  }, {
    key: "pullIfReady",
    value: function pullIfReady(item14) {
      for (var i = 0; i < this.pulls.length; i++) {
        if (this.enabled[i] !== PullState.MAYBE_UNSURE) continue;
        var options = this.pulls[i].items();
        if (options.includes(item14)) {
          this.pulls[i].pull();
          this.update();
          return true;
        }
      }
      return false;
    }
  }]);
  return PullStrategy2;
}();
var pullStrategy = new PullStrategy(pulls);
var PullQuest = {
  name: "Pull",
  tasks: [].concat(_toConsumableArray30(pullStrategy.pulls.map(function(pull, index) {
    return {
      name: pull.name,
      priority: function() {
        return Priorities.Free;
      },
      after: [],
      ready: function() {
        return pullStrategy.enabled[index] === PullState.READY;
      },
      completed: function() {
        return pullStrategy.enabled[index] === PullState.PULLED || pullStrategy.enabled[index] === PullState.UNNEEDED;
      },
      do: function() {
        return pull.pull();
      },
      post: function() {
        pull.post();
        pullStrategy.update();
      },
      limit: {
        tries: 1
      },
      freeaction: true
    };
  })), [{
    // Add a last task that tracks if all pulls have been done, for routing
    name: "All",
    after: pullStrategy.pulls.map(function(pull) {
      return pull.name;
    }),
    completed: function() {
      return true;
    },
    do: function() {
      throw "Should never run";
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }])
};

// src/route.ts
var ROUTE_WAIT_TO_NCFORCE = 55;
var ROUTE_WAIT_TO_EVENTUALLY_NCFORCE = 200;
var routing = [
  // Break pvp stone ASAP
  "Misc/Break Stone",
  "Pull/All",
  // Start with the basic leveling tasks
  "Toot/Finish",
  // Get basic gear
  "Misc/Workshed",
  "Misc/Goose Exp",
  "Misc/Acquire Birch Battery",
  "Keys/Deck",
  // Level up
  "Misc/Cloud Talk",
  "Summon/War Frat 151st Infantryman",
  // Summon before leaving level 1
  "Misc/LOV Tunnel",
  "Misc/Daycare",
  "Misc/Bastille",
  "Misc/Mouthwash",
  "Misc/Snojo",
  // Eat as soon as possible
  "Diet/Eat",
  "Diet/Drink",
  "Diet/Numberology",
  // Start quests when able
  "Knob/Start",
  "McLargeHuge/Trapper Request",
  // Unlock island to start YRing
  "Misc/Unlock Island Submarine",
  "Misc/Unlock Island",
  // Initial tasks for delay
  "Manor/Kitchen",
  "Macguffin/Forest",
  // Start before -combat buffs
  "Mosquito/Burn Delay",
  "Macguffin/Compass",
  // Unlock desert for ultrahydrated use
  "Manor/Start Floor2",
  // First -combat group
  "War/Enrage",
  // Open the War ASAP for Yellow rays
  "War/Flyers Start",
  // Start the war and get flyers
  "War/Flyers End",
  // End the flyers quest ASAP in case of tracking errors
  "Giant/Basement Finish",
  // Nice big delay zone before manor is opened
  "Crypt/Cranny",
  "Hidden City/Forest Coin",
  // First to get meat
  "Hidden City/Forest Map",
  "Hidden City/Forest Fertilizer",
  "Hidden City/Forest Sapling",
  // Last to sell bar skins
  "Mosquito/Finish",
  // Do summons when ready
  "Summon/Mountain Man",
  "Summon/Astrologer Of Shub-Jigguwatt",
  "Summon/Astronomer",
  "Summon/Camel's Toe",
  "Summon/Baa'baa'bu'ran",
  // Start Hidden city
  "Hidden City/Open Temple",
  "Hidden City/Open City",
  "Hidden City/Open Bowling",
  "Hidden City/Open Office",
  "Hidden City/Open Hospital",
  "Hidden City/Open Apartment",
  // Setup additional -combats
  "Palindome/Copperhead",
  "Manor/Bedroom",
  "Palindome/Bat Snake",
  "Bat/Use Sonar 3",
  // Reveal more delay
  "Palindome/Cold Snake",
  "McLargeHuge/Climb",
  "Hidden City/Banish Janitors",
  // Get and use clovers
  "Misc/Hermit Clover",
  "McLargeHuge/Trapper Return",
  "Palindome/Protesters",
  // The following 3 tasks should always stay in this order
  "Macguffin/Oasis",
  // Get ultrahydrated as soon as needed
  "Macguffin/Oasis Drum",
  // Get drum as soon as pages are gathered
  "Macguffin/Desert",
  // charge camel for protestors
  // Finish remaining quests
  "Giant/Unlock HITS",
  "Crypt/Alcove",
  // Hidden City
  "Hidden City/Office Files",
  // Banish janitors under delay
  "Hidden City/Apartment",
  "Hidden City/Hospital",
  "Hidden City/Bowling",
  "Manor/Boss",
  "McLargeHuge/Finish",
  // Get Eagle beast banish
  "Giant/Finish",
  "Palindome/Talisman",
  "Palindome/Palindome Dudes",
  // Use Eagle beast banish
  "Crypt/Niche",
  "War/Junkyard End",
  "Tavern/Finish",
  // Setup for +meat/+item set
  "Digital/Vanya",
  "Digital/Megalo",
  "Hidden City/Office Boss",
  // Get Eagle dude banish
  "Macguffin/Upper Chamber",
  "Orc Chasm/Start Peaks",
  "Orc Chasm/ABoo Carto",
  "War/Open Nuns",
  // Bulk +meat/+item tasks
  "Misc/Shadow Rift",
  "Misc/Shadow Lodestone",
  "War/Nuns",
  "Crypt/Nook",
  "Orc Chasm/ABoo Clues",
  "Digital/Hero",
  "Orc Chasm/Oil Jar",
  "Macguffin/Middle Chamber",
  // Avoid Eagle beast banish!
  "Orc Chasm/Twin Init Search",
  "Orc Chasm/Twin Init",
  // Use Eagle dude banish
  "Digital/Key",
  "Keys/Star Key",
  // Allow for better use of orb
  "Macguffin/Finish",
  "Crypt/Finish",
  "War/Boss Hippie",
  "Orc Chasm/Finish",
  // Finish up with last delay
  "Bat/Finish",
  "Misc/Eldritch Tentacle",
  "Knob/King",
  // Leave open a while for remaining runaways
  "Friar/Finish",
  // Finish last keys
  "Keys/All Heroes",
  "Tower/Naughty Sorceress"
];
function prioritize(tasks) {
  return orderByRoute(tasks, routing, false);
}

// src/engine/engine.ts
var _templateObject599;
var _templateObject2156;
var _templateObject3142;
var _templateObject4123;
var _templateObject5100;
var _templateObject667;
var _templateObject758;
var _templateObject850;
var _templateObject941;
var _templateObject1036;
var _templateObject1133;
var _templateObject1233;
var _templateObject1330;
var _templateObject1428;
var _templateObject1525;
var _templateObject1625;
var _templateObject1725;
var _templateObject1825;
var _templateObject1923;
var _templateObject2023;
var _templateObject2157;
var _templateObject2225;
var _templateObject2323;
var _templateObject2422;
var _templateObject2521;
var _templateObject2620;
var _templateObject2720;
var _templateObject2818;
var _templateObject2918;
var _templateObject3018;
var _templateObject3143;
var _templateObject3220;
var _templateObject3319;
var _templateObject3416;
var _templateObject3515;
var _templateObject3615;
var _templateObject3715;
var _templateObject3815;
var _templateObject3915;
var _templateObject4015;
var _templateObject4124;
var _templateObject4217;
var _templateObject4316;
var _templateObject4415;
var _templateObject4515;
var _templateObject4615;
var _templateObject4715;
var _templateObject4815;
var _templateObject4915;
var _templateObject5015;
var _templateObject5116;
var _templateObject5216;
var _templateObject5315;
var _templateObject5415;
var _templateObject5514;
var _templateObject5613;
var _templateObject5713;
var _templateObject5812;
var _templateObject5910;
var _templateObject608;
var _templateObject6114;
var _templateObject6213;
var _templateObject6313;
var _templateObject6413;
var _templateObject6512;
var _templateObject668;
var _templateObject677;
var _templateObject687;
var _templateObject697;
var _templateObject707;
var _templateObject7112;
var _templateObject7212;
var _templateObject7311;
var _templateObject7411;
function _toConsumableArray31(arr) {
  return _arrayWithoutHoles31(arr) || _iterableToArray31(arr) || _unsupportedIterableToArray51(arr) || _nonIterableSpread31();
}
function _nonIterableSpread31() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray31(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles31(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray51(arr);
}
function _taggedTemplateLiteral85(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _createForOfIteratorHelper26(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray51(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray51(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray51(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray51(o, minLen);
}
function _arrayLikeToArray51(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function ownKeys16(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread16(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys16(Object(t), true).forEach(function(r2) {
      _defineProperty32(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys16(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty32(obj, key, value) {
  key = _toPropertyKey37(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _classCallCheck30(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties30(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey37(descriptor.key), descriptor);
  }
}
function _createClass30(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties30(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties30(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey37(t) {
  var i = _toPrimitive37(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive37(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _callSuper8(t, o, e) {
  return o = _getPrototypeOf8(o), _possibleConstructorReturn8(t, _isNativeReflectConstruct8() ? Reflect.construct(o, e || [], _getPrototypeOf8(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn8(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized8(self);
}
function _assertThisInitialized8(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _isNativeReflectConstruct8() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct8 = function _isNativeReflectConstruct9() {
    return !!t;
  })();
}
function _get2() {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get2 = Reflect.get.bind();
  } else {
    _get2 = function _get3(target, property, receiver) {
      var base = _superPropBase2(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);
      if (desc.get) {
        return desc.get.call(arguments.length < 3 ? target : receiver);
      }
      return desc.value;
    };
  }
  return _get2.apply(this, arguments);
}
function _superPropBase2(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = _getPrototypeOf8(object);
    if (object === null) break;
  }
  return object;
}
function _getPrototypeOf8(o) {
  _getPrototypeOf8 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf9(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf8(o);
}
function _inherits9(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass) _setPrototypeOf9(subClass, superClass);
}
function _setPrototypeOf9(o, p) {
  _setPrototypeOf9 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf10(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf9(o, p);
}
var wanderingNCs2 = /* @__PURE__ */ new Set(["Wooof! Wooooooof!", "Playing Fetch*", "A Pound of Cure", "Aunts not Ants", "Bath Time", "Beware of Aligator", "Delicious Sprouts", "Hypnotic Master", "Lost and Found", "Poetic Justice", "Summer Days", "Teacher's Pet"]);
var Engine2 = /* @__PURE__ */ function(_BaseEngine) {
  _inherits9(Engine3, _BaseEngine);
  function Engine3(tasks, ignoreTasks, completedTasks) {
    var _this;
    _classCallCheck30(this, Engine3);
    var ignore_set = new Set(ignoreTasks.map(function(n) {
      return n.trim();
    }));
    var completed_set = new Set(completedTasks.map(function(n) {
      return n.trim();
    }));
    tasks = tasks.map(function(task2) {
      if (completed_set.has(task2.name)) return _objectSpread16(_objectSpread16({}, task2), {}, {
        completed: function() {
          return true;
        }
      });
      if (ignore_set.has(task2.name)) return _objectSpread16(_objectSpread16({}, task2), {}, {
        ready: function() {
          return false;
        }
      });
      return task2;
    });
    _this = _callSuper8(this, Engine3, [tasks, {
      combat_defaults: new MyActionDefaults()
    }]);
    var _iterator = _createForOfIteratorHelper26(ignore_set), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var task = _step.value;
        if (!_this.tasks_by_name.has(task)) debug("Warning: Unknown ignoretask ".concat(task));
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    var _iterator2 = _createForOfIteratorHelper26(completed_set), _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
        var _task = _step2.value;
        if (!_this.tasks_by_name.has(_task)) debug("Warning: Unknown completedtask ".concat(_task));
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    return _this;
  }
  _createClass30(Engine3, [{
    key: "getNextTask",
    value: function getNextTask() {
      var _this = this;
      this.updatePlan();
      var available_tasks = this.tasks.filter(function(task) {
        return _this.available(task);
      });
      if ((0, import_kolmafia96.myPath)() !== $path(_templateObject599 || (_templateObject599 = _taggedTemplateLiteral85(["A Shrunken Adventurer am I"])))) return void 0;
      if (have($effect(_templateObject2156 || (_templateObject2156 = _taggedTemplateLiteral85(["Teleportitis"]))))) {
        var teleportitis = teleportitisTask(this, this.tasks);
        if (teleportitis.completed() && removeTeleportitis.ready()) {
          return _objectSpread16(_objectSpread16({}, removeTeleportitis), {}, {
            active_priority: Prioritization.fixed(Priorities.Always)
          });
        }
        return _objectSpread16(_objectSpread16({}, teleportitis), {}, {
          active_priority: Prioritization.fixed(Priorities.Always)
        });
      }
      var task_priorities = available_tasks.map(function(task) {
        return _objectSpread16(_objectSpread16({}, task), {}, {
          active_priority: Prioritization.from(task)
        });
      });
      var scored_tasks = [];
      for (var i = 0; i < task_priorities.length; i++) {
        scored_tasks.push({
          task: task_priorities[i],
          score: task_priorities[i].active_priority.score(),
          index: i
        });
      }
      scored_tasks.sort(function(a, b) {
        if (a.score === b.score) return a.index - b.index;
        return b.score - a.score;
      });
      if (args.debug.verbose) {
        (0, import_kolmafia96.printHtml)("");
        (0, import_kolmafia96.printHtml)("Available Tasks:");
        var _iterator3 = _createForOfIteratorHelper26(scored_tasks), _step3;
        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
            var _scored_task$task$act, _scored_task$task$act2;
            var scored_task = _step3.value;
            var _name = scored_task.task.name;
            var reason = (_scored_task$task$act = (_scored_task$task$act2 = scored_task.task.active_priority) === null || _scored_task$task$act2 === void 0 ? void 0 : _scored_task$task$act2.explainWithColor()) !== null && _scored_task$task$act !== void 0 ? _scored_task$task$act : "Available";
            var score = scored_task.score;
            (0, import_kolmafia96.printHtml)("<u>".concat(_name, "</u>: ").concat(reason, " <font color='#888888'>(").concat(score, ")</font>"));
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
        (0, import_kolmafia96.printHtml)("");
      }
      if (scored_tasks.length > 0) return scored_tasks[0].task;
      return void 0;
    }
  }, {
    key: "execute",
    value: function execute(task) {
      var _task$active_priority, _task$active_priority2, _task$ready, _task$ready2;
      debug("");
      var reason = (_task$active_priority = (_task$active_priority2 = task.active_priority) === null || _task$active_priority2 === void 0 ? void 0 : _task$active_priority2.explain()) !== null && _task$active_priority !== void 0 ? _task$active_priority : "";
      var why = reason === "" ? "Route" : reason;
      debug("Executing ".concat(task.name, " [").concat(why, "]"), "blue");
      this.checkLimits(_objectSpread16(_objectSpread16({}, task), {}, {
        limit: _objectSpread16(_objectSpread16({}, task.limit), {}, {
          unready: false
        })
      }), function() {
        return true;
      });
      if ((0, import_kolmafia96.myAdventures)() < args.debug.halt) throw "Running out of adventures!";
      _get2(_getPrototypeOf8(Engine3.prototype), "execute", this).call(this, task);
      if (task.completed()) {
        debug("".concat(task.name, " completed!"), "blue");
      } else if (!((_task$ready = (_task$ready2 = task.ready) === null || _task$ready2 === void 0 ? void 0 : _task$ready2.call(task)) !== null && _task$ready !== void 0 ? _task$ready : true)) {
        debug("".concat(task.name, " not completed! [Again? Not ready]"), "blue");
      } else {
        var priority_explain = Prioritization.from(task).explain();
        if (priority_explain !== "") {
          debug("".concat(task.name, " not completed! [Again? ").concat(priority_explain, "]"), "blue");
        } else {
          debug("".concat(task.name, " not completed!"), "blue");
        }
      }
    }
  }, {
    key: "customize",
    value: function customize(task, outfit2, combat, resources) {
      var _this = this;
      var _task$active_priority3, _task$active_priority4, _task$active_priority5, _task$active_priority8, _task$active_priority9, _task$combat, _task$combat2, _task$combat3, _task$combat4, _task$combat5, _task$combat6, _task$nofightingfamil, _task$orbtargets, _task$orbtargets2, _task$nofightingfamil2;
      if (undelay(task.freeaction)) {
        return;
      }
      var wanderers2 = [];
      if ((_task$active_priority3 = task.active_priority) !== null && _task$active_priority3 !== void 0 && _task$active_priority3.has(Priorities.Wanderer)) {
        var prioritizedWanderer = wandererSources.find(function(source) {
          return source.available() && source.chance() === 1;
        });
        if (!prioritizedWanderer) throw "Wanderer prioritized but no wanderer found";
        if (!equipFirst(outfit2, [prioritizedWanderer])) throw "Wanderer equipment ".concat(prioritizedWanderer.equip, " conflicts with ").concat(task.name);
        wanderers2.push(prioritizedWanderer);
      }
      if ((_task$active_priority4 = task.active_priority) !== null && _task$active_priority4 !== void 0 && _task$active_priority4.has(Priorities.LastCopyableMonster)) {
        var backup = getActiveBackupTarget();
        if (!backup) throw "Backup requested but lastCopyableMonster changed?";
        if (!outfit2.equip($item(_templateObject3142 || (_templateObject3142 = _taggedTemplateLiteral85(["backup camera"]))))) throw "Cannot force backup camera on ".concat(task.name);
        if (backup.outfit && !outfit2.equip(undelay(backup.outfit))) throw "Cannot match equip for backup ".concat(backup.monster, " on ").concat(task.name);
        outfit2.equip({
          avoid: $items(_templateObject4123 || (_templateObject4123 = _taggedTemplateLiteral85(["carnivorous potted plant"])))
        });
        combat.startingMacro(Macro.if_("!monsterid 49", Macro.trySkill($skill(_templateObject5100 || (_templateObject5100 = _taggedTemplateLiteral85(["Back-Up to your Last Enemy"]))))));
        combat.action("killHard");
      }
      equipInitial(outfit2);
      if ((_task$active_priority5 = task.active_priority) !== null && _task$active_priority5 !== void 0 && _task$active_priority5.has(Priorities.GoodCleaver)) outfit2.equip($item(_templateObject667 || (_templateObject667 = _taggedTemplateLiteral85(["June cleaver"]))));
      if (combat.getDefaultAction() === void 0) combat.action("ignore");
      var blacklist = new Set($locations(_templateObject758 || (_templateObject758 = _taggedTemplateLiteral85(["The Copperhead Club, The Black Forest, Oil Peak"]))));
      var monster_blacklist = [].concat(_toConsumableArray31(getTodaysHolidayWanderers()), [$monster(_templateObject850 || (_templateObject850 = _taggedTemplateLiteral85(["sausage goblin"]))), $monster(_templateObject941 || (_templateObject941 = _taggedTemplateLiteral85(["ninja snowman assassin"]))), $monster(_templateObject1036 || (_templateObject1036 = _taggedTemplateLiteral85(["Protagonist"]))), $monster(_templateObject1133 || (_templateObject1133 = _taggedTemplateLiteral85(["Quantum Mechanic"]))), $monster(_templateObject1233 || (_templateObject1233 = _taggedTemplateLiteral85(["government bureaucrat"]))), $monster(_templateObject1330 || (_templateObject1330 = _taggedTemplateLiteral85(["terrible mutant"]))), $monster(_templateObject1428 || (_templateObject1428 = _taggedTemplateLiteral85(["angry ghost"]))), $monster(_templateObject1525 || (_templateObject1525 = _taggedTemplateLiteral85(["annoyed snake"]))), $monster(_templateObject1625 || (_templateObject1625 = _taggedTemplateLiteral85(["slime blob"])))]);
      if (get("camelSpit") === 100) monster_blacklist.push($monster(_templateObject1725 || (_templateObject1725 = _taggedTemplateLiteral85(["pygmy bowler"]))));
      if (have($item(_templateObject1825 || (_templateObject1825 = _taggedTemplateLiteral85(["rock band flyers"])))) && !flyersDone() && (!(task.do instanceof import_kolmafia96.Location) || !blacklist.has(task.do)) && task.name !== "Misc/Protonic Ghost") {
        combat.macro(new Macro().if_("!hpbelow 50 && ".concat(monster_blacklist.map(function(m) {
          return "!monsterid ".concat(m.id);
        }).join(" && ")), new Macro().tryItem($item(_templateObject1923 || (_templateObject1923 = _taggedTemplateLiteral85(["rock band flyers"]))))), void 0, true);
      }
      if (have($item(_templateObject2023 || (_templateObject2023 = _taggedTemplateLiteral85(["red rocket"])))) && (0, import_kolmafia96.myFullness)() === 0 && (0, import_kolmafia96.myTurncount)() > 1 && (0, import_kolmafia96.myLevel)() < 12 && !have($effect(_templateObject2157 || (_templateObject2157 = _taggedTemplateLiteral85(["Everything Looks Red"]))))) {
        combat.macro(new Macro().tryItem($item(_templateObject2225 || (_templateObject2225 = _taggedTemplateLiteral85(["red rocket"])))), void 0, true);
      }
      if (wanderers2.length === 0) {
        var _task$active_priority6, _task$active_priority7, _force_item_source;
        if (combat.can("yellowRay") && !have($effect(_templateObject2323 || (_templateObject2323 = _taggedTemplateLiteral85(["Everything Looks Yellow"]))))) {
          resources.provide("yellowRay", equipFirst(outfit2, yellowRaySources));
        }
        var force_item_source = void 0;
        if (combat.can("forceItems")) {
          force_item_source = equipFirst(outfit2, forceItemSources);
          if (force_item_source === void 0 && !have($effect(_templateObject2422 || (_templateObject2422 = _taggedTemplateLiteral85(["Everything Looks Yellow"]))))) force_item_source = equipFirst(outfit2, yellowRaySources);
          resources.provide("forceItems", force_item_source);
        }
        var banish_state = globalStateCache.banishes();
        if (combat.can("banish") && !banish_state.isFullyBanished(task)) {
          var available_tasks = this.tasks.filter(function(task2) {
            return _this.available(task2);
          });
          var banishSources3 = unusedBanishes(banish_state, available_tasks);
          resources.provide("banish", equipFirst(outfit2, banishSources3));
          debug("Banish targets: ".concat(combat.where("banish").filter(function(monster2) {
            return !banish_state.already_banished.has(monster2);
          }).join(", ")));
          debug("Banishes available: ".concat(Array.from(banishSources3).map(function(b) {
            return b.do;
          }).join(", ")));
        }
        if ((_task$active_priority6 = task.active_priority) !== null && _task$active_priority6 !== void 0 && _task$active_priority6.has(Priorities.BadOrb)) {
          outfit2.equip({
            avoid: $items(_templateObject2521 || (_templateObject2521 = _taggedTemplateLiteral85(["miniature crystal ball"])))
          });
          if (outfit2.equips.get($slot(_templateObject2620 || (_templateObject2620 = _taggedTemplateLiteral85(["familiar"])))) === $item(_templateObject2720 || (_templateObject2720 = _taggedTemplateLiteral85(["miniature crystal ball"])))) {
            outfit2.equips.delete($slot(_templateObject2818 || (_templateObject2818 = _taggedTemplateLiteral85(["familiar"]))));
          }
        }
        if ((_task$active_priority7 = task.active_priority) !== null && _task$active_priority7 !== void 0 && _task$active_priority7.has(Priorities.GoodOrb) && (!combat.can("banish") || !banish_state.isFullyBanished(task))) {
          outfit2.equip($item(_templateObject2918 || (_templateObject2918 = _taggedTemplateLiteral85(["miniature crystal ball"]))));
        }
        if (!outfit2.skipDefaults) {
          var runawaySources = getRunawaySources(task.do instanceof import_kolmafia96.Location ? task.do : void 0);
          var runaway = void 0;
          if (combat.can("ignore") || combat.can("ignoreSoftBanish")) {
            var _runaway, _task$other_effects;
            runaway = equipFirst(outfit2, runawaySources);
            if ((_runaway = runaway) !== null && _runaway !== void 0 && _runaway.effect) task.other_effects = [].concat(_toConsumableArray31((_task$other_effects = task.other_effects) !== null && _task$other_effects !== void 0 ? _task$other_effects : []), [runaway.effect]);
            resources.provide("ignore", runaway);
            resources.provide("ignoreSoftBanish", runaway);
          }
          if (combat.can("ignoreNoBanish") && (0, import_kolmafia96.myLevel)() >= 11) {
            if (runaway !== void 0 && !runaway.banishes) resources.provide("ignoreNoBanish", runaway);
            else {
              var _runaway2, _task$other_effects2;
              runaway = equipFirst(outfit2, runawaySources.filter(function(source) {
                return !source.banishes;
              }));
              resources.provide("ignoreNoBanish", runaway);
              if ((_runaway2 = runaway) !== null && _runaway2 !== void 0 && _runaway2.effect) task.other_effects = [].concat(_toConsumableArray31((_task$other_effects2 = task.other_effects) !== null && _task$other_effects2 !== void 0 ? _task$other_effects2 : []), [runaway.effect]);
            }
          }
        }
        if (combat.can("killFree") || (combat.can("kill") || combat.can("killItem")) && !task.boss && this.tasks.every(function(t) {
          var _t$combat;
          return t.completed() || !((_t$combat = t.combat) !== null && _t$combat !== void 0 && _t$combat.can("killFree"));
        }) && get("sidequestNunsCompleted") !== "none") {
          resources.provide("killFree", equipFirst(outfit2, freekillSources));
        }
        var nc_blacklist = new Set($locations(_templateObject3018 || (_templateObject3018 = _taggedTemplateLiteral85(["The Enormous Greater-Than Sign, The Copperhead Club, The Black Forest"]))));
        var nc_task_blacklist = /* @__PURE__ */ new Set(["Misc/Protonic Ghost"]);
        if (forceNCPossible() && !(task.do instanceof import_kolmafia96.Location && nc_blacklist.has(task.do)) && !nc_task_blacklist.has(task.name) && !have($effect(_templateObject3143 || (_templateObject3143 = _taggedTemplateLiteral85(["Teleportitis"])))) && ((_force_item_source = force_item_source) === null || _force_item_source === void 0 ? void 0 : _force_item_source.equip) !== $item(_templateObject3220 || (_templateObject3220 = _taggedTemplateLiteral85(["Fourth of May Cosplay Saber"]))) && !get("noncombatForcerActive")) {
          var allowableNCForce = [];
          if ((0, import_kolmafia96.myTurncount)() >= ROUTE_WAIT_TO_NCFORCE) allowableNCForce.push(NCForce.Yes);
          if ((0, import_kolmafia96.myTurncount)() >= ROUTE_WAIT_TO_EVENTUALLY_NCFORCE) allowableNCForce.push(NCForce.Eventually);
          if (this.tasks.find(function(t) {
            return allowableNCForce.includes(undelay(t.ncforce)) && _this.available(t) && t.name !== task.name;
          }) !== void 0) {
            var ncforcer = equipFirst(outfit2, forceNCSources);
            if (ncforcer) {
              combat.macro(ncforcer.do, void 0, true);
            }
          }
        }
      }
      if (wanderers2.length === 0 && hasDelay(task) && !get("noncombatForcerActive") && !((_task$active_priority8 = task.active_priority) !== null && _task$active_priority8 !== void 0 && _task$active_priority8.has(Priorities.LastCopyableMonster))) wanderers2.push.apply(wanderers2, _toConsumableArray31(equipUntilCapped(outfit2, wandererSources)));
      var mightKillSomething = ((_task$active_priority9 = task.active_priority) === null || _task$active_priority9 === void 0 ? void 0 : _task$active_priority9.has(Priorities.Wanderer)) || ((_task$combat = task.combat) === null || _task$combat === void 0 ? void 0 : _task$combat.can("kill")) || ((_task$combat2 = task.combat) === null || _task$combat2 === void 0 ? void 0 : _task$combat2.can("killHard")) || ((_task$combat3 = task.combat) === null || _task$combat3 === void 0 ? void 0 : _task$combat3.can("killItem")) || ((_task$combat4 = task.combat) === null || _task$combat4 === void 0 ? void 0 : _task$combat4.can("killFree")) || ((_task$combat5 = task.combat) === null || _task$combat5 === void 0 ? void 0 : _task$combat5.can("forceItems")) || ((_task$combat6 = task.combat) === null || _task$combat6 === void 0 ? void 0 : _task$combat6.can("yellowRay")) || !resources.has("ignore") && !resources.has("banish");
      equipCharging(outfit2, mightKillSomething !== null && mightKillSomething !== void 0 ? mightKillSomething : false, (_task$nofightingfamil = task.nofightingfamiliars) !== null && _task$nofightingfamil !== void 0 ? _task$nofightingfamil : false);
      if (get("noncombatForcerActive")) {
        outfit2.equip({
          avoid: $items(_templateObject3319 || (_templateObject3319 = _taggedTemplateLiteral85(["Kramco Sausage-o-Matic\u2122"])))
        });
      }
      if (!outfit2.skipDefaults) {
        var freecombat = task.freecombat || wanderers2.find(function(wanderer2) {
          return wanderer2.chance() === 1;
        });
        var modifier = getModifiersFrom(outfit2);
        var glass_useful = canChargeVoid() && !modifier.includes("-combat") && !freecombat && (combat.can("kill") && !resources.has("killFree") || combat.can("killHard") || task.boss);
        if (glass_useful && get("_voidFreeFights") < 4)
          outfit2.equip($item(_templateObject3416 || (_templateObject3416 = _taggedTemplateLiteral85(["cursed magnifying glass"]))));
        if (!task.boss && !freecombat && !modifier.includes("-combat") && !modifier.includes("ML")) outfit2.equip($item(_templateObject3515 || (_templateObject3515 = _taggedTemplateLiteral85(["carnivorous potted plant"]))));
        if (glass_useful) outfit2.equip($item(_templateObject3615 || (_templateObject3615 = _taggedTemplateLiteral85(["cursed magnifying glass"]))));
      }
      var orb_targets = (_task$orbtargets = (_task$orbtargets2 = task.orbtargets) === null || _task$orbtargets2 === void 0 ? void 0 : _task$orbtargets2.call(task)) !== null && _task$orbtargets !== void 0 ? _task$orbtargets : [];
      if (orb_targets.length > 0 && !outfit2.skipDefaults) {
        outfit2.equip($item(_templateObject3715 || (_templateObject3715 = _taggedTemplateLiteral85(["miniature crystal ball"]))));
      }
      equipDefaults(outfit2, (_task$nofightingfamil2 = task.nofightingfamiliars) !== null && _task$nofightingfamil2 !== void 0 ? _task$nofightingfamil2 : false);
      for (var _i = 0, _wanderers = wanderers2; _i < _wanderers.length; _i++) {
        var wanderer = _wanderers[_i];
        var _iterator4 = _createForOfIteratorHelper26(undelay(wanderer.monsters)), _step4;
        try {
          for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
            var monster = _step4.value;
            if (combat.currentStrategy(monster) !== "killHard") {
              combat.action("killHard", monster);
              if (wanderer.action) combat.macro(wanderer.action, monster);
            }
          }
        } catch (err) {
          _iterator4.e(err);
        } finally {
          _iterator4.f();
        }
      }
      var holidayMonsters = getTodaysHolidayWanderers();
      if (holidayMonsters.length > 0 && !task.boss) combat.action.apply(combat, ["ignore"].concat(_toConsumableArray31(holidayMonsters)));
      if (resources.has("killFree") && !task.boss) {
        var _combat$where, _combat$where2;
        combat.action("killFree", ((_combat$where = combat.where("kill")) !== null && _combat$where !== void 0 ? _combat$where : []).filter(function(mon) {
          return !mon.boss;
        }));
        combat.action("killFree", ((_combat$where2 = combat.where("killItem")) !== null && _combat$where2 !== void 0 ? _combat$where2 : []).filter(function(mon) {
          return !mon.boss;
        }));
        if (combat.getDefaultAction() === "kill") combat.action("killFree");
        if (combat.getDefaultAction() === "killItem") combat.action("killFree");
      }
    }
  }, {
    key: "createOutfit",
    value: function createOutfit(task) {
      var spec = undelay(task.outfit);
      var outfit2 = new Outfit();
      if (spec !== void 0) outfit2.equip(spec);
      return outfit2;
    }
    /**
     * Acquire all effects for the task.
     * @param _task The current executing task.
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
  }, {
    key: "acquireEffects",
    value: function acquireEffects(task) {
    }
  }, {
    key: "dress",
    value: function dress(task, outfit2) {
      var _undelay, _task$other_effects3;
      var effects = (_undelay = undelay(task.effects)) !== null && _undelay !== void 0 ? _undelay : [];
      var other_effects = (_task$other_effects3 = task.other_effects) !== null && _task$other_effects3 !== void 0 ? _task$other_effects3 : [];
      applyEffects(outfit2.modifier.join(","), [].concat(_toConsumableArray31(effects), _toConsumableArray31(other_effects)));
      try {
        cacheDress(outfit2);
      } catch (_unused) {
        debug("Possible mafia desync detected; refreshing...");
        (0, import_kolmafia97.cliExecute)("refresh all");
        outfit2.dress();
      }
      fixFoldables(outfit2);
      var equipped = _toConsumableArray31(new Set(import_kolmafia96.Slot.all().map(function(slot) {
        return (0, import_kolmafia96.equippedItem)(slot);
      })));
      if (args.debug.verboseequip) {
        (0, import_kolmafia96.print)("Equipped: ".concat(equipped.join(", ")));
      } else {
        (0, import_kolmafia96.logprint)("Equipped: ".concat(equipped.join(", ")));
      }
      logModifiers(outfit2);
      if (undelay(task.freeaction)) {
        return;
      }
      if ((have($effect(_templateObject3815 || (_templateObject3815 = _taggedTemplateLiteral85(["Once-Cursed"])))) || have($effect(_templateObject3915 || (_templateObject3915 = _taggedTemplateLiteral85(["Twice-Cursed"])))) || have($effect(_templateObject4015 || (_templateObject4015 = _taggedTemplateLiteral85(["Thrice-Cursed"]))))) && get("hiddenApartmentProgress") < 7) {
        this.propertyManager.set({
          hpAutoRecoveryItems: ensureRecovery("hpAutoRecoveryItems", [], ["relaxing hot tub"])
        });
      } else {
        this.propertyManager.set({
          hpAutoRecoveryItems: ensureRecovery("hpAutoRecoveryItems", ["relaxing hot tub"], [])
        });
      }
      if ((0, import_kolmafia96.myHp)() < 100 && (0, import_kolmafia96.myHp)() < (0, import_kolmafia96.myMaxhp)()) (0, import_kolmafia96.restoreHp)((0, import_kolmafia96.myMaxhp)() < 100 ? (0, import_kolmafia96.myMaxhp)() : 100);
      if ((0, import_kolmafia96.myMp)() < 50 && (0, import_kolmafia96.myMaxmp)() >= 50) customRestoreMp(50);
      else if ((0, import_kolmafia96.myMp)() < 40 && (0, import_kolmafia96.myMaxmp)() >= 40) customRestoreMp(40);
      else if ((0, import_kolmafia96.myMp)() < 20) customRestoreMp(20);
      if (have(args.minor.stillsuit) && ((0, import_kolmafia97.itemAmount)($item(_templateObject4124 || (_templateObject4124 = _taggedTemplateLiteral85(["tiny stillsuit"])))) > 0 || (0, import_kolmafia96.availableAmount)($item(_templateObject4217 || (_templateObject4217 = _taggedTemplateLiteral85(["tiny stillsuit"])))) > 0 && !(0, import_kolmafia96.haveEquipped)($item(_templateObject4316 || (_templateObject4316 = _taggedTemplateLiteral85(["tiny stillsuit"])))) && (0, import_kolmafia96.familiarEquippedEquipment)(args.minor.stillsuit) !== $item(_templateObject4415 || (_templateObject4415 = _taggedTemplateLiteral85(["tiny stillsuit"]))))) {
        (0, import_kolmafia96.equip)(args.minor.stillsuit, $item(_templateObject4515 || (_templateObject4515 = _taggedTemplateLiteral85(["tiny stillsuit"]))));
      }
    }
  }, {
    key: "setChoices",
    value: function setChoices(task, manager) {
      _get2(_getPrototypeOf8(Engine3.prototype), "setChoices", this).call(this, task, manager);
      if ((0, import_kolmafia97.equippedAmount)($item(_templateObject4615 || (_templateObject4615 = _taggedTemplateLiteral85(["June cleaver"])))) > 0) {
        this.propertyManager.setChoices({
          // June cleaver noncombats
          1467: 3,
          // +adv
          1468: get("_juneCleaverSkips", 0) < 5 ? 4 : 1,
          1469: get("_juneCleaverSkips", 0) < 5 ? 4 : 3,
          1470: 2,
          // teacher's pen
          1471: get("_juneCleaverSkips", 0) < 5 ? 4 : 1,
          1472: get("_juneCleaverSkips", 0) < 5 ? 4 : 2,
          1473: get("_juneCleaverSkips", 0) < 5 ? 4 : 2,
          1474: get("_juneCleaverSkips", 0) < 5 ? 4 : 2,
          1475: get("_juneCleaverSkips", 0) < 5 ? 4 : 1
        });
      }
      this.propertyManager.set({
        stillsuitFamiliar: args.minor.stillsuit
      });
    }
  }, {
    key: "setCombat",
    value: function setCombat(task, task_combat, task_resources) {
      var _iterator5 = _createForOfIteratorHelper26(wandererSources), _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          var wanderer = _step5.value;
          if (wanderer.possible()) {
            var _wanderer$prepare;
            var _iterator6 = _createForOfIteratorHelper26(undelay(wanderer.monsters)), _step6;
            try {
              for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
                var monster = _step6.value;
                if (task_combat.currentStrategy(monster) !== "killHard") {
                  task_combat.action("killHard", monster);
                  if (wanderer.action) task_combat.macro(wanderer.action, monster);
                }
              }
            } catch (err) {
              _iterator6.e(err);
            } finally {
              _iterator6.f();
            }
            (_wanderer$prepare = wanderer.prepare) === null || _wanderer$prepare === void 0 || _wanderer$prepare.call(wanderer);
          }
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
      if ((0, import_kolmafia96.haveEquipped)($item(_templateObject4715 || (_templateObject4715 = _taggedTemplateLiteral85(["carnivorous potted plant"]))))) {
        var _this$options;
        var macro = task_combat.compile(task_resources, (_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.combat_defaults, task.do instanceof import_kolmafia96.Location ? task.do : void 0);
        task_combat.autoattack(macro);
      }
      _get2(_getPrototypeOf8(Engine3.prototype), "setCombat", this).call(this, task, task_combat, task_resources);
    }
  }, {
    key: "do",
    value: function _do(task) {
      var _task$active_priority10;
      var beaten_turns = (0, import_kolmafia96.haveEffect)($effect(_templateObject4815 || (_templateObject4815 = _taggedTemplateLiteral85(["Beaten Up"]))));
      var start_advs = (0, import_kolmafia96.myAdventures)();
      var parachuteTarget = undelay(task.parachute);
      if (parachuteTarget && !((_task$active_priority10 = task.active_priority) !== null && _task$active_priority10 !== void 0 && _task$active_priority10.has(Priorities.GoodOrb))) {
        var baseDo = task.do;
        task.do = function() {
          if (CrepeParachute_exports.fight(parachuteTarget)) return;
          if (baseDo instanceof import_kolmafia96.Location) return baseDo;
          return baseDo();
        };
      }
      var result = typeof task.do === "function" ? task.do() : task.do;
      if (result instanceof import_kolmafia96.Location) {
        var _undelay2;
        var monster_to_map = (_undelay2 = undelay(task.map_the_monster)) !== null && _undelay2 !== void 0 ? _undelay2 : $monster(_templateObject4915 || (_templateObject4915 = _taggedTemplateLiteral85(["none"])));
        if (task.map_the_monster && monster_to_map !== $monster(_templateObject5015 || (_templateObject5015 = _taggedTemplateLiteral85(["none"]))) && get("_monstersMapped") < 3) {
          (0, import_kolmafia96.useSkill)($skill(_templateObject5116 || (_templateObject5116 = _taggedTemplateLiteral85(["Map the Monsters"]))));
          if (get("mappingMonsters")) {
            for (var i = 0; i < 4; i++) {
              _set("lastEncounter", "");
              (0, import_kolmafia96.visitUrl)((0, import_kolmafia96.toUrl)(result));
              (0, import_kolmafia97.runChoice)(1, "heyscriptswhatsupwinkwink=".concat(monster_to_map.id));
              if (!get("mappingMonsters")) break;
              if ((0, import_kolmafia96.myAdventures)() < start_advs) break;
              if (!lastEncounterWasWanderingNC()) break;
            }
          } else {
            (0, import_kolmafia96.adv1)(result, -1, "");
          }
        } else {
          (0, import_kolmafia96.adv1)(result, -1, "");
        }
      }
      (0, import_kolmafia96.runCombat)();
      while ((0, import_kolmafia96.inMultiFight)()) (0, import_kolmafia96.runCombat)();
      if ((0, import_kolmafia96.choiceFollowsFight)()) (0, import_kolmafia97.runChoice)(-1);
      if ((0, import_kolmafia96.myAdventures)() !== start_advs) getExtros();
      if (!undelay(task.expectbeatenup) && have($effect(_templateObject5216 || (_templateObject5216 = _taggedTemplateLiteral85(["Beaten Up"])))) && (0, import_kolmafia96.haveEffect)($effect(_templateObject5315 || (_templateObject5315 = _taggedTemplateLiteral85(["Beaten Up"])))) < 5) {
        if ((0, import_kolmafia96.haveEffect)($effect(_templateObject5415 || (_templateObject5415 = _taggedTemplateLiteral85(["Beaten Up"])))) > beaten_turns || // Turns of beaten-up increased, so we lost
        (0, import_kolmafia96.haveEffect)($effect(_templateObject5514 || (_templateObject5514 = _taggedTemplateLiteral85(["Beaten Up"])))) === beaten_turns && // Turns of beaten-up was constant but adventures went down, so we lost fight while already beaten up
        (0, import_kolmafia96.myAdventures)() < start_advs) {
          (0, import_kolmafia96.print)("Fight was lost (debug info: ".concat(beaten_turns, " => ").concat((0, import_kolmafia96.haveEffect)($effect(_templateObject5613 || (_templateObject5613 = _taggedTemplateLiteral85(["Beaten Up"])))), ", (").concat(start_advs, " => ").concat((0, import_kolmafia96.myAdventures)(), "); stop."));
          throw "Fight was lost (debug info: ".concat(beaten_turns, " => ").concat((0, import_kolmafia96.haveEffect)($effect(_templateObject5713 || (_templateObject5713 = _taggedTemplateLiteral85(["Beaten Up"])))), ", (").concat(start_advs, " => ").concat((0, import_kolmafia96.myAdventures)(), "); stop.");
        }
      }
    }
  }, {
    key: "post",
    value: function post(task) {
      var _task$active_priority11;
      _get2(_getPrototypeOf8(Engine3.prototype), "post", this).call(this, task);
      if (get("lastCopyableMonster") === $monster(_templateObject5812 || (_templateObject5812 = _taggedTemplateLiteral85(["giant swarm of ghuol whelps"])))) (0, import_kolmafia96.visitUrl)("crypt.php");
      if ((_task$active_priority11 = task.active_priority) !== null && _task$active_priority11 !== void 0 && _task$active_priority11.has(Priorities.BadOrb) && !(0, import_kolmafia96.haveEquipped)($item(_templateObject5910 || (_templateObject5910 = _taggedTemplateLiteral85(["miniature crystal ball"]))))) resetBadOrb();
      if (get("_latteBanishUsed") && shouldFinishLatte()) refillLatte();
      autosellJunk();
      var _iterator7 = _createForOfIteratorHelper26($effects(_templateObject608 || (_templateObject608 = _taggedTemplateLiteral85(["Hardly Poisoned at All, A Little Bit Poisoned, Somewhat Poisoned, Really Quite Poisoned, Majorly Poisoned, Toad In The Hole"])))), _step7;
      try {
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
          var poisoned = _step7.value;
          if (have(poisoned)) uneffect(poisoned);
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }
      globalStateCache.invalidate();
    }
  }, {
    key: "initPropertiesManager",
    value: function initPropertiesManager(manager) {
      _get2(_getPrototypeOf8(Engine3.prototype), "initPropertiesManager", this).call(this, manager);
      manager.set({
        louvreGoal: 7,
        louvreDesiredGoal: 7,
        requireBoxServants: false,
        autoAbortThreshold: "-0.05",
        recoveryScript: "",
        removeMalignantEffects: false,
        choiceAdventureScript: "loopsmol_choice.js",
        mpAutoRecoveryItems: ensureRecovery("mpAutoRecoveryItems", ["black cherry soda", "doc galaktik's invigorating tonic"], ["rest in your campaway tent", "rest at the chateau", "rest at your campground", "sleep on your clan sofa"]),
        hpAutoRecoveryItems: ensureRecovery("hpAutoRecoveryItems", ["scroll of drastic healing", "doc galaktik's homeopathic elixir"], ["rest in your campaway tent", "rest at the chateau", "rest at your campground", "sleep on your clan sofa"])
      });
      manager.setChoices({
        1106: 3,
        // Ghost Dog Chow
        1107: 1,
        // tennis ball
        1340: 3,
        // Is There A Doctor In The House?
        1341: 1
        // Cure her poison
      });
    }
  }, {
    key: "updatePlan",
    value: function updatePlan() {
      globalStateCache.invalidate();
      summonStrategy.update();
      keyStrategy.update();
      pullStrategy.update();
    }
  }]);
  return Engine3;
}(Engine);
function autosellJunk() {
  if ((0, import_kolmafia96.myPath)() !== $path(_templateObject6114 || (_templateObject6114 = _taggedTemplateLiteral85(["A Shrunken Adventurer am I"])))) return;
  if ((0, import_kolmafia96.myMeat)() >= 1e4) return;
  if ((0, import_kolmafia96.myTurncount)() >= 1e3) return;
  if (have($item(_templateObject6213 || (_templateObject6213 = _taggedTemplateLiteral85(["pork elf goodies sack"]))))) (0, import_kolmafia96.use)($item(_templateObject6313 || (_templateObject6313 = _taggedTemplateLiteral85(["pork elf goodies sack"]))));
  if (have($item(_templateObject6413 || (_templateObject6413 = _taggedTemplateLiteral85(["MayDay\u2122 supply package"]))))) (0, import_kolmafia96.use)($item(_templateObject6512 || (_templateObject6512 = _taggedTemplateLiteral85(["MayDay\u2122 supply package"]))));
  var junk = $items(_templateObject668 || (_templateObject668 = _taggedTemplateLiteral85(["hamethyst, baconstone, meat stack, dense meat stack, facsimile dictionary, space blanket, 1,970 carat gold, black snake skin, demon skin, hellion cube, adder bladder, weremoose spit, Knob Goblin firecracker, wussiness potion, diamond-studded cane, Knob Goblin tongs, Knob Goblin scimitar, eggbeater, red-hot sausage fork, Knob Goblin pants, awful poetry journal, black pixel, pile of dusty animal bones, 1952 Mickey Mantle card, liquid ice, fat stacks of cash"], ["hamethyst, baconstone, meat stack, dense meat stack, facsimile dictionary, space blanket, 1\\,970 carat gold, black snake skin, demon skin, hellion cube, adder bladder, weremoose spit, Knob Goblin firecracker, wussiness potion, diamond-studded cane, Knob Goblin tongs, Knob Goblin scimitar, eggbeater, red-hot sausage fork, Knob Goblin pants, awful poetry journal, black pixel, pile of dusty animal bones, 1952 Mickey Mantle card, liquid ice, fat stacks of cash"])));
  var _iterator8 = _createForOfIteratorHelper26(junk), _step8;
  try {
    for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
      var item14 = _step8.value;
      if (have(item14)) (0, import_kolmafia96.autosell)(item14, (0, import_kolmafia97.itemAmount)(item14));
    }
  } catch (err) {
    _iterator8.e(err);
  } finally {
    _iterator8.f();
  }
  var partial_junk = $items(_templateObject677 || (_templateObject677 = _taggedTemplateLiteral85(["ruby W, metallic A, lowercase N, heavy D"])));
  var _iterator9 = _createForOfIteratorHelper26(partial_junk), _step9;
  try {
    for (_iterator9.s(); !(_step9 = _iterator9.n()).done; ) {
      var _item = _step9.value;
      if ((0, import_kolmafia97.itemAmount)(_item) > 1) (0, import_kolmafia96.autosell)(_item, (0, import_kolmafia97.itemAmount)(_item) - 1);
    }
  } catch (err) {
    _iterator9.e(err);
  } finally {
    _iterator9.f();
  }
  var wallets = $items(_templateObject687 || (_templateObject687 = _taggedTemplateLiteral85(["ancient vinyl coin purse, black pension check, old leather wallet, Gathered Meat-Clip, old coin purse"])));
  var _iterator10 = _createForOfIteratorHelper26(wallets), _step10;
  try {
    for (_iterator10.s(); !(_step10 = _iterator10.n()).done; ) {
      var _item2 = _step10.value;
      if (have(_item2)) (0, import_kolmafia96.use)(_item2, (0, import_kolmafia97.itemAmount)(_item2));
    }
  } catch (err) {
    _iterator10.e(err);
  } finally {
    _iterator10.f();
  }
  var lastresorts = $items(_templateObject697 || (_templateObject697 = _taggedTemplateLiteral85(["keg shield, perforated battle paddle, bottle opener belt buckle, beer bomb, Kokomo Resort Pass, giant pinky ring, Eye Agate, Azurite, Lapis Lazuli"])));
  var _iterator11 = _createForOfIteratorHelper26(lastresorts), _step11;
  try {
    for (_iterator11.s(); !(_step11 = _iterator11.n()).done; ) {
      var _item3 = _step11.value;
      if ((0, import_kolmafia96.myMeat)() >= 1e3) return;
      if (have(_item3)) (0, import_kolmafia96.autosell)(_item3, (0, import_kolmafia97.itemAmount)(_item3));
    }
  } catch (err) {
    _iterator11.e(err);
  } finally {
    _iterator11.f();
  }
}
function getExtros() {
  if (!get(toTempPref("checkWorkshed"), false)) {
    var workshed = (0, import_kolmafia96.visitUrl)("campground.php?action=workshed");
    if (workshed.includes("Cold Medicine Cabinet") && (0, import_kolmafia96.getWorkshed)() !== $item(_templateObject707 || (_templateObject707 = _taggedTemplateLiteral85(["cold medicine cabinet"])))) {
      throw "Mafia is not detecting your cold medicine cabinet; consider visiting manually";
    }
    _set(toTempPref("checkWorkshed"), true);
  }
  if (get("_coldMedicineConsults") >= 5) return;
  if (get("_nextColdMedicineConsult") > (0, import_kolmafia96.totalTurnsPlayed)()) return;
  if ((0, import_kolmafia96.getWorkshed)() !== $item(_templateObject7112 || (_templateObject7112 = _taggedTemplateLiteral85(["cold medicine cabinet"])))) return;
  var options = (0, import_kolmafia96.visitUrl)("campground.php?action=workshed");
  var match;
  var regexp = /descitem\((\d+)\)/g;
  while ((match = regexp.exec(options)) !== null) {
    var item14 = (0, import_kolmafia96.descToItem)(match[1]);
    if (item14 === $item(_templateObject7212 || (_templateObject7212 = _taggedTemplateLiteral85(["Extrovermectin\u2122"])))) {
      (0, import_kolmafia96.visitUrl)("campground.php?action=workshed");
      (0, import_kolmafia97.runChoice)(5);
      return;
    }
  }
}
function resetBadOrb() {
  if (get("hiddenBowlingAlleyProgress") !== 8) return false;
  var shrine = $location(_templateObject7311 || (_templateObject7311 = _taggedTemplateLiteral85(["An Overgrown Shrine (Southeast)"])));
  if (!(0, import_kolmafia96.canAdventure)(shrine)) return false;
  if (get("_juneCleaverFightsLeft") === 0 && (0, import_kolmafia96.haveEquipped)($item(_templateObject7411 || (_templateObject7411 = _taggedTemplateLiteral85(["June cleaver"]))))) (0, import_kolmafia97.cliExecute)("unequip june cleaver");
  try {
    var encounter = (0, import_kolmafia96.visitUrl)((0, import_kolmafia96.toUrl)(shrine));
    if (!encounter.includes("Fire When Ready")) {
      (0, import_kolmafia96.print)("Unable to stare longingly at a shrine ball cradle");
    }
    (0, import_kolmafia97.runChoice)(6);
    return true;
  } catch (e) {
    (0, import_kolmafia96.print)("We ran into an issue when gazing at a shrine for balls: ".concat(e, "."), "red");
  }
  return false;
}
function ensureRecovery(property, items, avoid) {
  var recovery_property = get(property).split(";");
  var _iterator12 = _createForOfIteratorHelper26(items), _step12;
  try {
    for (_iterator12.s(); !(_step12 = _iterator12.n()).done; ) {
      var item14 = _step12.value;
      if (!recovery_property.includes(item14)) {
        recovery_property.push(item14);
      }
    }
  } catch (err) {
    _iterator12.e(err);
  } finally {
    _iterator12.f();
  }
  return recovery_property.filter(function(v) {
    return !avoid.includes(v);
  }).join(";");
}
var modifierNames = {
  combat: "Combat Rate",
  item: "Item Drop",
  meat: "Meat Drop",
  ml: "Monster Level",
  "stench res": "Stench Resistance",
  "stench dmg": "Stench Damage",
  "stench spell dmg": "Stench Spell Damage",
  "hot res": "Hot Resistance",
  "hot dmg": "Hot Damage",
  "hot spell dmg": "Hot Spell Damage",
  "cold res": "Cold Resistance",
  "cold dmg": "Cold Damage",
  "cold spell dmg": "Cold Spell Damage",
  "spooky res": "Spooky Resistance",
  "spooky dmg": "Spooky Damage",
  "spooky spell dmg": "Spooky Spell Damage",
  "sleaze res": "Sleaze Resistance",
  "sleaze dmg": "Sleaze Damage",
  "sleaze spell dmg": "Sleaze Spell Damage",
  init: "Initiative",
  "booze drop": "Booze Drop",
  "food drop": "Food Drop",
  da: "Damage Absorption"
};
function logModifiers(outfit2) {
  var maximizer = outfit2.modifier.join(",").toLowerCase();
  for (var _i2 = 0, _Object$keys = Object.keys(modifierNames); _i2 < _Object$keys.length; _i2++) {
    var modifier = _Object$keys[_i2];
    if (maximizer.includes(modifier)) {
      var _name2 = modifierNames[modifier];
      var value = (0, import_kolmafia96.numericModifier)(modifierNames[modifier]);
      (0, import_kolmafia96.logprint)("= ".concat(_name2, ": ").concat(value));
    }
  }
}

// src/tasks/trainrealm.ts
var import_kolmafia98 = require("kolmafia");
init_dist();
var _templateObject600;
function _taggedTemplateLiteral86(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var TrainsetPiece = /* @__PURE__ */ function(TrainsetPiece2) {
  TrainsetPiece2["UNKNOWN"] = "";
  TrainsetPiece2["EMPTY"] = "empty";
  TrainsetPiece2["GAIN_MEAT"] = "meat_mine";
  TrainsetPiece2["EFFECT_MP"] = "tower_fizzy";
  TrainsetPiece2["GAIN_STATS"] = "viewing_platform";
  TrainsetPiece2["HOT_RES_COLD_DMG"] = "tower_frozen";
  TrainsetPiece2["STENCH_RES_SPOOKY_DMG"] = "spooky_graveyard";
  TrainsetPiece2["SMUT_BRIDGE_OR_STATS"] = "logging_mill";
  TrainsetPiece2["CANDY"] = "candy_factory";
  TrainsetPiece2["DOUBLE_NEXT_STATION"] = "coal_hopper";
  TrainsetPiece2["COLD_RES_STENCH_DMG"] = "tower_sewage";
  TrainsetPiece2["SPOOKY_RES_SLEAZE_DMG"] = "oil_refinery";
  TrainsetPiece2["SLEAZE_RES_HOT_DMG"] = "oil_bridge";
  TrainsetPiece2["MORE_ML"] = "water_bridge";
  TrainsetPiece2["MOXIE_STATS"] = "groin_silo";
  TrainsetPiece2["RANDOM_BOOZE"] = "grain_silo";
  TrainsetPiece2["MYS_STATS"] = "brain_silo";
  TrainsetPiece2["MUS_STATS"] = "brawn_silo";
  TrainsetPiece2["BUFF_FOOD_DROP"] = "prawn_silo";
  TrainsetPiece2["DROP_LAST_FOOD_OR_RANDOM"] = "trackside_diner";
  TrainsetPiece2["ORE"] = "ore_hopper";
  return TrainsetPiece2;
}({});
var pieces3 = [TrainsetPiece.EMPTY, TrainsetPiece.GAIN_MEAT, TrainsetPiece.EFFECT_MP, TrainsetPiece.GAIN_STATS, TrainsetPiece.HOT_RES_COLD_DMG, TrainsetPiece.STENCH_RES_SPOOKY_DMG, TrainsetPiece.SMUT_BRIDGE_OR_STATS, TrainsetPiece.CANDY, TrainsetPiece.DOUBLE_NEXT_STATION, TrainsetPiece.COLD_RES_STENCH_DMG, TrainsetPiece.UNKNOWN, TrainsetPiece.SPOOKY_RES_SLEAZE_DMG, TrainsetPiece.SLEAZE_RES_HOT_DMG, TrainsetPiece.MORE_ML, TrainsetPiece.MOXIE_STATS, TrainsetPiece.RANDOM_BOOZE, TrainsetPiece.MYS_STATS, TrainsetPiece.MUS_STATS, TrainsetPiece.BUFF_FOOD_DROP, TrainsetPiece.DROP_LAST_FOOD_OR_RANDOM, TrainsetPiece.ORE];
var trainsetEffects2 = /* @__PURE__ */ new Map([[TrainsetPiece.EFFECT_MP, import_kolmafia98.Effect.get("Carbonated")], [TrainsetPiece.HOT_RES_COLD_DMG, import_kolmafia98.Effect.get("Frozen")], [TrainsetPiece.STENCH_RES_SPOOKY_DMG, import_kolmafia98.Effect.get("Shivering Spine")], [TrainsetPiece.COLD_RES_STENCH_DMG, import_kolmafia98.Effect.get("Hot Soupy Garbage")], [TrainsetPiece.SLEAZE_RES_HOT_DMG, import_kolmafia98.Effect.get("Burningly Oiled")], [TrainsetPiece.SPOOKY_RES_SLEAZE_DMG, import_kolmafia98.Effect.get("Spookily Greasy")], [TrainsetPiece.MORE_ML, import_kolmafia98.Effect.get("Troubled Waters")], [TrainsetPiece.BUFF_FOOD_DROP, import_kolmafia98.Effect.get("Craving Prawns")]]);
var trainsetEffectsDoubled2 = /* @__PURE__ */ new Map([[TrainsetPiece.EFFECT_MP, import_kolmafia98.Effect.get("Double Carbonated")], [TrainsetPiece.HOT_RES_COLD_DMG, import_kolmafia98.Effect.get("Double Frozen")], [TrainsetPiece.STENCH_RES_SPOOKY_DMG, import_kolmafia98.Effect.get("Doubly Shivering Spine")], [TrainsetPiece.COLD_RES_STENCH_DMG, import_kolmafia98.Effect.get("Double Hot Soupy Garbage")], [TrainsetPiece.SLEAZE_RES_HOT_DMG, import_kolmafia98.Effect.get("Doubly Burningly Oiled")], [TrainsetPiece.SPOOKY_RES_SLEAZE_DMG, import_kolmafia98.Effect.get("Doubly Spookily Greasy")], [TrainsetPiece.MORE_ML, import_kolmafia98.Effect.get("Doubly Troubled Waters")], [TrainsetPiece.BUFF_FOOD_DROP, import_kolmafia98.Effect.get("Doubly Craving Prawns")]]);
var trainset = $item(_templateObject600 || (_templateObject600 = _taggedTemplateLiteral86(["model train set"])));
function getPieceId(piece) {
  return Math.max(0, pieces3.indexOf(piece));
}
function getTrainsetConfiguration() {
  return (0, import_kolmafia98.getProperty)("trainsetConfiguration").split(",");
}
function getTrainsetPositionsUntilConfigurable() {
  var pos = (0, import_kolmafia98.toInt)((0, import_kolmafia98.getProperty)("trainsetPosition"));
  var configured = (0, import_kolmafia98.toInt)((0, import_kolmafia98.getProperty)("lastTrainsetConfiguration"));
  var turnsSinceConfigured = pos - configured;
  return Math.max(0, 40 - turnsSinceConfigured);
}
function setTrainsetConfiguration(pieces4) {
  (0, import_kolmafia98.visitUrl)("campground.php?action=workshed");
  var pieceIds = pieces4.map(function(p) {
    return getPieceId(p);
  }).map(function(pieceId, index) {
    return "slot[".concat(index, "]=").concat(pieceId);
  });
  var url = "choice.php?forceoption=0&whichchoice=1485&option=1&pwd&".concat(pieceIds.join("&"));
  (0, import_kolmafia98.visitUrl)(url, true);
  (0, import_kolmafia98.visitUrl)("main.php");
  var expected8 = pieces4.join(",");
  if (expected8 !== (0, import_kolmafia98.getProperty)("trainsetConfiguration")) {
    throw 'Expected trainset configuration to have changed, expected "'.concat(expected8, '" but instead got ').concat((0, import_kolmafia98.getProperty)("trainsetConfiguration"));
  }
}

// src/tasks/misc.ts
var _templateObject601;
var _templateObject2158;
var _templateObject3144;
var _templateObject4125;
var _templateObject5101;
var _templateObject669;
var _templateObject759;
var _templateObject851;
var _templateObject944;
var _templateObject1037;
var _templateObject1134;
var _templateObject1234;
var _templateObject1331;
var _templateObject1429;
var _templateObject1526;
var _templateObject1626;
var _templateObject1726;
var _templateObject1826;
var _templateObject1924;
var _templateObject2024;
var _templateObject2159;
var _templateObject2226;
var _templateObject2324;
var _templateObject2423;
var _templateObject2522;
var _templateObject2621;
var _templateObject2721;
var _templateObject2819;
var _templateObject2919;
var _templateObject3019;
var _templateObject3145;
var _templateObject3221;
var _templateObject3320;
var _templateObject3417;
var _templateObject3516;
var _templateObject3616;
var _templateObject3716;
var _templateObject3816;
var _templateObject3916;
var _templateObject4016;
var _templateObject4126;
var _templateObject4218;
var _templateObject4317;
var _templateObject4416;
var _templateObject4516;
var _templateObject4616;
var _templateObject4716;
var _templateObject4816;
var _templateObject4916;
var _templateObject5016;
var _templateObject5117;
var _templateObject5217;
var _templateObject5316;
var _templateObject5416;
var _templateObject5515;
var _templateObject5614;
var _templateObject5714;
var _templateObject5813;
var _templateObject5911;
var _templateObject609;
var _templateObject6115;
var _templateObject6214;
var _templateObject6314;
var _templateObject6414;
var _templateObject6513;
var _templateObject6610;
var _templateObject678;
var _templateObject688;
var _templateObject698;
var _templateObject708;
var _templateObject7113;
var _templateObject7213;
var _templateObject7312;
var _templateObject7412;
var _templateObject7510;
var _templateObject765;
var _templateObject775;
var _templateObject785;
var _templateObject794;
var _templateObject804;
var _templateObject8111;
var _templateObject8211;
var _templateObject8311;
var _templateObject8410;
var _templateObject855;
var _templateObject864;
var _templateObject874;
var _templateObject884;
var _templateObject893;
var _templateObject903;
var _templateObject9111;
var _templateObject9211;
var _templateObject9310;
var _templateObject945;
var _templateObject954;
var _templateObject964;
var _templateObject974;
var _templateObject984;
var _templateObject993;
var _templateObject1003;
var _templateObject10111;
var _templateObject10211;
var _templateObject1038;
var _templateObject1043;
var _templateObject1053;
var _templateObject1063;
var _templateObject1073;
var _templateObject1083;
var _templateObject1093;
var _templateObject1103;
var _templateObject11111;
var _templateObject11211;
var _templateObject1135;
var _templateObject1143;
var _templateObject1153;
var _templateObject1163;
var _templateObject1173;
var _templateObject1183;
var _templateObject1193;
var _templateObject1203;
var _templateObject12111;
var _templateObject12210;
var _templateObject1235;
var _templateObject1243;
var _templateObject1253;
var _templateObject1263;
var _templateObject1273;
var _templateObject1283;
var _templateObject1293;
var _templateObject1303;
var _templateObject13111;
var _templateObject13210;
var _templateObject1333;
var _templateObject1343;
var _templateObject1353;
var _templateObject1363;
var _templateObject1373;
var _templateObject1383;
var _templateObject1393;
var _templateObject1403;
var _templateObject14111;
var _templateObject14210;
var _templateObject1433;
var _templateObject1443;
var _templateObject1453;
var _templateObject1463;
var _templateObject1473;
var _templateObject1483;
var _templateObject1493;
var _templateObject1503;
var _templateObject15111;
var _templateObject1527;
var _templateObject1533;
var _templateObject1543;
var _templateObject1553;
var _templateObject1563;
var _templateObject1573;
var _templateObject1583;
var _templateObject1593;
var _templateObject1603;
var _templateObject16111;
var _templateObject1627;
var _templateObject1633;
var _templateObject1643;
var _templateObject1653;
var _templateObject1663;
var _templateObject1673;
var _templateObject1683;
var _templateObject1693;
var _templateObject1703;
var _templateObject17111;
var _templateObject1727;
var _templateObject1733;
var _templateObject1743;
var _templateObject1753;
var _templateObject1763;
var _templateObject1773;
var _templateObject1783;
var _templateObject1793;
var _templateObject1803;
var _templateObject18111;
var _templateObject1827;
var _templateObject1833;
var _templateObject1843;
var _templateObject1853;
var _templateObject1863;
var _templateObject1873;
var _templateObject1883;
var _templateObject1893;
var _templateObject1903;
var _templateObject19111;
var _templateObject1925;
var _templateObject1933;
var _templateObject1943;
var _templateObject1953;
var _templateObject1963;
var _templateObject1973;
var _templateObject1983;
var _templateObject1993;
var _templateObject2003;
var _templateObject20111;
var _templateObject2025;
var _templateObject2033;
var _templateObject2043;
var _templateObject2053;
var _templateObject2063;
var _templateObject2073;
var _templateObject2083;
var _templateObject2093;
var _templateObject21011;
var _templateObject21111;
var _templateObject21211;
var _templateObject21311;
var _templateObject21410;
var _templateObject21510;
var _templateObject2163;
var _templateObject2173;
var _templateObject2183;
var _templateObject2193;
var _templateObject2203;
var _templateObject22111;
var _templateObject2227;
var _templateObject2233;
var _templateObject2243;
var _templateObject2253;
var _templateObject2263;
var _templateObject2273;
var _templateObject2282;
var _templateObject2292;
var _templateObject2302;
var _templateObject23110;
var _templateObject2325;
var _templateObject2332;
var _templateObject2342;
var _templateObject2352;
var _templateObject2362;
var _templateObject2372;
var _templateObject2382;
var _templateObject2392;
var _templateObject2402;
var _templateObject24110;
var _templateObject2424;
var _templateObject2432;
var _templateObject2442;
var _templateObject2452;
var _templateObject2462;
var _templateObject2472;
var _templateObject2482;
var _templateObject2492;
var _templateObject2502;
var _templateObject25110;
var _templateObject2523;
var _templateObject2532;
var _templateObject2542;
var _templateObject2552;
var _templateObject2562;
var _templateObject2572;
var _templateObject2582;
var _templateObject2592;
var _templateObject2602;
var _templateObject26110;
var _templateObject2622;
var _templateObject2632;
var _templateObject2642;
var _templateObject2652;
var _templateObject2662;
var _templateObject2672;
var _templateObject2682;
var _templateObject2692;
var _templateObject2702;
var _templateObject27110;
var _templateObject2722;
var _templateObject2732;
var _templateObject2742;
var _templateObject2752;
var _templateObject2762;
var _templateObject2772;
var _templateObject2782;
var _templateObject2792;
var _templateObject2802;
var _templateObject28110;
var _templateObject2822;
var _templateObject2832;
var _templateObject2842;
var _templateObject2852;
var _templateObject2862;
var _templateObject2872;
var _templateObject2882;
var _templateObject2892;
var _templateObject2902;
var _templateObject29110;
var _templateObject2922;
var _templateObject2932;
var _templateObject2942;
var _templateObject2952;
var _templateObject2962;
var _templateObject2972;
var _templateObject2982;
var _templateObject2992;
var _templateObject3002;
var _templateObject30110;
var _templateObject3022;
var _templateObject3032;
var _templateObject3042;
var _templateObject3052;
var _templateObject3062;
var _templateObject3072;
var _templateObject3082;
var _templateObject3092;
var _templateObject31010;
var _templateObject31110;
var _templateObject31210;
var _templateObject31310;
var _templateObject3146;
var _templateObject3152;
var _templateObject3162;
var _templateObject3172;
var _templateObject3182;
var _templateObject3192;
var _templateObject3202;
var _templateObject32110;
var _templateObject3222;
var _templateObject3232;
var _templateObject3242;
var _templateObject3252;
var _templateObject3262;
var _templateObject3272;
var _templateObject3282;
var _templateObject3292;
var _templateObject3302;
var _templateObject33110;
var _templateObject3322;
var _templateObject3332;
var _templateObject3342;
var _templateObject3352;
var _templateObject3362;
var _templateObject3372;
var _templateObject3382;
var _templateObject3392;
var _templateObject3402;
var _templateObject3418;
var _templateObject3422;
var _templateObject3432;
var _templateObject3442;
var _templateObject3452;
var _templateObject3462;
var _templateObject3472;
var _templateObject3482;
var _templateObject3492;
var _templateObject3502;
var _templateObject3517;
var _templateObject3522;
var _templateObject3532;
var _templateObject3542;
var _templateObject3552;
var _templateObject3562;
var _templateObject3572;
var _templateObject3582;
var _templateObject3592;
var _templateObject3602;
var _templateObject3617;
var _templateObject3622;
var _templateObject3632;
var _templateObject3642;
var _templateObject3652;
var _templateObject3662;
var _templateObject3672;
var _templateObject3682;
var _templateObject3692;
var _templateObject3702;
var _templateObject3717;
var _templateObject3722;
var _templateObject3732;
var _templateObject3742;
var _templateObject3752;
var _templateObject3762;
var _templateObject3772;
var _templateObject3782;
var _templateObject3792;
var _templateObject3802;
var _templateObject3817;
var _templateObject3822;
var _templateObject3832;
var _templateObject3842;
var _templateObject3852;
var _templateObject3862;
var _templateObject3872;
function _toConsumableArray32(arr) {
  return _arrayWithoutHoles32(arr) || _iterableToArray32(arr) || _unsupportedIterableToArray52(arr) || _nonIterableSpread32();
}
function _nonIterableSpread32() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray32(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles32(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray52(arr);
}
function _createForOfIteratorHelper27(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray52(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray52(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray52(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray52(o, minLen);
}
function _arrayLikeToArray52(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _defineProperty33(obj, key, value) {
  key = _toPropertyKey38(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey38(t) {
  var i = _toPrimitive38(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive38(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral87(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var meatBuffer = 1e3;
var MiscQuest = {
  name: "Misc",
  tasks: [{
    name: "Unlock Beach",
    after: ["Sewer Accordion", "Sewer Saucepan", "Sewer Totem"],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return (0, import_kolmafia99.myMeat)() >= meatBuffer + ((0, import_kolmafia99.knollAvailable)() ? 538 : 5e3);
    },
    completed: function() {
      return have($item(_templateObject601 || (_templateObject601 = _taggedTemplateLiteral87(["bitchin' meatcar"])))) || have($item(_templateObject2158 || (_templateObject2158 = _taggedTemplateLiteral87(["Desert Bus pass"]))));
    },
    do: function() {
      if ((0, import_kolmafia99.knollAvailable)()) (0, import_kolmafia99.cliExecute)("acquire 1 bitchin' meatcar");
      else (0, import_kolmafia99.cliExecute)("acquire 1 desert bus pass");
    },
    outfit: {
      equip: $items(_templateObject3144 || (_templateObject3144 = _taggedTemplateLiteral87(["designer sweatpants"])))
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Mayam Calendar",
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return !MayamCalendar_exports.have() || MayamCalendar_exports.remainingUses() === 0;
    },
    do: function() {
      (0, import_kolmafia99.cliExecute)("mayam rings fur lightning eyepatch yam");
      (0, import_kolmafia99.cliExecute)("mayam rings chair wood cheese clock");
      (0, import_kolmafia99.cliExecute)("mayam rings eye meat wall explosion");
    },
    outfit: function() {
      if (have($familiar(_templateObject4125 || (_templateObject4125 = _taggedTemplateLiteral87(["Chest Mimic"]))))) return {
        familiar: $familiar(_templateObject5101 || (_templateObject5101 = _taggedTemplateLiteral87(["Chest Mimic"])))
      };
      return {
        familiar: $familiar(_templateObject669 || (_templateObject669 = _taggedTemplateLiteral87(["Grey Goose"])))
      };
    },
    limit: {
      tries: 2
    },
    freeaction: true
  }, {
    name: "Island Scrip",
    after: ["Unlock Beach", "Acquire Red Rocket"],
    ready: function() {
      return ((0, import_kolmafia99.myMeat)() >= 6e3 || step("questL11Black") >= 4 && (0, import_kolmafia99.myMeat)() >= meatBuffer + 500) && (0, import_kolmafia99.myAdventures)() >= 20 && !yellowSubmarinePossible();
    },
    completed: function() {
      return (0, import_kolmafia99.itemAmount)($item(_templateObject759 || (_templateObject759 = _taggedTemplateLiteral87(["Shore Inc. Ship Trip Scrip"])))) >= 3 || have($item(_templateObject851 || (_templateObject851 = _taggedTemplateLiteral87(["dinghy plans"])))) || have($item(_templateObject944 || (_templateObject944 = _taggedTemplateLiteral87(["dingy dinghy"])))) || have($item(_templateObject1037 || (_templateObject1037 = _taggedTemplateLiteral87(["junk junk"])))) || have($item(_templateObject1134 || (_templateObject1134 = _taggedTemplateLiteral87(["skeletal skiff"])))) || have($item(_templateObject1234 || (_templateObject1234 = _taggedTemplateLiteral87(["yellow submarine"])))) || get("_pirateDinghyUsed");
    },
    do: $location(_templateObject1331 || (_templateObject1331 = _taggedTemplateLiteral87(["The Shore, Inc. Travel Agency"]))),
    outfit: function() {
      if (!get("candyCaneSwordShore")) return {
        equip: $items(_templateObject1429 || (_templateObject1429 = _taggedTemplateLiteral87(["candy cane sword cane"])))
      };
      else return {};
    },
    choices: function() {
      var swordReady = (0, import_kolmafia99.haveEquipped)($item(_templateObject1526 || (_templateObject1526 = _taggedTemplateLiteral87(["candy cane sword cane"])))) && !get("candyCaneSwordShore");
      var statChoice = byStat({
        Muscle: 1,
        Mysticality: 2,
        Moxie: 3
      });
      return {
        793: swordReady ? 5 : statChoice
      };
    },
    limit: {
      tries: 5
    }
  }, {
    name: "Unlock Island Takerspace",
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return (0, import_kolmafia99.getWorkshed)() === $item(_templateObject1626 || (_templateObject1626 = _taggedTemplateLiteral87(["TakerSpace letter of Marque"]))) || have($item(_templateObject1726 || (_templateObject1726 = _taggedTemplateLiteral87(["pirate dinghy"]))));
    },
    completed: function() {
      return have($item(_templateObject1826 || (_templateObject1826 = _taggedTemplateLiteral87(["dingy dinghy"])))) || have($item(_templateObject1924 || (_templateObject1924 = _taggedTemplateLiteral87(["junk junk"])))) || have($item(_templateObject2024 || (_templateObject2024 = _taggedTemplateLiteral87(["skeletal skiff"])))) || have($item(_templateObject2159 || (_templateObject2159 = _taggedTemplateLiteral87(["yellow submarine"])))) || get("_pirateDinghyUsed") || !have($item(_templateObject2226 || (_templateObject2226 = _taggedTemplateLiteral87(["pirate dinghy"])))) && (get("takerSpaceAnchor") < 1 || get("takerSpaceMast") < 1 || get("takerSpaceSilk") < 1);
    },
    do: function() {
      if (!have($item(_templateObject2324 || (_templateObject2324 = _taggedTemplateLiteral87(["pirate dinghy"]))))) (0, import_kolmafia99.retrieveItem)($item(_templateObject2423 || (_templateObject2423 = _taggedTemplateLiteral87(["pirate dinghy"]))));
      if (!have($item(_templateObject2522 || (_templateObject2522 = _taggedTemplateLiteral87(["deft pirate hook"]))))) (0, import_kolmafia99.retrieveItem)($item(_templateObject2621 || (_templateObject2621 = _taggedTemplateLiteral87(["deft pirate hook"]))));
      (0, import_kolmafia99.use)($item(_templateObject2721 || (_templateObject2721 = _taggedTemplateLiteral87(["pirate dinghy"]))));
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Unlock Island",
    after: ["Island Scrip"],
    ready: function() {
      return ((0, import_kolmafia99.myMeat)() >= meatBuffer + 400 || have($item(_templateObject2819 || (_templateObject2819 = _taggedTemplateLiteral87(["dingy planks"]))))) && !yellowSubmarinePossible();
    },
    completed: function() {
      return get("_pirateDinghyUsed") || have($item(_templateObject2919 || (_templateObject2919 = _taggedTemplateLiteral87(["dingy dinghy"])))) || have($item(_templateObject3019 || (_templateObject3019 = _taggedTemplateLiteral87(["junk junk"])))) || have($item(_templateObject3145 || (_templateObject3145 = _taggedTemplateLiteral87(["skeletal skiff"])))) || have($item(_templateObject3221 || (_templateObject3221 = _taggedTemplateLiteral87(["yellow submarine"])))) || get("_pirateDinghyUsed");
    },
    do: function() {
      (0, import_kolmafia99.retrieveItem)($item(_templateObject3320 || (_templateObject3320 = _taggedTemplateLiteral87(["dingy planks"]))));
      (0, import_kolmafia99.retrieveItem)($item(_templateObject3417 || (_templateObject3417 = _taggedTemplateLiteral87(["dinghy plans"]))));
      (0, import_kolmafia99.use)($item(_templateObject3516 || (_templateObject3516 = _taggedTemplateLiteral87(["dinghy plans"]))));
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Unlock Island Submarine",
    after: ["Digital/Open"],
    ready: function() {
      return (0, import_kolmafia99.itemAmount)($item(_templateObject3616 || (_templateObject3616 = _taggedTemplateLiteral87(["yellow pixel"])))) >= 50 && (0, import_kolmafia99.itemAmount)($item(_templateObject3716 || (_templateObject3716 = _taggedTemplateLiteral87(["red pixel"])))) >= 5 && (0, import_kolmafia99.itemAmount)($item(_templateObject3816 || (_templateObject3816 = _taggedTemplateLiteral87(["blue pixel"])))) >= 5 && (0, import_kolmafia99.itemAmount)($item(_templateObject3916 || (_templateObject3916 = _taggedTemplateLiteral87(["green pixel"])))) >= 5;
    },
    completed: function() {
      return get("_pirateDinghyUsed") || have($item(_templateObject4016 || (_templateObject4016 = _taggedTemplateLiteral87(["dingy dinghy"])))) || have($item(_templateObject4126 || (_templateObject4126 = _taggedTemplateLiteral87(["junk junk"])))) || have($item(_templateObject4218 || (_templateObject4218 = _taggedTemplateLiteral87(["skeletal skiff"])))) || have($item(_templateObject4317 || (_templateObject4317 = _taggedTemplateLiteral87(["yellow submarine"])))) || get("_pirateDinghyUsed");
    },
    do: function() {
      (0, import_kolmafia99.retrieveItem)($item(_templateObject4416 || (_templateObject4416 = _taggedTemplateLiteral87(["yellow submarine"]))));
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Floundry",
    after: [],
    ready: function() {
      return false;
    },
    completed: function() {
      return have($item(_templateObject4516 || (_templateObject4516 = _taggedTemplateLiteral87(["fish hatchet"])))) || true;
    },
    do: function() {
      return (0, import_kolmafia99.cliExecute)("acquire 1 fish hatchet");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Acquire Kgnee",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return have($familiar(_templateObject4616 || (_templateObject4616 = _taggedTemplateLiteral87(["Reagnimated Gnome"])))) && !have($item(_templateObject4716 || (_templateObject4716 = _taggedTemplateLiteral87(["gnomish housemaid's kgnee"])))) && !get(toTempPref("checkedGnome"), false);
    },
    completed: function() {
      return !have($familiar(_templateObject4816 || (_templateObject4816 = _taggedTemplateLiteral87(["Reagnimated Gnome"])))) || have($item(_templateObject4916 || (_templateObject4916 = _taggedTemplateLiteral87(["gnomish housemaid's kgnee"])))) || get(toTempPref("checkedGnome"), false);
    },
    do: function() {
      (0, import_kolmafia99.visitUrl)("arena.php");
      (0, import_kolmafia99.runChoice)(4);
      _set(toTempPref("checkedGnome"), true);
    },
    outfit: {
      familiar: $familiar(_templateObject5016 || (_templateObject5016 = _taggedTemplateLiteral87(["Reagnimated Gnome"])))
    },
    freeaction: true,
    limit: {
      tries: 1
    }
  }, {
    name: "Voting",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return !underStandard();
    },
    completed: function() {
      return !args.minor.voterbooth || have($item(_templateObject5117 || (_templateObject5117 = _taggedTemplateLiteral87(['"I Voted!" sticker'])))) || get("_voteToday") || !get("voteAlways");
    },
    do: function() {
      var voterValueTable = [{
        monster: $monster(_templateObject5217 || (_templateObject5217 = _taggedTemplateLiteral87(["terrible mutant"]))),
        value: getSaleValue($item(_templateObject5316 || (_templateObject5316 = _taggedTemplateLiteral87(["glob of undifferentiated tissue"])))) + 10
      }, {
        monster: $monster(_templateObject5416 || (_templateObject5416 = _taggedTemplateLiteral87(["angry ghost"]))),
        value: getSaleValue($item(_templateObject5515 || (_templateObject5515 = _taggedTemplateLiteral87(["ghostly ectoplasm"])))) * 1.11
      }, {
        monster: $monster(_templateObject5614 || (_templateObject5614 = _taggedTemplateLiteral87(["government bureaucrat"]))),
        value: getSaleValue($item(_templateObject5714 || (_templateObject5714 = _taggedTemplateLiteral87(["absentee voter ballot"])))) * 0.05 + 75 * 0.25 + 50
      }, {
        monster: $monster(_templateObject5813 || (_templateObject5813 = _taggedTemplateLiteral87(["annoyed snake"]))),
        value: (0, import_kolmafia99.gamedayToInt)()
      }, {
        monster: $monster(_templateObject5911 || (_templateObject5911 = _taggedTemplateLiteral87(["slime blob"]))),
        value: 95 - (0, import_kolmafia99.gamedayToInt)()
      }];
      (0, import_kolmafia99.visitUrl)("place.php?whichplace=town_right&action=townright_vote");
      var monPriority = voterValueTable.sort(function(a, b) {
        return b.value - a.value;
      }).map(function(element) {
        return element.monster.name;
      });
      var initPriority = /* @__PURE__ */ new Map([["Meat Drop: +30", 10], ["Item Drop: +15", 9], ["Familiar Experience: +2", 8], ["Adventures: +1", 7], ["Monster Level: +10", 5], ["".concat((0, import_kolmafia99.myPrimestat)(), " Percent: +25"), 3], ["Experience (".concat((0, import_kolmafia99.myPrimestat)(), "): +4"), 2], ["Meat Drop: -30", -2], ["Item Drop: -15", -2], ["Familiar Experience: -2", -2]]);
      var monsterVote = monPriority.indexOf(get("_voteMonster1")) < monPriority.indexOf(get("_voteMonster2")) ? 1 : 2;
      var voteLocalPriorityArr = ["_voteLocal1", "_voteLocal2", "_voteLocal3", "_voteLocal4"].map(function(v, i) {
        return [i, initPriority.get(get(v)) || (get(v).indexOf("-") === -1 ? 1 : -1)];
      });
      var bestVotes = voteLocalPriorityArr.sort(function(a, b) {
        return b[1] - a[1];
      });
      var firstInit = bestVotes[0][0];
      var secondInit = bestVotes[1][0];
      (0, import_kolmafia99.visitUrl)("choice.php?option=1&whichchoice=1331&g=".concat(monsterVote, "&local[]=").concat(firstInit, "&local[]=").concat(secondInit));
      if (!have($item(_templateObject609 || (_templateObject609 = _taggedTemplateLiteral87(['"I Voted!" sticker']))))) {
        (0, import_kolmafia99.cliExecute)("refresh all");
      }
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Protonic Ghost",
    after: [],
    completed: function() {
      return false;
    },
    priority: function() {
      if (!get("lovebugsUnlocked") && have($item(_templateObject6115 || (_templateObject6115 = _taggedTemplateLiteral87(["designer sweatpants"])))) && get("sweat") < 5) {
        return Priorities.BadSweat;
      } else return Priorities.Always;
    },
    ready: function() {
      if (!have($item(_templateObject6214 || (_templateObject6214 = _taggedTemplateLiteral87(["protonic accelerator pack"]))))) return false;
      if (get("questPAGhost") === "unstarted") return false;
      switch (get("ghostLocation")) {
        case $location(_templateObject6314 || (_templateObject6314 = _taggedTemplateLiteral87(["Cobb's Knob Treasury"]))):
          return step("questL05Goblin") >= 1;
        case $location(_templateObject6414 || (_templateObject6414 = _taggedTemplateLiteral87(["The Haunted Conservatory"]))):
          return step("questM20Necklace") >= 0;
        case $location(_templateObject6513 || (_templateObject6513 = _taggedTemplateLiteral87(["The Haunted Gallery"]))):
          return step("questM21Dance") >= 1;
        case $location(_templateObject6610 || (_templateObject6610 = _taggedTemplateLiteral87(["The Haunted Kitchen"]))):
          return step("questM20Necklace") >= 0;
        case $location(_templateObject678 || (_templateObject678 = _taggedTemplateLiteral87(["The Haunted Wine Cellar"]))):
          return step("questL11Manor") >= 1;
        case $location(_templateObject688 || (_templateObject688 = _taggedTemplateLiteral87(["The Icy Peak"]))):
          return step("questL08Trapper") === 999;
        case $location(_templateObject698 || (_templateObject698 = _taggedTemplateLiteral87(["Inside the Palindome"]))):
          return have($item(_templateObject708 || (_templateObject708 = _taggedTemplateLiteral87(["Talisman o' Namsilat"]))));
        case $location(_templateObject7113 || (_templateObject7113 = _taggedTemplateLiteral87(["The Old Landfill"]))):
          return (0, import_kolmafia99.myBasestat)((0, import_kolmafia99.myPrimestat)()) >= 25 && step("questL02Larva") >= 0;
        case $location(_templateObject7213 || (_templateObject7213 = _taggedTemplateLiteral87(["Madness Bakery"]))):
        case $location(_templateObject7312 || (_templateObject7312 = _taggedTemplateLiteral87(["The Overgrown Lot"]))):
        case $location(_templateObject7412 || (_templateObject7412 = _taggedTemplateLiteral87(["The Skeleton Store"]))):
          return true;
        // Can freely start quest
        case $location(_templateObject7510 || (_templateObject7510 = _taggedTemplateLiteral87(["The Smut Orc Logging Camp"]))):
          return step("questL09Topping") >= 0;
        case $location(_templateObject765 || (_templateObject765 = _taggedTemplateLiteral87(["The Spooky Forest"]))):
          return step("questL02Larva") >= 0;
      }
      return false;
    },
    prepare: function() {
      switch (get("ghostLocation")) {
        case $location(_templateObject775 || (_templateObject775 = _taggedTemplateLiteral87(["Madness Bakery"]))):
          if (step("questM25Armorer") === -1) {
            (0, import_kolmafia99.visitUrl)("shop.php?whichshop=armory");
            (0, import_kolmafia99.visitUrl)("shop.php?whichshop=armory&action=talk");
            (0, import_kolmafia99.visitUrl)("choice.php?pwd=&whichchoice=1065&option=1");
          }
          return;
        case $location(_templateObject785 || (_templateObject785 = _taggedTemplateLiteral87(["The Old Landfill"]))):
          if (step("questM19Hippy") === -1) {
            (0, import_kolmafia99.visitUrl)("place.php?whichplace=woods&action=woods_smokesignals");
            (0, import_kolmafia99.visitUrl)("choice.php?pwd=&whichchoice=798&option=1");
            (0, import_kolmafia99.visitUrl)("choice.php?pwd=&whichchoice=798&option=2");
            (0, import_kolmafia99.visitUrl)("woods.php");
          }
          return;
        case $location(_templateObject794 || (_templateObject794 = _taggedTemplateLiteral87(["The Overgrown Lot"]))):
          if (step("questM24Doc") === -1) {
            (0, import_kolmafia99.visitUrl)("shop.php?whichshop=doc");
            (0, import_kolmafia99.visitUrl)("shop.php?whichshop=doc&action=talk");
            (0, import_kolmafia99.runChoice)(1);
          }
          return;
        case $location(_templateObject804 || (_templateObject804 = _taggedTemplateLiteral87(["The Skeleton Store"]))):
          if (step("questM23Meatsmith") === -1) {
            (0, import_kolmafia99.visitUrl)("shop.php?whichshop=meatsmith");
            (0, import_kolmafia99.visitUrl)("shop.php?whichshop=meatsmith&action=talk");
            (0, import_kolmafia99.runChoice)(1);
          }
          return;
        case $location(_templateObject8111 || (_templateObject8111 = _taggedTemplateLiteral87(["The Icy Peak"]))):
          if ((0, import_kolmafia99.numericModifier)("cold resistance") < 5) ensureEffect($effect(_templateObject8211 || (_templateObject8211 = _taggedTemplateLiteral87(["Red Door Syndrome"]))));
          if ((0, import_kolmafia99.numericModifier)("cold resistance") < 5) throw "Unable to ensure cold res for The Icy Peak";
          return;
        default:
          return;
      }
    },
    do: function() {
      var _get3;
      (0, import_kolmafia99.adv1)((_get3 = get("ghostLocation")) !== null && _get3 !== void 0 ? _get3 : $location(_templateObject8311 || (_templateObject8311 = _taggedTemplateLiteral87(["none"]))), 0, "");
      if (wanderingNCs2.has(get("lastEncounter"))) {
        var _get22;
        (0, import_kolmafia99.adv1)((_get22 = get("ghostLocation")) !== null && _get22 !== void 0 ? _get22 : $location(_templateObject8410 || (_templateObject8410 = _taggedTemplateLiteral87(["none"]))), 0, "");
      }
    },
    outfit: function() {
      if (get("ghostLocation") === $location(_templateObject855 || (_templateObject855 = _taggedTemplateLiteral87(["Inside the Palindome"])))) return {
        equip: $items(_templateObject864 || (_templateObject864 = _taggedTemplateLiteral87(["Talisman o' Namsilat, protonic accelerator pack, designer sweatpants"]))),
        modifier: "DA, DR"
      };
      if (get("ghostLocation") === $location(_templateObject874 || (_templateObject874 = _taggedTemplateLiteral87(["The Icy Peak"])))) {
        if (!get("lovebugsUnlocked") && have($item(_templateObject884 || (_templateObject884 = _taggedTemplateLiteral87(["designer sweatpants"])))) && get("sweat") >= 5 && coldPlanner.maximumPossible(true, $slots(_templateObject893 || (_templateObject893 = _taggedTemplateLiteral87(["back, pants"])))) >= 5) {
          return coldPlanner.outfitFor(5, {
            equip: $items(_templateObject903 || (_templateObject903 = _taggedTemplateLiteral87(["protonic accelerator pack, designer sweatpants"]))),
            modifier: "DA, DR"
          });
        }
        if (coldPlanner.maximumPossible(true, $slots(_templateObject9111 || (_templateObject9111 = _taggedTemplateLiteral87(["back"])))) >= 5) return coldPlanner.outfitFor(5, {
          equip: $items(_templateObject9211 || (_templateObject9211 = _taggedTemplateLiteral87(["protonic accelerator pack"]))),
          modifier: "DA, DR"
        });
        else return coldPlanner.outfitFor(5, {
          modifier: "DA, DR"
        });
      }
      return {
        equip: $items(_templateObject9310 || (_templateObject9310 = _taggedTemplateLiteral87(["protonic accelerator pack, designer sweatpants"]))),
        modifier: "DA, DR"
      };
    },
    combat: new CombatStrategy2().macro(function() {
      if (get("lovebugsUnlocked")) {
        return new Macro().skill($skill(_templateObject945 || (_templateObject945 = _taggedTemplateLiteral87(["Summon Love Gnats"])))).skill($skill(_templateObject954 || (_templateObject954 = _taggedTemplateLiteral87(["Shoot Ghost"])))).skill($skill(_templateObject964 || (_templateObject964 = _taggedTemplateLiteral87(["Shoot Ghost"])))).skill($skill(_templateObject974 || (_templateObject974 = _taggedTemplateLiteral87(["Shoot Ghost"])))).skill($skill(_templateObject984 || (_templateObject984 = _taggedTemplateLiteral87(["Trap Ghost"]))));
      }
      if ((0, import_kolmafia99.myClass)() === $class(_templateObject993 || (_templateObject993 = _taggedTemplateLiteral87(["Seal Clubber"]))) && (0, import_kolmafia99.myFury)() >= 3 && have($skill(_templateObject1003 || (_templateObject1003 = _taggedTemplateLiteral87(["Club Foot"]))))) {
        return new Macro().skill($skill(_templateObject10111 || (_templateObject10111 = _taggedTemplateLiteral87(["Club Foot"])))).skill($skill(_templateObject10211 || (_templateObject10211 = _taggedTemplateLiteral87(["Shoot Ghost"])))).skill($skill(_templateObject1038 || (_templateObject1038 = _taggedTemplateLiteral87(["Shoot Ghost"])))).skill($skill(_templateObject1043 || (_templateObject1043 = _taggedTemplateLiteral87(["Shoot Ghost"])))).skill($skill(_templateObject1053 || (_templateObject1053 = _taggedTemplateLiteral87(["Trap Ghost"]))));
      }
      if ((0, import_kolmafia99.haveEquipped)($item(_templateObject1063 || (_templateObject1063 = _taggedTemplateLiteral87(["designer sweatpants"])))) && get("sweat") >= 5) {
        return new Macro().skill($skill(_templateObject1073 || (_templateObject1073 = _taggedTemplateLiteral87(["Sweat Flood"])))).skill($skill(_templateObject1083 || (_templateObject1083 = _taggedTemplateLiteral87(["Shoot Ghost"])))).skill($skill(_templateObject1093 || (_templateObject1093 = _taggedTemplateLiteral87(["Shoot Ghost"])))).skill($skill(_templateObject1103 || (_templateObject1103 = _taggedTemplateLiteral87(["Shoot Ghost"])))).skill($skill(_templateObject11111 || (_templateObject11111 = _taggedTemplateLiteral87(["Trap Ghost"]))));
      }
      if ((0, import_kolmafia99.myHp)() < (0, import_kolmafia99.myMaxhp)() || get("ghostLocation") === $location(_templateObject11211 || (_templateObject11211 = _taggedTemplateLiteral87(["The Haunted Wine Cellar"]))) || get("ghostLocation") === $location(_templateObject1135 || (_templateObject1135 = _taggedTemplateLiteral87(["The Overgrown Lot"]))) || (0, import_kolmafia99.equippedAmount)($item(_templateObject1143 || (_templateObject1143 = _taggedTemplateLiteral87(["protonic accelerator pack"])))) === 0) return killMacro();
      else return new Macro().skill($skill(_templateObject1153 || (_templateObject1153 = _taggedTemplateLiteral87(["Shoot Ghost"])))).skill($skill(_templateObject1163 || (_templateObject1163 = _taggedTemplateLiteral87(["Shoot Ghost"])))).skill($skill(_templateObject1173 || (_templateObject1173 = _taggedTemplateLiteral87(["Shoot Ghost"])))).skill($skill(_templateObject1183 || (_templateObject1183 = _taggedTemplateLiteral87(["Trap Ghost"]))));
    }),
    post: function() {
      if (get("questPAGhost") !== "unstarted") {
        throw "Failed to kill ghost from protonic accelerator pack";
      }
    },
    limit: {
      tries: 20,
      unready: true
    }
  }, {
    name: "Acquire Birch Battery",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return have($item(_templateObject1193 || (_templateObject1193 = _taggedTemplateLiteral87(["SpinMaster\u2122 lathe"])))) && (!get("_spinmasterLatheVisited") || have($item(_templateObject1203 || (_templateObject1203 = _taggedTemplateLiteral87(["flimsy hardwood scraps"])))));
    },
    completed: function() {
      return have($item(_templateObject12111 || (_templateObject12111 = _taggedTemplateLiteral87(["birch battery"]))));
    },
    do: function() {
      (0, import_kolmafia99.visitUrl)("shop.php?whichshop=lathe");
      (0, import_kolmafia99.cliExecute)("acquire birch battery");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Acquire Firework Hat",
    after: ["Acquire Red Rocket"],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return (0, import_kolmafia99.myMeat)() >= meatBuffer + 500;
    },
    completed: function() {
      return have($item(_templateObject12210 || (_templateObject12210 = _taggedTemplateLiteral87(["sombrero-mounted sparkler"])))) || get("_fireworksShopHatBought") || !have($item(_templateObject1235 || (_templateObject1235 = _taggedTemplateLiteral87(["Clan VIP Lounge key"]))));
    },
    do: function() {
      (0, import_kolmafia99.visitUrl)("clan_viplounge.php");
      (0, import_kolmafia99.visitUrl)("clan_viplounge.php?action=fwshop&whichfloor=2");
      (0, import_kolmafia99.cliExecute)("acquire sombrero-mounted sparkler");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Acquire Rocket Boots",
    after: ["Acquire Red Rocket"],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return (0, import_kolmafia99.myMeat)() >= meatBuffer + 1e3;
    },
    completed: function() {
      return have($item(_templateObject1243 || (_templateObject1243 = _taggedTemplateLiteral87(["rocket boots"])))) || get("_fireworksShopEquipmentBought") || !have($item(_templateObject1253 || (_templateObject1253 = _taggedTemplateLiteral87(["Clan VIP Lounge key"]))));
    },
    do: function() {
      (0, import_kolmafia99.visitUrl)("clan_viplounge.php");
      (0, import_kolmafia99.visitUrl)("clan_viplounge.php?action=fwshop&whichfloor=2");
      (0, import_kolmafia99.cliExecute)("acquire rocket boots");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Acquire Red Rocket",
    after: ["Sewer Accordion", "Sewer Totem", "Sewer Saucepan", "Acquire Mouthwash", "Mouthwash"],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return (0, import_kolmafia99.myMeat)() >= meatBuffer + 250;
    },
    completed: function() {
      return have($item(_templateObject1263 || (_templateObject1263 = _taggedTemplateLiteral87(["red rocket"])))) || !have($item(_templateObject1273 || (_templateObject1273 = _taggedTemplateLiteral87(["Clan VIP Lounge key"])))) || have($effect(_templateObject1283 || (_templateObject1283 = _taggedTemplateLiteral87(["Ready to Eat"])))) || (0, import_kolmafia99.myFullness)() > 0 || (0, import_kolmafia99.myLevel)() >= 12;
    },
    do: function() {
      (0, import_kolmafia99.visitUrl)("clan_viplounge.php");
      (0, import_kolmafia99.visitUrl)("clan_viplounge.php?action=fwshop&whichfloor=2");
      (0, import_kolmafia99.cliExecute)("acquire red rocket");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Goose Exp",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return (0, import_kolmafia99.familiarWeight)($familiar(_templateObject1293 || (_templateObject1293 = _taggedTemplateLiteral87(["Grey Goose"])))) >= 9 || get(toTempPref("chefGoose")) === "true" || !have($familiar(_templateObject1303 || (_templateObject1303 = _taggedTemplateLiteral87(["Shorter-Order Cook"]))));
    },
    do: function() {
      _set(toTempPref("chefGoose"), "true");
    },
    outfit: {
      familiar: $familiar(_templateObject13111 || (_templateObject13111 = _taggedTemplateLiteral87(["Grey Goose"])))
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Hermit Clover",
    after: ["Hidden City/Open Temple", "Acquire Red Rocket"],
    ready: function() {
      return (0, import_kolmafia99.myMeat)() >= meatBuffer + 1e3;
    },
    completed: function() {
      return get(toTempPref("clovers")) === "true";
    },
    do: function() {
      (0, import_kolmafia99.hermit)($item(_templateObject13210 || (_templateObject13210 = _taggedTemplateLiteral87(["11-leaf clover"]))), 3);
      _set(toTempPref("clovers"), "true");
    },
    outfit: {
      equip: $items(_templateObject1333 || (_templateObject1333 = _taggedTemplateLiteral87(["designer sweatpants"])))
    },
    freeaction: true,
    limit: {
      tries: 1
    }
  }, {
    name: "Amulet Coin",
    after: [],
    completed: function() {
      return have($item(_templateObject1343 || (_templateObject1343 = _taggedTemplateLiteral87(["amulet coin"])))) || !have($skill(_templateObject1353 || (_templateObject1353 = _taggedTemplateLiteral87(["Summon Clip Art"])))) || get("tomeSummons") >= 3 || !have($familiar(_templateObject1363 || (_templateObject1363 = _taggedTemplateLiteral87(["Cornbeefadon"]))));
    },
    priority: function() {
      return Priorities.Free;
    },
    do: function() {
      (0, import_kolmafia99.retrieveItem)($item(_templateObject1373 || (_templateObject1373 = _taggedTemplateLiteral87(["box of Familiar Jacks"]))));
      (0, import_kolmafia99.use)($item(_templateObject1383 || (_templateObject1383 = _taggedTemplateLiteral87(["box of Familiar Jacks"]))));
    },
    outfit: {
      familiar: $familiar(_templateObject1393 || (_templateObject1393 = _taggedTemplateLiteral87(["Cornbeefadon"])))
    },
    freeaction: true,
    limit: {
      tries: 1
    }
  }, {
    name: "Boombox",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return !have($item(_templateObject1403 || (_templateObject1403 = _taggedTemplateLiteral87(["SongBoom\u2122 BoomBox"])))) || get("boomBoxSong") === "Total Eclipse of Your Meat" || get("_boomBoxSongsLeft") === 0;
    },
    do: function() {
      return (0, import_kolmafia99.cliExecute)("boombox meat");
    },
    freeaction: true,
    limit: {
      tries: 1
    }
  }, {
    name: "Mayday",
    after: ["Macguffin/Start"],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return !get("hasMaydayContract") || !have($item(_templateObject14111 || (_templateObject14111 = _taggedTemplateLiteral87(["MayDay\u2122 supply package"])))) && atLevel(11);
    },
    ready: function() {
      return have($item(_templateObject14210 || (_templateObject14210 = _taggedTemplateLiteral87(["MayDay\u2122 supply package"])))) && (0, import_kolmafia99.myTurncount)() < 1e3;
    },
    do: function() {
      return (0, import_kolmafia99.use)($item(_templateObject1433 || (_templateObject1433 = _taggedTemplateLiteral87(["MayDay\u2122 supply package"]))));
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Open Fantasy",
    after: [],
    ready: function() {
      return (get("frAlways") || get("_frToday")) && !underStandard();
    },
    completed: function() {
      return have($item(_templateObject1443 || (_templateObject1443 = _taggedTemplateLiteral87(["FantasyRealm G. E. M."]))));
    },
    do: function() {
      (0, import_kolmafia99.visitUrl)("place.php?whichplace=realm_fantasy&action=fr_initcenter");
      (0, import_kolmafia99.runChoice)(-1);
    },
    choices: {
      1280: 1
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Workshed",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return (0, import_kolmafia99.getWorkshed)() !== $item(_templateObject1453 || (_templateObject1453 = _taggedTemplateLiteral87(["none"]))) || !have(args.major.workshed) || (0, import_kolmafia99.myTurncount)() >= 1e3;
    },
    do: function() {
      return (0, import_kolmafia99.use)(args.major.workshed);
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Swap Workshed",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return get("_coldMedicineConsults") >= 5 && (0, import_kolmafia99.getWorkshed)() === $item(_templateObject1463 || (_templateObject1463 = _taggedTemplateLiteral87(["cold medicine cabinet"]))) || (get("_pirateDinghyUsed") || get("takerSpaceAnchor") < 1 || get("takerSpaceMast") < 1 || get("takerSpaceSilk") < 1 || have($item(_templateObject1473 || (_templateObject1473 = _taggedTemplateLiteral87(["dingy dinghy"])))) || have($item(_templateObject1483 || (_templateObject1483 = _taggedTemplateLiteral87(["junk junk"])))) || have($item(_templateObject1493 || (_templateObject1493 = _taggedTemplateLiteral87(["skeletal skiff"])))) || have($item(_templateObject1503 || (_templateObject1503 = _taggedTemplateLiteral87(["yellow submarine"]))))) && (0, import_kolmafia99.getWorkshed)() === $item(_templateObject15111 || (_templateObject15111 = _taggedTemplateLiteral87(["TakerSpace letter of Marque"])));
    },
    completed: function() {
      return !have(args.major.swapworkshed) || get("_workshedItemUsed") || (0, import_kolmafia99.myTurncount)() >= 1e3;
    },
    do: function() {
      return (0, import_kolmafia99.use)(args.major.swapworkshed);
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Bugbear Outfit",
    after: ["Acquire Red Rocket"],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return (0, import_kolmafia99.myMeat)() >= meatBuffer + 140;
    },
    completed: function() {
      return !have($item(_templateObject1527 || (_templateObject1527 = _taggedTemplateLiteral87(["Asdon Martin keyfob (on ring)"])))) && !AsdonMartin_exports.installed() || !(0, import_kolmafia99.knollAvailable)() || have($item(_templateObject1533 || (_templateObject1533 = _taggedTemplateLiteral87(["bugbear beanie"])))) && have($item(_templateObject1543 || (_templateObject1543 = _taggedTemplateLiteral87(["bugbear bungguard"])))) || (0, import_kolmafia99.myAscensions)() >= 10;
    },
    do: function() {
      (0, import_kolmafia99.retrieveItem)($item(_templateObject1553 || (_templateObject1553 = _taggedTemplateLiteral87(["bugbear beanie"]))));
      (0, import_kolmafia99.retrieveItem)($item(_templateObject1563 || (_templateObject1563 = _taggedTemplateLiteral87(["bugbear bungguard"]))));
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Break Stone",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return (0, import_kolmafia99.hippyStoneBroken)();
    },
    ready: function() {
      return args.minor.pvp;
    },
    do: function() {
      (0, import_kolmafia99.visitUrl)("peevpee.php?action=smashstone&pwd&confirm=on", true);
      (0, import_kolmafia99.visitUrl)("peevpee.php?place=fight");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Autumnaton",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return AutumnAton_exports.available();
    },
    completed: function() {
      return !AutumnAton_exports.have();
    },
    do: function() {
      AutumnAton_exports.upgrade();
      var upgrades = AutumnAton_exports.currentUpgrades();
      var zones = [];
      if (!upgrades.includes("leftleg1")) {
        zones.push($location(_templateObject1573 || (_templateObject1573 = _taggedTemplateLiteral87(["Guano Junction"]))), $location(_templateObject1583 || (_templateObject1583 = _taggedTemplateLiteral87(["Cobb's Knob Harem"]))), $location(_templateObject1593 || (_templateObject1593 = _taggedTemplateLiteral87(["Noob Cave"]))));
      }
      if (!upgrades.includes("rightleg1")) {
        zones.push($location(_templateObject1603 || (_templateObject1603 = _taggedTemplateLiteral87(["The Laugh Floor"]))), $location(_templateObject16111 || (_templateObject16111 = _taggedTemplateLiteral87(["The Haunted Library"]))), $location(_templateObject1627 || (_templateObject1627 = _taggedTemplateLiteral87(["The Haunted Kitchen"]))));
      }
      if (!upgrades.includes("leftarm1")) {
        zones.push($location(_templateObject1633 || (_templateObject1633 = _taggedTemplateLiteral87(["The Haunted Pantry"]))));
      }
      if (!upgrades.includes("rightarm1")) {
        zones.push($location(_templateObject1643 || (_templateObject1643 = _taggedTemplateLiteral87(["The Smut Orc Logging Camp"]))), $location(_templateObject1653 || (_templateObject1653 = _taggedTemplateLiteral87(["The Goatlet"]))), $location(_templateObject1663 || (_templateObject1663 = _taggedTemplateLiteral87(["Vanya's Castle"]))), $location(_templateObject1673 || (_templateObject1673 = _taggedTemplateLiteral87(["The Dark Elbow of the Woods"]))), $location(_templateObject1683 || (_templateObject1683 = _taggedTemplateLiteral87(["The Dark Neck of the Woods"]))), $location(_templateObject1693 || (_templateObject1693 = _taggedTemplateLiteral87(["The Dark Heart of the Woods"]))));
      }
      if ((0, import_kolmafia99.itemAmount)($item(_templateObject1703 || (_templateObject1703 = _taggedTemplateLiteral87(["barrel of gunpowder"])))) < 5 && get("sidequestLighthouseCompleted") === "none") zones.push($location(_templateObject17111 || (_templateObject17111 = _taggedTemplateLiteral87(["Sonofa Beach"]))));
      if ((0, import_kolmafia99.itemAmount)($item(_templateObject1727 || (_templateObject1727 = _taggedTemplateLiteral87(["goat cheese"])))) < 3 && step("questL08Trapper") < 2) zones.push($location(_templateObject1733 || (_templateObject1733 = _taggedTemplateLiteral87(["The Goatlet"]))));
      if (step("questL09Topping") < 1) {
        zones.push($location(_templateObject1743 || (_templateObject1743 = _taggedTemplateLiteral87(["The Smut Orc Logging Camp"]))));
      }
      zones.push($location(_templateObject1753 || (_templateObject1753 = _taggedTemplateLiteral87(["The Defiled Nook"]))), $location(_templateObject1763 || (_templateObject1763 = _taggedTemplateLiteral87(["Cobb's Knob Menagerie, Level 3"]))), $location(_templateObject1773 || (_templateObject1773 = _taggedTemplateLiteral87(["The Deep Machine Tunnels"]))), $location(_templateObject1783 || (_templateObject1783 = _taggedTemplateLiteral87(["The Daily Dungeon"]))));
      zones.push($location(_templateObject1793 || (_templateObject1793 = _taggedTemplateLiteral87(["The Sleazy Back Alley"]))));
      var result = AutumnAton_exports.sendTo(zones);
      if (result) (0, import_kolmafia99.print)("Autumnaton sent to ".concat(result));
    },
    limit: {
      tries: 15,
      unready: true
    },
    freeaction: true
  }, {
    name: "Saber",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return have($item(_templateObject1803 || (_templateObject1803 = _taggedTemplateLiteral87(["Fourth of May Cosplay Saber"]))));
    },
    completed: function() {
      return get("_saberMod") !== 0;
    },
    do: function() {
      (0, import_kolmafia99.visitUrl)("main.php?action=may4");
      (0, import_kolmafia99.runChoice)(4);
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Grapefruit",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return have($item(_templateObject18111 || (_templateObject18111 = _taggedTemplateLiteral87(["filthy corduroys"])))) && have($item(_templateObject1827 || (_templateObject1827 = _taggedTemplateLiteral87(["filthy knitted dread sack"])))) && step("questL12War") < 1;
    },
    completed: function() {
      return !have($familiar(_templateObject1833 || (_templateObject1833 = _taggedTemplateLiteral87(["Robortender"])))) || have($item(_templateObject1843 || (_templateObject1843 = _taggedTemplateLiteral87(["grapefruit"])))) || have($item(_templateObject1853 || (_templateObject1853 = _taggedTemplateLiteral87(["drive-by shooting"])))) || get("_roboDrinks").toLowerCase().includes("drive-by shooting");
    },
    do: function() {
      return (0, import_kolmafia99.retrieveItem)($item(_templateObject1863 || (_templateObject1863 = _taggedTemplateLiteral87(["grapefruit"]))));
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Prepare Robortender",
    after: ["Grapefruit"],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return (have($item(_templateObject1873 || (_templateObject1873 = _taggedTemplateLiteral87(["fish head"])))) && have($item(_templateObject1883 || (_templateObject1883 = _taggedTemplateLiteral87(["boxed wine"])))) || have($item(_templateObject1893 || (_templateObject1893 = _taggedTemplateLiteral87(["piscatini"]))))) && have($item(_templateObject1903 || (_templateObject1903 = _taggedTemplateLiteral87(["grapefruit"])))) || have($item(_templateObject19111 || (_templateObject19111 = _taggedTemplateLiteral87(["drive-by shooting"]))));
    },
    completed: function() {
      return (0, import_kolmafia99.myTurncount)() >= 1e3 || get("sidequestNunsCompleted") !== "none" || !have($familiar(_templateObject1925 || (_templateObject1925 = _taggedTemplateLiteral87(["Robortender"])))) || get("_roboDrinks").toLowerCase().includes("drive-by shooting");
    },
    do: function() {
      (0, import_kolmafia99.retrieveItem)($item(_templateObject1933 || (_templateObject1933 = _taggedTemplateLiteral87(["drive-by shooting"]))));
      Robortender_exports.feed($item(_templateObject1943 || (_templateObject1943 = _taggedTemplateLiteral87(["drive-by shooting"]))));
    },
    outfit: {
      familiar: $familiar(_templateObject1953 || (_templateObject1953 = _taggedTemplateLiteral87(["Robortender"])))
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Trainset",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return (0, import_kolmafia99.getWorkshed)() === $item(_templateObject1963 || (_templateObject1963 = _taggedTemplateLiteral87(["model train set"]))) && getTrainsetPositionsUntilConfigurable() === 0;
    },
    completed: function() {
      var config = getTrainsetConfiguration();
      var desiredConfig = getDesiredTrainsetConfig();
      for (var i = 0; i < 8; i++) {
        if (config[i] !== desiredConfig[i]) return false;
      }
      return true;
    },
    do: function() {
      setTrainsetConfiguration(getDesiredTrainsetConfig());
    },
    limit: {
      tries: 20,
      unready: true
    },
    freeaction: true
  }, {
    name: "Harvest Chateau",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return get("chateauAvailable") && !underStandard();
    },
    completed: function() {
      return get("_chateauDeskHarvested");
    },
    do: function() {
      (0, import_kolmafia99.visitUrl)("place.php?whichplace=chateau&action=chateau_desk2");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Learn About Bugs",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return have($item(_templateObject1973 || (_templateObject1973 = _taggedTemplateLiteral87(["S.I.T. Course Completion Certificate"]))));
    },
    completed: function() {
      return get("_sitCourseCompleted", true) || have($skill(_templateObject1983 || (_templateObject1983 = _taggedTemplateLiteral87(["Insectologist"]))));
    },
    do: function() {
      return (0, import_kolmafia99.use)($item(_templateObject1993 || (_templateObject1993 = _taggedTemplateLiteral87(["S.I.T. Course Completion Certificate"]))));
    },
    choices: _defineProperty33({}, 1494, 2),
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Harvest Rock Garden",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return haveInCampground($item(_templateObject2003 || (_templateObject2003 = _taggedTemplateLiteral87(["packet of rock seeds"]))));
    },
    completed: function() {
      return !haveInCampground($item(_templateObject20111 || (_templateObject20111 = _taggedTemplateLiteral87(["milestone"])))) || (0, import_kolmafia99.getCampground)()[$item(_templateObject2025 || (_templateObject2025 = _taggedTemplateLiteral87(["milestone"]))).name] < 1;
    },
    do: function() {
      (0, import_kolmafia99.visitUrl)("campground.php?action=rgarden1&pwd");
      (0, import_kolmafia99.visitUrl)("campground.php?action=rgarden2&pwd");
      (0, import_kolmafia99.visitUrl)("campground.php?action=rgarden3&pwd");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Cincho",
    after: ["Friar/Start"],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return !have($item(_templateObject2033 || (_templateObject2033 = _taggedTemplateLiteral87(["Cincho de Mayo"])))) || get("timesRested") >= (0, import_kolmafia99.totalFreeRests)() && CinchoDeMayo_exports.currentCinch() < 60;
    },
    ready: function() {
      return (0, import_kolmafia99.myTurncount)() >= ROUTE_WAIT_TO_NCFORCE && have($item(_templateObject2043 || (_templateObject2043 = _taggedTemplateLiteral87(["Cincho de Mayo"])))) && CinchoDeMayo_exports.currentCinch() >= 60 && !get("noncombatForcerActive");
    },
    outfit: {
      equip: $items(_templateObject2053 || (_templateObject2053 = _taggedTemplateLiteral87(["Cincho de Mayo"])))
    },
    do: function() {
      return (0, import_kolmafia99.useSkill)($skill(_templateObject2063 || (_templateObject2063 = _taggedTemplateLiteral87(["Cincho: Fiesta Exit"]))));
    },
    limit: {
      unready: true
    }
  }, {
    name: "Cincho Rest",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return CinchoDeMayo_exports.currentCinch() + CinchoDeMayo_exports.cinchRestoredBy() <= 100;
    },
    completed: function() {
      return !have($item(_templateObject2073 || (_templateObject2073 = _taggedTemplateLiteral87(["Cincho de Mayo"])))) || get("timesRested") >= (0, import_kolmafia99.totalFreeRests)() || get("timesRested") >= 17;
    },
    do: function() {
      if ((0, import_kolmafia99.myMp)() === (0, import_kolmafia99.myMaxmp)() && (0, import_kolmafia99.myHp)() === (0, import_kolmafia99.myMaxhp)()) {
        (0, import_kolmafia99.useSkill)(byClass({
          "Seal Clubber": $skill(_templateObject2083 || (_templateObject2083 = _taggedTemplateLiteral87(["Seal Clubbing Frenzy"]))),
          "Turtle Tamer": $skill(_templateObject2093 || (_templateObject2093 = _taggedTemplateLiteral87(["Patience of the Tortoise"]))),
          Pastamancer: $skill(_templateObject21011 || (_templateObject21011 = _taggedTemplateLiteral87(["Manicotti Meditation"]))),
          Sauceror: $skill(_templateObject21111 || (_templateObject21111 = _taggedTemplateLiteral87(["Sauce Contemplation"]))),
          "Disco Bandit": $skill(_templateObject21211 || (_templateObject21211 = _taggedTemplateLiteral87(["Disco Aerobics"]))),
          "Accordion Thief": $skill(_templateObject21311 || (_templateObject21311 = _taggedTemplateLiteral87(["Moxie of the Mariachi"]))),
          default: $skill(_templateObject21410 || (_templateObject21410 = _taggedTemplateLiteral87(["none"])))
        }));
      }
      if (get("chateauAvailable") && !underStandard()) {
        (0, import_kolmafia99.visitUrl)("place.php?whichplace=chateau&action=chateau_restlabelfree");
      } else if (get("getawayCampsiteUnlocked") && !underStandard()) {
        (0, import_kolmafia99.visitUrl)("place.php?whichplace=campaway&action=campaway_tentclick");
      } else {
        (0, import_kolmafia99.visitUrl)("campground.php?action=rest");
      }
    },
    limit: {
      tries: 26,
      // Total unrestricted free rests
      guard: Guards.create(
        function() {
          return (0, import_kolmafia99.myAdventures)();
        },
        function(adv) {
          return (0, import_kolmafia99.myAdventures)() === adv;
        }
        // Assert we did not use an adventure
      )
    }
  }, {
    name: "2002 Store",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return !have($item(_templateObject21510 || (_templateObject21510 = _taggedTemplateLiteral87(["2002 Mr. Store Catalog"])))) || get("availableMrStore2002Credits") === 0 && get("_2002MrStoreCreditsCollected");
    },
    do: function() {
      if (!haveLoathingIdolMicrophone()) {
        (0, import_kolmafia99.buy)($coinmaster(_templateObject2163 || (_templateObject2163 = _taggedTemplateLiteral87(["Mr. Store 2002"]))), 1, $item(_templateObject2173 || (_templateObject2173 = _taggedTemplateLiteral87(["Loathing Idol Microphone"]))));
      }
      if (get("availableMrStore2002Credits") > 0) {
        (0, import_kolmafia99.buy)($coinmaster(_templateObject2183 || (_templateObject2183 = _taggedTemplateLiteral87(["Mr. Store 2002"]))), get("availableMrStore2002Credits"), $item(_templateObject2193 || (_templateObject2193 = _taggedTemplateLiteral87(["Spooky VHS Tape"]))));
      }
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Shadow Rift",
    after: ["War/Open Nuns"],
    completed: function() {
      return !have($item(_templateObject2203 || (_templateObject2203 = _taggedTemplateLiteral87(["closed-circuit pay phone"])))) || get("_shadowAffinityToday") && !have($effect(_templateObject22111 || (_templateObject22111 = _taggedTemplateLiteral87(["Shadow Affinity"])))) && get("encountersUntilSRChoice") !== 0;
    },
    prepare: function() {
      if (AugustScepter_exports.canCast(7)) (0, import_kolmafia99.useSkill)($skill(_templateObject2227 || (_templateObject2227 = _taggedTemplateLiteral87(["Aug. 7th: Lighthouse Day!"]))));
      if (CinchoDeMayo_exports.currentCinch() >= 25) ensureEffect($effect(_templateObject2233 || (_templateObject2233 = _taggedTemplateLiteral87(["Party Soundtrack"]))));
      if (have($item(_templateObject2243 || (_templateObject2243 = _taggedTemplateLiteral87(["pocket wish"])))) && !have($effect(_templateObject2253 || (_templateObject2253 = _taggedTemplateLiteral87(["Frosty"]))))) (0, import_kolmafia99.cliExecute)("genie effect frosty");
      if (haveLoathingIdolMicrophone()) ensureEffect($effect(_templateObject2263 || (_templateObject2263 = _taggedTemplateLiteral87(["Spitting Rhymes"]))));
      if (!get("_shadowAffinityToday")) ClosedCircuitPayphone_exports.chooseQuest(function() {
        return 2;
      });
    },
    do: $location(_templateObject2273 || (_templateObject2273 = _taggedTemplateLiteral87(["Shadow Rift (The Misspelled Cemetary)"]))),
    post: function() {
      if (have(ClosedCircuitPayphone_exports.rufusTarget())) {
        (0, import_kolmafia99.use)($item(_templateObject2282 || (_templateObject2282 = _taggedTemplateLiteral87(["closed-circuit pay phone"]))));
      }
    },
    choices: {
      1498: 1
    },
    combat: new CombatStrategy2().macro(function() {
      var result = Macro.while_("hasskill 226", Macro.skill($skill(_templateObject2292 || (_templateObject2292 = _taggedTemplateLiteral87(["Perpetrate Mild Evil"])))));
      var vortex_count = (get("_fireExtinguisherCharge") - 20) / 10;
      if (vortex_count > 0) {
        for (var i = 0; i < vortex_count; i++) result.trySkill($skill(_templateObject2302 || (_templateObject2302 = _taggedTemplateLiteral87(["Fire Extinguisher: Polar Vortex"]))));
      }
      result.while_("hasskill 7448 && !pastround 25", Macro.skill($skill(_templateObject23110 || (_templateObject23110 = _taggedTemplateLiteral87(["Douse Foe"])))));
      return result;
    }, $monster(_templateObject2325 || (_templateObject2325 = _taggedTemplateLiteral87(["shadow slab"])))).killHard(),
    outfit: function() {
      var _result$equip, _result$equip2, _result$equip3;
      var result = {
        modifier: "item",
        avoid: $items(_templateObject2332 || (_templateObject2332 = _taggedTemplateLiteral87(["broken champagne bottle"]))),
        equip: []
      };
      if (have($item(_templateObject2342 || (_templateObject2342 = _taggedTemplateLiteral87(["industrial fire extinguisher"])))) && get("_fireExtinguisherCharge") >= 30) (_result$equip = result.equip) === null || _result$equip === void 0 || _result$equip.push($item(_templateObject2352 || (_templateObject2352 = _taggedTemplateLiteral87(["industrial fire extinguisher"]))));
      else if (DaylightShavings_exports.nextBuff() === $effect(_templateObject2362 || (_templateObject2362 = _taggedTemplateLiteral87(["Friendly Chops"])))) (_result$equip2 = result.equip) === null || _result$equip2 === void 0 || _result$equip2.push($item(_templateObject2372 || (_templateObject2372 = _taggedTemplateLiteral87(["Daylight Shavings Helmet"]))));
      if (have($item(_templateObject2382 || (_templateObject2382 = _taggedTemplateLiteral87(["Flash Liquidizer Ultra Dousing Accessory"])))) && get("_douseFoeUses") < 3) (_result$equip3 = result.equip) === null || _result$equip3 === void 0 || _result$equip3.push($item(_templateObject2392 || (_templateObject2392 = _taggedTemplateLiteral87(["Flash Liquidizer Ultra Dousing Accessory"]))));
      return result;
    },
    boss: true,
    freecombat: true,
    limit: {
      tries: 12
    }
  }, {
    name: "Shadow Lodestone",
    after: ["Misc/Shadow Rift"],
    completed: function() {
      return have($effect(_templateObject2402 || (_templateObject2402 = _taggedTemplateLiteral87(["Shadow Waters"])))) || !have($item(_templateObject24110 || (_templateObject24110 = _taggedTemplateLiteral87(["Rufus's shadow lodestone"]))));
    },
    do: $location(_templateObject2424 || (_templateObject2424 = _taggedTemplateLiteral87(["Shadow Rift (The Misspelled Cemetary)"]))),
    choices: {
      1500: 2
    },
    combat: new CombatStrategy2().macro(Macro.abort()),
    limit: {
      tries: 1
    }
  }, {
    name: "Eldritch Tentacle",
    after: ["Keys/Star Key", "Crypt/Cranny"],
    ready: function() {
      return get("questL02Larva") !== "unstarted";
    },
    completed: function() {
      return get("_eldritchTentacleFought");
    },
    do: function() {
      (0, import_kolmafia99.visitUrl)("place.php?whichplace=forestvillage&action=fv_scientist", false);
      (0, import_kolmafia99.runChoice)(1);
    },
    combat: new CombatStrategy2().killHard(),
    limit: {
      tries: 1
    }
  }, {
    name: "Cloud Talk",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return have($effect(_templateObject2432 || (_templateObject2432 = _taggedTemplateLiteral87(["That's Just Cloud-Talk, Man"])))) || get("_campAwayCloudBuffs", 0) > 0 || !get("getawayCampsiteUnlocked");
    },
    do: function() {
      return (0, import_kolmafia99.visitUrl)("place.php?whichplace=campaway&action=campaway_sky");
    },
    freeaction: true,
    limit: {
      tries: 1
    }
  }, {
    name: "LOV Tunnel",
    after: [],
    priority: function() {
      return Priorities.Start;
    },
    ready: function() {
      return get("loveTunnelAvailable");
    },
    completed: function() {
      return get("_loveTunnelUsed");
    },
    do: $location(_templateObject2442 || (_templateObject2442 = _taggedTemplateLiteral87(["The Tunnel of L.O.V.E."]))),
    choices: {
      1222: 1,
      1223: 1,
      1224: primestatId(),
      1225: 1,
      1226: 2,
      1227: 1,
      1228: 3
    },
    combat: new CombatStrategy2().macro(function() {
      return Macro.externalIf((0, import_kolmafia99.haveEquipped)($item(_templateObject2452 || (_templateObject2452 = _taggedTemplateLiteral87(["June cleaver"])))), Macro.attack().repeat());
    }, $monster(_templateObject2462 || (_templateObject2462 = _taggedTemplateLiteral87(["LOV Enforcer"])))).macro(Macro.skill($skill(_templateObject2472 || (_templateObject2472 = _taggedTemplateLiteral87(["Saucestorm"])))).repeat(), $monster(_templateObject2482 || (_templateObject2482 = _taggedTemplateLiteral87(["LOV Engineer"])))).killHard(),
    outfit: {
      equip: $items(_templateObject2492 || (_templateObject2492 = _taggedTemplateLiteral87(["June cleaver"])))
    },
    limit: {
      tries: 1
    },
    freecombat: true
  }, {
    name: "Daycare",
    after: [],
    priority: function() {
      return Priorities.Start;
    },
    ready: function() {
      return get("daycareOpen");
    },
    completed: function() {
      return get("_daycareGymScavenges") !== 0;
    },
    do: function() {
      if ((get("daycareOpen") || get("_daycareToday")) && !get("_daycareSpa")) {
        switch ((0, import_kolmafia99.myPrimestat)()) {
          case $stat(_templateObject2502 || (_templateObject2502 = _taggedTemplateLiteral87(["Muscle"]))):
            (0, import_kolmafia99.cliExecute)("daycare muscle");
            break;
          case $stat(_templateObject25110 || (_templateObject25110 = _taggedTemplateLiteral87(["Mysticality"]))):
            (0, import_kolmafia99.cliExecute)("daycare myst");
            break;
          case $stat(_templateObject2523 || (_templateObject2523 = _taggedTemplateLiteral87(["Moxie"]))):
            (0, import_kolmafia99.cliExecute)("daycare moxie");
            break;
        }
      }
      (0, import_kolmafia99.visitUrl)("place.php?whichplace=town_wrong&action=townwrong_boxingdaycare");
      (0, import_kolmafia99.runChoice)(3);
      (0, import_kolmafia99.runChoice)(2);
    },
    outfit: {
      modifier: "exp"
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Bastille",
    after: [],
    priority: function() {
      return Priorities.Start;
    },
    ready: function() {
      return have($item(_templateObject2532 || (_templateObject2532 = _taggedTemplateLiteral87(["Bastille Battalion control rig"]))));
    },
    completed: function() {
      return get("_bastilleGames") !== 0;
    },
    do: function() {
      return (0, import_kolmafia99.cliExecute)("bastille ".concat((0, import_kolmafia99.myPrimestat)() === $stat(_templateObject2542 || (_templateObject2542 = _taggedTemplateLiteral87(["Mysticality"]))) ? "myst" : (0, import_kolmafia99.myPrimestat)()));
    },
    limit: {
      tries: 1
    },
    freeaction: true,
    outfit: {
      modifier: "exp"
    }
  }, {
    name: "Leaflet",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return (0, import_kolmafia99.myLevel)() >= 9;
    },
    completed: function() {
      return get("leafletCompleted");
    },
    do: function() {
      (0, import_kolmafia99.visitUrl)("council.php");
      (0, import_kolmafia99.cliExecute)("leaflet");
      _set("leafletCompleted", true);
    },
    freeaction: true,
    limit: {
      tries: 1
    },
    outfit: {
      modifier: "exp"
    }
  }, {
    name: "Horsery",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return get("horseryAvailable");
    },
    completed: function() {
      return get("_horsery") === "dark horse";
    },
    do: function() {
      return (0, import_kolmafia99.cliExecute)("horsery dark");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Sewer Accordion",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return (0, import_kolmafia99.myMeat)() >= 1e3;
    },
    completed: function() {
      return have($item(_templateObject2552 || (_templateObject2552 = _taggedTemplateLiteral87(["stolen accordion"]))));
    },
    do: function() {
      return (0, import_kolmafia99.retrieveItem)($item(_templateObject2562 || (_templateObject2562 = _taggedTemplateLiteral87(["stolen accordion"]))));
    },
    outfit: {
      equip: $items(_templateObject2572 || (_templateObject2572 = _taggedTemplateLiteral87(["designer sweatpants"])))
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Sewer Totem",
    after: ["Sewer Accordion"],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return (0, import_kolmafia99.myMeat)() >= 1e3;
    },
    completed: function() {
      return have($item(_templateObject2582 || (_templateObject2582 = _taggedTemplateLiteral87(["turtle totem"]))));
    },
    do: function() {
      return (0, import_kolmafia99.retrieveItem)($item(_templateObject2592 || (_templateObject2592 = _taggedTemplateLiteral87(["turtle totem"]))));
    },
    outfit: {
      equip: $items(_templateObject2602 || (_templateObject2602 = _taggedTemplateLiteral87(["designer sweatpants"])))
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Sewer Saucepan",
    after: ["Sewer Accordion", "Sewer Totem"],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return (0, import_kolmafia99.myMeat)() >= 1e3;
    },
    completed: function() {
      return have($item(_templateObject26110 || (_templateObject26110 = _taggedTemplateLiteral87(["saucepan"]))));
    },
    do: function() {
      return (0, import_kolmafia99.retrieveItem)($item(_templateObject2622 || (_templateObject2622 = _taggedTemplateLiteral87(["saucepan"]))));
    },
    outfit: {
      equip: $items(_templateObject2632 || (_templateObject2632 = _taggedTemplateLiteral87(["designer sweatpants"])))
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Wish",
    priority: function() {
      return Priorities.Free;
    },
    after: [],
    completed: function() {
      return get("_genieWishesUsed") >= 3 || !have($item(_templateObject2642 || (_templateObject2642 = _taggedTemplateLiteral87(["genie bottle"]))));
    },
    do: function() {
      return (0, import_kolmafia99.cliExecute)("genie wish for more wishes");
    },
    limit: {
      tries: 3
    },
    freeaction: true
  }, {
    name: "Saucecrafting",
    priority: function() {
      return Priorities.Free;
    },
    after: [],
    ready: function() {
      return have($skill(_templateObject2652 || (_templateObject2652 = _taggedTemplateLiteral87(["Advanced Saucecrafting"])))) && (0, import_kolmafia99.myMp)() >= 10;
    },
    completed: function() {
      return get("reagentSummons") > 0;
    },
    do: function() {
      return (0, import_kolmafia99.useSkill)($skill(_templateObject2662 || (_templateObject2662 = _taggedTemplateLiteral87(["Advanced Saucecrafting"]))));
    },
    freeaction: true,
    limit: {
      tries: 1
    }
  }, {
    name: "Prevent Scurvy and Sobriety",
    priority: function() {
      return Priorities.Free;
    },
    after: [],
    ready: function() {
      return have($skill(_templateObject2672 || (_templateObject2672 = _taggedTemplateLiteral87(["Prevent Scurvy and Sobriety"])))) && (0, import_kolmafia99.myMp)() >= 50;
    },
    completed: function() {
      return get("_preventScurvy");
    },
    do: function() {
      return (0, import_kolmafia99.useSkill)($skill(_templateObject2682 || (_templateObject2682 = _taggedTemplateLiteral87(["Prevent Scurvy and Sobriety"]))));
    },
    freeaction: true,
    limit: {
      tries: 1
    }
  }, {
    name: "Snojo",
    after: [],
    ready: function() {
      return get("snojoAvailable") && have($familiar(_templateObject2692 || (_templateObject2692 = _taggedTemplateLiteral87(["Frumious Bandersnatch"])))) && have($item(_templateObject2702 || (_templateObject2702 = _taggedTemplateLiteral87(["Greatest American Pants"])))) && have($skill(_templateObject27110 || (_templateObject27110 = _taggedTemplateLiteral87(["Flavour of Magic"])))) && have($skill(_templateObject2722 || (_templateObject2722 = _taggedTemplateLiteral87(["Cannelloni Cannon"])))) && have($skill(_templateObject2732 || (_templateObject2732 = _taggedTemplateLiteral87(["Saucegeyser"])))) && // Wait until bowling ball is thrown
      !have($item(_templateObject2742 || (_templateObject2742 = _taggedTemplateLiteral87(["cosmic bowling ball"]))));
    },
    priority: function() {
      return Priorities.Start;
    },
    prepare: function() {
      if (get("snojoSetting") === null) {
        (0, import_kolmafia99.visitUrl)("place.php?whichplace=snojo&action=snojo_controller");
        (0, import_kolmafia99.runChoice)(primestatId());
      }
      if ((0, import_kolmafia99.equippedAmount)($item(_templateObject2752 || (_templateObject2752 = _taggedTemplateLiteral87(["Greatest American Pants"])))) > 0 && get("_gapBuffs") < 5) {
        ensureEffect($effect(_templateObject2762 || (_templateObject2762 = _taggedTemplateLiteral87(["Super Skill"]))));
      }
      (0, import_kolmafia99.cliExecute)("uneffect ode to booze");
      (0, import_kolmafia99.cliExecute)("uneffect scarysauce");
      fillHp();
    },
    completed: function() {
      return get("_snojoFreeFights") >= 10;
    },
    do: $location(_templateObject2772 || (_templateObject2772 = _taggedTemplateLiteral87(["The X-32-F Combat Training Snowman"]))),
    post: function() {
      if (get("_snojoFreeFights") === 10) (0, import_kolmafia99.cliExecute)("hottub");
    },
    combat: new CombatStrategy2().macro(new Macro().trySkill($skill(_templateObject2782 || (_templateObject2782 = _taggedTemplateLiteral87(["Curse of Weaksauce"])))).trySkill($skill(_templateObject2792 || (_templateObject2792 = _taggedTemplateLiteral87(["Stuffed Mortar Shell"])))).while_("!pastround 27 && !hpbelow 100 && !mpbelow 8", new Macro().skill($skill(_templateObject2802 || (_templateObject2802 = _taggedTemplateLiteral87(["Cannelloni Cannon"]))))).while_("!mpbelow 24", new Macro().skill($skill(_templateObject28110 || (_templateObject28110 = _taggedTemplateLiteral87(["Saucegeyser"]))))).attack().repeat()).killHard(),
    outfit: {
      familiar: $familiar(_templateObject2822 || (_templateObject2822 = _taggedTemplateLiteral87(["Frumious Bandersnatch"]))),
      equip: $items(_templateObject2832 || (_templateObject2832 = _taggedTemplateLiteral87(["Greatest American Pants, familiar scrapbook, June cleaver, sea salt scrubs"]))),
      modifier: "mainstat, 4exp, HP"
    },
    effects: $effects(_templateObject2842 || (_templateObject2842 = _taggedTemplateLiteral87(["Spirit of Peppermint"]))),
    limit: {
      tries: 10
    },
    freecombat: true
  }, {
    name: "Cowboy Boots",
    priority: function() {
      return Priorities.Free;
    },
    after: [],
    completed: function() {
      return have($item(_templateObject2852 || (_templateObject2852 = _taggedTemplateLiteral87(["your cowboy boots"])))) || !get("telegraphOfficeAvailable");
    },
    do: function() {
      return (0, import_kolmafia99.visitUrl)("place.php?whichplace=town_right&action=townright_ltt");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Barrel Lid",
    priority: function() {
      return Priorities.Free;
    },
    after: [],
    completed: function() {
      return get("_barrelPrayer") || !get("barrelShrineUnlocked");
    },
    do: function() {
      (0, import_kolmafia99.visitUrl)("da.php?barrelshrine=1");
      (0, import_kolmafia99.runChoice)(-1);
    },
    choices: {
      1100: 1
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Delevel",
    priority: function() {
      return Priorities.Free;
    },
    after: ["Tower/Shadow"],
    ready: function() {
      return (0, import_kolmafia99.myFullness)() === (0, import_kolmafia99.fullnessLimit)();
    },
    completed: function() {
      return !args.minor.delevel || !atLevel(14) || !have($item(_templateObject2862 || (_templateObject2862 = _taggedTemplateLiteral87(["Clan VIP Lounge key"]))));
    },
    do: function() {
      return (0, import_kolmafia99.cliExecute)("eat basic hot dog");
    },
    freeaction: true,
    limit: {
      tries: 15
    }
  }, {
    name: "Blood Bubble",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return (0, import_kolmafia99.myMeat)() >= meatBuffer + 500;
    },
    completed: function() {
      return !have($skill(_templateObject2872 || (_templateObject2872 = _taggedTemplateLiteral87(["Blood Bubble"])))) || step("questL13Final") > 10 || have($effect(_templateObject2882 || (_templateObject2882 = _taggedTemplateLiteral87(["Blood Bubble"]))));
    },
    do: function() {
      (0, import_kolmafia99.useSkill)($skill(_templateObject2892 || (_templateObject2892 = _taggedTemplateLiteral87(["Blood Bubble"]))), Math.floor(((0, import_kolmafia99.myHp)() - 1) / 30));
      fillHp();
      (0, import_kolmafia99.useSkill)($skill(_templateObject2902 || (_templateObject2902 = _taggedTemplateLiteral87(["Blood Bubble"]))), Math.floor(((0, import_kolmafia99.myHp)() - 1) / 30));
    },
    outfit: {
      modifier: "HP"
    },
    freeaction: true,
    limit: {
      tries: 10
    }
  }, {
    name: "Blood Bond",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return (0, import_kolmafia99.myMeat)() >= meatBuffer + 500;
    },
    completed: function() {
      return !have($skill(_templateObject29110 || (_templateObject29110 = _taggedTemplateLiteral87(["Blood Bond"])))) || step("questL13Final") > 10 || have($effect(_templateObject2922 || (_templateObject2922 = _taggedTemplateLiteral87(["Blood Bond"]))));
    },
    do: function() {
      (0, import_kolmafia99.useSkill)($skill(_templateObject2932 || (_templateObject2932 = _taggedTemplateLiteral87(["Blood Bond"]))), Math.floor(((0, import_kolmafia99.myHp)() - 1) / 30));
      fillHp();
      (0, import_kolmafia99.useSkill)($skill(_templateObject2942 || (_templateObject2942 = _taggedTemplateLiteral87(["Blood Bond"]))), Math.floor(((0, import_kolmafia99.myHp)() - 1) / 30));
    },
    outfit: {
      modifier: "HP"
    },
    freeaction: true,
    limit: {
      tries: 10
    }
  }, {
    name: "Limit Stats",
    priority: function() {
      return Priorities.Free;
    },
    after: ["Tower/Start"],
    completed: function() {
      return get("nsContestants2") > -1 || have($effect(_templateObject2952 || (_templateObject2952 = _taggedTemplateLiteral87(["Feeling Insignificant"])))) || !have($item(_templateObject2962 || (_templateObject2962 = _taggedTemplateLiteral87(["pocket wish"])))) || !CursedMonkeyPaw_exports.have() || CursedMonkeyPaw_exports.wishes() === 0;
    },
    do: function() {
      if (have($item(_templateObject2972 || (_templateObject2972 = _taggedTemplateLiteral87(["pocket wish"]))))) (0, import_kolmafia99.cliExecute)("genie effect Feeling Insignificant");
      else CursedMonkeyPaw_exports.wishFor($effect(_templateObject2982 || (_templateObject2982 = _taggedTemplateLiteral87(["Feeling Insignificant"]))));
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Leaf Resin",
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return BurningLeaves_exports.have() && BurningLeaves_exports.numberOfLeaves() >= 50 && !have($effect(_templateObject2992 || (_templateObject2992 = _taggedTemplateLiteral87(["Resined"]))));
    },
    completed: function() {
      return step("questL12War") === 999;
    },
    // Stop near the end of the run
    acquire: [{
      item: $item(_templateObject3002 || (_templateObject3002 = _taggedTemplateLiteral87(["distilled resin"])))
    }],
    do: function() {
      return (0, import_kolmafia99.use)($item(_templateObject30110 || (_templateObject30110 = _taggedTemplateLiteral87(["distilled resin"]))));
    },
    limit: {
      tries: 5,
      unready: true
    },
    freeaction: true
  }, {
    name: "Acquire Tuba",
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return !args.minor.savetuba && AprilingBandHelmet_exports.canJoinSection();
    },
    completed: function() {
      return have($item(_templateObject3022 || (_templateObject3022 = _taggedTemplateLiteral87(["Apriling band tuba"]))));
    },
    do: function() {
      return AprilingBandHelmet_exports.joinSection($item(_templateObject3032 || (_templateObject3032 = _taggedTemplateLiteral87(["Apriling band tuba"]))));
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Open McHugeLarge Bag",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return !have($item(_templateObject3042 || (_templateObject3042 = _taggedTemplateLiteral87(["McHugeLarge duffel bag"])))) || have($item(_templateObject3052 || (_templateObject3052 = _taggedTemplateLiteral87(["McHugeLarge right pole"]))));
    },
    do: function() {
      return (0, import_kolmafia99.visitUrl)("inventory.php?action=skiduffel&pwd");
    },
    freeaction: true,
    limit: {
      tries: 1
    }
  }, {
    name: "Check Florist",
    after: ["Mosquito/Start"],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return get("floristFriarChecked");
    },
    do: function() {
      (0, import_kolmafia99.floristAvailable)();
      (0, import_kolmafia99.cliExecute)("ash florist_available()");
    },
    freeaction: true,
    limit: {
      tries: 1
    }
  }, {
    name: "Clan Photo Booth Free Kill",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return get(toTempPref("photoBoothChecked"), false) || have($item(_templateObject3062 || (_templateObject3062 = _taggedTemplateLiteral87(["Sheriff moustache"])))) && have($item(_templateObject3072 || (_templateObject3072 = _taggedTemplateLiteral87(["Sheriff badge"])))) && have($item(_templateObject3082 || (_templateObject3082 = _taggedTemplateLiteral87(["Sheriff pistol"])))) || get("_photoBoothEquipment", 0) >= 3;
    },
    do: function() {
      _set(toTempPref("photoBoothChecked"), true);
      if ((0, import_kolmafia99.getClanName)() !== "Bonus Adventures from Hell") {
        var clanWL = Clan.getWhitelisted();
        var bafhWL = clanWL.find(function(c) {
          return c.name === (0, import_kolmafia99.getClanName)();
        }) !== void 0 && clanWL.find(function(c) {
          return c.name === "Bonus Adventures from Hell";
        }) !== void 0;
        if (!bafhWL) return;
      }
      Clan.with("Bonus Adventures from Hell", function() {
        (0, import_kolmafia99.cliExecute)("photobooth item moustache");
        (0, import_kolmafia99.cliExecute)("photobooth item badge");
        (0, import_kolmafia99.cliExecute)("photobooth item pistol");
      });
    },
    freeaction: true,
    limit: {
      tries: 3
    }
  }, {
    name: "Acquire Mouthwash",
    priority: function() {
      return Priorities.Start;
    },
    completed: function() {
      return !have($item(_templateObject3092 || (_templateObject3092 = _taggedTemplateLiteral87(["Sept-Ember Censer"])))) || get("availableSeptEmbers", 0) < 1 && get("_septEmbersCollected", false) || args.minor.saveember;
    },
    do: function() {
      (0, import_kolmafia99.visitUrl)("shop.php?whichshop=september");
      _set("_septEmbersCollected", true);
      if (!have($item(_templateObject31010 || (_templateObject31010 = _taggedTemplateLiteral87(["bembershoot"]))))) (0, import_kolmafia99.visitUrl)("shop.php?whichshop=september&action=buyitem&quantity=1&whichrow=1516&pwd");
      var mouthwashes = (0, import_kolmafia99.floor)(get("availableSeptEmbers", 0) / 2);
      (0, import_kolmafia99.visitUrl)("shop.php?whichshop=september&action=buyitem&quantity=".concat(mouthwashes, "&whichrow=1512&pwd"));
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Cut Melodramedary",
    after: [],
    priority: function() {
      return Priorities.Start;
    },
    completed: function() {
      return get("_entauntaunedToday") || !have($familiar(_templateObject31110 || (_templateObject31110 = _taggedTemplateLiteral87(["Melodramedary"])))) || !have($item(_templateObject31210 || (_templateObject31210 = _taggedTemplateLiteral87(["Fourth of May Cosplay Saber"])))) || !have($familiar(_templateObject31310 || (_templateObject31310 = _taggedTemplateLiteral87(["Shorter-Order Cook"]))));
    },
    do: function() {
      (0, import_kolmafia99.visitUrl)("main.php?action=camel");
      (0, import_kolmafia99.runChoice)(1);
    },
    outfit: {
      familiar: $familiar(_templateObject3146 || (_templateObject3146 = _taggedTemplateLiteral87(["Melodramedary"]))),
      weapon: $item(_templateObject3152 || (_templateObject3152 = _taggedTemplateLiteral87(["Fourth of May Cosplay Saber"])))
    },
    freeaction: true,
    limit: {
      tries: 1
    }
  }, {
    name: "Mouthwash",
    after: ["Cloud Talk", "Cut Melodramedary", "Acquire Mouthwash", "Sewer Saucepan"],
    priority: function() {
      return Priorities.Start;
    },
    completed: function() {
      return !have($item(_templateObject3162 || (_templateObject3162 = _taggedTemplateLiteral87(["Mmm-brr! brand mouthwash"]))));
    },
    do: function() {
      if (have($item(_templateObject3172 || (_templateObject3172 = _taggedTemplateLiteral87(["rainbow glitter candle"]))))) (0, import_kolmafia99.use)($item(_templateObject3182 || (_templateObject3182 = _taggedTemplateLiteral87(["rainbow glitter candle"]))));
      if (have($item(_templateObject3192 || (_templateObject3192 = _taggedTemplateLiteral87(["pec oil"]))))) (0, import_kolmafia99.use)($item(_templateObject3202 || (_templateObject3202 = _taggedTemplateLiteral87(["pec oil"]))));
      if (have($skill(_templateObject32110 || (_templateObject32110 = _taggedTemplateLiteral87(["Emotionally Chipped"])))) && get("_feelPeacefulUsed") < 3) ensureEffect($effect(_templateObject3222 || (_templateObject3222 = _taggedTemplateLiteral87(["Feeling Peaceful"]))));
      if (have($item(_templateObject3232 || (_templateObject3232 = _taggedTemplateLiteral87(["MayDay\u2122 supply package"]))))) (0, import_kolmafia99.use)($item(_templateObject3242 || (_templateObject3242 = _taggedTemplateLiteral87(["MayDay\u2122 supply package"]))));
      if (have($item(_templateObject3252 || (_templateObject3252 = _taggedTemplateLiteral87(["scroll of Protection from Bad Stuff"]))))) (0, import_kolmafia99.use)($item(_templateObject3262 || (_templateObject3262 = _taggedTemplateLiteral87(["scroll of Protection from Bad Stuff"]))));
      if (have($item(_templateObject3272 || (_templateObject3272 = _taggedTemplateLiteral87(["bottle of antifreeze"]))))) (0, import_kolmafia99.use)($item(_templateObject3282 || (_templateObject3282 = _taggedTemplateLiteral87(["bottle of antifreeze"]))));
      if (have($item(_templateObject3292 || (_templateObject3292 = _taggedTemplateLiteral87(["recording of Rolando's Rondo of Resisto"]))))) (0, import_kolmafia99.use)($item(_templateObject3302 || (_templateObject3302 = _taggedTemplateLiteral87(["recording of Rolando's Rondo of Resisto"]))));
      if (have($item(_templateObject33110 || (_templateObject33110 = _taggedTemplateLiteral87(["saucepan"])))) && have($skill(_templateObject3322 || (_templateObject3322 = _taggedTemplateLiteral87(["Scarysauce"]))))) ensureEffect($effect(_templateObject3332 || (_templateObject3332 = _taggedTemplateLiteral87(["Scarysauce"]))));
      (0, import_kolmafia99.use)($item(_templateObject3342 || (_templateObject3342 = _taggedTemplateLiteral87(["Mmm-brr! brand mouthwash"]))));
    },
    outfit: function() {
      if (have($familiar(_templateObject3352 || (_templateObject3352 = _taggedTemplateLiteral87(["Trick-or-Treating Tot"])))) && have($item(_templateObject3362 || (_templateObject3362 = _taggedTemplateLiteral87(["li'l candy corn costume"]))))) return {
        familiar: $familiar(_templateObject3372 || (_templateObject3372 = _taggedTemplateLiteral87(["Trick-or-Treating Tot"]))),
        modifier: "cold res"
      };
      return {
        familiar: $familiar(_templateObject3382 || (_templateObject3382 = _taggedTemplateLiteral87(["Exotic Parrot"]))),
        modifier: "cold res"
      };
    },
    limit: {
      tries: 4
    },
    freeaction: true
  }]
};
var WandQuest = {
  name: "Wand",
  tasks: [{
    name: "Plus Sign",
    after: [],
    ready: function() {
      return (0, import_kolmafia99.myBasestat)($stat(_templateObject3392 || (_templateObject3392 = _taggedTemplateLiteral87(["muscle"])))) >= 45 && (0, import_kolmafia99.myBasestat)($stat(_templateObject3402 || (_templateObject3402 = _taggedTemplateLiteral87(["mysticality"])))) >= 45 && (0, import_kolmafia99.myBasestat)($stat(_templateObject3418 || (_templateObject3418 = _taggedTemplateLiteral87(["moxie"])))) >= 45 && (keyStrategy.useful(Keys.Zap) || args.minor.wand);
    },
    completed: function() {
      return have($item(_templateObject3422 || (_templateObject3422 = _taggedTemplateLiteral87(["plus sign"])))) || get("lastPlusSignUnlock") === (0, import_kolmafia99.myAscensions)();
    },
    do: $location(_templateObject3432 || (_templateObject3432 = _taggedTemplateLiteral87(["The Enormous Greater-Than Sign"]))),
    outfit: {
      modifier: "-combat"
    },
    choices: {
      451: 3
    },
    limit: {
      soft: 20
    }
  }, {
    name: "Get Teleportitis",
    after: ["Plus Sign"],
    ready: function() {
      return (0, import_kolmafia99.myMeat)() >= 1e3 && // Meat for goal teleportitis choice adventure
      have($item(_templateObject3442 || (_templateObject3442 = _taggedTemplateLiteral87(["soft green echo eyedrop antidote"])))) && // Antitdote to remove teleportitis afterwards
      (keyStrategy.useful(Keys.Zap) || args.minor.wand);
    },
    completed: function() {
      return have($effect(_templateObject3452 || (_templateObject3452 = _taggedTemplateLiteral87(["Teleportitis"])))) || get("lastPlusSignUnlock") === (0, import_kolmafia99.myAscensions)();
    },
    do: $location(_templateObject3462 || (_templateObject3462 = _taggedTemplateLiteral87(["The Enormous Greater-Than Sign"]))),
    outfit: {
      modifier: "-combat"
    },
    choices: {
      451: 5
    },
    limit: {
      soft: 20
    }
  }, {
    name: "Mimic",
    after: ["Get Teleportitis"],
    ready: function() {
      return (0, import_kolmafia99.myMeat)() >= 5e3;
    },
    completed: function() {
      return have($item(_templateObject3472 || (_templateObject3472 = _taggedTemplateLiteral87(["dead mimic"])))) || get("lastZapperWand") === (0, import_kolmafia99.myAscensions)() || have($item(_templateObject3482 || (_templateObject3482 = _taggedTemplateLiteral87(["aluminum wand"])))) || have($item(_templateObject3492 || (_templateObject3492 = _taggedTemplateLiteral87(["ebony wand"])))) || have($item(_templateObject3502 || (_templateObject3502 = _taggedTemplateLiteral87(["hexagonal wand"])))) || have($item(_templateObject3517 || (_templateObject3517 = _taggedTemplateLiteral87(["marble wand"])))) || have($item(_templateObject3522 || (_templateObject3522 = _taggedTemplateLiteral87(["pine wand"])))) || keyStrategy.useful(Keys.Zap) === false && !args.minor.wand;
    },
    prepare: function() {
      if (have($item(_templateObject3532 || (_templateObject3532 = _taggedTemplateLiteral87(["plus sign"]))))) (0, import_kolmafia99.use)($item(_templateObject3542 || (_templateObject3542 = _taggedTemplateLiteral87(["plus sign"]))));
    },
    do: $location(_templateObject3552 || (_templateObject3552 = _taggedTemplateLiteral87(["The Dungeons of Doom"]))),
    outfit: {
      modifier: "-combat, init"
    },
    orbtargets: function() {
      return void 0;
    },
    combat: new CombatStrategy2().banish($monster(_templateObject3562 || (_templateObject3562 = _taggedTemplateLiteral87(["Quantum Mechanic"])))).kill($monsters(_templateObject3572 || (_templateObject3572 = _taggedTemplateLiteral87(["mimic, The Master Of Thieves"])))),
    // Avoid getting more teleportitis
    choices: {
      25: 2
    },
    limit: {
      soft: 20
    }
  }, {
    name: "Wand",
    after: ["Mimic"],
    completed: function() {
      return get("lastZapperWand") === (0, import_kolmafia99.myAscensions)() || have($item(_templateObject3582 || (_templateObject3582 = _taggedTemplateLiteral87(["aluminum wand"])))) || have($item(_templateObject3592 || (_templateObject3592 = _taggedTemplateLiteral87(["ebony wand"])))) || have($item(_templateObject3602 || (_templateObject3602 = _taggedTemplateLiteral87(["hexagonal wand"])))) || have($item(_templateObject3617 || (_templateObject3617 = _taggedTemplateLiteral87(["marble wand"])))) || have($item(_templateObject3622 || (_templateObject3622 = _taggedTemplateLiteral87(["pine wand"])))) || keyStrategy.useful(Keys.Zap) === false;
    },
    do: function() {
      return (0, import_kolmafia99.use)($item(_templateObject3632 || (_templateObject3632 = _taggedTemplateLiteral87(["dead mimic"]))));
    },
    freeaction: true,
    limit: {
      tries: 1
    }
  }, {
    // The ultimate location to put needed backups
    name: "Backup Monster",
    completed: function() {
      return false;
    },
    ready: function() {
      if (!have($item(_templateObject3642 || (_templateObject3642 = _taggedTemplateLiteral87(["backup camera"]))))) return false;
      var target = getActiveBackupTarget();
      return target !== void 0 && target.monster !== $monster(_templateObject3652 || (_templateObject3652 = _taggedTemplateLiteral87(["Eldritch Tentacle"])));
    },
    do: $location(_templateObject3662 || (_templateObject3662 = _taggedTemplateLiteral87(["Noob Cave"]))),
    delay: 11,
    limit: {
      tries: 11
    }
  }]
};
function teleportitisTask(engine, tasks) {
  var choices2 = {
    3: 3
  };
  var done_tasks = tasks.filter(function(task2) {
    return task2.completed();
  });
  var left_tasks = tasks.filter(function(task2) {
    return !task2.completed();
  });
  var _iterator = _createForOfIteratorHelper27([].concat(_toConsumableArray32(left_tasks), _toConsumableArray32(done_tasks)).reverse()), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var task = _step.value;
      var task_choices = undelay(task.choices);
      for (var choice_id_str in task_choices) {
        var choice_id = parseInt(choice_id_str);
        choices2[choice_id] = task_choices[choice_id];
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  choices2[781] = 6;
  choices2[783] = 6;
  choices2[785] = 6;
  choices2[787] = 6;
  if (step("questL11Worship") >= 3) {
    choices2[580] = 3;
  }
  choices2[1322] = 6;
  choices2[1215] = 2;
  choices2[689] = 1;
  choices2[690] = 3;
  choices2[691] = 3;
  choices2[692] = 8;
  choices2[693] = 3;
  choices2[793] = 4;
  var combat = new CombatStrategy2();
  var haiku_monsters = [$monster(_templateObject3672 || (_templateObject3672 = _taggedTemplateLiteral87(["amateur ninja"]))), $monster(_templateObject3682 || (_templateObject3682 = _taggedTemplateLiteral87(["ancient insane monk"]))), $monster(_templateObject3692 || (_templateObject3692 = _taggedTemplateLiteral87(["ferocious bugbear"]))), $monster(_templateObject3702 || (_templateObject3702 = _taggedTemplateLiteral87(["gelatinous cube"]))), $monster(_templateObject3717 || (_templateObject3717 = _taggedTemplateLiteral87(["Knob Goblin poseur"])))];
  combat.macro(new Macro().attack().repeat(), haiku_monsters);
  return {
    name: "Teleportitis",
    after: ["Wand/Get Teleportitis"],
    ready: function() {
      return have($effect(_templateObject3722 || (_templateObject3722 = _taggedTemplateLiteral87(["Teleportitis"]))));
    },
    completed: function() {
      return get("lastPlusSignUnlock") === (0, import_kolmafia99.myAscensions)();
    },
    do: $location(_templateObject3732 || (_templateObject3732 = _taggedTemplateLiteral87(["The Enormous Greater-Than Sign"]))),
    post: function() {
      if (get("lastEncounter") === "Having a Ball in the Ballroom") _set("questM21Dance", "step4");
      if (get("lastEncounter") === "Too Much Humanity" && step("questL11Ron") < 1) _set("questL11Ron", "step1");
    },
    outfit: {
      equip: $items(_templateObject3742 || (_templateObject3742 = _taggedTemplateLiteral87(["antique machete"])))
    },
    combat: combat,
    choices: choices2,
    limit: {
      soft: 20
    }
  };
}
var removeTeleportitis = {
  name: "Clear Teleportitis",
  after: [],
  ready: function() {
    return have($item(_templateObject3752 || (_templateObject3752 = _taggedTemplateLiteral87(["soft green echo eyedrop antidote"]))));
  },
  completed: function() {
    return !have($effect(_templateObject3762 || (_templateObject3762 = _taggedTemplateLiteral87(["Teleportitis"]))));
  },
  do: function() {
    uneffect($effect(_templateObject3772 || (_templateObject3772 = _taggedTemplateLiteral87(["Teleportitis"]))));
  },
  limit: {
    soft: 2
  },
  freeaction: true
};
function haveOre() {
  if (step("questL08Trapper") >= 2) return true;
  if (get("trapperOre") !== "") {
    return (0, import_kolmafia99.itemAmount)(import_kolmafia99.Item.get(get("trapperOre"))) >= 3;
  }
  return (0, import_kolmafia99.itemAmount)($item(_templateObject3782 || (_templateObject3782 = _taggedTemplateLiteral87(["asbestos ore"])))) >= 3 && (0, import_kolmafia99.itemAmount)($item(_templateObject3792 || (_templateObject3792 = _taggedTemplateLiteral87(["chrome ore"])))) >= 3 && (0, import_kolmafia99.itemAmount)($item(_templateObject3802 || (_templateObject3802 = _taggedTemplateLiteral87(["linoleum ore"])))) >= 3;
}
function willWorkshedSwap() {
  return false;
}
function trainSetAvailable() {
  if ((0, import_kolmafia99.getWorkshed)() === $item(_templateObject3817 || (_templateObject3817 = _taggedTemplateLiteral87(["model train set"])))) return true;
  if (!have($item(_templateObject3822 || (_templateObject3822 = _taggedTemplateLiteral87(["model train set"]))))) return false;
  if ((0, import_kolmafia99.getWorkshed)() === $item(_templateObject3832 || (_templateObject3832 = _taggedTemplateLiteral87(["none"]))) && args.major.workshed === $item(_templateObject3842 || (_templateObject3842 = _taggedTemplateLiteral87(["model train set"])))) return true;
  if (args.major.swapworkshed === $item(_templateObject3852 || (_templateObject3852 = _taggedTemplateLiteral87(["model train set"]))) && willWorkshedSwap()) return true;
  return false;
}
function getDesiredTrainsetConfig() {
  var statPiece = byStat({
    Muscle: TrainsetPiece.MUS_STATS,
    Mysticality: TrainsetPiece.MYS_STATS,
    Moxie: TrainsetPiece.MOXIE_STATS
  });
  var config = [];
  config.push(TrainsetPiece.DOUBLE_NEXT_STATION);
  if (!have($item(_templateObject3862 || (_templateObject3862 = _taggedTemplateLiteral87(["designer sweatpants"]))))) {
    config.push(TrainsetPiece.EFFECT_MP);
  } else if ((0, import_kolmafia99.myLevel)() < 5 && (!have($item(_templateObject3872 || (_templateObject3872 = _taggedTemplateLiteral87(["Sept-Ember Censer"])))) || args.minor.saveember)) {
    config.push(statPiece);
  }
  config.push(TrainsetPiece.SMUT_BRIDGE_OR_STATS);
  config.push(TrainsetPiece.GAIN_MEAT);
  if ((0, import_kolmafia99.myLevel)() < 12 && !config.includes(statPiece)) {
    config.push(statPiece);
  }
  if (!config.includes(TrainsetPiece.EFFECT_MP)) {
    config.push(TrainsetPiece.EFFECT_MP);
  }
  if (!haveOre()) config.push(TrainsetPiece.ORE);
  config.push(TrainsetPiece.HOT_RES_COLD_DMG);
  config.push(TrainsetPiece.STENCH_RES_SPOOKY_DMG);
  config.push(TrainsetPiece.DROP_LAST_FOOD_OR_RANDOM);
  config.push(TrainsetPiece.RANDOM_BOOZE);
  config.push(TrainsetPiece.CANDY);
  return config.slice(0, 8);
}

// src/tasks/keys.ts
var _templateObject670;
var _templateObject2160;
var _templateObject3147;
var _templateObject4127;
var _templateObject5102;
var _templateObject671;
var _templateObject760;
var _templateObject856;
var _templateObject946;
var _templateObject1039;
var _templateObject1136;
var _templateObject1236;
var _templateObject1334;
var _templateObject1430;
var _templateObject1528;
var _templateObject1628;
var _templateObject1728;
var _templateObject1828;
var _templateObject1926;
var _templateObject2026;
var _templateObject2161;
var _templateObject2228;
var _templateObject2326;
var _templateObject2425;
var _templateObject2524;
var _templateObject2623;
var _templateObject2723;
var _templateObject2820;
var _templateObject2920;
var _templateObject3020;
var _templateObject3148;
var _templateObject3223;
var _templateObject3321;
var _templateObject3419;
var _templateObject3518;
var _templateObject3618;
var _templateObject3718;
var _templateObject3818;
var _templateObject3917;
var _templateObject4017;
var _templateObject4128;
var _templateObject4219;
var _templateObject4318;
var _templateObject4417;
var _templateObject4517;
var _templateObject4617;
var _templateObject4717;
var _templateObject4817;
var _templateObject4917;
var _templateObject5017;
var _templateObject5118;
var _templateObject5218;
var _templateObject5317;
var _templateObject5417;
var _templateObject5516;
var _templateObject5615;
var _templateObject5715;
var _templateObject5814;
var _templateObject5912;
var _templateObject6010;
var _templateObject6116;
var _templateObject6215;
var _templateObject6315;
var _templateObject6415;
var _templateObject6514;
var _templateObject6611;
var _templateObject679;
var _templateObject689;
var _templateObject699;
var _templateObject709;
var _templateObject7114;
var _templateObject7214;
var _templateObject7313;
var _templateObject7413;
var _templateObject7511;
var _templateObject766;
var _templateObject776;
var _templateObject786;
var _templateObject795;
var _templateObject805;
var _templateObject8112;
var _templateObject8212;
var _templateObject8312;
var _templateObject8411;
var _templateObject857;
var _templateObject865;
var _templateObject875;
var _templateObject885;
var _templateObject894;
var _templateObject904;
var _templateObject9112;
var _templateObject9212;
var _templateObject9311;
var _templateObject947;
var _templateObject955;
var _templateObject965;
var _templateObject975;
var _templateObject985;
function _toConsumableArray33(arr) {
  return _arrayWithoutHoles33(arr) || _iterableToArray33(arr) || _unsupportedIterableToArray53(arr) || _nonIterableSpread33();
}
function _nonIterableSpread33() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray33(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles33(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray53(arr);
}
function _createForOfIteratorHelper28(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray53(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray53(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray53(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray53(o, minLen);
}
function _arrayLikeToArray53(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck31(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties31(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey39(descriptor.key), descriptor);
  }
}
function _createClass31(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties31(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties31(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function ownKeys17(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread17(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys17(Object(t), true).forEach(function(r2) {
      _defineProperty34(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys17(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty34(obj, key, value) {
  key = _toPropertyKey39(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey39(t) {
  var i = _toPrimitive39(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive39(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral88(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var Keys = /* @__PURE__ */ function(Keys2) {
  Keys2["Deck"] = "Deck";
  Keys2["Lockpicking"] = "Manual of Lock Picking";
  Keys2["Malware"] = "Daily Dungeon Malware";
  Keys2["CandyCane"] = "Daily Dungeon Candy Cane";
  Keys2["Dungeon"] = "Daily Dungeon";
  Keys2["Fantasy"] = "Fantasy";
  Keys2["Zap"] = "Zap";
  Keys2["Zap2"] = "Zap2";
  return Keys2;
}({});
var heroKeys = [{
  which: Keys.Deck,
  possible: function() {
    return have($item(_templateObject670 || (_templateObject670 = _taggedTemplateLiteral88(["Deck of Every Card"])))) && get("_deckCardsDrawn") === 0;
  },
  after: [],
  priority: function() {
    return Priorities.Free;
  },
  completed: function() {
    return get("_deckCardsDrawn") > 0 || !have($item(_templateObject2160 || (_templateObject2160 = _taggedTemplateLiteral88(["Deck of Every Card"]))));
  },
  do: function() {
    (0, import_kolmafia100.cliExecute)("cheat tower");
    if (get("_deckCardsDrawn") <= 10) (0, import_kolmafia100.cliExecute)("cheat sheep");
    if (get("_deckCardsDrawn") <= 10) {
      if (trainSetAvailable()) (0, import_kolmafia100.cliExecute)("cheat island");
      else (0, import_kolmafia100.cliExecute)("cheat mine");
    }
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  which: Keys.Lockpicking,
  possible: function() {
    return have($skill(_templateObject3147 || (_templateObject3147 = _taggedTemplateLiteral88(["Lock Picking"])))) && !get("lockPicked");
  },
  after: [],
  priority: function() {
    return Priorities.Free;
  },
  completed: function() {
    return !have($skill(_templateObject4127 || (_templateObject4127 = _taggedTemplateLiteral88(["Lock Picking"])))) || get("lockPicked");
  },
  do: function() {
    return castWithMpSwaps([$skill(_templateObject5102 || (_templateObject5102 = _taggedTemplateLiteral88(["Lock Picking"])))]);
  },
  choices: function() {
    return {
      1414: have($item(_templateObject671 || (_templateObject671 = _taggedTemplateLiteral88(["Boris's key"])))) ? have($item(_templateObject760 || (_templateObject760 = _taggedTemplateLiteral88(["Jarlsberg's key"])))) ? 3 : 2 : 1
    };
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, _objectSpread17({
  which: Keys.CandyCane,
  possible: function() {
    return !get("dailyDungeonDone") && have($item(_templateObject856 || (_templateObject856 = _taggedTemplateLiteral88(["candy cane sword cane"])))) && get("_lastDailyDungeonRoom") < 10 && !get("candyCaneSwordDailyDungeon", false);
  },
  ready: function() {
    return step("questL13Final") !== -1 || have($item(_templateObject946 || (_templateObject946 = _taggedTemplateLiteral88(["Pick-O-Matic lockpicks"])))) && have($item(_templateObject1039 || (_templateObject1039 = _taggedTemplateLiteral88(["ring of Detect Boring Doors"])))) && have($item(_templateObject1136 || (_templateObject1136 = _taggedTemplateLiteral88(["eleven-foot pole"]))));
  },
  completed: function() {
    return get("dailyDungeonDone");
  },
  after: ["Daily Dungeon Malware"]
}, dailyDungeonTask()), _objectSpread17({
  which: Keys.Dungeon,
  possible: function() {
    return !get("dailyDungeonDone");
  },
  completed: function() {
    return get("dailyDungeonDone");
  },
  after: ["Daily Dungeon Malware", "Daily Dungeon Candy Cane"]
}, dailyDungeonTask()), _objectSpread17({
  which: Keys.Malware,
  possible: function() {
    return !underStandard() && !get("dailyDungeonDone") && !get("_dailyDungeonMalwareUsed") && (!(0, import_kolmafia100.inHardcore)() && ((0, import_kolmafia100.pullsRemaining)() > 0 || (0, import_kolmafia100.myTurncount)() >= 1e3) || have($item(_templateObject1236 || (_templateObject1236 = _taggedTemplateLiteral88(["daily dungeon malware"]))))) && (!have($item(_templateObject1334 || (_templateObject1334 = _taggedTemplateLiteral88(["Deck of Every Card"])))) || !have($skill(_templateObject1430 || (_templateObject1430 = _taggedTemplateLiteral88(["Lock Picking"])))));
  },
  completed: function() {
    return get("dailyDungeonDone") || get("_dailyDungeonMalwareUsed");
  },
  after: []
}, dailyDungeonTask()), {
  which: Keys.Fantasy,
  possible: function() {
    return (get("frAlways") || get("_frToday")) && !underStandard();
  },
  after: ["Misc/Open Fantasy"],
  completed: function() {
    return $location(_templateObject1528 || (_templateObject1528 = _taggedTemplateLiteral88(["The Bandit Crossroads"]))).turnsSpent >= 5;
  },
  do: $location(_templateObject1628 || (_templateObject1628 = _taggedTemplateLiteral88(["The Bandit Crossroads"]))),
  outfit: {
    familiar: $familiar(_templateObject1728 || (_templateObject1728 = _taggedTemplateLiteral88(["none"]))),
    equip: $items(_templateObject1828 || (_templateObject1828 = _taggedTemplateLiteral88(["FantasyRealm G. E. M."]))),
    modifier: "moxie"
  },
  combat: new CombatStrategy2().kill(),
  limit: {
    tries: 5
  }
}, {
  which: Keys.Zap,
  possible: function() {
    return get("lastZapperWandExplosionDay") <= 0;
  },
  after: ["Wand/Wand", "Pull/Key Zappable"],
  completed: function() {
    return get("lastZapperWandExplosionDay") >= 1 || get("_zapCount") >= 1;
  },
  do: function() {
    unequipAcc(keyStrategy.getZapChoice(0));
    if (!have(keyStrategy.getZapChoice(0)) && (0, import_kolmafia100.myTurncount)() >= 1e3) (0, import_kolmafia100.buy)(keyStrategy.getZapChoice(0), 1, 1e5);
    (0, import_kolmafia100.cliExecute)("zap ".concat(keyStrategy.getZapChoice(0)));
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  which: Keys.Zap2,
  possible: function() {
    return get("lastZapperWandExplosionDay") <= 0;
  },
  after: ["Wand/Wand", "Keys/Zap", "Pull/Key Zappable 2"],
  completed: function() {
    return get("lastZapperWandExplosionDay") >= 1 || get("_zapCount") >= 2;
  },
  do: function() {
    unequipAcc(keyStrategy.getZapChoice(1));
    if (!have(keyStrategy.getZapChoice(1)) && (0, import_kolmafia100.myTurncount)() >= 1e3) (0, import_kolmafia100.buy)(keyStrategy.getZapChoice(1), 1, 1e5);
    (0, import_kolmafia100.cliExecute)("zap ".concat(keyStrategy.getZapChoice(1)));
  },
  limit: {
    tries: 1
  },
  freeaction: true
}];
function dailyDungeonTask() {
  return {
    ready: function() {
      return step("questL13Final") !== -1 || have($item(_templateObject1926 || (_templateObject1926 = _taggedTemplateLiteral88(["Pick-O-Matic lockpicks"])))) && have($item(_templateObject2026 || (_templateObject2026 = _taggedTemplateLiteral88(["ring of Detect Boring Doors"])))) && have($item(_templateObject2161 || (_templateObject2161 = _taggedTemplateLiteral88(["eleven-foot pole"]))));
    },
    prepare: function() {
      if (have($item(_templateObject2228 || (_templateObject2228 = _taggedTemplateLiteral88(["daily dungeon malware"]))))) _set(toTempPref("malware_amount"), (0, import_kolmafia100.itemAmount)($item(_templateObject2326 || (_templateObject2326 = _taggedTemplateLiteral88(["daily dungeon malware"])))));
      if (have($item(_templateObject2425 || (_templateObject2425 = _taggedTemplateLiteral88(["Pick-O-Matic lockpicks"]))))) return;
      if (have($item(_templateObject2524 || (_templateObject2524 = _taggedTemplateLiteral88(["Platinum Yendorian Express Card"]))))) return;
      if (have($item(_templateObject2623 || (_templateObject2623 = _taggedTemplateLiteral88(["skeleton bone"])))) && have($item(_templateObject2723 || (_templateObject2723 = _taggedTemplateLiteral88(["loose teeth"])))) && !have($item(_templateObject2820 || (_templateObject2820 = _taggedTemplateLiteral88(["skeleton key"]))))) (0, import_kolmafia100.cliExecute)("make skeleton key");
    },
    do: $location(_templateObject2920 || (_templateObject2920 = _taggedTemplateLiteral88(["The Daily Dungeon"]))),
    post: function() {
      if ((0, import_kolmafia100.itemAmount)($item(_templateObject3020 || (_templateObject3020 = _taggedTemplateLiteral88(["daily dungeon malware"])))) < get(toTempPref("malware_amount"), 0)) _set("_dailyDungeonMalwareUsed", true);
      uneffect($effect(_templateObject3148 || (_templateObject3148 = _taggedTemplateLiteral88(["Apathy"]))));
      (0, import_kolmafia100.cliExecute)("refresh inv");
    },
    outfit: {
      equip: $items(_templateObject3223 || (_templateObject3223 = _taggedTemplateLiteral88(["ring of Detect Boring Doors, candy cane sword cane"])))
    },
    combat: new CombatStrategy2().macro(function() {
      if (!get("_dailyDungeonMalwareUsed") && have($item(_templateObject3321 || (_templateObject3321 = _taggedTemplateLiteral88(["daily dungeon malware"]))))) return Macro.item($item(_templateObject3419 || (_templateObject3419 = _taggedTemplateLiteral88(["daily dungeon malware"]))));
      return new Macro();
    }).killHard(),
    choices: function() {
      return {
        689: 1,
        690: have($item(_templateObject3518 || (_templateObject3518 = _taggedTemplateLiteral88(["ring of Detect Boring Doors"])))) ? 2 : 3,
        691: 3,
        // Do not skip the second chest; there is a chance we skip all the monsters
        692: getDoorSolution(),
        693: have($item(_templateObject3618 || (_templateObject3618 = _taggedTemplateLiteral88(["eleven-foot pole"])))) ? 2 : 1
      };
    },
    limit: {
      tries: 15
    }
  };
}
var KeyState = /* @__PURE__ */ function(KeyState2) {
  KeyState2["DONE"] = "Done";
  KeyState2["READY"] = "Ready";
  KeyState2["MAYBE"] = "Maybe";
  KeyState2["UNNEEDED"] = "Unneeded";
  KeyState2["IMPOSSIBLE"] = "Impossible";
  return KeyState2;
}(KeyState || {});
var KeyStrategy = /* @__PURE__ */ function() {
  function KeyStrategy2(tasks) {
    _classCallCheck31(this, KeyStrategy2);
    _defineProperty34(this, "plan", /* @__PURE__ */ new Map());
    _defineProperty34(this, "tasks", void 0);
    _defineProperty34(this, "zap_choice", void 0);
    this.tasks = tasks;
  }
  _createClass31(KeyStrategy2, [{
    key: "update",
    value: function update() {
      var keysNeeded = Math.max(0, 3 - keyCount());
      var sureKeys = 0;
      var maybeKeys = 0;
      var _iterator = _createForOfIteratorHelper28(this.tasks), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var task = _step.value;
          if (sureKeys >= keysNeeded) {
            this.plan.set(task.which, KeyState.UNNEEDED);
            continue;
          }
          switch (task.possible()) {
            case false:
              this.plan.set(task.which, KeyState.IMPOSSIBLE);
              break;
            case true:
              this.plan.set(task.which, maybeKeys < keysNeeded ? KeyState.READY : KeyState.MAYBE);
              sureKeys++;
              maybeKeys++;
              break;
            case void 0:
              this.plan.set(task.which, KeyState.MAYBE);
              maybeKeys++;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (sureKeys < keysNeeded && !args.debug.ignorekeys) {
        var info2 = Array.from(this.plan.entries()).map(function(keyinfo) {
          return keyinfo.join("=");
        }).join("; ");
        throw "Can only guarantee ".concat(sureKeys, " of ").concat(keysNeeded, " keys. (").concat(info2, ")");
      }
    }
  }, {
    key: "useful",
    value: function useful(key) {
      if (this.plan.get(key) === KeyState.READY) return true;
      if (this.plan.get(key) === KeyState.MAYBE) return void 0;
      return false;
    }
  }, {
    key: "getZapChoice",
    value: function getZapChoice(which) {
      if (!this.zap_choice) {
        this.zap_choice = makeZapChoice();
      }
      return this.zap_choice[which];
    }
  }]);
  return KeyStrategy2;
}();
var keyStrategy = new KeyStrategy(heroKeys);
var KeysQuest = {
  name: "Keys",
  tasks: [].concat(_toConsumableArray33(keyStrategy.tasks.map(function(task) {
    return _objectSpread17(_objectSpread17({}, task), {}, {
      name: task.which,
      completed: function() {
        return task.completed() || keyStrategy.plan.get(task.which) === KeyState.DONE || keyStrategy.plan.get(task.which) === KeyState.UNNEEDED || keyStrategy.plan.get(task.which) === KeyState.IMPOSSIBLE;
      },
      ready: function() {
        return (task.ready === void 0 || task.ready()) && keyStrategy.plan.get(task.which) === KeyState.READY;
      }
    });
  })), [{
    name: "All Heroes",
    after: keyStrategy.tasks.map(function(task) {
      return task.which;
    }),
    completed: function() {
      return keyCount() >= 3;
    },
    do: function() {
      throw "Unable to obtain enough fat loot tokens";
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Star Key",
    after: ["Giant/Unlock HITS"],
    completed: function() {
      return have($item(_templateObject3718 || (_templateObject3718 = _taggedTemplateLiteral88(["star chart"])))) && (0, import_kolmafia100.itemAmount)($item(_templateObject3818 || (_templateObject3818 = _taggedTemplateLiteral88(["star"])))) >= 8 && (0, import_kolmafia100.itemAmount)($item(_templateObject3917 || (_templateObject3917 = _taggedTemplateLiteral88(["line"])))) >= 7 || have($item(_templateObject4017 || (_templateObject4017 = _taggedTemplateLiteral88(["Richard's star key"])))) || get("nsTowerDoorKeysUsed").includes("Richard's star key");
    },
    do: $location(_templateObject4128 || (_templateObject4128 = _taggedTemplateLiteral88(["The Hole in the Sky"]))),
    outfit: {
      modifier: "item",
      avoid: $items(_templateObject4219 || (_templateObject4219 = _taggedTemplateLiteral88(["broken champagne bottle"])))
    },
    combat: new CombatStrategy2().kill($monster(_templateObject4318 || (_templateObject4318 = _taggedTemplateLiteral88(["Astronomer"])))).killItem(),
    limit: {
      soft: 20
    },
    orbtargets: function() {
      return !have($item(_templateObject4417 || (_templateObject4417 = _taggedTemplateLiteral88(["star chart"])))) ? [$monster(_templateObject4517 || (_templateObject4517 = _taggedTemplateLiteral88(["Astronomer"])))] : [];
    }
  }, {
    name: "Skeleton Key",
    after: ["Crypt/Nook Boss", "Tower/Start"],
    prepare: function() {
      if (step("questM23Meatsmith") === -1) {
        (0, import_kolmafia100.visitUrl)("shop.php?whichshop=meatsmith");
        (0, import_kolmafia100.visitUrl)("shop.php?whichshop=meatsmith&action=talk");
        (0, import_kolmafia100.runChoice)(1);
      }
    },
    completed: function() {
      return have($item(_templateObject4617 || (_templateObject4617 = _taggedTemplateLiteral88(["skeleton bone"])))) && have($item(_templateObject4717 || (_templateObject4717 = _taggedTemplateLiteral88(["loose teeth"])))) || have($item(_templateObject4817 || (_templateObject4817 = _taggedTemplateLiteral88(["skeleton key"])))) || get("nsTowerDoorKeysUsed").includes("skeleton key");
    },
    outfit: {
      modifier: "item",
      avoid: $items(_templateObject4917 || (_templateObject4917 = _taggedTemplateLiteral88(["broken champagne bottle"])))
    },
    combat: new CombatStrategy2().killItem($monsters(_templateObject5017 || (_templateObject5017 = _taggedTemplateLiteral88(["factory-irregular skeleton, remaindered skeleton, swarm of skulls"])))).banish($monster(_templateObject5118 || (_templateObject5118 = _taggedTemplateLiteral88(["novelty tropical skeleton"])))),
    do: $location(_templateObject5218 || (_templateObject5218 = _taggedTemplateLiteral88(["The Skeleton Store"]))),
    limit: {
      soft: 10
    }
  }])
};
var DigitalQuest = {
  name: "Digital",
  tasks: [{
    name: "Open",
    after: ["Mosquito/Start", "Misc/Check Florist"],
    completed: function() {
      return have($item(_templateObject5317 || (_templateObject5317 = _taggedTemplateLiteral88(["continuum transfunctioner"]))));
    },
    priority: function() {
      return Priorities.Free;
    },
    do: function() {
      (0, import_kolmafia100.visitUrl)("place.php?whichplace=forestvillage&action=fv_mystic");
      (0, import_kolmafia100.runChoice)(1);
      (0, import_kolmafia100.runChoice)(1);
      (0, import_kolmafia100.runChoice)(1);
    },
    choices: {
      664: 1
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Fungus",
    after: ["Open"],
    completed: function() {
      return getScore() >= 1e4;
    },
    ready: function() {
      return get("8BitColor", "black") === "red";
    },
    do: $location(_templateObject5417 || (_templateObject5417 = _taggedTemplateLiteral88(["The Fungus Plains"]))),
    outfit: {
      modifier: "meat",
      equip: $items(_templateObject5516 || (_templateObject5516 = _taggedTemplateLiteral88(["continuum transfunctioner"]))),
      avoid: $items(_templateObject5615 || (_templateObject5615 = _taggedTemplateLiteral88(["Roman Candelabra"])))
    },
    combat: new CombatStrategy2().kill(),
    limit: {
      soft: 16
    }
  }, {
    name: "Vanya",
    after: ["Open"],
    completed: function() {
      return getScore() >= 1e4;
    },
    prepare: function() {
      if ((0, import_kolmafia100.numericModifier)("Initiative") < 600 && have($skill(_templateObject5715 || (_templateObject5715 = _taggedTemplateLiteral88(["Silent Hunter"]))))) {
        if ((0, import_kolmafia100.myClass)() === $class(_templateObject5814 || (_templateObject5814 = _taggedTemplateLiteral88(["Seal Clubber"])))) ensureWithMPSwaps($effects(_templateObject5912 || (_templateObject5912 = _taggedTemplateLiteral88(["Silent Hunting"]))));
        else ensureWithMPSwaps($effects(_templateObject6010 || (_templateObject6010 = _taggedTemplateLiteral88(["Nearly Silent Hunting"]))));
      }
      if (have($item(_templateObject6116 || (_templateObject6116 = _taggedTemplateLiteral88(["designer sweatpants"])))) && get("sweat", 0) >= 90 && (0, import_kolmafia100.numericModifier)("Initiative") < 600) {
        (0, import_kolmafia100.visitUrl)("runskillz.php?action=Skillz&whichskill=7419&targetplayer=0&pwd&quantity=1");
      }
    },
    ready: function() {
      return get("8BitColor", "black") === "black" || get("8BitColor", "black") === "";
    },
    do: $location(_templateObject6215 || (_templateObject6215 = _taggedTemplateLiteral88(["Vanya's Castle"]))),
    outfit: function() {
      if (have($item(_templateObject6315 || (_templateObject6315 = _taggedTemplateLiteral88(["backup camera"])))) && have($item(_templateObject6415 || (_templateObject6415 = _taggedTemplateLiteral88(['"I Voted!" sticker'])))) && (0, import_kolmafia100.totalTurnsPlayed)() % 11 === 1 && get("lastVoteMonsterTurn") < (0, import_kolmafia100.totalTurnsPlayed)() && get("_voteFreeFights") < 3 && atLevel(5)) return {
        modifier: "init",
        equip: $items(_templateObject6514 || (_templateObject6514 = _taggedTemplateLiteral88(["continuum transfunctioner, backup camera"]))),
        modes: {
          backupcamera: "init"
        },
        avoid: $items(_templateObject6611 || (_templateObject6611 = _taggedTemplateLiteral88(["Roman Candelabra"])))
      };
      return {
        modifier: "init",
        equip: $items(_templateObject679 || (_templateObject679 = _taggedTemplateLiteral88(["continuum transfunctioner, backup camera, rocket boots"]))),
        modes: {
          backupcamera: "init"
        },
        avoid: $items(_templateObject689 || (_templateObject689 = _taggedTemplateLiteral88(["Roman Candelabra"])))
      };
    },
    combat: new CombatStrategy2().kill(),
    limit: {
      soft: 16
    },
    delay: 16
  }, {
    name: "Megalo",
    after: ["Open"],
    completed: function() {
      return getScore() >= 1e4;
    },
    prepare: function() {
      if ((0, import_kolmafia100.haveEquipped)($item(_templateObject699 || (_templateObject699 = _taggedTemplateLiteral88(["Greatest American Pants"])))) && get("_gapBuffs") < 4) {
        ensureEffect($effect(_templateObject709 || (_templateObject709 = _taggedTemplateLiteral88(["Super Structure"]))));
      }
    },
    ready: function() {
      return get("8BitColor", "black") === "blue";
    },
    do: $location(_templateObject7114 || (_templateObject7114 = _taggedTemplateLiteral88(["Megalo-City"]))),
    outfit: function() {
      if (have($item(_templateObject7214 || (_templateObject7214 = _taggedTemplateLiteral88(["Greatest American Pants"])))) && get("_gapBuffs") < 4) return {
        modifier: "DA",
        equip: $items(_templateObject7313 || (_templateObject7313 = _taggedTemplateLiteral88(["continuum transfunctioner, Greatest American Pants"]))),
        avoid: $items(_templateObject7413 || (_templateObject7413 = _taggedTemplateLiteral88(["Roman Candelabra"])))
      };
      else return {
        modifier: "DA",
        equip: $items(_templateObject7511 || (_templateObject7511 = _taggedTemplateLiteral88(["continuum transfunctioner"]))),
        avoid: $items(_templateObject766 || (_templateObject766 = _taggedTemplateLiteral88(["Roman Candelabra"])))
      };
    },
    combat: new CombatStrategy2().kill(),
    limit: {
      soft: 16
    },
    delay: 16
  }, {
    name: "Hero",
    after: ["Open"],
    completed: function() {
      return getScore() >= 1e4;
    },
    ready: function() {
      return get("8BitColor", "black") === "green";
    },
    do: $location(_templateObject776 || (_templateObject776 = _taggedTemplateLiteral88(["Hero's Field"]))),
    post: function() {
      if (haveFlorest() && Florist_exports.Rutabeggar.available()) {
        Florist_exports.Rutabeggar.plant();
      }
    },
    outfit: function() {
      if (have($familiar(_templateObject786 || (_templateObject786 = _taggedTemplateLiteral88(["Trick-or-Treating Tot"])))) && have($item(_templateObject795 || (_templateObject795 = _taggedTemplateLiteral88(["li'l ninja costume"]))))) return {
        modifier: "item",
        familiar: $familiar(_templateObject805 || (_templateObject805 = _taggedTemplateLiteral88(["Trick-or-Treating Tot"]))),
        equip: $items(_templateObject8112 || (_templateObject8112 = _taggedTemplateLiteral88(["continuum transfunctioner, li'l ninja costume"]))),
        avoid: $items(_templateObject8212 || (_templateObject8212 = _taggedTemplateLiteral88(["Roman Candelabra"])))
      };
      else return {
        modifier: "item",
        equip: $items(_templateObject8312 || (_templateObject8312 = _taggedTemplateLiteral88(["continuum transfunctioner"])))
      };
    },
    combat: new CombatStrategy2().killItem(),
    limit: {
      soft: 16
    }
  }, {
    name: "Key",
    after: ["Open", "Fungus", "Vanya", "Megalo", "Hero"],
    completed: function() {
      return have($item(_templateObject8411 || (_templateObject8411 = _taggedTemplateLiteral88(["digital key"])))) || get("nsTowerDoorKeysUsed").includes("digital key");
    },
    do: function() {
      if (getScore() >= 1e4) {
        (0, import_kolmafia100.visitUrl)("place.php?whichplace=8bit&action=8treasure");
        (0, import_kolmafia100.runChoice)(1);
      }
    },
    outfit: {
      equip: $items(_templateObject857 || (_templateObject857 = _taggedTemplateLiteral88(["continuum transfunctioner"])))
    },
    limit: {
      tries: 2
    }
    // The first time may only set the property
  }]
};
function keyCount() {
  var count = (0, import_kolmafia100.itemAmount)($item(_templateObject865 || (_templateObject865 = _taggedTemplateLiteral88(["fat loot token"]))));
  if (have($item(_templateObject875 || (_templateObject875 = _taggedTemplateLiteral88(["Boris's key"])))) || get("nsTowerDoorKeysUsed").includes("Boris")) count++;
  if (have($item(_templateObject885 || (_templateObject885 = _taggedTemplateLiteral88(["Jarlsberg's key"])))) || get("nsTowerDoorKeysUsed").includes("Jarlsberg")) count++;
  if (have($item(_templateObject894 || (_templateObject894 = _taggedTemplateLiteral88(["Sneaky Pete's key"])))) || get("nsTowerDoorKeysUsed").includes("Sneaky Pete")) count++;
  return count;
}
function unequipAcc(acc) {
  if (!(0, import_kolmafia100.haveEquipped)(acc)) return;
  var _iterator2 = _createForOfIteratorHelper28($slots(_templateObject904 || (_templateObject904 = _taggedTemplateLiteral88(["acc1, acc2, acc3"])))), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var slot = _step2.value;
      if ((0, import_kolmafia100.equippedItem)(slot) === acc) (0, import_kolmafia100.equip)(slot, $item(_templateObject9112 || (_templateObject9112 = _taggedTemplateLiteral88(["none"]))));
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
}
function makeZapChoice() {
  function _retrieval_cost(option) {
    if (have(option)) return -2;
    if ((0, import_kolmafia100.storageAmount)(option) > 0) return -1;
    return (0, import_kolmafia100.mallPrice)(option);
  }
  var options = $items(_templateObject9212 || (_templateObject9212 = _taggedTemplateLiteral88(["Boris's ring, Jarlsberg's earring, Sneaky Pete's breath spray"])));
  return options.sort(function(i, j) {
    return _retrieval_cost(i) - _retrieval_cost(j);
  });
}
function min(a, b) {
  return a < b ? a : b;
}
function getScore() {
  var score = (0, import_kolmafia100.getProperty)("8BitScore");
  if (score === "") return 0;
  return parseInt(score.replace(",", ""));
}
function getDoorSolution() {
  if (have($item(_templateObject9311 || (_templateObject9311 = _taggedTemplateLiteral88(["Pick-O-Matic lockpicks"]))))) return 3;
  if (have($item(_templateObject947 || (_templateObject947 = _taggedTemplateLiteral88(["Platinum Yendorian Express Card"]))))) return 7;
  var skeletonKeys = (0, import_kolmafia100.itemAmount)($item(_templateObject955 || (_templateObject955 = _taggedTemplateLiteral88(["skeleton key"])))) + min((0, import_kolmafia100.itemAmount)($item(_templateObject965 || (_templateObject965 = _taggedTemplateLiteral88(["skeleton bone"])))), (0, import_kolmafia100.itemAmount)($item(_templateObject975 || (_templateObject975 = _taggedTemplateLiteral88(["loose teeth"])))));
  if (skeletonKeys > 1) return 2;
  if (have($item(_templateObject985 || (_templateObject985 = _taggedTemplateLiteral88(["skeleton key"])))) && get("nsTowerDoorKeysUsed").includes("skeleton key")) return 2;
  return 4;
}

// src/engine/outfit.ts
var _templateObject680;
var _templateObject2164;
var _templateObject3149;
var _templateObject4129;
var _templateObject5103;
var _templateObject681;
var _templateObject761;
var _templateObject858;
var _templateObject948;
var _templateObject1040;
var _templateObject1137;
var _templateObject1237;
var _templateObject1335;
var _templateObject1431;
var _templateObject1529;
var _templateObject1629;
var _templateObject1729;
var _templateObject1829;
var _templateObject1927;
var _templateObject2027;
var _templateObject2165;
var _templateObject2229;
var _templateObject2327;
var _templateObject2426;
var _templateObject2525;
var _templateObject2624;
var _templateObject2724;
var _templateObject2821;
var _templateObject2921;
var _templateObject3021;
var _templateObject3150;
var _templateObject3224;
var _templateObject3323;
var _templateObject3420;
var _templateObject3519;
var _templateObject3619;
var _templateObject3719;
var _templateObject3819;
var _templateObject3918;
var _templateObject4018;
var _templateObject4130;
var _templateObject4220;
var _templateObject4319;
var _templateObject4418;
var _templateObject4518;
var _templateObject4618;
var _templateObject4718;
var _templateObject4818;
var _templateObject4918;
var _templateObject5018;
var _templateObject5119;
var _templateObject5219;
var _templateObject5318;
var _templateObject5418;
var _templateObject5517;
var _templateObject5616;
var _templateObject5716;
var _templateObject5815;
var _templateObject5913;
var _templateObject6011;
var _templateObject6117;
var _templateObject6216;
var _templateObject6316;
var _templateObject6416;
var _templateObject6515;
var _templateObject6612;
var _templateObject6710;
var _templateObject6810;
var _templateObject6910;
var _templateObject7010;
var _templateObject7115;
var _templateObject7215;
var _templateObject7314;
var _templateObject7414;
var _templateObject7512;
var _templateObject767;
var _templateObject777;
var _templateObject787;
var _templateObject796;
var _templateObject806;
var _templateObject8113;
var _templateObject8213;
var _templateObject8313;
var _templateObject8412;
var _templateObject859;
var _templateObject866;
var _templateObject876;
var _templateObject886;
var _templateObject895;
var _templateObject905;
var _templateObject9113;
var _templateObject9213;
var _templateObject9312;
var _templateObject949;
var _templateObject956;
var _templateObject966;
var _templateObject976;
var _templateObject986;
var _templateObject994;
var _templateObject1004;
var _templateObject10112;
var _templateObject10212;
var _templateObject10310;
var _templateObject1044;
var _templateObject1054;
var _templateObject1064;
var _templateObject1074;
var _templateObject1084;
var _templateObject1094;
var _templateObject1104;
var _templateObject11112;
var _templateObject11212;
var _templateObject1138;
var _templateObject1144;
var _templateObject1154;
var _templateObject1164;
var _templateObject1174;
var _templateObject1184;
var _templateObject1194;
var _templateObject1204;
var _templateObject12112;
var _templateObject12211;
var _templateObject1238;
var _templateObject1244;
var _templateObject1254;
var _templateObject1264;
var _templateObject1274;
var _templateObject1284;
var _templateObject1294;
var _templateObject1304;
var _templateObject13112;
var _templateObject13211;
var _templateObject1336;
var _templateObject1344;
var _templateObject1354;
var _templateObject1364;
var _templateObject1374;
var _templateObject1384;
var _templateObject1394;
var _templateObject1404;
var _templateObject14112;
var _templateObject14211;
var _templateObject1434;
var _templateObject1444;
var _templateObject1454;
var _templateObject1464;
var _templateObject1474;
var _templateObject1484;
var _templateObject1494;
var _templateObject1504;
var _templateObject15112;
var _templateObject15210;
var _templateObject1534;
var _templateObject1544;
var _templateObject1554;
var _templateObject1564;
var _templateObject1574;
var _templateObject1584;
var _templateObject1594;
var _templateObject1604;
var _templateObject16112;
var _templateObject16210;
var _templateObject1634;
var _templateObject1644;
var _templateObject1654;
var _templateObject1664;
function _classCallCheck32(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties32(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey40(descriptor.key), descriptor);
  }
}
function _createClass32(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties32(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties32(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty35(obj, key, value) {
  key = _toPropertyKey40(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey40(t) {
  var i = _toPrimitive40(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive40(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _toConsumableArray34(arr) {
  return _arrayWithoutHoles34(arr) || _iterableToArray34(arr) || _unsupportedIterableToArray54(arr) || _nonIterableSpread34();
}
function _nonIterableSpread34() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray34(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles34(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray54(arr);
}
function _taggedTemplateLiteral89(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _createForOfIteratorHelper29(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray54(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray54(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray54(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray54(o, minLen);
}
function _arrayLikeToArray54(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function canEquipResource(outfit2, resource) {
  if (!resource.equip) return true;
  if (Array.isArray(resource.equip)) return resource.equip.find(function(spec) {
    return outfit2.canEquip(spec);
  }) !== void 0;
  return outfit2.canEquip(resource.equip);
}
function equipFirst(outfit2, resources) {
  var _iterator = _createForOfIteratorHelper29(resources), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var resource = _step.value;
      if (!resource.available()) continue;
      if (resource.chance && resource.chance() === 0) continue;
      if (resource.equip) {
        var specs = Array.isArray(resource.equip) ? resource.equip : [resource.equip];
        var chosen = specs.find(function(spec) {
          return outfit2.canEquip(spec) && outfit2.equip(spec);
        });
        if (chosen === void 0) continue;
      }
      return resource;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return void 0;
}
function equipUntilCapped(outfit2, resources) {
  var result = [];
  var _iterator2 = _createForOfIteratorHelper29(resources), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var resource = _step2.value;
      if (!resource.available()) continue;
      if (resource.chance && resource.chance() === 0) continue;
      if (resource.equip) {
        var specs = Array.isArray(resource.equip) ? resource.equip : [resource.equip];
        var chosen = specs.find(function(spec) {
          return outfit2.canEquip(spec) && outfit2.equip(spec);
        });
        if (chosen === void 0) continue;
      }
      result.push(resource);
      if (resource.chance && resource.chance() === 1) break;
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return result;
}
var standardFamiliars = [{
  familiar: $familiar(_templateObject680 || (_templateObject680 = _taggedTemplateLiteral89(["Obtuse Angel"]))),
  value: function() {
    return 0.02 * garboValue($item(_templateObject2164 || (_templateObject2164 = _taggedTemplateLiteral89(["time's arrow"]))));
  }
}, {
  familiar: $familiar(_templateObject3149 || (_templateObject3149 = _taggedTemplateLiteral89(["Stocking Mimic"]))),
  value: function() {
    var weight = (0, import_kolmafia101.familiarWeight)($familiar(_templateObject4129 || (_templateObject4129 = _taggedTemplateLiteral89(["Stocking Mimic"])))) + (0, import_kolmafia101.weightAdjustment)();
    return garboAverageValue.apply(void 0, _toConsumableArray34($items(_templateObject5103 || (_templateObject5103 = _taggedTemplateLiteral89(["Polka Pop, BitterSweetTarts, Piddles"]))))) / 6 + (1 / 3 + (have($effect(_templateObject681 || (_templateObject681 = _taggedTemplateLiteral89(["Jingle Jangle Jingle"])))) ? 0.1 : 0)) * weight;
  }
}, {
  familiar: $familiar(_templateObject761 || (_templateObject761 = _taggedTemplateLiteral89(["Shorter-Order Cook"]))),
  value: function() {
    return garboAverageValue.apply(void 0, _toConsumableArray34($items(_templateObject858 || (_templateObject858 = _taggedTemplateLiteral89(["short beer, short stack of pancakes, short stick of butter, short glass of water, short white"]))))) / 11;
  }
  // 9 with blue plate
}, {
  familiar: $familiar(_templateObject948 || (_templateObject948 = _taggedTemplateLiteral89(["Twitching Space Critter"]))),
  // Item is ludicrously overvalued and incredibly low-volume.
  // We can remove this cap once the price reaches a lower equilibrium
  // we probably won't, but we can.
  value: function() {
    return Math.min(garboValue($item(_templateObject1040 || (_templateObject1040 = _taggedTemplateLiteral89(["twitching space egg"])))) * 2e-4, 690);
  }
}, {
  familiar: $familiar(_templateObject1137 || (_templateObject1137 = _taggedTemplateLiteral89(["Hobo Monkey"]))),
  value: function() {
    return 75;
  }
}, {
  familiar: $familiar(_templateObject1237 || (_templateObject1237 = _taggedTemplateLiteral89(["Rockin' Robin"]))),
  value: function() {
    return garboValue($item(_templateObject1335 || (_templateObject1335 = _taggedTemplateLiteral89(["robin's egg"])))) / clamp(30 - get("rockinRobinProgress"), 1, 30);
  }
}, {
  familiar: $familiar(_templateObject1431 || (_templateObject1431 = _taggedTemplateLiteral89(["Optimistic Candle"]))),
  value: function() {
    return garboValue($item(_templateObject1529 || (_templateObject1529 = _taggedTemplateLiteral89(["glob of melted wax"])))) / clamp(30 - get("optimisticCandleProgress"), 1, 30);
  }
}, {
  familiar: $familiar(_templateObject1629 || (_templateObject1629 = _taggedTemplateLiteral89(["Garbage Fire"]))),
  value: function() {
    return garboAverageValue.apply(void 0, _toConsumableArray34($items(_templateObject1729 || (_templateObject1729 = _taggedTemplateLiteral89(["burning newspaper, extra-toasted half sandwich, mulled hobo wine"]))))) / clamp(30 - get("garbageFireProgress"), 1, 30);
  }
}, {
  familiar: $familiar(_templateObject1829 || (_templateObject1829 = _taggedTemplateLiteral89(["Cookbookbat"]))),
  value: function() {
    return 3 * garboAverageValue.apply(void 0, _toConsumableArray34($items(_templateObject1927 || (_templateObject1927 = _taggedTemplateLiteral89(["Vegetable of Jarlsberg, Yeast of Boris, St. Sneaky Pete's Whey"]))))) / 11;
  }
}, {
  familiar: $familiar(_templateObject2027 || (_templateObject2027 = _taggedTemplateLiteral89(["Patriotic Eagle"]))),
  value: function() {
    return (0, import_kolmafia101.holiday)().includes("Dependence Day") ? 0.05 * garboValue($item(_templateObject2165 || (_templateObject2165 = _taggedTemplateLiteral89(["souvenir flag"])))) : 0;
  }
}, {
  familiar: $familiar(_templateObject2229 || (_templateObject2229 = _taggedTemplateLiteral89(["Chest Mimic"]))),
  value: function() {
    return get("valueOfAdventure") * get("garbo_embezzlerMultiplier", 2.68) / 50 * ((0, import_kolmafia101.numericModifier)("Familiar Exp") + 1);
  }
}, {
  familiar: $familiar(_templateObject2327 || (_templateObject2327 = _taggedTemplateLiteral89(["Peace Turkey"]))),
  value: function() {
    return garboAverageValue.apply(void 0, _toConsumableArray34($items(_templateObject2426 || (_templateObject2426 = _taggedTemplateLiteral89(["peace shooter, whirled peas, piece of cake"]))))) * (0.24 + Math.sqrt((0, import_kolmafia101.familiarWeight)($familiar(_templateObject2525 || (_templateObject2525 = _taggedTemplateLiteral89(["Peace Turkey"]))))));
  }
}];
function profitFamiliar() {
  return maxBy(standardFamiliars.filter(function(_ref) {
    var familiar10 = _ref.familiar;
    return have(familiar10);
  }), function(_ref2) {
    var value = _ref2.value;
    return value();
  }).familiar;
}
function getModifiersFrom(outfit2) {
  if (!(outfit2 !== null && outfit2 !== void 0 && outfit2.modifier)) return "";
  if (Array.isArray(outfit2.modifier)) return outfit2.modifier.join(",");
  return outfit2.modifier;
}
function yellowSubmarinePossible() {
  var assumePulls = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  return false;
}
function equipInitial(outfit2) {
  var modifier = getModifiersFrom(outfit2);
  if (modifier.includes("item")) {
    outfit2.equip($familiar(_templateObject2624 || (_templateObject2624 = _taggedTemplateLiteral89(["Jill-of-All-Trades"]))));
    if (!modifier.includes("+combat") && !modifier.includes(" combat") && !modifier.includes("res")) outfit2.equip($item(_templateObject2724 || (_templateObject2724 = _taggedTemplateLiteral89(["protonic accelerator pack"]))));
  }
  if (modifier.includes("meat")) {
    if (get("_roboDrinks").toLowerCase().includes("drive-by shooting")) outfit2.equip($familiar(_templateObject2821 || (_templateObject2821 = _taggedTemplateLiteral89(["Robortender"]))));
    outfit2.equip($familiar(_templateObject2921 || (_templateObject2921 = _taggedTemplateLiteral89(["Jill-of-All-Trades"]))));
    outfit2.equip($familiar(_templateObject3021 || (_templateObject3021 = _taggedTemplateLiteral89(["Hobo Monkey"]))));
    outfit2.equip($familiar(_templateObject3150 || (_templateObject3150 = _taggedTemplateLiteral89(["Leprechaun"]))));
  }
  if (modifier.includes("+combat") && !modifier.includes("res")) outfit2.equip($item(_templateObject3224 || (_templateObject3224 = _taggedTemplateLiteral89(["thermal blanket"]))));
  if (modifier.includes("init")) outfit2.equip($familiar(_templateObject3323 || (_templateObject3323 = _taggedTemplateLiteral89(["Oily Woim"]))));
  if (args.minor.forcelocket) {
    outfit2.equip($item(_templateObject3420 || (_templateObject3420 = _taggedTemplateLiteral89(["combat lover's locket"]))));
  }
}
function equipCharging(outfit2, mightKillSomething, noFightingFamiliars) {
  if (outfit2.skipDefaults) return;
  var modifier = getModifiersFrom(outfit2);
  if ((0, import_kolmafia101.myTurncount)() === 0 && get("nextParanormalActivity") === 1) {
    outfit2.equip($item(_templateObject3519 || (_templateObject3519 = _taggedTemplateLiteral89(["protonic accelerator pack"]))));
  }
  if (yellowSubmarinePossible() && (0, import_kolmafia101.itemAmount)($item(_templateObject3619 || (_templateObject3619 = _taggedTemplateLiteral89(["yellow pixel"])))) < 50) {
    outfit2.equip($familiar(_templateObject3719 || (_templateObject3719 = _taggedTemplateLiteral89(["Puck Man"]))));
    outfit2.equip($familiar(_templateObject3819 || (_templateObject3819 = _taggedTemplateLiteral89(["Ms. Puck Man"]))));
    if (!modifier.includes("combat") && !modifier.includes("res")) {
      if (get("_yellowPixelDropsCrown") < 25 && outfit2.equip($item(_templateObject3918 || (_templateObject3918 = _taggedTemplateLiteral89(["Buddy Bjorn"]))))) {
        outfit2.bjornify($familiars(_templateObject4018 || (_templateObject4018 = _taggedTemplateLiteral89(["Puck Man, Ms. Puck Man"]))));
      }
    }
  }
  var bowling_ball_count = get("hiddenBowlingAlleyProgress") + (0, import_kolmafia101.itemAmount)($item(_templateObject4130 || (_templateObject4130 = _taggedTemplateLiteral89(["bowling ball"])))) + (0, import_kolmafia101.closetAmount)($item(_templateObject4220 || (_templateObject4220 = _taggedTemplateLiteral89(["bowling ball"]))));
  var need_bowling_balls = bowling_ball_count < 5;
  var need_star_key = ((0, import_kolmafia101.itemAmount)($item(_templateObject4319 || (_templateObject4319 = _taggedTemplateLiteral89(["star"])))) < 8 || (0, import_kolmafia101.itemAmount)($item(_templateObject4418 || (_templateObject4418 = _taggedTemplateLiteral89(["line"])))) < 7) && !have($item(_templateObject4518 || (_templateObject4518 = _taggedTemplateLiteral89(["Richard's star key"])))) && !get("nsTowerDoorKeysUsed").includes("Richard's star key");
  if (get("camelSpit") < 100 && (need_bowling_balls || need_star_key)) {
    outfit2.equip($familiar(_templateObject4618 || (_templateObject4618 = _taggedTemplateLiteral89(["Melodramedary"]))));
  }
  if ((!have($item(_templateObject4718 || (_templateObject4718 = _taggedTemplateLiteral89(["eleven-foot pole"])))) || !have($item(_templateObject4818 || (_templateObject4818 = _taggedTemplateLiteral89(["ring of Detect Boring Doors"])))) || !have($item(_templateObject4918 || (_templateObject4918 = _taggedTemplateLiteral89(["Pick-O-Matic lockpicks"]))))) && keyStrategy.useful(Keys.Dungeon) !== false) {
    outfit2.equip($familiar(_templateObject5018 || (_templateObject5018 = _taggedTemplateLiteral89(["Gelatinous Cubeling"]))));
  }
  if (get("screechCombats") > 0 && !get("banishedPhyla").includes("hippy") && !noFightingFamiliars) {
    outfit2.equip($familiar(_templateObject5119 || (_templateObject5119 = _taggedTemplateLiteral89(["Patriotic Eagle"]))));
  }
  if ((0, import_kolmafia101.familiarWeight)($familiar(_templateObject5219 || (_templateObject5219 = _taggedTemplateLiteral89(["Grey Goose"])))) < 6 && mightKillSomething) {
    outfit2.equip($familiar(_templateObject5318 || (_templateObject5318 = _taggedTemplateLiteral89(["Grey Goose"]))));
  }
}
function equipDefaults(outfit2, noFightingFamiliars) {
  if (have($familiar(_templateObject5418 || (_templateObject5418 = _taggedTemplateLiteral89(["Temporal Riftlet"]))))) {
    outfit2.equip($familiar(_templateObject5517 || (_templateObject5517 = _taggedTemplateLiteral89(["Temporal Riftlet"]))));
  }
  if (have($familiar(_templateObject5616 || (_templateObject5616 = _taggedTemplateLiteral89(["Reagnimated Gnome"])))) && outfit2.equips.get($slot(_templateObject5716 || (_templateObject5716 = _taggedTemplateLiteral89(["familiar"])))) === void 0) {
    if (outfit2.equip($familiar(_templateObject5815 || (_templateObject5815 = _taggedTemplateLiteral89(["Reagnimated Gnome"]))))) {
      outfit2.equip($item(_templateObject5913 || (_templateObject5913 = _taggedTemplateLiteral89(["gnomish housemaid's kgnee"]))));
    }
  }
  if (outfit2.familiar === $familiar(_templateObject6011 || (_templateObject6011 = _taggedTemplateLiteral89(["Melodramedary"]))) && get("camelSpit") < 100) outfit2.equip($item(_templateObject6117 || (_templateObject6117 = _taggedTemplateLiteral89(["dromedary drinking helmet"]))));
  var modifier = getModifiersFrom(outfit2);
  if (modifier.includes("meat") || modifier.includes("item")) {
    if (outfit2.equip($familiar(_templateObject6216 || (_templateObject6216 = _taggedTemplateLiteral89(["Jill-of-All-Trades"]))))) {
      outfit2.equip($item(_templateObject6316 || (_templateObject6316 = _taggedTemplateLiteral89(["LED candle"]))));
    }
  }
  if (outfit2.skipDefaults) return;
  if (modifier.includes("-combat")) {
    outfit2.equip($familiar(_templateObject6416 || (_templateObject6416 = _taggedTemplateLiteral89(["Peace Turkey"]))));
    outfit2.equip($familiar(_templateObject6515 || (_templateObject6515 = _taggedTemplateLiteral89(["Disgeist"]))));
  }
  if (!noFightingFamiliars) {
    if (args.minor.profitFamiliar) {
      outfit2.equip(profitFamiliar());
      if (profitFamiliar() === $familiar(_templateObject6612 || (_templateObject6612 = _taggedTemplateLiteral89(["Chest Mimic"]))) && have($item(_templateObject6710 || (_templateObject6710 = _taggedTemplateLiteral89(["tiny stillsuit"]))))) outfit2.equip($item(_templateObject6810 || (_templateObject6810 = _taggedTemplateLiteral89(["tiny stillsuit"]))));
    } else outfit2.equip($familiar(_templateObject6910 || (_templateObject6910 = _taggedTemplateLiteral89(["Jill-of-All-Trades"]))));
  }
  outfit2.equip($familiar(_templateObject7010 || (_templateObject7010 = _taggedTemplateLiteral89(["Blood-Faced Volleyball"]))));
  outfit2.equip($item(_templateObject7115 || (_templateObject7115 = _taggedTemplateLiteral89(["mafia thumb ring"]))));
  if (atLevel(11)) outfit2.equip($item(_templateObject7215 || (_templateObject7215 = _taggedTemplateLiteral89(["lucky gold ring"]))));
  if ((0, import_kolmafia101.myBasestat)($stat(_templateObject7314 || (_templateObject7314 = _taggedTemplateLiteral89(["moxie"])))) <= 200) {
    outfit2.equip($item(_templateObject7414 || (_templateObject7414 = _taggedTemplateLiteral89(["plastic vampire fangs"]))));
    outfit2.equip($item(_templateObject7512 || (_templateObject7512 = _taggedTemplateLiteral89(["warbear goggles"]))));
    outfit2.equip($item(_templateObject767 || (_templateObject767 = _taggedTemplateLiteral89(["burning paper slippers"]))));
  }
  if (get("sweat") < 15) outfit2.equip($item(_templateObject777 || (_templateObject777 = _taggedTemplateLiteral89(["designer sweatpants"]))));
  if (!have($item(_templateObject787 || (_templateObject787 = _taggedTemplateLiteral89(["Jurassic Parka"])))) || !have($skill(_templateObject796 || (_templateObject796 = _taggedTemplateLiteral89(["Torso Awareness"])))) || !modifier.includes("-combat") && !modifier.includes("meat") && !modifier.includes("ML")) {
    outfit2.equip($item(_templateObject806 || (_templateObject806 = _taggedTemplateLiteral89(["sea salt scrubs"]))));
  }
  if ((outfit2.haveEquipped($item(_templateObject8113 || (_templateObject8113 = _taggedTemplateLiteral89(["sea salt scrubs"])))) || outfit2.haveEquipped($item(_templateObject8213 || (_templateObject8213 = _taggedTemplateLiteral89(["Jurassic Parka"]))))) && (0, import_kolmafia101.myTurncount)() > 10 && DaylightShavings_exports.buffAvailable() && DaylightShavings_exports.nextBuff() !== $effect(_templateObject8313 || (_templateObject8313 = _taggedTemplateLiteral89(["Gull-Wing Moustache"]))) && DaylightShavings_exports.nextBuff() !== $effect(_templateObject8412 || (_templateObject8412 = _taggedTemplateLiteral89(["Friendly Chops"])))) {
    outfit2.equip($item(_templateObject859 || (_templateObject859 = _taggedTemplateLiteral89(["Daylight Shavings Helmet"]))));
  }
  if (!modifier.includes("+combat") && !modifier.includes(" combat")) {
    outfit2.equip($item(_templateObject866 || (_templateObject866 = _taggedTemplateLiteral89(["nurse's hat"]))));
  }
  if (modifier.length === 0) {
    outfit2.equip($item(_templateObject876 || (_templateObject876 = _taggedTemplateLiteral89(["sea salt scrubs"]))));
    outfit2.equip($item(_templateObject886 || (_templateObject886 = _taggedTemplateLiteral89(["giant yellow hat"]))));
    outfit2.equip($item(_templateObject895 || (_templateObject895 = _taggedTemplateLiteral89(["ice crown"]))));
    outfit2.equip($item(_templateObject905 || (_templateObject905 = _taggedTemplateLiteral89(["June cleaver"]))));
    outfit2.equip($item(_templateObject9113 || (_templateObject9113 = _taggedTemplateLiteral89(["industrial fire extinguisher"]))));
    if (have($skill(_templateObject9213 || (_templateObject9213 = _taggedTemplateLiteral89(["Torso Awareness"]))))) {
      outfit2.equip($item(_templateObject9312 || (_templateObject9312 = _taggedTemplateLiteral89(["Jurassic Parka"]))));
      outfit2.equip($item(_templateObject949 || (_templateObject949 = _taggedTemplateLiteral89(["fresh coat of paint"]))));
    }
    outfit2.equip($item(_templateObject956 || (_templateObject956 = _taggedTemplateLiteral89(["familiar scrapbook"]))));
    if (have($item(_templateObject966 || (_templateObject966 = _taggedTemplateLiteral89(["bat wings"])))) && get("_batWingsFreeFights", 0) < 5) {
      outfit2.equip($item(_templateObject976 || (_templateObject976 = _taggedTemplateLiteral89(["bat wings"]))));
    } else {
      outfit2.equip($item(_templateObject986 || (_templateObject986 = _taggedTemplateLiteral89(["protonic accelerator pack"]))));
      outfit2.equip($item(_templateObject994 || (_templateObject994 = _taggedTemplateLiteral89(["bat wings"]))));
    }
    outfit2.equip($item(_templateObject1004 || (_templateObject1004 = _taggedTemplateLiteral89(["unwrapped knock-off retro superhero cape"]))));
    outfit2.equip($item(_templateObject10112 || (_templateObject10112 = _taggedTemplateLiteral89(["designer sweatpants"]))));
    outfit2.equip($item(_templateObject10212 || (_templateObject10212 = _taggedTemplateLiteral89(["warbear long johns"]))));
    outfit2.equip($item(_templateObject10310 || (_templateObject10310 = _taggedTemplateLiteral89(["square sponge pants"]))));
    outfit2.equip($item(_templateObject1044 || (_templateObject1044 = _taggedTemplateLiteral89(["Cargo Cultist Shorts"]))));
    outfit2.equip($item(_templateObject1054 || (_templateObject1054 = _taggedTemplateLiteral89(["lucky gold ring"]))));
    outfit2.equip($item(_templateObject1064 || (_templateObject1064 = _taggedTemplateLiteral89(["Everfull Dart Holster"]))));
    if (yellowSubmarinePossible() && ((0, import_kolmafia101.itemAmount)($item(_templateObject1074 || (_templateObject1074 = _taggedTemplateLiteral89(["red pixel"])))) < 5 || (0, import_kolmafia101.itemAmount)($item(_templateObject1084 || (_templateObject1084 = _taggedTemplateLiteral89(["blue pixel"])))) < 5 || (0, import_kolmafia101.itemAmount)($item(_templateObject1094 || (_templateObject1094 = _taggedTemplateLiteral89(["green pixel"])))) < 5)) {
      outfit2.equip($item(_templateObject1104 || (_templateObject1104 = _taggedTemplateLiteral89(["Powerful Glove"]))));
    }
    outfit2.equip($item(_templateObject11112 || (_templateObject11112 = _taggedTemplateLiteral89(["backup camera"]))));
    outfit2.equip($item(_templateObject11212 || (_templateObject11212 = _taggedTemplateLiteral89(["birch battery"]))));
    outfit2.equip($item(_templateObject1138 || (_templateObject1138 = _taggedTemplateLiteral89(["combat lover's locket"]))));
    outfit2.equip($item(_templateObject1144 || (_templateObject1144 = _taggedTemplateLiteral89(["Powerful Glove"]))));
  } else {
    outfit2.modifier.push("0.01 MP regen, 0.001 HP regen");
    if (haveLoathingLegion()) {
      outfit2.avoid.push($item(_templateObject1154 || (_templateObject1154 = _taggedTemplateLiteral89(["Loathing Legion defibrillator"]))));
    }
    if (modifier.includes("item") && outfit2.equippedAmount($item(_templateObject1164 || (_templateObject1164 = _taggedTemplateLiteral89(["Kramco Sausage-o-Matic\u2122"])))) === 0) {
      outfit2.avoid.push($item(_templateObject1174 || (_templateObject1174 = _taggedTemplateLiteral89(["Kramco Sausage-o-Matic\u2122"]))));
    }
  }
  if (have($item(_templateObject1184 || (_templateObject1184 = _taggedTemplateLiteral89(["cursed magnifying glass"])))) && get("cursedMagnifyingGlassCount") >= 13 && !_toConsumableArray34(outfit2.equips.values()).includes($item(_templateObject1194 || (_templateObject1194 = _taggedTemplateLiteral89(["cursed magnifying glass"]))))) {
    outfit2.avoid.push($item(_templateObject1204 || (_templateObject1204 = _taggedTemplateLiteral89(["cursed magnifying glass"]))));
  }
  outfit2.equip($item(_templateObject12112 || (_templateObject12112 = _taggedTemplateLiteral89(["miniature crystal ball"]))));
}
function fixFoldables(outfit2) {
  var modifier = getModifiersFrom(outfit2);
  if ((0, import_kolmafia101.equippedAmount)($item(_templateObject12211 || (_templateObject12211 = _taggedTemplateLiteral89(["unbreakable umbrella"])))) > 0 && !outfit2.modes["umbrella"]) {
    if (modifier.includes("-combat")) {
      if (get("umbrellaState") !== "cocoon") (0, import_kolmafia101.cliExecute)("umbrella cocoon");
    } else if (modifier.includes("ML") && !modifier.match("-[\\d .]*ML")) {
      if (get("umbrellaState") !== "broken") (0, import_kolmafia101.cliExecute)("umbrella broken");
    } else if (modifier.includes("item")) {
      if (get("umbrellaState") !== "bucket style") (0, import_kolmafia101.cliExecute)("umbrella bucket");
    } else {
      if (get("umbrellaState") !== "forward-facing") (0, import_kolmafia101.cliExecute)("umbrella forward");
    }
  }
  if ((0, import_kolmafia101.equippedAmount)($item(_templateObject1238 || (_templateObject1238 = _taggedTemplateLiteral89(["backup camera"])))) > 0 && !outfit2.modes["backupcamera"]) {
    if (modifier.includes("ML") && !modifier.match("-[\\d .]*ML")) {
      if (get("backupCameraMode").toLowerCase() !== "ml") (0, import_kolmafia101.cliExecute)("backupcamera ml");
    } else if (modifier.includes("init") && !modifier.match("-[\\d .]*init")) {
      if (get("backupCameraMode").toLowerCase() !== "init") (0, import_kolmafia101.cliExecute)("backupcamera init");
    } else {
      if (get("backupCameraMode").toLowerCase() !== "meat") (0, import_kolmafia101.cliExecute)("backupcamera meat");
    }
    if (!get("backupCameraReverserEnabled")) {
      (0, import_kolmafia101.cliExecute)("backupcamera reverser on");
    }
  }
  if ((0, import_kolmafia101.equippedAmount)($item(_templateObject1244 || (_templateObject1244 = _taggedTemplateLiteral89(["unwrapped knock-off retro superhero cape"])))) > 0 && !outfit2.modes["retrocape"]) {
    if (modifier.includes("res") && get("retroCapeSuperhero") !== "vampire" || get("retroCapeWashingInstructions") !== "hold") {
      (0, import_kolmafia101.cliExecute)("retrocape vampire hold");
    }
  }
  if ((0, import_kolmafia101.equippedAmount)($item(_templateObject1254 || (_templateObject1254 = _taggedTemplateLiteral89(["Jurassic Parka"])))) > 0 && !outfit2.modes["parka"]) {
    if (modifier.includes("cold res")) {
      if (get("parkaMode").toLowerCase() !== "kachungasaur") (0, import_kolmafia101.cliExecute)("parka kachungasaur");
    } else if (modifier.includes("stench res")) {
      if (get("parkaMode").toLowerCase() !== "dilophosaur") (0, import_kolmafia101.cliExecute)("parka dilophosaur");
    } else if (modifier.includes("ML") && !modifier.match("-[\\d .]*ML")) {
      if (get("parkaMode").toLowerCase() !== "spikolodon") (0, import_kolmafia101.cliExecute)("parka spikolodon");
    } else if (modifier.includes("-combat") || modifier.includes("init") && !modifier.match("-[\\d .]*init") && !modifier.match("combat")) {
      if (get("parkaMode").toLowerCase() !== "pterodactyl") (0, import_kolmafia101.cliExecute)("parka pterodactyl");
    } else {
      if (get("parkaMode").toLowerCase() !== "kachungasaur") (0, import_kolmafia101.cliExecute)("parka kachungasaur");
    }
  }
  if ((0, import_kolmafia101.equippedAmount)($item(_templateObject1264 || (_templateObject1264 = _taggedTemplateLiteral89(["LED candle"])))) > 0) {
    if (modifier.includes("item") && get("ledCandleMode") !== "disco") {
      (0, import_kolmafia101.cliExecute)("jillcandle disco");
    } else if (modifier.includes("meat") && get("ledCandleMode") !== "ultraviolet") {
      (0, import_kolmafia101.cliExecute)("jillcandle ultraviolet");
    }
  }
}
var weaponHands2 = function(i) {
  return i ? (0, import_kolmafia101.weaponHands)(i) : 0;
};
function cacheDress(outfit2) {
  var currentEquipScore = cacheScore(outfit2.equips);
  var outfits = [0, 1, 2, 3, 4, 5].map(function(i) {
    return "Script Outfit ".concat(i);
  }).map(function(name2) {
    return {
      name: name2,
      score: cacheScore(outfit2.equips, name2)
    };
  });
  outfits.sort(function(a, b) {
    return a.score < b.score ? -1 : a.score > b.score ? 1 : 0;
  }).reverse();
  if (outfits[0].score > currentEquipScore + 1) {
    var improvement = outfits[0].score - currentEquipScore;
    var name = outfits[0].name;
    var parts = (0, import_kolmafia101.outfitPieces)(outfits[0].name).join(", ");
    (0, import_kolmafia101.print)("Equipping ".concat(improvement, " items with ").concat(name, " (").concat(parts, ")"));
    (0, import_kolmafia101.outfit)(outfits[0].name);
  }
  if (outfit2.equips.has($slot(_templateObject1274 || (_templateObject1274 = _taggedTemplateLiteral89(["off-hand"])))) && !outfit2.equips.has($slot(_templateObject1284 || (_templateObject1284 = _taggedTemplateLiteral89(["weapon"])))) && weaponHands2((0, import_kolmafia101.equippedItem)($slot(_templateObject1294 || (_templateObject1294 = _taggedTemplateLiteral89(["weapon"]))))) > 1) {
    (0, import_kolmafia101.equip)($item(_templateObject1304 || (_templateObject1304 = _taggedTemplateLiteral89(["none"]))), $slot(_templateObject13112 || (_templateObject13112 = _taggedTemplateLiteral89(["weapon"]))));
  }
  outfit2.dress();
}
var nonAccSlots = $slots(_templateObject13211 || (_templateObject13211 = _taggedTemplateLiteral89(["hat, weapon, off-hand, back, shirt, pants"])));
var accSlots = $slots(_templateObject1336 || (_templateObject1336 = _taggedTemplateLiteral89(["acc1, acc2, acc3"])));
var outfitSlots2 = $slots(_templateObject1344 || (_templateObject1344 = _taggedTemplateLiteral89(["hat, weapon, off-hand, back, shirt, pants, acc1, acc2, acc3"])));
function loadItems(outfit2) {
  var _freeAccSlots$pop;
  if (!outfit2) {
    return new Map(outfitSlots2.map(function(slot2) {
      return [slot2, (0, import_kolmafia101.equippedItem)(slot2)];
    }));
  }
  var result = /* @__PURE__ */ new Map();
  var freeAccSlots = $slots(_templateObject1354 || (_templateObject1354 = _taggedTemplateLiteral89(["acc3, acc2, acc1"])));
  var items = (0, import_kolmafia101.outfitPieces)(outfit2);
  var _iterator3 = _createForOfIteratorHelper29(items), _step3;
  try {
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
      var item14 = _step3.value;
      var slot = (0, import_kolmafia101.toSlot)(item14);
      switch (slot) {
        case $slot(_templateObject1364 || (_templateObject1364 = _taggedTemplateLiteral89(["weapon"]))):
          if (result.has($slot(_templateObject1374 || (_templateObject1374 = _taggedTemplateLiteral89(["weapon"]))))) result.set($slot(_templateObject1384 || (_templateObject1384 = _taggedTemplateLiteral89(["off-hand"]))), item14);
          else result.set($slot(_templateObject1394 || (_templateObject1394 = _taggedTemplateLiteral89(["weapon"]))), item14);
          break;
        case $slot(_templateObject1404 || (_templateObject1404 = _taggedTemplateLiteral89(["acc1"]))):
          result.set((_freeAccSlots$pop = freeAccSlots.pop()) !== null && _freeAccSlots$pop !== void 0 ? _freeAccSlots$pop : $slot(_templateObject14112 || (_templateObject14112 = _taggedTemplateLiteral89(["none"]))), item14);
          break;
        default:
          result.set(slot, item14);
          break;
      }
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  return result;
}
function cacheScore(desired, name) {
  var items = loadItems(name);
  var overlap = 0;
  var _iterator4 = _createForOfIteratorHelper29(nonAccSlots), _step4;
  try {
    for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
      var slot = _step4.value;
      if (desired.has(slot) && desired.get(slot) === items.get(slot)) overlap++;
    }
  } catch (err) {
    _iterator4.e(err);
  } finally {
    _iterator4.f();
  }
  var desiredAccesoriesMet = /* @__PURE__ */ new Set();
  var _iterator5 = _createForOfIteratorHelper29(accSlots), _step5;
  try {
    var _loop = function _loop2() {
      var slot2 = _step5.value;
      var acc = items.get(slot2);
      if (acc === void 0) return 1;
      var matchedSlot = accSlots.find(function(slot3) {
        return !desiredAccesoriesMet.has(slot3) && desired.get(slot3) === acc;
      });
      if (matchedSlot !== void 0) {
        desiredAccesoriesMet.add(matchedSlot);
        overlap++;
      }
    };
    for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
      if (_loop()) continue;
    }
  } catch (err) {
    _iterator5.e(err);
  } finally {
    _iterator5.f();
  }
  return overlap;
}
var ElementalPlanner = /* @__PURE__ */ function() {
  function ElementalPlanner2(options) {
    _classCallCheck32(this, ElementalPlanner2);
    _defineProperty35(this, "options", void 0);
    this.options = options;
  }
  _createClass32(ElementalPlanner2, [{
    key: "maximumPossible",
    value: function maximumPossible(with_black_paint) {
      var avoid_slots = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
      var res = 0;
      if (with_black_paint && (have($effect(_templateObject14211 || (_templateObject14211 = _taggedTemplateLiteral89(["Red Door Syndrome"])))) || (0, import_kolmafia101.myMeat)() >= 1e3 && step("questL11Black") >= 2)) res += 2;
      var _iterator6 = _createForOfIteratorHelper29(this.options), _step6;
      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
          var option = _step6.value;
          if (option.thing instanceof import_kolmafia101.Item && avoid_slots.includes((0, import_kolmafia101.toSlot)(option.thing))) continue;
          if (option.ready && !option.ready()) continue;
          if (have(option.thing)) res += option.value;
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
      return res;
    }
  }, {
    key: "outfitFor",
    value: function outfitFor(goal, addTo) {
      var result = new Outfit();
      if (addTo) result.equip(addTo);
      var _iterator7 = _createForOfIteratorHelper29(this.options), _step7;
      try {
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
          var option = _step7.value;
          if (goal <= 0) break;
          if (option.ready && !option.ready()) continue;
          if (option.thing instanceof import_kolmafia101.Skill || option.thing instanceof import_kolmafia101.Effect) {
            if (have(option.thing)) goal -= option.value;
          } else {
            if (result.equip(option.thing)) {
              if (option.modes) result.setModes(option.modes);
              goal -= option.value;
            }
          }
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }
      return result;
    }
  }]);
  return ElementalPlanner2;
}();
var coldPlanner = new ElementalPlanner([{
  thing: $effect(_templateObject1434 || (_templateObject1434 = _taggedTemplateLiteral89(["Hot Soupy Garbage"]))),
  value: 2
}, {
  thing: $effect(_templateObject1444 || (_templateObject1444 = _taggedTemplateLiteral89(["Double Hot Soupy Garbage"]))),
  value: 2
}, {
  thing: $effect(_templateObject1454 || (_templateObject1454 = _taggedTemplateLiteral89(["Astral Shell"]))),
  value: 1
}, {
  thing: $effect(_templateObject1464 || (_templateObject1464 = _taggedTemplateLiteral89(["Elemental Saucesphere"]))),
  value: 2
}, {
  thing: $skill(_templateObject1474 || (_templateObject1474 = _taggedTemplateLiteral89(["Refusal to Freeze"]))),
  value: 3
}, {
  thing: $skill(_templateObject1484 || (_templateObject1484 = _taggedTemplateLiteral89(["Northern Exposure"]))),
  value: 2
}, {
  thing: $skill(_templateObject1494 || (_templateObject1494 = _taggedTemplateLiteral89(["Crimbo Training: Dessert Steward"]))),
  value: 1
}, {
  thing: $item(_templateObject1504 || (_templateObject1504 = _taggedTemplateLiteral89(["ice crown"]))),
  value: 3
}, {
  thing: $item(_templateObject15112 || (_templateObject15112 = _taggedTemplateLiteral89(["ghost of a necklace"]))),
  value: 1
}, {
  thing: $item(_templateObject15210 || (_templateObject15210 = _taggedTemplateLiteral89(["unwrapped knock-off retro superhero cape"]))),
  value: 3,
  modes: {
    retrocape: ["vampire", "hold"]
  }
}, {
  thing: $item(_templateObject1534 || (_templateObject1534 = _taggedTemplateLiteral89(["Jurassic Parka"]))),
  value: 3,
  ready: function() {
    return have($skill(_templateObject1544 || (_templateObject1544 = _taggedTemplateLiteral89(["Torso Awareness"]))));
  },
  modes: {
    parka: "kachungasaur"
  }
}]);
var stenchPlanner = new ElementalPlanner([{
  thing: $effect(_templateObject1554 || (_templateObject1554 = _taggedTemplateLiteral89(["Shivering Spine"]))),
  value: 2
}, {
  thing: $effect(_templateObject1564 || (_templateObject1564 = _taggedTemplateLiteral89(["Doubly Shivering Spine"]))),
  value: 4
}, {
  thing: $effect(_templateObject1574 || (_templateObject1574 = _taggedTemplateLiteral89(["Astral Shell"]))),
  value: 1
}, {
  thing: $effect(_templateObject1584 || (_templateObject1584 = _taggedTemplateLiteral89(["Elemental Saucesphere"]))),
  value: 2
}, {
  thing: $skill(_templateObject1594 || (_templateObject1594 = _taggedTemplateLiteral89(["Olfactory Burnout"]))),
  value: 3
}, {
  thing: $skill(_templateObject1604 || (_templateObject1604 = _taggedTemplateLiteral89(["Diminished Gag Reflex"]))),
  value: 2
}, {
  thing: $skill(_templateObject16112 || (_templateObject16112 = _taggedTemplateLiteral89(["Dead Nostrils"]))),
  value: 2
}, {
  thing: $item(_templateObject16210 || (_templateObject16210 = _taggedTemplateLiteral89(["ice crown"]))),
  value: 3
}, {
  thing: $item(_templateObject1634 || (_templateObject1634 = _taggedTemplateLiteral89(["ghost of a necklace"]))),
  value: 1
}, {
  thing: $item(_templateObject1644 || (_templateObject1644 = _taggedTemplateLiteral89(["unwrapped knock-off retro superhero cape"]))),
  value: 3,
  modes: {
    retrocape: ["vampire", "hold"]
  }
}, {
  thing: $item(_templateObject1654 || (_templateObject1654 = _taggedTemplateLiteral89(["Jurassic Parka"]))),
  value: 3,
  ready: function() {
    return have($skill(_templateObject1664 || (_templateObject1664 = _taggedTemplateLiteral89(["Torso Awareness"]))));
  },
  modes: {
    parka: "dilophosaur"
  }
}]);

// src/tasks/level8.ts
var _templateObject690;
var _templateObject2166;
var _templateObject3151;
var _templateObject4131;
var _templateObject5104;
var _templateObject691;
var _templateObject768;
var _templateObject860;
var _templateObject950;
var _templateObject1041;
var _templateObject1139;
var _templateObject1239;
var _templateObject1337;
var _templateObject1435;
var _templateObject1530;
var _templateObject1630;
var _templateObject1730;
var _templateObject1830;
var _templateObject1928;
var _templateObject2028;
var _templateObject2167;
var _templateObject2230;
var _templateObject2328;
var _templateObject2427;
var _templateObject2526;
var _templateObject2625;
var _templateObject2725;
var _templateObject2823;
var _templateObject2923;
var _templateObject3023;
var _templateObject3153;
var _templateObject3225;
var _templateObject3324;
var _templateObject3421;
var _templateObject3520;
var _templateObject3620;
var _templateObject3720;
var _templateObject3820;
var _templateObject3919;
var _templateObject4019;
var _templateObject4132;
var _templateObject4221;
var _templateObject4320;
var _templateObject4419;
var _templateObject4519;
var _templateObject4619;
var _templateObject4719;
var _templateObject4819;
var _templateObject4919;
var _templateObject5019;
var _templateObject5120;
var _templateObject5220;
var _templateObject5319;
var _templateObject5419;
var _templateObject5518;
var _templateObject5617;
var _templateObject5717;
var _templateObject5816;
var _templateObject5914;
var _templateObject6012;
var _templateObject6118;
var _templateObject6217;
var _templateObject6317;
var _templateObject6417;
var _templateObject6516;
var _templateObject6613;
function _taggedTemplateLiteral90(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var McLargeHugeQuest = {
  name: "McLargeHuge",
  tasks: [{
    name: "Start",
    after: [],
    ready: function() {
      return atLevel(8);
    },
    completed: function() {
      return step("questL08Trapper") !== -1;
    },
    do: function() {
      return (0, import_kolmafia102.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    priority: function() {
      return councilSafe() ? Priorities.Free : Priorities.BadMood;
    },
    freeaction: true
  }, {
    name: "Trapper Request",
    after: ["Start"],
    completed: function() {
      return step("questL08Trapper") >= 1;
    },
    do: function() {
      return (0, import_kolmafia102.visitUrl)("place.php?whichplace=mclargehuge&action=trappercabin");
    },
    limit: {
      tries: 1
    },
    priority: function() {
      return Priorities.Free;
    },
    freeaction: true
  }, {
    name: "Clover Ore",
    after: ["Trapper Request", "Pull/Ore", "Misc/Hermit Clover"],
    ready: function() {
      return have($item(_templateObject690 || (_templateObject690 = _taggedTemplateLiteral90(["11-leaf clover"])))) && summonStrategy.getSourceFor($monster(_templateObject2166 || (_templateObject2166 = _taggedTemplateLiteral90(["mountain man"])))) === void 0 && oresNeeded() > 0;
    },
    prepare: function() {
      if (!have($effect(_templateObject3151 || (_templateObject3151 = _taggedTemplateLiteral90(["Lucky!"]))))) (0, import_kolmafia102.use)($item(_templateObject4131 || (_templateObject4131 = _taggedTemplateLiteral90(["11-leaf clover"]))));
    },
    completed: function() {
      return step("questL08Trapper") >= 2 || get("trapperOre") !== "" && (0, import_kolmafia102.itemAmount)(import_kolmafia102.Item.get(get("trapperOre"))) >= 3 || (0, import_kolmafia102.itemAmount)($item(_templateObject5104 || (_templateObject5104 = _taggedTemplateLiteral90(["asbestos ore"])))) >= 3 && (0, import_kolmafia102.itemAmount)($item(_templateObject691 || (_templateObject691 = _taggedTemplateLiteral90(["chrome ore"])))) >= 3 && (0, import_kolmafia102.itemAmount)($item(_templateObject768 || (_templateObject768 = _taggedTemplateLiteral90(["linoleum ore"])))) >= 3;
    },
    do: $location(_templateObject860 || (_templateObject860 = _taggedTemplateLiteral90(["Itznotyerzitz Mine"]))),
    limit: {
      tries: 2
    }
  }, {
    name: "Goatlet",
    after: ["Trapper Request"],
    priority: function() {
      if ((0, import_kolmafia102.myLevel)() >= 12 && have($item(_templateObject950 || (_templateObject950 = _taggedTemplateLiteral90(["crepe paper parachute cape"])))) && !have($effect(_templateObject1041 || (_templateObject1041 = _taggedTemplateLiteral90(["Everything looks Beige"])))) && (have($item(_templateObject1139 || (_templateObject1139 = _taggedTemplateLiteral90(["June cleaver"])))) && get("_juneCleaverFightsLeft") === 0 || (0, import_kolmafia102.myLocation)() === $location(_templateObject1239 || (_templateObject1239 = _taggedTemplateLiteral90(["The Goatlet"]))))) {
        return Priorities.Start;
      }
      return Priorities.None;
    },
    ready: function() {
      return counter_exports.get("Spooky VHS Tape Monster") === 0 || get("spookyVHSTapeMonster") !== $monster(_templateObject1337 || (_templateObject1337 = _taggedTemplateLiteral90(["dairy goat"])));
    },
    completed: function() {
      return (0, import_kolmafia102.itemAmount)($item(_templateObject1435 || (_templateObject1435 = _taggedTemplateLiteral90(["goat cheese"])))) >= 3 || step("questL08Trapper") >= 2;
    },
    do: $location(_templateObject1530 || (_templateObject1530 = _taggedTemplateLiteral90(["The Goatlet"]))),
    outfit: function() {
      var equip10 = $items(_templateObject1630 || (_templateObject1630 = _taggedTemplateLiteral90(["deft pirate hook"])));
      if ((0, import_kolmafia102.myLevel)() >= 12 && !have($effect(_templateObject1730 || (_templateObject1730 = _taggedTemplateLiteral90(["Everything Looks Red"]))))) equip10.push($item(_templateObject1830 || (_templateObject1830 = _taggedTemplateLiteral90(["Everfull Dart Holster"]))));
      return {
        modifier: "item",
        avoid: $items(_templateObject1928 || (_templateObject1928 = _taggedTemplateLiteral90(["broken champagne bottle"]))),
        familiar: $familiar(_templateObject2028 || (_templateObject2028 = _taggedTemplateLiteral90(["Grey Goose"]))),
        equip: equip10
      };
    },
    combat: new CombatStrategy2().macro(function() {
      if ((0, import_kolmafia102.itemAmount)($item(_templateObject2167 || (_templateObject2167 = _taggedTemplateLiteral90(["goat cheese"])))) === 0) return Macro.trySkill($skill(_templateObject2230 || (_templateObject2230 = _taggedTemplateLiteral90(["Emit Matter Duplicating Drones"])))).tryItem($item(_templateObject2328 || (_templateObject2328 = _taggedTemplateLiteral90(["Spooky VHS Tape"]))));
      if ((0, import_kolmafia102.itemAmount)($item(_templateObject2427 || (_templateObject2427 = _taggedTemplateLiteral90(["goat cheese"])))) === 1) {
        if ((0, import_kolmafia102.myFamiliar)() === $familiar(_templateObject2526 || (_templateObject2526 = _taggedTemplateLiteral90(["Grey Goose"]))) && (0, import_kolmafia102.familiarWeight)($familiar(_templateObject2625 || (_templateObject2625 = _taggedTemplateLiteral90(["Grey Goose"])))) >= 6) return Macro.trySkill($skill(_templateObject2725 || (_templateObject2725 = _taggedTemplateLiteral90(["Emit Matter Duplicating Drones"]))));
        else return Macro.tryItem($item(_templateObject2823 || (_templateObject2823 = _taggedTemplateLiteral90(["Spooky VHS Tape"])))).trySkill($skill(_templateObject2923 || (_templateObject2923 = _taggedTemplateLiteral90(["Swoop like a Bat"]))));
      }
      return new Macro();
    }, $monster(_templateObject3023 || (_templateObject3023 = _taggedTemplateLiteral90(["dairy goat"])))).killItem($monster(_templateObject3153 || (_templateObject3153 = _taggedTemplateLiteral90(["dairy goat"])))).banish($monsters(_templateObject3225 || (_templateObject3225 = _taggedTemplateLiteral90(["drunk goat, sabre-toothed goat"])))),
    parachute: $monster(_templateObject3324 || (_templateObject3324 = _taggedTemplateLiteral90(["dairy goat"]))),
    limit: {
      soft: 15
    }
  }, {
    name: "Trapper Return",
    after: ["Goatlet", "Pull/Ore", "Summon/Mountain Man", "Clover Ore"],
    ready: function() {
      return get("trapperOre") !== "" && (0, import_kolmafia102.itemAmount)(import_kolmafia102.Item.get(get("trapperOre"))) >= 3;
    },
    // Checked here since there is no task for Trainset ores
    completed: function() {
      return step("questL08Trapper") >= 2;
    },
    do: function() {
      return (0, import_kolmafia102.visitUrl)("place.php?whichplace=mclargehuge&action=trappercabin");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Extreme Outfit",
    after: ["Trapper Return"],
    completed: function() {
      return haveHugeLarge() || have($item(_templateObject3421 || (_templateObject3421 = _taggedTemplateLiteral90(["eXtreme mittens"])))) && have($item(_templateObject3520 || (_templateObject3520 = _taggedTemplateLiteral90(["snowboarder pants"])))) && have($item(_templateObject3620 || (_templateObject3620 = _taggedTemplateLiteral90(["eXtreme scarf"])))) || step("questL08Trapper") >= 3;
    },
    do: $location(_templateObject3720 || (_templateObject3720 = _taggedTemplateLiteral90(["The eXtreme Slope"]))),
    outfit: {
      equip: $items(_templateObject3820 || (_templateObject3820 = _taggedTemplateLiteral90(["candy cane sword cane"]))),
      modifier: "item, -combat"
    },
    choices: function() {
      var candyCaneUseful = (0, import_kolmafia102.equippedAmount)($item(_templateObject3919 || (_templateObject3919 = _taggedTemplateLiteral90(["candy cane sword cane"])))) > 0 && (!have($item(_templateObject4019 || (_templateObject4019 = _taggedTemplateLiteral90(["snowboarder pants"])))) || !have($item(_templateObject4132 || (_templateObject4132 = _taggedTemplateLiteral90(["eXtreme mittens"])))));
      return {
        575: candyCaneUseful ? 5 : 1,
        15: have($item(_templateObject4221 || (_templateObject4221 = _taggedTemplateLiteral90(["eXtreme mittens"])))) ? 2 : 1,
        16: have($item(_templateObject4320 || (_templateObject4320 = _taggedTemplateLiteral90(["snowboarder pants"])))) ? 2 : 1,
        17: have($item(_templateObject4419 || (_templateObject4419 = _taggedTemplateLiteral90(["eXtreme mittens"])))) ? 2 : 1
      };
    },
    combat: new CombatStrategy2().killItem(),
    limit: {
      soft: 30
    }
  }, {
    name: "Extreme Snowboard",
    after: ["Trapper Return", "Extreme Outfit"],
    completed: function() {
      return get("currentExtremity") >= 3 || step("questL08Trapper") >= 3;
    },
    do: $location(_templateObject4519 || (_templateObject4519 = _taggedTemplateLiteral90(["The eXtreme Slope"]))),
    outfit: function() {
      if (haveHugeLarge()) return {
        equip: $items(_templateObject4619 || (_templateObject4619 = _taggedTemplateLiteral90(["McHugeLarge left pole, McHugeLarge right pole, McHugeLarge left ski, McHugeLarge right ski, McHugeLarge duffel bag"]))),
        modifier: "-combat"
      };
      return {
        equip: $items(_templateObject4719 || (_templateObject4719 = _taggedTemplateLiteral90(["eXtreme mittens, snowboarder pants, eXtreme scarf"]))),
        modifier: "-combat"
      };
    },
    limit: {
      soft: 30
    }
  }, {
    name: "Climb",
    after: ["Trapper Return", "Extreme Snowboard"],
    completed: function() {
      return step("questL08Trapper") >= 3;
    },
    do: function() {
      (0, import_kolmafia102.visitUrl)("place.php?whichplace=mclargehuge&action=cloudypeak");
    },
    outfit: function() {
      if (haveHugeLarge()) return {
        equip: $items(_templateObject4819 || (_templateObject4819 = _taggedTemplateLiteral90(["McHugeLarge left pole, McHugeLarge right pole, McHugeLarge left ski, McHugeLarge right ski, McHugeLarge duffel bag"]))),
        modifier: "-combat"
      };
      return {
        equip: $items(_templateObject4919 || (_templateObject4919 = _taggedTemplateLiteral90(["eXtreme mittens, snowboarder pants, eXtreme scarf"]))),
        modifier: "-combat"
      };
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Peak",
    after: ["Climb"],
    completed: function() {
      return step("questL08Trapper") >= 5;
    },
    ready: function() {
      return coldPlanner.maximumPossible(true) >= 5;
    },
    prepare: function() {
      if ((0, import_kolmafia102.numericModifier)("cold resistance") < 5) ensureEffect($effect(_templateObject5019 || (_templateObject5019 = _taggedTemplateLiteral90(["Red Door Syndrome"]))));
      if ((0, import_kolmafia102.numericModifier)("cold resistance") < 5) throw "Unable to ensure cold res for The Icy Peak";
    },
    do: $location(_templateObject5120 || (_templateObject5120 = _taggedTemplateLiteral90(["Mist-Shrouded Peak"]))),
    outfit: function() {
      return coldPlanner.outfitFor(5, {
        familiar: $familiar(_templateObject5220 || (_templateObject5220 = _taggedTemplateLiteral90(["Patriotic Eagle"])))
      });
    },
    combat: new CombatStrategy2().killHard().macro(function() {
      if (!get("banishedPhyla").includes("beast")) return Macro.trySkill($skill(_templateObject5319 || (_templateObject5319 = _taggedTemplateLiteral90(["%fn, Release the Patriotic Screech!"]))));
      return new Macro();
    }),
    boss: true,
    limit: {
      tries: 4
    }
  }, {
    name: "Finish",
    after: ["Peak"],
    completed: function() {
      return step("questL08Trapper") === 999;
    },
    do: function() {
      return (0, import_kolmafia102.visitUrl)("place.php?whichplace=mclargehuge&action=trappercabin");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }]
};
function oresNeeded() {
  if (step("questL08Trapper") >= 2) return 0;
  if (trainSetAvailable()) return 0;
  var ore_needed = 3;
  ore_needed -= Math.min((0, import_kolmafia102.itemAmount)($item(_templateObject5419 || (_templateObject5419 = _taggedTemplateLiteral90(["asbestos ore"])))), (0, import_kolmafia102.itemAmount)($item(_templateObject5518 || (_templateObject5518 = _taggedTemplateLiteral90(["chrome ore"])))), (0, import_kolmafia102.itemAmount)($item(_templateObject5617 || (_templateObject5617 = _taggedTemplateLiteral90(["linoleum ore"])))));
  if (have($item(_templateObject5717 || (_templateObject5717 = _taggedTemplateLiteral90(["Deck of Every Card"])))) && get("_deckCardsDrawn") === 0) ore_needed--;
  var pulled = new Set(get("_roninStoragePulls").split(",").map(function(id) {
    return parseInt(id);
  }).filter(function(id) {
    return id > 0;
  }).map(function(id) {
    return import_kolmafia102.Item.get(id);
  }));
  if (!pulled.has($item(_templateObject5816 || (_templateObject5816 = _taggedTemplateLiteral90(["asbestos ore"])))) && !pulled.has($item(_templateObject5914 || (_templateObject5914 = _taggedTemplateLiteral90(["chrome ore"])))) && !pulled.has($item(_templateObject6012 || (_templateObject6012 = _taggedTemplateLiteral90(["linoleum ore"]))))) ore_needed--;
  if (get("spookyVHSTapeMonster") === $monster(_templateObject6118 || (_templateObject6118 = _taggedTemplateLiteral90(["mountain man"])))) ore_needed -= 2;
  return Math.max(ore_needed, 0);
}
function haveHugeLarge() {
  return have($item(_templateObject6217 || (_templateObject6217 = _taggedTemplateLiteral90(["McHugeLarge left pole"])))) && have($item(_templateObject6317 || (_templateObject6317 = _taggedTemplateLiteral90(["McHugeLarge right pole"])))) && have($item(_templateObject6417 || (_templateObject6417 = _taggedTemplateLiteral90(["McHugeLarge left ski"])))) && have($item(_templateObject6516 || (_templateObject6516 = _taggedTemplateLiteral90(["McHugeLarge right ski"])))) && have($item(_templateObject6613 || (_templateObject6613 = _taggedTemplateLiteral90(["McHugeLarge duffel bag"]))));
}

// src/engine/resources.ts
var _templateObject700;
var _templateObject2168;
var _templateObject3154;
var _templateObject4133;
var _templateObject5105;
var _templateObject6100;
var _templateObject769;
var _templateObject861;
var _templateObject951;
var _templateObject1045;
var _templateObject1140;
var _templateObject1240;
var _templateObject1338;
var _templateObject1436;
var _templateObject1531;
var _templateObject1631;
var _templateObject1731;
var _templateObject1831;
var _templateObject1929;
var _templateObject2029;
var _templateObject2169;
var _templateObject2231;
var _templateObject2329;
var _templateObject2428;
var _templateObject2527;
var _templateObject2626;
var _templateObject2726;
var _templateObject2824;
var _templateObject2924;
var _templateObject3024;
var _templateObject3155;
var _templateObject3226;
var _templateObject3325;
var _templateObject3423;
var _templateObject3521;
var _templateObject3621;
var _templateObject3721;
var _templateObject3821;
var _templateObject3920;
var _templateObject4020;
var _templateObject4134;
var _templateObject4222;
var _templateObject4321;
var _templateObject4420;
var _templateObject4520;
var _templateObject4620;
var _templateObject4720;
var _templateObject4820;
var _templateObject4920;
var _templateObject5020;
var _templateObject5121;
var _templateObject5221;
var _templateObject5320;
var _templateObject5420;
var _templateObject5519;
var _templateObject5618;
var _templateObject5718;
var _templateObject5817;
var _templateObject5915;
var _templateObject6013;
var _templateObject6119;
var _templateObject6218;
var _templateObject6318;
var _templateObject6418;
var _templateObject6517;
var _templateObject6614;
var _templateObject6711;
var _templateObject6811;
var _templateObject6911;
var _templateObject7011;
var _templateObject7116;
var _templateObject7216;
var _templateObject7315;
var _templateObject7415;
var _templateObject7513;
var _templateObject7610;
var _templateObject778;
var _templateObject788;
var _templateObject797;
var _templateObject807;
var _templateObject8114;
var _templateObject8214;
var _templateObject8314;
var _templateObject8413;
var _templateObject8510;
var _templateObject867;
var _templateObject877;
var _templateObject887;
var _templateObject896;
var _templateObject906;
var _templateObject9114;
var _templateObject9214;
var _templateObject9313;
var _templateObject9410;
var _templateObject957;
var _templateObject967;
var _templateObject977;
var _templateObject987;
var _templateObject995;
var _templateObject1005;
var _templateObject10113;
var _templateObject10213;
var _templateObject10311;
var _templateObject1046;
var _templateObject1055;
var _templateObject1065;
var _templateObject1075;
var _templateObject1085;
var _templateObject1095;
var _templateObject1105;
var _templateObject11113;
var _templateObject11213;
var _templateObject11310;
var _templateObject1145;
var _templateObject1155;
var _templateObject1165;
var _templateObject1175;
var _templateObject1185;
var _templateObject1195;
var _templateObject1205;
var _templateObject12113;
var _templateObject12212;
var _templateObject12310;
var _templateObject1245;
var _templateObject1255;
var _templateObject1265;
var _templateObject1275;
var _templateObject1285;
var _templateObject1295;
var _templateObject1305;
var _templateObject13113;
var _templateObject13212;
var _templateObject1339;
var _templateObject1345;
var _templateObject1355;
var _templateObject1365;
var _templateObject1375;
var _templateObject1385;
var _templateObject1395;
var _templateObject1405;
var _templateObject14113;
var _templateObject14212;
var _templateObject1437;
var _templateObject1445;
var _templateObject1455;
var _templateObject1465;
var _templateObject1475;
var _templateObject1485;
var _templateObject1495;
var _templateObject1505;
var _templateObject15113;
var _templateObject15211;
var _templateObject1535;
var _templateObject1545;
var _templateObject1555;
var _templateObject1565;
var _templateObject1575;
var _templateObject1585;
var _templateObject1595;
var _templateObject1605;
var _templateObject16113;
var _templateObject16211;
var _templateObject1635;
var _templateObject1645;
var _templateObject1655;
var _templateObject1665;
var _templateObject1674;
var _templateObject1684;
var _templateObject1694;
var _templateObject1704;
var _templateObject17112;
var _templateObject17210;
var _templateObject1734;
var _templateObject1744;
var _templateObject1754;
var _templateObject1764;
var _templateObject1774;
var _templateObject1784;
var _templateObject1794;
var _templateObject1804;
var _templateObject18112;
var _templateObject18210;
var _templateObject1834;
var _templateObject1844;
var _templateObject1854;
var _templateObject1864;
var _templateObject1874;
var _templateObject1884;
var _templateObject1894;
var _templateObject1904;
var _templateObject19112;
var _templateObject19210;
var _templateObject1934;
var _templateObject1944;
var _templateObject1954;
var _templateObject1964;
var _templateObject1974;
var _templateObject1984;
var _templateObject1994;
var _templateObject2004;
var _templateObject20112;
var _templateObject20210;
var _templateObject2034;
var _templateObject2044;
var _templateObject2054;
var _templateObject2064;
var _templateObject2074;
var _templateObject2084;
var _templateObject2094;
var _templateObject21012;
var _templateObject21112;
var _templateObject21212;
var _templateObject21312;
var _templateObject21411;
var _templateObject21511;
var _templateObject21610;
var _templateObject2174;
function _createForOfIteratorHelper30(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray55(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray55(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray55(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray55(o, minLen);
}
function _arrayLikeToArray55(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral91(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function getTracker(source) {
  if ("tracker" in source) return source.tracker;
  return source.do;
}
var banishSources2 = [{
  name: "Bowl Curveball",
  available: function() {
    return have($item(_templateObject700 || (_templateObject700 = _taggedTemplateLiteral91(["cosmic bowling ball"])))) || get("cosmicBowlingBallReturnCombats") === 0;
  },
  do: $skill(_templateObject2168 || (_templateObject2168 = _taggedTemplateLiteral91(["Bowl a Curveball"])))
}, {
  name: "Asdon Martin",
  available: function() {
    if (args.debug.lastasdonbumperturn && (0, import_kolmafia103.myTurncount)() - args.debug.lastasdonbumperturn > 30) return false;
    if (!asdonFualable(50)) return false;
    var banishes = get("banishedMonsters").split(":");
    var bumperIndex = banishes.map(function(string) {
      return string.toLowerCase();
    }).indexOf("spring-loaded front bumper");
    if (bumperIndex === -1) return true;
    return (0, import_kolmafia103.myTurncount)() - parseInt(banishes[bumperIndex + 1]) > 30;
  },
  prepare: function() {
    return asdonFillTo(50);
  },
  do: $skill(_templateObject3154 || (_templateObject3154 = _taggedTemplateLiteral91(["Asdon Martin: Spring-Loaded Front Bumper"])))
}, {
  name: "Spring Shoes Kick Away",
  available: function() {
    return have($item(_templateObject4133 || (_templateObject4133 = _taggedTemplateLiteral91(["spring shoes"])))) && !have($effect(_templateObject5105 || (_templateObject5105 = _taggedTemplateLiteral91(["Everything Looks Green"]))));
  },
  equip: $item(_templateObject6100 || (_templateObject6100 = _taggedTemplateLiteral91(["spring shoes"]))),
  do: Macro.skill($skill(_templateObject769 || (_templateObject769 = _taggedTemplateLiteral91(["Spring Kick"])))).skill($skill(_templateObject861 || (_templateObject861 = _taggedTemplateLiteral91(["Spring Away"])))),
  tracker: $skill(_templateObject951 || (_templateObject951 = _taggedTemplateLiteral91(["Spring Kick"])))
}, {
  name: "Feel Hatred",
  available: function() {
    return get("_feelHatredUsed") < 3 && have($skill(_templateObject1045 || (_templateObject1045 = _taggedTemplateLiteral91(["Emotionally Chipped"]))));
  },
  do: $skill(_templateObject1140 || (_templateObject1140 = _taggedTemplateLiteral91(["Feel Hatred"])))
}, {
  name: "Latte",
  available: function() {
    return (!get("_latteBanishUsed") || get("_latteRefillsUsed") < 2 && (0, import_kolmafia103.myTurncount)() < 1e3) && // Save one refill for aftercore
    have($item(_templateObject1240 || (_templateObject1240 = _taggedTemplateLiteral91(["latte lovers member's mug"]))));
  },
  prepare: refillLatte,
  do: $skill(_templateObject1338 || (_templateObject1338 = _taggedTemplateLiteral91(["Throw Latte on Opponent"]))),
  equip: $item(_templateObject1436 || (_templateObject1436 = _taggedTemplateLiteral91(["latte lovers member's mug"])))
}, {
  name: "Reflex Hammer",
  available: function() {
    return get("_reflexHammerUsed") < 3 && have($item(_templateObject1531 || (_templateObject1531 = _taggedTemplateLiteral91(["Lil' Doctor\u2122 bag"]))));
  },
  do: $skill(_templateObject1631 || (_templateObject1631 = _taggedTemplateLiteral91(["Reflex Hammer"]))),
  equip: $item(_templateObject1731 || (_templateObject1731 = _taggedTemplateLiteral91(["Lil' Doctor\u2122 bag"])))
}, {
  name: "Snokebomb",
  available: function() {
    return get("_snokebombUsed") < 3 && have($skill(_templateObject1831 || (_templateObject1831 = _taggedTemplateLiteral91(["Snokebomb"]))));
  },
  prepare: function() {
    if ((0, import_kolmafia103.myMp)() < 50 && (0, import_kolmafia103.myMaxmp)() >= 50) customRestoreMp(50);
  },
  do: $skill(_templateObject1929 || (_templateObject1929 = _taggedTemplateLiteral91(["Snokebomb"]))),
  equip: [
    // for MP
    {
      equip: $items(_templateObject2029 || (_templateObject2029 = _taggedTemplateLiteral91(["sea salt scrubs"])))
    },
    {
      equip: $items(_templateObject2169 || (_templateObject2169 = _taggedTemplateLiteral91(["hopping socks"])))
    }
  ]
}, {
  name: "KGB dart",
  available: function() {
    return get("_kgbTranquilizerDartUses") < 3 && have($item(_templateObject2231 || (_templateObject2231 = _taggedTemplateLiteral91(["Kremlin's Greatest Briefcase"]))));
  },
  do: $skill(_templateObject2329 || (_templateObject2329 = _taggedTemplateLiteral91(["KGB tranquilizer dart"]))),
  equip: $item(_templateObject2428 || (_templateObject2428 = _taggedTemplateLiteral91(["Kremlin's Greatest Briefcase"])))
}, {
  name: "Middle Finger",
  available: function() {
    return !get("_mafiaMiddleFingerRingUsed") && have($item(_templateObject2527 || (_templateObject2527 = _taggedTemplateLiteral91(["mafia middle finger ring"]))));
  },
  do: $skill(_templateObject2626 || (_templateObject2626 = _taggedTemplateLiteral91(["Show them your ring"]))),
  equip: $item(_templateObject2726 || (_templateObject2726 = _taggedTemplateLiteral91(["mafia middle finger ring"])))
}, {
  name: "Monkey Paw",
  available: function() {
    return have($item(_templateObject2824 || (_templateObject2824 = _taggedTemplateLiteral91(["cursed monkey's paw"])))) && get("_monkeyPawWishesUsed", 0) === 0;
  },
  equip: $item(_templateObject2924 || (_templateObject2924 = _taggedTemplateLiteral91(["cursed monkey's paw"]))),
  do: $skill(_templateObject3024 || (_templateObject3024 = _taggedTemplateLiteral91(["Monkey Slap"])))
}, {
  name: "Spring Shoes Kick",
  available: function() {
    return have($item(_templateObject3155 || (_templateObject3155 = _taggedTemplateLiteral91(["spring shoes"]))));
  },
  equip: $item(_templateObject3226 || (_templateObject3226 = _taggedTemplateLiteral91(["spring shoes"]))),
  do: Macro.skill($skill(_templateObject3325 || (_templateObject3325 = _taggedTemplateLiteral91(["Spring Kick"])))).step(killMacro()),
  tracker: $skill(_templateObject3423 || (_templateObject3423 = _taggedTemplateLiteral91(["Spring Kick"])))
}, {
  name: "Batter Up",
  available: function() {
    return have($skill(_templateObject3521 || (_templateObject3521 = _taggedTemplateLiteral91(["Batter Up!"])))) && (0, import_kolmafia103.myClass)() === $class(_templateObject3621 || (_templateObject3621 = _taggedTemplateLiteral91(["Seal Clubber"]))) && (0, import_kolmafia103.myFury)() >= 5;
  },
  do: $skill(_templateObject3721 || (_templateObject3721 = _taggedTemplateLiteral91(["Batter Up!"]))),
  equip: {
    weapon: $item(_templateObject3821 || (_templateObject3821 = _taggedTemplateLiteral91(["seal-clubbing club"])))
  }
}];
function unusedBanishes(banishState, tasks) {
  var used_banishes = /* @__PURE__ */ new Set();
  var _iterator = _createForOfIteratorHelper30(tasks), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _task$ignore_banishes;
      var task = _step.value;
      if (task.combat === void 0) continue;
      if ((_task$ignore_banishes = task.ignore_banishes) !== null && _task$ignore_banishes !== void 0 && _task$ignore_banishes.call(task)) continue;
      var _iterator2 = _createForOfIteratorHelper30(task.combat.where("banish")), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var monster = _step2.value;
          var banished_with = banishState.already_banished.get(monster);
          if (banished_with !== void 0) used_banishes.add(banished_with);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return banishSources2.filter(function(banish) {
    return banish.available() && !used_banishes.has(getTracker(banish));
  });
}
var wandererSources = [{
  name: "VHS Tape",
  available: function() {
    return counter_exports.get("Spooky VHS Tape Monster") <= 0;
  },
  equip: [{}],
  monsters: function() {
    var _get3;
    return [(_get3 = get("spookyVHSTapeMonster")) !== null && _get3 !== void 0 ? _get3 : $monster(_templateObject3920 || (_templateObject3920 = _taggedTemplateLiteral91(["none"])))];
  },
  chance: function() {
    return 1;
  },
  possible: function() {
    return counter_exports.get("Spooky VHS Tape Monster") <= 0;
  }
}, {
  name: "Digitize",
  available: function() {
    return SourceTerminal_exports.have() && counter_exports.get("Digitize Monster") <= 0;
  },
  equip: [{
    equip: $items(_templateObject4020 || (_templateObject4020 = _taggedTemplateLiteral91(["Space Trip safety headphones"])))
  }, {
    equip: $items(_templateObject4134 || (_templateObject4134 = _taggedTemplateLiteral91(["unwrapped knock-off retro superhero cape"]))),
    modes: {
      retrocape: ["heck", "hold"]
    }
  }, {}],
  monsters: function() {
    var _get22;
    return [(_get22 = get("_sourceTerminalDigitizeMonster")) !== null && _get22 !== void 0 ? _get22 : $monster(_templateObject4222 || (_templateObject4222 = _taggedTemplateLiteral91(["none"])))];
  },
  chance: function() {
    return 1;
  },
  action: function() {
    if ((0, import_kolmafia103.familiarWeight)($familiar(_templateObject4321 || (_templateObject4321 = _taggedTemplateLiteral91(["Grey Goose"])))) <= 10 && get("_sourceTerminalDigitizeMonster") === $monster(_templateObject4420 || (_templateObject4420 = _taggedTemplateLiteral91(["sausage goblin"])))) return new Macro().trySkill($skill(_templateObject4520 || (_templateObject4520 = _taggedTemplateLiteral91(["Emit Matter Duplicating Drones"]))));
    else return new Macro();
  },
  possible: function() {
    return SourceTerminal_exports.have() && counter_exports.get("Digitize Monster") <= 5;
  }
}, {
  name: "Voted",
  available: function() {
    return have($item(_templateObject4620 || (_templateObject4620 = _taggedTemplateLiteral91(['"I Voted!" sticker'])))) && (0, import_kolmafia103.totalTurnsPlayed)() % 11 === 1 && get("lastVoteMonsterTurn") < (0, import_kolmafia103.totalTurnsPlayed)() && get("_voteFreeFights") < 3 && atLevel(5);
  },
  equip: $item(_templateObject4720 || (_templateObject4720 = _taggedTemplateLiteral91(['"I Voted!" sticker']))),
  monsters: [$monster(_templateObject4820 || (_templateObject4820 = _taggedTemplateLiteral91(["government bureaucrat"]))), $monster(_templateObject4920 || (_templateObject4920 = _taggedTemplateLiteral91(["terrible mutant"]))), $monster(_templateObject5020 || (_templateObject5020 = _taggedTemplateLiteral91(["angry ghost"]))), $monster(_templateObject5121 || (_templateObject5121 = _taggedTemplateLiteral91(["annoyed snake"]))), $monster(_templateObject5221 || (_templateObject5221 = _taggedTemplateLiteral91(["slime blob"])))],
  chance: function() {
    return 1;
  },
  // when available
  possible: function() {
    return (0, import_kolmafia103.haveEquipped)($item(_templateObject5320 || (_templateObject5320 = _taggedTemplateLiteral91(['"I Voted!" sticker']))));
  }
}, {
  name: "Cursed Magnifying Glass",
  available: function() {
    return have($item(_templateObject5420 || (_templateObject5420 = _taggedTemplateLiteral91(["cursed magnifying glass"])))) && get("_voidFreeFights") < 5 && get("cursedMagnifyingGlassCount") >= 13;
  },
  equip: $item(_templateObject5519 || (_templateObject5519 = _taggedTemplateLiteral91(["cursed magnifying glass"]))),
  monsters: [$monster(_templateObject5618 || (_templateObject5618 = _taggedTemplateLiteral91(["void guy"]))), $monster(_templateObject5718 || (_templateObject5718 = _taggedTemplateLiteral91(["void slab"]))), $monster(_templateObject5817 || (_templateObject5817 = _taggedTemplateLiteral91(["void spider"])))],
  chance: function() {
    return 1;
  },
  // when available
  possible: function() {
    return (0, import_kolmafia103.haveEquipped)($item(_templateObject5915 || (_templateObject5915 = _taggedTemplateLiteral91(["cursed magnifying glass"]))));
  }
}, {
  name: "Goth",
  available: function() {
    return have($familiar(_templateObject6013 || (_templateObject6013 = _taggedTemplateLiteral91(["Artistic Goth Kid"])))) && get("_hipsterAdv") < 7;
  },
  equip: $familiar(_templateObject6119 || (_templateObject6119 = _taggedTemplateLiteral91(["Artistic Goth Kid"]))),
  monsters: [$monster(_templateObject6218 || (_templateObject6218 = _taggedTemplateLiteral91(["Black Crayon Beast"]))), $monster(_templateObject6318 || (_templateObject6318 = _taggedTemplateLiteral91(["Black Crayon Beetle"]))), $monster(_templateObject6418 || (_templateObject6418 = _taggedTemplateLiteral91(["Black Crayon Constellation"]))), $monster(_templateObject6517 || (_templateObject6517 = _taggedTemplateLiteral91(["Black Crayon Golem"]))), $monster(_templateObject6614 || (_templateObject6614 = _taggedTemplateLiteral91(["Black Crayon Demon"]))), $monster(_templateObject6711 || (_templateObject6711 = _taggedTemplateLiteral91(["Black Crayon Man"]))), $monster(_templateObject6811 || (_templateObject6811 = _taggedTemplateLiteral91(["Black Crayon Elemental"]))), $monster(_templateObject6911 || (_templateObject6911 = _taggedTemplateLiteral91(["Black Crayon Crimbo Elf"]))), $monster(_templateObject7011 || (_templateObject7011 = _taggedTemplateLiteral91(["Black Crayon Fish"]))), $monster(_templateObject7116 || (_templateObject7116 = _taggedTemplateLiteral91(["Black Crayon Goblin"]))), $monster(_templateObject7216 || (_templateObject7216 = _taggedTemplateLiteral91(["Black Crayon Hippy"]))), $monster(_templateObject7315 || (_templateObject7315 = _taggedTemplateLiteral91(["Black Crayon Hobo"]))), $monster(_templateObject7415 || (_templateObject7415 = _taggedTemplateLiteral91(["Black Crayon Shambling Monstrosity"]))), $monster(_templateObject7513 || (_templateObject7513 = _taggedTemplateLiteral91(["Black Crayon Manloid"]))), $monster(_templateObject7610 || (_templateObject7610 = _taggedTemplateLiteral91(["Black Crayon Mer-kin"]))), $monster(_templateObject778 || (_templateObject778 = _taggedTemplateLiteral91(["Black Crayon Frat Orc"]))), $monster(_templateObject788 || (_templateObject788 = _taggedTemplateLiteral91(["Black Crayon Penguin"]))), $monster(_templateObject797 || (_templateObject797 = _taggedTemplateLiteral91(["Black Crayon Pirate"]))), $monster(_templateObject807 || (_templateObject807 = _taggedTemplateLiteral91(["Black Crayon Flower"]))), $monster(_templateObject8114 || (_templateObject8114 = _taggedTemplateLiteral91(["Black Crayon Slime"]))), $monster(_templateObject8214 || (_templateObject8214 = _taggedTemplateLiteral91(["Black Crayon Undead Thing"]))), $monster(_templateObject8314 || (_templateObject8314 = _taggedTemplateLiteral91(["Black Crayon Spiraling Shape"])))],
  chance: function() {
    return [0.5, 0.4, 0.3, 0.2, 0.1, 0.1, 0.1, 0][get("_hipsterAdv")];
  },
  possible: function() {
    return (0, import_kolmafia103.myFamiliar)() === $familiar(_templateObject8413 || (_templateObject8413 = _taggedTemplateLiteral91(["Artistic Goth Kid"])));
  }
}, {
  name: "Hipster",
  available: function() {
    return have($familiar(_templateObject8510 || (_templateObject8510 = _taggedTemplateLiteral91(["Mini-Hipster"])))) && get("_hipsterAdv") < 7;
  },
  equip: $familiar(_templateObject867 || (_templateObject867 = _taggedTemplateLiteral91(["Mini-Hipster"]))),
  monsters: [$monster(_templateObject877 || (_templateObject877 = _taggedTemplateLiteral91(["angry bassist"]))), $monster(_templateObject887 || (_templateObject887 = _taggedTemplateLiteral91(["blue-haired girl"]))), $monster(_templateObject896 || (_templateObject896 = _taggedTemplateLiteral91(["evil ex-girlfriend"]))), $monster(_templateObject906 || (_templateObject906 = _taggedTemplateLiteral91(["peeved roommate"]))), $monster(_templateObject9114 || (_templateObject9114 = _taggedTemplateLiteral91(["random scenester"])))],
  chance: function() {
    return [0.5, 0.4, 0.3, 0.2, 0.1, 0.1, 0.1, 0][get("_hipsterAdv")];
  },
  possible: function() {
    return (0, import_kolmafia103.myFamiliar)() === $familiar(_templateObject9214 || (_templateObject9214 = _taggedTemplateLiteral91(["Mini-Hipster"])));
  }
}, {
  name: "Kramco",
  available: function() {
    return have($item(_templateObject9313 || (_templateObject9313 = _taggedTemplateLiteral91(["Kramco Sausage-o-Matic\u2122"])))) && atLevel(2);
  },
  equip: [{
    equip: $items(_templateObject9410 || (_templateObject9410 = _taggedTemplateLiteral91(["Kramco Sausage-o-Matic\u2122, Space Trip safety headphones"])))
  }, {
    equip: $items(_templateObject957 || (_templateObject957 = _taggedTemplateLiteral91(["Kramco Sausage-o-Matic\u2122, unwrapped knock-off retro superhero cape"]))),
    modes: {
      retrocape: ["heck", "hold"]
    }
  }, {
    equip: $items(_templateObject967 || (_templateObject967 = _taggedTemplateLiteral91(["Kramco Sausage-o-Matic\u2122"])))
  }],
  prepare: function() {
    if (SourceTerminal_exports.have() && SourceTerminal_exports.getDigitizeUses() === 0) {
      SourceTerminal_exports.prepareDigitize();
    }
  },
  monsters: [$monster(_templateObject977 || (_templateObject977 = _taggedTemplateLiteral91(["sausage goblin"])))],
  chance: function() {
    return getKramcoWandererChance();
  },
  action: function() {
    var result = new Macro();
    if (SourceTerminal_exports.have() && SourceTerminal_exports.getDigitizeUses() === 0) result.trySkill($skill(_templateObject987 || (_templateObject987 = _taggedTemplateLiteral91(["Digitize"]))));
    if ((0, import_kolmafia103.familiarWeight)($familiar(_templateObject995 || (_templateObject995 = _taggedTemplateLiteral91(["Grey Goose"])))) <= 10 && (0, import_kolmafia103.haveEquipped)($item(_templateObject1005 || (_templateObject1005 = _taggedTemplateLiteral91(["Space Trip safety headphones"]))))) result.trySkill($skill(_templateObject10113 || (_templateObject10113 = _taggedTemplateLiteral91(["Emit Matter Duplicating Drones"]))));
    return result;
  },
  possible: function() {
    return (0, import_kolmafia103.haveEquipped)($item(_templateObject10213 || (_templateObject10213 = _taggedTemplateLiteral91(["Kramco Sausage-o-Matic\u2122"]))));
  }
}];
function canChargeVoid() {
  return get("_voidFreeFights") < 5 && get("cursedMagnifyingGlassCount") < 13;
}
var runawayValue = have($item(_templateObject10311 || (_templateObject10311 = _taggedTemplateLiteral91(["Greatest American Pants"])))) || have($item(_templateObject1046 || (_templateObject1046 = _taggedTemplateLiteral91(["navel ring of navel gazing"])))) ? 0.8 * get("valueOfAdventure") : get("valueOfAdventure");
function commaItemFinder() {
  var commaItem = $items(_templateObject1055 || (_templateObject1055 = _taggedTemplateLiteral91(["aquaviolet jub-jub bird, charpuce jub-jub bird, crimsilion jub-jub bird, stomp box"]))).find(function(f) {
    return have(f);
  });
  return commaItem;
}
function getRunawaySources(location) {
  var runawayFamiliarPlan = planRunawayFamiliar();
  return [{
    name: "Latte (Refill)",
    available: function() {
      return (!get("_latteBanishUsed") || get("_latteRefillsUsed") < 2) && // Save one refill for aftercore
      have($item(_templateObject1065 || (_templateObject1065 = _taggedTemplateLiteral91(["latte lovers member's mug"])))) && shouldFinishLatte();
    },
    prepare: refillLatte,
    do: new Macro().skill($skill(_templateObject1075 || (_templateObject1075 = _taggedTemplateLiteral91(["Throw Latte on Opponent"])))),
    chance: function() {
      return 1;
    },
    equip: $item(_templateObject1085 || (_templateObject1085 = _taggedTemplateLiteral91(["latte lovers member's mug"]))),
    banishes: true
  }, {
    name: "Bowl Curveball",
    available: function() {
      return have($item(_templateObject1095 || (_templateObject1095 = _taggedTemplateLiteral91(["cosmic bowling ball"])))) || get("cosmicBowlingBallReturnCombats") === 0;
    },
    do: new Macro().skill($skill(_templateObject1105 || (_templateObject1105 = _taggedTemplateLiteral91(["Bowl a Curveball"])))),
    chance: function() {
      return 1;
    },
    banishes: true
  }, {
    name: "Spring Shoes",
    available: function() {
      return have($item(_templateObject11113 || (_templateObject11113 = _taggedTemplateLiteral91(["spring shoes"])))) && !have($effect(_templateObject11213 || (_templateObject11213 = _taggedTemplateLiteral91(["Everything Looks Green"]))));
    },
    do: new Macro().skill($skill(_templateObject11310 || (_templateObject11310 = _taggedTemplateLiteral91(["Spring Away"])))),
    chance: function() {
      return 1;
    },
    equip: $item(_templateObject1145 || (_templateObject1145 = _taggedTemplateLiteral91(["spring shoes"]))),
    banishes: false
  }, {
    name: "Bandersnatch",
    available: function() {
      return runawayFamiliarPlan.available && runawayFamiliarPlan.outfit.familiar === $familiar(_templateObject1155 || (_templateObject1155 = _taggedTemplateLiteral91(["Frumious Bandersnatch"])));
    },
    equip: runawayFamiliarPlan.outfit,
    do: new Macro().runaway(),
    chance: function() {
      return 1;
    },
    effect: $effect(_templateObject1165 || (_templateObject1165 = _taggedTemplateLiteral91(["Ode to Booze"]))),
    banishes: false
  }, {
    name: "Stomping Boots",
    available: function() {
      return runawayFamiliarPlan.available && runawayFamiliarPlan.outfit.familiar === $familiar(_templateObject1175 || (_templateObject1175 = _taggedTemplateLiteral91(["Pair of Stomping Boots"])));
    },
    equip: runawayFamiliarPlan.outfit,
    do: new Macro().runaway(),
    chance: function() {
      return 1;
    },
    banishes: false
  }, {
    name: "Comma Chameleon",
    prepare: function() {
      var commaItem = commaItemFinder();
      if (commaItem !== void 0 && get("commaFamiliar") === null) {
        (0, import_kolmafia103.useFamiliar)($familiar(_templateObject1185 || (_templateObject1185 = _taggedTemplateLiteral91(["Comma Chameleon"]))));
        (0, import_kolmafia103.visitUrl)("inv_equip.php?which=2&action=equip&whichitem=".concat((0, import_kolmafia103.toInt)(commaItem), "&pwd"));
      }
    },
    available: function() {
      var commaItem = commaItemFinder();
      if (runawayFamiliarPlan.available && runawayFamiliarPlan.outfit.familiar === $familiar(_templateObject1195 || (_templateObject1195 = _taggedTemplateLiteral91(["Comma Chameleon"]))) && (get("commaFamiliar") === $familiar(_templateObject1205 || (_templateObject1205 = _taggedTemplateLiteral91(["Frumious Bandersnatch"]))) || get("commaFamiliar") === $familiar(_templateObject12113 || (_templateObject12113 = _taggedTemplateLiteral91(["Pair of Stomping Boots"]))) || commaItem !== void 0 && have(commaItem))) return true;
      return false;
    },
    equip: runawayFamiliarPlan.outfit,
    do: new Macro().runaway(),
    chance: function() {
      return 1;
    },
    effect: $effect(_templateObject12212 || (_templateObject12212 = _taggedTemplateLiteral91(["Ode to Booze"]))),
    banishes: false
  }, {
    name: "Asdon Martin",
    available: function() {
      if (!asdonFualable(50)) return false;
      if (location === $location(_templateObject12310 || (_templateObject12310 = _taggedTemplateLiteral91(["The Boss Bat's Lair"])))) return false;
      var banishes = get("banishedMonsters").split(":");
      var bumperIndex = banishes.map(function(string) {
        return string.toLowerCase();
      }).indexOf("spring-loaded front bumper");
      if (bumperIndex === -1) return true;
      return (0, import_kolmafia103.myTurncount)() - parseInt(banishes[bumperIndex + 1]) > 30;
    },
    prepare: function() {
      return asdonFillTo(50);
    },
    do: new Macro().skill($skill(_templateObject1245 || (_templateObject1245 = _taggedTemplateLiteral91(["Asdon Martin: Spring-Loaded Front Bumper"])))),
    chance: function() {
      return 1;
    },
    banishes: true
  }, {
    name: "GAP",
    available: function() {
      return have($item(_templateObject1255 || (_templateObject1255 = _taggedTemplateLiteral91(["Greatest American Pants"]))));
    },
    equip: $item(_templateObject1265 || (_templateObject1265 = _taggedTemplateLiteral91(["Greatest American Pants"]))),
    do: new Macro().runaway(),
    chance: function() {
      return get("_navelRunaways") < 3 ? 1 : 0.2;
    },
    banishes: false
  }, {
    name: "Navel Ring",
    available: function() {
      return have($item(_templateObject1275 || (_templateObject1275 = _taggedTemplateLiteral91(["navel ring of navel gazing"]))));
    },
    equip: $item(_templateObject1285 || (_templateObject1285 = _taggedTemplateLiteral91(["navel ring of navel gazing"]))),
    do: new Macro().runaway(),
    chance: function() {
      return get("_navelRunaways") < 3 ? 1 : 0.2;
    },
    banishes: false
  }, {
    name: "Peppermint Parasol",
    available: function() {
      return have($item(_templateObject1295 || (_templateObject1295 = _taggedTemplateLiteral91(["peppermint parasol"])))) && get("_navelRunaways") < 9;
    },
    do: new Macro().item($item(_templateObject1305 || (_templateObject1305 = _taggedTemplateLiteral91(["peppermint parasol"])))),
    chance: function() {
      return get("_navelRunaways") < 3 ? 1 : 0.2;
    },
    banishes: false
  }];
}
var famweightOptions = [
  // Fam equip
  {
    thing: $item(_templateObject13113 || (_templateObject13113 = _taggedTemplateLiteral91(["amulet coin"])))
  },
  {
    thing: $item(_templateObject13212 || (_templateObject13212 = _taggedTemplateLiteral91(["astral pet sweater"])))
  },
  {
    thing: $item(_templateObject1339 || (_templateObject1339 = _taggedTemplateLiteral91(["tiny stillsuit"])))
  },
  // Hats
  {
    thing: $item(_templateObject1345 || (_templateObject1345 = _taggedTemplateLiteral91(["Daylight Shavings Helmet"])))
  },
  // Hands
  {
    thing: $item(_templateObject1355 || (_templateObject1355 = _taggedTemplateLiteral91(["Fourth of May Cosplay Saber"])))
  },
  {
    thing: $item(_templateObject1365 || (_templateObject1365 = _taggedTemplateLiteral91(["iFlail"])))
  },
  {
    thing: $item(_templateObject1375 || (_templateObject1375 = _taggedTemplateLiteral91(["familiar scrapbook"])))
  },
  // Accessories
  {
    thing: $item(_templateObject1385 || (_templateObject1385 = _taggedTemplateLiteral91(["Brutal brogues"])))
  },
  {
    thing: $item(_templateObject1395 || (_templateObject1395 = _taggedTemplateLiteral91(["hewn moon-rune spoon"])))
  },
  {
    thing: $item(_templateObject1405 || (_templateObject1405 = _taggedTemplateLiteral91(["Beach Comb"])))
  }
];
function planRunawayFamiliar() {
  var bestFamiliar2 = $familiars(_templateObject14113 || (_templateObject14113 = _taggedTemplateLiteral91(["Frumious Bandersnatch, Pair of Stomping Boots"]))).find(function(f) {
    return have(f);
  });
  var altFamiliar = have($familiar(_templateObject14212 || (_templateObject14212 = _taggedTemplateLiteral91(["Comma Chameleon"])))) && ((0, import_kolmafia103.getProperty)("commaFamiliar") === "Frumious Bandersnatch" || (0, import_kolmafia103.getProperty)("commaFamiliar") === "Pair of Stomping Boots" || (0, import_kolmafia103.getProperty)("_commaRunDone"));
  var chosenFamiliar = bestFamiliar2 !== null && bestFamiliar2 !== void 0 ? bestFamiliar2 : altFamiliar === true ? $familiar(_templateObject1437 || (_templateObject1437 = _taggedTemplateLiteral91(["Comma Chameleon"]))) : false;
  if (chosenFamiliar) {
    var goalWeight = 5 * (1 + get("_banderRunaways"));
    var attainableWeight = (0, import_kolmafia103.familiarWeight)(chosenFamiliar);
    if (have($skill(_templateObject1445 || (_templateObject1445 = _taggedTemplateLiteral91(["Crimbo Training: Concierge"]))))) attainableWeight += 1;
    if (have($skill(_templateObject1455 || (_templateObject1455 = _taggedTemplateLiteral91(["Amphibian Sympathy"]))))) attainableWeight += 5;
    if ((0, import_kolmafia103.mySign)() === "Platypus") attainableWeight += 5;
    var _iterator3 = _createForOfIteratorHelper30(getActiveEffects()), _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
        var effect2 = _step3.value;
        attainableWeight += (0, import_kolmafia103.numericModifier)(effect2, "Familiar Weight");
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    var outfit2 = new Outfit();
    outfit2.equip(chosenFamiliar);
    var _iterator4 = _createForOfIteratorHelper30(famweightOptions), _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
        var option = _step4.value;
        if (attainableWeight >= goalWeight) break;
        if (outfit2.equip(option.thing)) {
          attainableWeight += (0, import_kolmafia103.numericModifier)(option.thing, "Familiar Weight");
        }
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
    return {
      outfit: outfit2.spec(),
      available: attainableWeight >= goalWeight
    };
  }
  return {
    available: false,
    outfit: {}
  };
}
var freekillSources = [{
  name: "Lil' Doctor\u2122 bag",
  available: function() {
    return have($item(_templateObject1465 || (_templateObject1465 = _taggedTemplateLiteral91(["Lil' Doctor\u2122 bag"])))) && get("_chestXRayUsed") < 3;
  },
  do: $skill(_templateObject1475 || (_templateObject1475 = _taggedTemplateLiteral91(["Chest X-Ray"]))),
  equip: $item(_templateObject1485 || (_templateObject1485 = _taggedTemplateLiteral91(["Lil' Doctor\u2122 bag"])))
}, {
  name: "Gingerbread Mob Hit",
  available: function() {
    return have($skill(_templateObject1495 || (_templateObject1495 = _taggedTemplateLiteral91(["Gingerbread Mob Hit"])))) && !get("_gingerbreadMobHitUsed");
  },
  do: $skill(_templateObject1505 || (_templateObject1505 = _taggedTemplateLiteral91(["Gingerbread Mob Hit"])))
}, {
  name: "Shattering Punch",
  available: function() {
    return have($skill(_templateObject15113 || (_templateObject15113 = _taggedTemplateLiteral91(["Shattering Punch"])))) && get("_shatteringPunchUsed") < 3;
  },
  do: $skill(_templateObject15211 || (_templateObject15211 = _taggedTemplateLiteral91(["Shattering Punch"])))
}, {
  name: "Replica bat-oomerang",
  available: function() {
    return have($item(_templateObject1535 || (_templateObject1535 = _taggedTemplateLiteral91(["replica bat-oomerang"])))) && get("_usedReplicaBatoomerang") < 3;
  },
  do: $item(_templateObject1545 || (_templateObject1545 = _taggedTemplateLiteral91(["replica bat-oomerang"])))
}, {
  name: "The Jokester's gun",
  available: function() {
    return have($item(_templateObject1555 || (_templateObject1555 = _taggedTemplateLiteral91(["The Jokester's gun"])))) && !get("_firedJokestersGun");
  },
  do: $skill(_templateObject1565 || (_templateObject1565 = _taggedTemplateLiteral91(["Fire the Jokester's Gun"]))),
  equip: $item(_templateObject1575 || (_templateObject1575 = _taggedTemplateLiteral91(["The Jokester's gun"])))
}, {
  name: "Asdon Martin: Missile Launcher",
  available: function() {
    return asdonFualable(100) && !get("_missileLauncherUsed");
  },
  prepare: function() {
    return asdonFillTo(100);
  },
  do: $skill(_templateObject1585 || (_templateObject1585 = _taggedTemplateLiteral91(["Asdon Martin: Missile Launcher"])))
}, {
  name: "Shadow Brick",
  available: function() {
    return have($item(_templateObject1595 || (_templateObject1595 = _taggedTemplateLiteral91(["shadow brick"])))) && get("_shadowBricksUsed") < 13;
  },
  do: $item(_templateObject1605 || (_templateObject1605 = _taggedTemplateLiteral91(["shadow brick"])))
}, {
  name: "Jurassic Parka",
  available: function() {
    return have($skill(_templateObject16113 || (_templateObject16113 = _taggedTemplateLiteral91(["Torso Awareness"])))) && have($item(_templateObject16211 || (_templateObject16211 = _taggedTemplateLiteral91(["Jurassic Parka"])))) && !have($effect(_templateObject1635 || (_templateObject1635 = _taggedTemplateLiteral91(["Everything Looks Yellow"]))));
  },
  equip: {
    equip: $items(_templateObject1645 || (_templateObject1645 = _taggedTemplateLiteral91(["Jurassic Parka"]))),
    modes: {
      parka: "dilophosaur"
    }
  },
  do: $skill(_templateObject1655 || (_templateObject1655 = _taggedTemplateLiteral91(["Spit jurassic acid"])))
}];
function asdonFillTo(amount2) {
  if ((0, import_kolmafia103.getWorkshed)() !== $item(_templateObject1665 || (_templateObject1665 = _taggedTemplateLiteral91(["Asdon Martin keyfob (on ring)"])))) return false;
  var remaining = amount2 - (0, import_kolmafia103.getFuel)();
  var count = Math.ceil(remaining / 5) + 1;
  if (!have($item(_templateObject1674 || (_templateObject1674 = _taggedTemplateLiteral91(["bugbear bungguard"])))) || !have($item(_templateObject1684 || (_templateObject1684 = _taggedTemplateLiteral91(["bugbear beanie"]))))) {
    if ((0, import_kolmafia103.itemAmount)($item(_templateObject1694 || (_templateObject1694 = _taggedTemplateLiteral91(["wad of dough"])))) < count) {
      (0, import_kolmafia103.buy)($item(_templateObject1704 || (_templateObject1704 = _taggedTemplateLiteral91(["all-purpose flower"]))));
      (0, import_kolmafia103.use)($item(_templateObject17112 || (_templateObject17112 = _taggedTemplateLiteral91(["all-purpose flower"]))));
    }
  }
  (0, import_kolmafia103.retrieveItem)(count, $item(_templateObject17210 || (_templateObject17210 = _taggedTemplateLiteral91(["loaf of soda bread"]))));
  (0, import_kolmafia103.visitUrl)("campground.php?action=fuelconvertor&pwd&qty=".concat(count, "&iid=").concat((0, import_kolmafia103.toInt)($item(_templateObject1734 || (_templateObject1734 = _taggedTemplateLiteral91(["loaf of soda bread"])))), "&go=Convert%21"));
  if ((0, import_kolmafia103.getFuel)() < amount2) {
    throw new Error("Soda bread did not generate enough fuel");
  }
  return true;
}
function asdonFualable(amount2) {
  if (!AsdonMartin_exports.installed()) return false;
  if (!have($item(_templateObject1744 || (_templateObject1744 = _taggedTemplateLiteral91(["forged identification documents"])))) && step("questL11Black") < 4) return false;
  if (amount2 <= (0, import_kolmafia103.getFuel)()) return true;
  if (have($item(_templateObject1754 || (_templateObject1754 = _taggedTemplateLiteral91(["bugbear bungguard"])))) && have($item(_templateObject1764 || (_templateObject1764 = _taggedTemplateLiteral91(["bugbear beanie"]))))) {
    return (0, import_kolmafia103.myMeat)() >= (amount2 - (0, import_kolmafia103.getFuel)()) * 24 + 1e3;
  }
  if ((0, import_kolmafia103.myAscensions)() >= 10 && (have($item(_templateObject1774 || (_templateObject1774 = _taggedTemplateLiteral91(["bitchin' meatcar"])))) || have($item(_templateObject1784 || (_templateObject1784 = _taggedTemplateLiteral91(["Desert Bus pass"])))))) {
    return (0, import_kolmafia103.myMeat)() >= 3e3 + (amount2 - (0, import_kolmafia103.getFuel)()) * 14;
  }
  return false;
}
function shouldFinishLatte() {
  if (!have($item(_templateObject1794 || (_templateObject1794 = _taggedTemplateLiteral91(["latte lovers member's mug"]))))) return false;
  if ((0, import_kolmafia103.myTurncount)() >= 1e3) return false;
  for (var _i = 0, _arr = ["wing", "cajun", "vitamins"]; _i < _arr.length; _i++) {
    var ingredient = _arr[_i];
    if (!get("latteUnlocks").includes(ingredient)) return false;
  }
  return !["Meat Drop: 40", "Combat Rate: 10", "Experience (familiar): 3"].every(function(modifier) {
    return get("latteModifier").includes(modifier);
  });
}
function refillLatte() {
  if (!get("_latteBanishUsed")) return;
  var modifiers = [];
  if (get("latteUnlocks").includes("wing")) modifiers.push("wing");
  if (get("latteUnlocks").includes("cajun")) modifiers.push("cajun");
  if (get("latteUnlocks").includes("vitamins")) modifiers.push("vitamins");
  modifiers.push("cinnamon", "pumpkin", "vanilla");
  (0, import_kolmafia103.cliExecute)("latte refill ".concat(modifiers.slice(0, 3).join(" ")));
}
var yellowRaySources = [{
  name: "Jurassic Parka",
  available: function() {
    return have($skill(_templateObject1804 || (_templateObject1804 = _taggedTemplateLiteral91(["Torso Awareness"])))) && have($item(_templateObject18112 || (_templateObject18112 = _taggedTemplateLiteral91(["Jurassic Parka"]))));
  },
  equip: {
    equip: $items(_templateObject18210 || (_templateObject18210 = _taggedTemplateLiteral91(["Jurassic Parka"]))),
    modes: {
      parka: "dilophosaur"
    }
  },
  do: $skill(_templateObject1834 || (_templateObject1834 = _taggedTemplateLiteral91(["Spit jurassic acid"])))
}, {
  name: "Yellow Rocket",
  available: function() {
    return (0, import_kolmafia103.myMeat)() >= 250 && have($item(_templateObject1844 || (_templateObject1844 = _taggedTemplateLiteral91(["Clan VIP Lounge key"]))));
  },
  prepare: function() {
    return (0, import_kolmafia103.retrieveItem)($item(_templateObject1854 || (_templateObject1854 = _taggedTemplateLiteral91(["yellow rocket"]))));
  },
  do: $item(_templateObject1864 || (_templateObject1864 = _taggedTemplateLiteral91(["yellow rocket"])))
}, {
  name: "Retro Superhero Cape",
  available: function() {
    return have($item(_templateObject1874 || (_templateObject1874 = _taggedTemplateLiteral91(["unwrapped knock-off retro superhero cape"]))));
  },
  equip: {
    equip: $items(_templateObject1884 || (_templateObject1884 = _taggedTemplateLiteral91(["unwrapped knock-off retro superhero cape"]))),
    modes: {
      retrocape: ["heck", "kiss"]
    }
  },
  do: $skill(_templateObject1894 || (_templateObject1894 = _taggedTemplateLiteral91(["Unleash the Devil's Kiss"])))
}];
function yellowRayPossible() {
  if (have($effect(_templateObject1904 || (_templateObject1904 = _taggedTemplateLiteral91(["Everything Looks Yellow"]))))) return false;
  return yellowRaySources.find(function(s) {
    return s.available();
  }) !== void 0;
}
var forceItemSources = [{
  name: "Saber",
  available: function() {
    return have($item(_templateObject19112 || (_templateObject19112 = _taggedTemplateLiteral91(["Fourth of May Cosplay Saber"])))) && get("_saberForceUses") < 5;
  },
  prepare: function() {
    return _set("choiceAdventure1387", 3);
  },
  equip: $item(_templateObject19210 || (_templateObject19210 = _taggedTemplateLiteral91(["Fourth of May Cosplay Saber"]))),
  do: $skill(_templateObject1934 || (_templateObject1934 = _taggedTemplateLiteral91(["Use the Force"])))
}, {
  name: "Envy",
  available: function() {
    return have($skill(_templateObject1944 || (_templateObject1944 = _taggedTemplateLiteral91(["Emotionally Chipped"])))) && get("_feelEnvyUsed") < 3;
  },
  do: Macro.skill($skill(_templateObject1954 || (_templateObject1954 = _taggedTemplateLiteral91(["Feel Envy"])))).step(killMacro())
}];
function forceItemPossible() {
  return yellowRayPossible() || forceItemSources.find(function(s) {
    return s.available();
  }) !== void 0;
}
var forceNCSources = [{
  name: "Parka",
  available: function() {
    return have($skill(_templateObject1964 || (_templateObject1964 = _taggedTemplateLiteral91(["Torso Awareness"])))) && have($item(_templateObject1974 || (_templateObject1974 = _taggedTemplateLiteral91(["Jurassic Parka"])))) && get("_spikolodonSpikeUses") + args.minor.saveparka < 5;
  },
  equip: {
    equip: $items(_templateObject1984 || (_templateObject1984 = _taggedTemplateLiteral91(["Jurassic Parka"]))),
    modes: {
      parka: "spikolodon"
    }
  },
  do: Macro.skill($skill(_templateObject1994 || (_templateObject1994 = _taggedTemplateLiteral91(["Launch spikolodon spikes"]))))
}, {
  name: "McHugeLarge",
  available: function() {
    return have($item(_templateObject2004 || (_templateObject2004 = _taggedTemplateLiteral91(["McHugeLarge left ski"])))) && get("_mcHugeLargeAvalancheUses", 0) < 3;
  },
  equip: [{
    equip: $items(_templateObject20112 || (_templateObject20112 = _taggedTemplateLiteral91(["McHugeLarge left ski, designer sweatpants"])))
  }, {
    equip: $items(_templateObject20210 || (_templateObject20210 = _taggedTemplateLiteral91(["McHugeLarge left ski"])))
  }],
  do: Macro.trySkill($skill(_templateObject2034 || (_templateObject2034 = _taggedTemplateLiteral91(["Summon Love Gnats"])))).externalIf(!get("lovebugsUnlocked"), Macro.trySkill($skill(_templateObject2044 || (_templateObject2044 = _taggedTemplateLiteral91(["Sweat Flood"]))))).skill($skill(_templateObject2054 || (_templateObject2054 = _taggedTemplateLiteral91(["McHugeLarge Avalanche"]))))
}];
function forceNCPossible() {
  return forceNCSources.find(function(s) {
    return s.available();
  }) !== void 0;
}
var tuba = $item(_templateObject2064 || (_templateObject2064 = _taggedTemplateLiteral91(["Apriling band tuba"])));
var noncombatForceNCSources = [{
  available: function() {
    return (AprilingBandHelmet_exports.canJoinSection() || have(tuba)) && tuba.dailyusesleft > 0;
  },
  do: function() {
    return AprilingBandHelmet_exports.play(tuba, true);
  }
}, {
  available: function() {
    return CinchoDeMayo_exports.currentCinch() >= 60;
  },
  do: function() {
    return (0, import_kolmafia103.useSkill)($skill(_templateObject2074 || (_templateObject2074 = _taggedTemplateLiteral91(["Cincho: Fiesta Exit"]))));
  }
}];
function tryForceNC() {
  var _noncombatForceNCSour;
  if (get("noncombatForcerActive")) return true;
  (_noncombatForceNCSour = noncombatForceNCSources.find(function(source) {
    return source.available();
  })) === null || _noncombatForceNCSour === void 0 || _noncombatForceNCSour.do();
  return get("noncombatForcerActive");
}
function tryPlayApriling(modifier) {
  if (!AprilingBandHelmet_exports.have()) return;
  if (modifier.includes("+combat")) {
    AprilingBandHelmet_exports.conduct("Apriling Band Battle Cadence");
  }
  if (modifier.includes("-combat")) {
    AprilingBandHelmet_exports.conduct("Apriling Band Patrol Beat");
  }
  if (modifier.includes("food") || modifier.includes("booze")) {
    AprilingBandHelmet_exports.conduct("Apriling Band Celebration Bop");
  }
}
var backupTargets = [{
  monster: $monster(_templateObject2084 || (_templateObject2084 = _taggedTemplateLiteral91(["Camel's Toe"]))),
  completed: function() {
    return (0, import_kolmafia103.itemAmount)($item(_templateObject2094 || (_templateObject2094 = _taggedTemplateLiteral91(["star"])))) >= 8 && (0, import_kolmafia103.itemAmount)($item(_templateObject21012 || (_templateObject21012 = _taggedTemplateLiteral91(["line"])))) >= 7 || have($item(_templateObject21112 || (_templateObject21112 = _taggedTemplateLiteral91(["Richard's star key"])))) || get("nsTowerDoorKeysUsed").includes("Richard's star key") || args.minor.skipbackups;
  },
  outfit: {
    modifier: "item"
  },
  limit_tries: 3
}, {
  monster: $monster(_templateObject21212 || (_templateObject21212 = _taggedTemplateLiteral91(["mountain man"]))),
  completed: function() {
    return oresNeeded() === 0 || args.minor.skipbackups;
  },
  outfit: {
    modifier: "item"
  },
  limit_tries: 2
}, {
  monster: $monster(_templateObject21312 || (_templateObject21312 = _taggedTemplateLiteral91(["lobsterfrogman"]))),
  completed: function() {
    return (0, import_kolmafia103.itemAmount)($item(_templateObject21411 || (_templateObject21411 = _taggedTemplateLiteral91(["barrel of gunpowder"])))) >= 5 || get("sidequestLighthouseCompleted") !== "none" || !have($item(_templateObject21511 || (_templateObject21511 = _taggedTemplateLiteral91(["backup camera"])))) || AutumnAton_exports.have() || have($item(_templateObject21610 || (_templateObject21610 = _taggedTemplateLiteral91(["Fourth of May Cosplay Saber"])))) && (get("_saberForceUses") < 5 || get("_saberForceMonsterCount") > 0);
  },
  limit_tries: 4
}, {
  monster: $monster(_templateObject2174 || (_templateObject2174 = _taggedTemplateLiteral91(["Eldritch Tentacle"]))),
  completed: function() {
    return args.minor.skipbackups;
  },
  limit_tries: 11
}];
function getActiveBackupTarget() {
  return backupTargets.find(function(target) {
    return !target.completed() && target.monster === get("lastCopyableMonster");
  });
}

// src/engine/moods.ts
var _templateObject701;
var _templateObject2170;
var _templateObject3156;
var _templateObject4135;
var _templateObject5106;
var _templateObject6101;
var _templateObject770;
var _templateObject868;
var _templateObject958;
var _templateObject1047;
var _templateObject1141;
var _templateObject1241;
var _templateObject1340;
var _templateObject1438;
var _templateObject1536;
var _templateObject1636;
var _templateObject1735;
var _templateObject1835;
var _templateObject1930;
var _templateObject2030;
var _templateObject2171;
var _templateObject2234;
var _templateObject2330;
var _templateObject2429;
var _templateObject2528;
var _templateObject2627;
var _templateObject2727;
var _templateObject2825;
var _templateObject2925;
var _templateObject3025;
var _templateObject3157;
var _templateObject3227;
var _templateObject3326;
var _templateObject3424;
var _templateObject3523;
var _templateObject3623;
var _templateObject3723;
var _templateObject3823;
var _templateObject3921;
var _templateObject4021;
var _templateObject4136;
var _templateObject4223;
var _templateObject4322;
var _templateObject4421;
var _templateObject4521;
var _templateObject4621;
var _templateObject4721;
var _templateObject4821;
var _templateObject4921;
var _templateObject5021;
var _templateObject5122;
var _templateObject5222;
var _templateObject5321;
var _templateObject5421;
var _templateObject5520;
var _templateObject5619;
var _templateObject5719;
var _templateObject5818;
var _templateObject5916;
var _templateObject6014;
var _templateObject6120;
var _templateObject6219;
var _templateObject6319;
var _templateObject6419;
var _templateObject6518;
var _templateObject6615;
var _templateObject6712;
var _templateObject6812;
var _templateObject6912;
var _templateObject7012;
var _templateObject7117;
var _templateObject7217;
var _templateObject7316;
var _templateObject7416;
var _templateObject7514;
var _templateObject7611;
function _slicedToArray31(arr, i) {
  return _arrayWithHoles31(arr) || _iterableToArrayLimit31(arr, i) || _unsupportedIterableToArray56(arr, i) || _nonIterableRest31();
}
function _nonIterableRest31() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit31(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles31(arr) {
  if (Array.isArray(arr)) return arr;
}
function _toConsumableArray35(arr) {
  return _arrayWithoutHoles35(arr) || _iterableToArray35(arr) || _unsupportedIterableToArray56(arr) || _nonIterableSpread35();
}
function _nonIterableSpread35() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray35(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles35(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray56(arr);
}
function _createForOfIteratorHelper31(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray56(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray56(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray56(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray56(o, minLen);
}
function _arrayLikeToArray56(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral92(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function getRelevantEffects() {
  var _result$muscle, _result$mysticality, _result$moxie;
  var result = {
    "-combat": $effects(_templateObject701 || (_templateObject701 = _taggedTemplateLiteral92(["Smooth Movements, The Sonata of Sneakiness"]))),
    "+combat": $effects(_templateObject2170 || (_templateObject2170 = _taggedTemplateLiteral92(["Carlweather's Cantata of Confrontation, Musk of the Moose"]))),
    "": (0, import_kolmafia104.myMeat)() > 0 ? $effects(_templateObject3156 || (_templateObject3156 = _taggedTemplateLiteral92(["Empathy, Leash of Linguini, Astral Shell, Elemental Saucesphere"]))) : [],
    "fam weight": $effects(_templateObject4135 || (_templateObject4135 = _taggedTemplateLiteral92(["Chorale of Companionship"]))),
    init: $effects(_templateObject5106 || (_templateObject5106 = _taggedTemplateLiteral92(["Walberg's Dim Bulb, Springy Fusilli, Cletus's Canticle of Celerity, Suspicious Gaze, Song of Slowness"]))),
    ML: $effects(_templateObject6101 || (_templateObject6101 = _taggedTemplateLiteral92(["Ur-Kel's Aria of Annoyance, Pride of the Puffin, Drescher's Annoying Noise"]))),
    item: $effects(_templateObject770 || (_templateObject770 = _taggedTemplateLiteral92(["Fat Leon's Phat Loot Lyric, Singer's Faithful Ocelot"]))),
    meat: $effects(_templateObject868 || (_templateObject868 = _taggedTemplateLiteral92(["Polka of Plenty, Disco Leer"]))),
    muscle: $effects(_templateObject958 || (_templateObject958 = _taggedTemplateLiteral92(["Go Get 'Em, Tiger!, Big, Stevedave's Shanty of Superiority"], ["Go Get 'Em\\, Tiger!, Big, Stevedave's Shanty of Superiority"]))),
    mysticality: $effects(_templateObject1047 || (_templateObject1047 = _taggedTemplateLiteral92(["Glittering Eyelashes, Big, Stevedave's Shanty of Superiority"]))),
    moxie: $effects(_templateObject1141 || (_templateObject1141 = _taggedTemplateLiteral92(["Butt-Rock Hair, Big, Stevedave's Shanty of Superiority"]))),
    " combat": []
  };
  var all_attributes = [];
  if (step("questM20Necklace") === 999) {
    if (have($item(_templateObject1241 || (_templateObject1241 = _taggedTemplateLiteral92(["Clan VIP Lounge key"])))) && !underStandard() && (!get("_olympicSwimmingPool") || have($effect(_templateObject1340 || (_templateObject1340 = _taggedTemplateLiteral92(["Silent Running"])))))) result["-combat"].push($effect(_templateObject1438 || (_templateObject1438 = _taggedTemplateLiteral92(["Silent Running"]))));
    if (have($item(_templateObject1536 || (_templateObject1536 = _taggedTemplateLiteral92(["Clan VIP Lounge key"])))) && (get("_photoBoothEffects", 0) < 3 || have($effect(_templateObject1636 || (_templateObject1636 = _taggedTemplateLiteral92(["Wild and Westy!"])))))) result["-combat"].push($effect(_templateObject1735 || (_templateObject1735 = _taggedTemplateLiteral92(["Wild and Westy!"]))));
    if (have($skill(_templateObject1835 || (_templateObject1835 = _taggedTemplateLiteral92(["Emotionally Chipped"])))) && get("_feelLonelyUsed") < 3) result["-combat"].push($effect(_templateObject1930 || (_templateObject1930 = _taggedTemplateLiteral92(["Feeling Lonely"]))));
  }
  if ((0, import_kolmafia104.myClass)() !== $class(_templateObject2030 || (_templateObject2030 = _taggedTemplateLiteral92(["Pastamancer"])))) {
    result["init"].push($effect(_templateObject2171 || (_templateObject2171 = _taggedTemplateLiteral92(["Whispering Strands"]))));
  }
  if (have($effect(_templateObject2234 || (_templateObject2234 = _taggedTemplateLiteral92(["Feeling Insignificant"])))) || have($effect(_templateObject2330 || (_templateObject2330 = _taggedTemplateLiteral92(["Drenched in Lava"])))) || have($effect(_templateObject2429 || (_templateObject2429 = _taggedTemplateLiteral92(["Snowballed"]))))) {
    var saucePotionsAvailable = Math.min((0, import_kolmafia104.itemAmount)($item(_templateObject2528 || (_templateObject2528 = _taggedTemplateLiteral92(["scrumptious reagent"])))), freeCrafts("food"));
    if ((0, import_kolmafia104.myPrimestat)() === $stat(_templateObject2627 || (_templateObject2627 = _taggedTemplateLiteral92(["Muscle"]))) && have($item(_templateObject2727 || (_templateObject2727 = _taggedTemplateLiteral92(["lime"])))) && saucePotionsAvailable >= 1) {
      result["mysticality"].push($effect(_templateObject2825 || (_templateObject2825 = _taggedTemplateLiteral92(["Stabilizing Oiliness"]))));
      result["moxie"].push($effect(_templateObject2925 || (_templateObject2925 = _taggedTemplateLiteral92(["Stabilizing Oiliness"]))));
    }
    if (saucePotionsAvailable >= 2) {
      result["muscle"].push($effect(_templateObject3025 || (_templateObject3025 = _taggedTemplateLiteral92(["Phorcefullness"]))));
      result["mysticality"].push($effect(_templateObject3157 || (_templateObject3157 = _taggedTemplateLiteral92(["Mystically Oiled"]))));
      result["moxie"].push($effect(_templateObject3227 || (_templateObject3227 = _taggedTemplateLiteral92(["Superhuman Sarcasm"]))));
    }
    if (saucePotionsAvailable >= 3) {
      all_attributes.push($effect(_templateObject3326 || (_templateObject3326 = _taggedTemplateLiteral92(["Tomato Power"]))));
    }
    if (!get("_lyleFavored")) all_attributes.push($effect(_templateObject3424 || (_templateObject3424 = _taggedTemplateLiteral92(["Favored by Lyle"]))));
    if (get("telescopeUpgrades") > 0 && !get("telescopeLookedHigh")) all_attributes.push($effect(_templateObject3523 || (_templateObject3523 = _taggedTemplateLiteral92(["Starry-Eyed"]))));
    if (get("spacegateAlways") && get("spacegateVaccine2") && !get("_spacegateVaccine")) all_attributes.push($effect(_templateObject3623 || (_templateObject3623 = _taggedTemplateLiteral92(["Broad-Spectrum Vaccine"]))));
    if (have($item(_templateObject3723 || (_templateObject3723 = _taggedTemplateLiteral92(["protonic accelerator pack"])))) && !get("_streamsCrossed")) all_attributes.push($effect(_templateObject3823 || (_templateObject3823 = _taggedTemplateLiteral92(["Total Protonic Reversal"]))));
  }
  result[" combat"] = result["+combat"];
  (_result$muscle = result["muscle"]).push.apply(_result$muscle, all_attributes);
  (_result$mysticality = result["mysticality"]).push.apply(_result$mysticality, all_attributes);
  (_result$moxie = result["moxie"]).push.apply(_result$moxie, all_attributes);
  return result;
}
function shrug(effects) {
  var _iterator = _createForOfIteratorHelper31(effects), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var effect2 = _step.value;
      if (have(effect2) && have($item(_templateObject3921 || (_templateObject3921 = _taggedTemplateLiteral92(["soft green echo eyedrop antidote"]))))) uneffect(effect2);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}
function moodCompatible(modifier) {
  if (modifier === void 0) return true;
  if (modifier.includes("+combat") || modifier.includes(" combat")) {
    return !have($effect(_templateObject4021 || (_templateObject4021 = _taggedTemplateLiteral92(["Smooth Movements"])))) && !have($effect(_templateObject4136 || (_templateObject4136 = _taggedTemplateLiteral92(["The Sonata of Sneakiness"]))));
  }
  if (modifier.includes("-combat")) {
    return !have($effect(_templateObject4223 || (_templateObject4223 = _taggedTemplateLiteral92(["Musk of the Moose"])))) && !have($effect(_templateObject4322 || (_templateObject4322 = _taggedTemplateLiteral92(["Carlweather's Cantata of Confrontation"])))) && !have($effect(_templateObject4421 || (_templateObject4421 = _taggedTemplateLiteral92(["Romantically Roused"])))) && !have($effect(_templateObject4521 || (_templateObject4521 = _taggedTemplateLiteral92(["Fresh Breath"]))));
  }
  return true;
}
function haveEquipmentToCast(effect2) {
  var skill = (0, import_kolmafia104.toSkill)(effect2);
  if (skill === $skill(_templateObject4621 || (_templateObject4621 = _taggedTemplateLiteral92(["none"])))) return true;
  if (skill.class === $class(_templateObject4721 || (_templateObject4721 = _taggedTemplateLiteral92(["Turtle Tamer"])))) return have($item(_templateObject4821 || (_templateObject4821 = _taggedTemplateLiteral92(["turtle totem"]))));
  if (skill.class === $class(_templateObject4921 || (_templateObject4921 = _taggedTemplateLiteral92(["Sauceror"])))) return have($item(_templateObject5021 || (_templateObject5021 = _taggedTemplateLiteral92(["saucepan"]))));
  if (skill.class === $class(_templateObject5122 || (_templateObject5122 = _taggedTemplateLiteral92(["Accordion Thief"])))) return have($item(_templateObject5222 || (_templateObject5222 = _taggedTemplateLiteral92(["stolen accordion"]))));
  return true;
}
function applyEffects(modifier, other_effects) {
  var relevantEffects = getRelevantEffects();
  var useful_effects = _toConsumableArray35(other_effects);
  for (var key in relevantEffects) {
    if (modifier.includes(key)) {
      useful_effects.push.apply(useful_effects, _toConsumableArray35(relevantEffects[key].filter(function(e) {
        return haveEquipmentToCast(e);
      })));
    }
  }
  if (modifier.includes("+combat") || modifier.includes(" combat")) shrug(relevantEffects["-combat"]);
  if (modifier.includes("-combat")) shrug(relevantEffects["+combat"]);
  var songs = useful_effects.filter(isSong).slice(0, getSongLimit());
  if (songs.length > 0) {
    var extra_songs = getActiveSongs().filter(function(e) {
      return !songs.includes(e);
    });
    while (songs.length + extra_songs.length > getSongLimit()) {
      var to_remove = extra_songs.pop();
      if (to_remove === void 0) break;
      else uneffect(to_remove);
    }
  }
  ensureWithMPSwaps(useful_effects);
  if ((0, import_kolmafia104.getWorkshed)() === $item(_templateObject5321 || (_templateObject5321 = _taggedTemplateLiteral92(["Asdon Martin keyfob (on ring)"]))) && asdonFualable(37)) {
    if (modifier.includes("meat") || modifier.includes("item")) {
      if (!have($effect(_templateObject5421 || (_templateObject5421 = _taggedTemplateLiteral92(["Driving Observantly"]))))) asdonFillTo(50);
      AsdonMartin_exports.drive(AsdonMartin_exports.Driving.Observantly);
    }
  }
}
function ensureWithMPSwaps(effects) {
  var hotswapped = [];
  var _iterator2 = _createForOfIteratorHelper31(effects), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var effect2 = _step2.value;
      if (have(effect2, effect2 === $effect(_templateObject5520 || (_templateObject5520 = _taggedTemplateLiteral92(["Ode to Booze"]))) ? 5 : 1)) continue;
      if (!have(effect2) && effect2 === $effect(_templateObject5619 || (_templateObject5619 = _taggedTemplateLiteral92(["Mystically Oiled"])))) {
        (0, import_kolmafia104.retrieveItem)($item(_templateObject5719 || (_templateObject5719 = _taggedTemplateLiteral92(["ointment of the occult"]))));
      }
      var skill = (0, import_kolmafia104.toSkill)(effect2);
      if (skill !== $skill(_templateObject5818 || (_templateObject5818 = _taggedTemplateLiteral92(["none"]))) && !have(skill)) continue;
      var mpcost = (0, import_kolmafia104.mpCost)(skill);
      if (mpcost > (0, import_kolmafia104.myMaxmp)()) {
        hotswapped.push.apply(hotswapped, _toConsumableArray35(swapEquipmentForMp(mpcost)));
      }
      if ((0, import_kolmafia104.myMp)() < mpcost) customRestoreMp(mpcost);
      ensureEffect(effect2);
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  hotswapped.reverse();
  for (var _i = 0, _hotswapped = hotswapped; _i < _hotswapped.length; _i++) {
    var _hotswapped$_i = _slicedToArray31(_hotswapped[_i], 2), slot = _hotswapped$_i[0], item14 = _hotswapped$_i[1];
    (0, import_kolmafia104.equip)(item14, slot);
  }
}
function castWithMpSwaps(skills3) {
  var hotswapped = [];
  var _iterator3 = _createForOfIteratorHelper31(skills3), _step3;
  try {
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
      var skill = _step3.value;
      var mpcost = (0, import_kolmafia104.mpCost)(skill);
      if (mpcost > (0, import_kolmafia104.myMaxmp)()) {
        hotswapped.push.apply(hotswapped, _toConsumableArray35(swapEquipmentForMp(mpcost)));
      }
      if ((0, import_kolmafia104.myMp)() < mpcost) customRestoreMp(mpcost);
      (0, import_kolmafia104.useSkill)(skill);
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  hotswapped.reverse();
  for (var _i2 = 0, _hotswapped2 = hotswapped; _i2 < _hotswapped2.length; _i2++) {
    var _hotswapped2$_i = _slicedToArray31(_hotswapped2[_i2], 2), slot = _hotswapped2$_i[0], item14 = _hotswapped2$_i[1];
    (0, import_kolmafia104.equip)(item14, slot);
  }
}
function swapEquipmentForMp(mpgoal) {
  var hotswapped = [];
  var inventory_options = Object.entries((0, import_kolmafia104.getInventory)()).map(function(v) {
    return import_kolmafia104.Item.get(v[0]);
  }).filter(function(item14) {
    return (0, import_kolmafia104.numericModifier)(item14, "Maximum MP") > 0 && (0, import_kolmafia104.canEquip)(item14);
  });
  var _iterator4 = _createForOfIteratorHelper31($slots(_templateObject5916 || (_templateObject5916 = _taggedTemplateLiteral92(["shirt, acc1, acc2, acc3, pants, back, hat"])))), _step4;
  try {
    var _loop = function _loop2() {
      var slot = _step4.value;
      if (mpgoal <= (0, import_kolmafia104.myMaxmp)()) return 0;
      if (slot === $slot(_templateObject6014 || (_templateObject6014 = _taggedTemplateLiteral92(["weapon"]))) || slot === $slot(_templateObject6120 || (_templateObject6120 = _taggedTemplateLiteral92(["off-hand"])))) return 1;
      if (slot === $slot(_templateObject6219 || (_templateObject6219 = _taggedTemplateLiteral92(["shirt"]))) && !have($skill(_templateObject6319 || (_templateObject6319 = _taggedTemplateLiteral92(["Torso Awareness"]))))) return 1;
      var item14 = (0, import_kolmafia104.equippedItem)(slot);
      var canonical_slot = slot === $slot(_templateObject6419 || (_templateObject6419 = _taggedTemplateLiteral92(["acc3"]))) ? $slot(_templateObject6518 || (_templateObject6518 = _taggedTemplateLiteral92(["acc1"]))) : slot === $slot(_templateObject6615 || (_templateObject6615 = _taggedTemplateLiteral92(["acc2"]))) ? $slot(_templateObject6712 || (_templateObject6712 = _taggedTemplateLiteral92(["acc1"]))) : slot;
      var slot_options = inventory_options.filter(function(it) {
        return (0, import_kolmafia104.equippedAmount)(it) === 0 && (0, import_kolmafia104.toSlot)(it) === canonical_slot && (0, import_kolmafia104.numericModifier)(it, "Maximum HP") >= (0, import_kolmafia104.numericModifier)(item14, "Maximum HP") && (0, import_kolmafia104.numericModifier)(it, "Maximum MP") > (0, import_kolmafia104.numericModifier)(item14, "Maximum MP");
      }).sort(function(a, b) {
        return (0, import_kolmafia104.numericModifier)(b, "Maximum MP") - (0, import_kolmafia104.numericModifier)(a, "Maximum MP");
      });
      if (slot_options.length === 0) return 1;
      hotswapped.push([slot, item14]);
      (0, import_kolmafia104.equip)(slot, slot_options[0]);
    }, _ret;
    for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
      _ret = _loop();
      if (_ret === 0) break;
      if (_ret === 1) continue;
    }
  } catch (err) {
    _iterator4.e(err);
  } finally {
    _iterator4.f();
  }
  return hotswapped;
}
function customRestoreMp(target) {
  if ((0, import_kolmafia104.myMp)() >= target) return;
  if (get("sweat", 0) >= 80) {
    (0, import_kolmafia104.visitUrl)("runskillz.php?action=Skillz&whichskill=7420&targetplayer=0&pwd&quantity=1");
  }
  (0, import_kolmafia104.restoreMp)(target);
  if ((0, import_kolmafia104.myMp)() < target && (0, import_kolmafia104.myMp)() < (0, import_kolmafia104.myMaxmp)() && (0, import_kolmafia104.myMeat)() < 90) {
    if (pullStrategy.pullIfReady($item(_templateObject6812 || (_templateObject6812 = _taggedTemplateLiteral92(["1,970 carat gold"]))))) {
      (0, import_kolmafia104.autosell)($item(_templateObject6912 || (_templateObject6912 = _taggedTemplateLiteral92(["1,970 carat gold"]))), 1);
    } else if (pullStrategy.pullIfReady($item(_templateObject7012 || (_templateObject7012 = _taggedTemplateLiteral92(["1952 Mickey Mantle card"]))))) {
      (0, import_kolmafia104.autosell)($item(_templateObject7117 || (_templateObject7117 = _taggedTemplateLiteral92(["1952 Mickey Mantle card"]))), 1);
    }
    (0, import_kolmafia104.restoreMp)(target);
  }
}
function fillHp() {
  if ((0, import_kolmafia104.myHp)() < (0, import_kolmafia104.myMaxhp)()) {
    if (!(0, import_kolmafia104.restoreHp)((0, import_kolmafia104.myMaxhp)())) {
      if (have($item(_templateObject7217 || (_templateObject7217 = _taggedTemplateLiteral92(["scroll of drastic healing"]))))) {
        (0, import_kolmafia104.use)($item(_templateObject7316 || (_templateObject7316 = _taggedTemplateLiteral92(["scroll of drastic healing"]))));
      } else if (get("_hotTubSoaks") < 5 && ($effects(_templateObject7416 || (_templateObject7416 = _taggedTemplateLiteral92(["Once-Cursed, Twice-Cursed, Thrice-Cursed"]))).find(function(e) {
        return have(e);
      }) === void 0 || get("hiddenApartmentProgress") >= 7)) {
        (0, import_kolmafia104.visitUrl)("clan_viplounge.php?action=hottub");
      }
      var tries = 0;
      while ((0, import_kolmafia104.myHp)() < (0, import_kolmafia104.myMaxhp)() && (0, import_kolmafia104.myMeat)() >= 1e3 && tries < 30) {
        tries++;
        (0, import_kolmafia104.retrieveItem)($item(_templateObject7514 || (_templateObject7514 = _taggedTemplateLiteral92(["Doc Galaktik's Homeopathic Elixir"]))));
        (0, import_kolmafia104.use)($item(_templateObject7611 || (_templateObject7611 = _taggedTemplateLiteral92(["Doc Galaktik's Homeopathic Elixir"]))));
      }
    }
  }
}

// src/engine/priority.ts
var _templateObject771;
var _templateObject2175;
var _templateObject3158;
var _templateObject4137;
var _templateObject5107;
var _templateObject6102;
var _templateObject779;
var _templateObject869;
var _templateObject959;
var _templateObject1048;
var _templateObject1146;
var _templateObject1246;
var _templateObject1341;
var _templateObject1439;
var _templateObject1537;
var _templateObject1637;
var _templateObject1736;
var _templateObject1836;
var _templateObject1931;
var _templateObject2031;
function _taggedTemplateLiteral93(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _createForOfIteratorHelper32(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray57(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _toConsumableArray36(arr) {
  return _arrayWithoutHoles36(arr) || _iterableToArray36(arr) || _unsupportedIterableToArray57(arr) || _nonIterableSpread36();
}
function _nonIterableSpread36() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray57(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray57(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray57(o, minLen);
}
function _iterableToArray36(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles36(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray57(arr);
}
function _arrayLikeToArray57(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _defineProperties33(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey41(descriptor.key), descriptor);
  }
}
function _createClass33(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties33(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties33(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _classCallCheck33(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperty36(obj, key, value) {
  key = _toPropertyKey41(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey41(t) {
  var i = _toPrimitive41(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive41(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var Priorities = /* @__PURE__ */ _createClass33(function Priorities2() {
  _classCallCheck33(this, Priorities2);
});
_defineProperty36(Priorities, "Always", {
  score: 2e4,
  reason: "Forced"
});
_defineProperty36(Priorities, "Free", {
  score: 1e4,
  reason: "Free action"
});
_defineProperty36(Priorities, "LastCopyableMonster", {
  score: 4e3,
  reason: "Copy last monster"
});
_defineProperty36(Priorities, "GoodFeelNostalgia", {
  score: 3999,
  reason: "Feel Nostalgia is ready"
});
_defineProperty36(Priorities, "Wanderer", {
  score: 2e3,
  reason: "Wanderer"
});
_defineProperty36(Priorities, "GoodForceNC", {
  score: 1e3,
  reason: "Forcing NC"
});
_defineProperty36(Priorities, "Start", {
  score: 900,
  reason: "Initial tasks"
});
_defineProperty36(Priorities, "Effect", {
  score: 20,
  reason: "Useful effect"
});
_defineProperty36(Priorities, "GoodOrb", {
  score: 15,
  reason: "Target orb monster"
});
_defineProperty36(Priorities, "BestCosmicBowlingBall", {
  score: 14,
  reason: "Use cosmic bowling ball + Melodramedary"
});
_defineProperty36(Priorities, "CosmicBowlingBall", {
  score: 11,
  reason: "Use cosmic bowling ball"
});
_defineProperty36(Priorities, "GoodYR", {
  score: 10,
  reason: "Yellow ray"
});
_defineProperty36(Priorities, "GoodCleaver", {
  score: 5,
  reason: "Cleaver is ready"
});
_defineProperty36(Priorities, "GoodAutumnaton", {
  score: 4,
  reason: "Setup Autumnaton"
});
_defineProperty36(Priorities, "GoodCamel", {
  score: 3,
  reason: "Melodramedary is ready"
});
_defineProperty36(Priorities, "MinorEffect", {
  score: 2,
  reason: "Useful minor effect"
});
_defineProperty36(Priorities, "GoodLocation", {
  score: 1.5,
  reason: "Last location is useful"
});
_defineProperty36(Priorities, "GoodBanish3", {
  score: 0.7,
  reason: "3+ banishes committed"
});
_defineProperty36(Priorities, "GoodBanish2", {
  score: 0.6,
  reason: "2 banishes committed"
});
_defineProperty36(Priorities, "GoodBanish", {
  score: 0.5,
  reason: "1 banish committed"
});
_defineProperty36(Priorities, "SeekJellyfish", {
  score: 0.1,
  reason: "Get Spectral Jellyfish"
});
_defineProperty36(Priorities, "None", {
  score: 0
});
_defineProperty36(Priorities, "BadForcingNC", {
  score: -0.4,
  reason: "Not forcing NC"
});
_defineProperty36(Priorities, "BadAutumnaton", {
  score: -2,
  reason: "Autumnaton in use here"
});
_defineProperty36(Priorities, "BadTrain", {
  score: -3,
  reason: "Use Trainset"
});
_defineProperty36(Priorities, "BadOrb", {
  score: -4,
  reason: "Avoid orb monster"
});
_defineProperty36(Priorities, "BadCamel", {
  score: -5,
  reason: "Waiting for Melodramedary"
});
_defineProperty36(Priorities, "BadHoliday", {
  score: -10
});
_defineProperty36(Priorities, "BadYR", {
  score: -16,
  reason: "Too early for yellow ray"
});
_defineProperty36(Priorities, "BadSweat", {
  score: -20,
  reason: "Not enough sweat"
});
_defineProperty36(Priorities, "BadProtonic", {
  score: -40,
  reason: "Protonic ghost here"
});
_defineProperty36(Priorities, "BadMood", {
  score: -100,
  reason: "Wrong effects"
});
_defineProperty36(Priorities, "Last", {
  score: -1e4,
  reason: "Only if nothing else"
});
var Prioritization = /* @__PURE__ */ function() {
  function Prioritization2() {
    _classCallCheck33(this, Prioritization2);
    _defineProperty36(this, "priorities", /* @__PURE__ */ new Set());
    _defineProperty36(this, "orb_monster", void 0);
  }
  _createClass33(Prioritization2, [{
    key: "explain",
    value: function explain() {
      var result = _toConsumableArray36(this.priorities).map(function(priority) {
        return priority.reason;
      }).filter(function(priority) {
        return priority !== void 0;
      }).join(", ");
      if (this.orb_monster) return result.replace("orb monster", "".concat(this.orb_monster));
      else return result;
    }
  }, {
    key: "explainWithColor",
    value: function explainWithColor() {
      var result = _toConsumableArray36(this.priorities).map(function(priority) {
        if (priority.reason === void 0) return void 0;
        if (priority.score > 0) return "<font color='blue'>".concat(priority.reason, "</font>,");
        else if (priority.score < 0) return "<font color='red'>".concat(priority.reason, "</font>,");
        else return void 0;
      }).filter(function(priority) {
        return priority !== void 0;
      }).join(" ");
      if (result === void 0 || result.length === 0) return void 0;
      var trimmed_result = result.slice(0, -1);
      if (this.orb_monster) return trimmed_result.replace("orb monster", "".concat(this.orb_monster));
      else return trimmed_result;
    }
  }, {
    key: "has",
    value: function has(priorty) {
      var _iterator = _createForOfIteratorHelper32(this.priorities), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var prior = _step.value;
          if (prior.score === priorty.score) return true;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return false;
    }
  }, {
    key: "score",
    value: function score() {
      var result = 0;
      var _iterator2 = _createForOfIteratorHelper32(this.priorities), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var priority = _step2.value;
          result += priority.score;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      return result;
    }
  }], [{
    key: "fixed",
    value: function fixed(priority) {
      var result = new Prioritization2();
      result.priorities.add(priority);
      return result;
    }
  }, {
    key: "from",
    value: function from(task) {
      var _task$priority, _task$priority2, _task$combat, _task$combat2, _task$ignore_banishes, _task$combat3, _task$combat4, _task$combat5, _task$combat6, _task$combat7, _task$combat8;
      var result = new Prioritization2();
      var base = (_task$priority = (_task$priority2 = task.priority) === null || _task$priority2 === void 0 ? void 0 : _task$priority2.call(task)) !== null && _task$priority !== void 0 ? _task$priority : Priorities.None;
      var outfitSpec = undelay(task.outfit);
      if (Array.isArray(base)) {
        var _iterator3 = _createForOfIteratorHelper32(base), _step3;
        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
            var priority = _step3.value;
            result.priorities.add(priority);
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      } else {
        if (base !== Priorities.None) result.priorities.add(base);
      }
      var yr_needed = ((_task$combat = task.combat) === null || _task$combat === void 0 ? void 0 : _task$combat.can("yellowRay")) || ((_task$combat2 = task.combat) === null || _task$combat2 === void 0 ? void 0 : _task$combat2.can("forceItems")) && !forceItemSources.find(function(s) {
        return s.available();
      });
      if (yr_needed && yellowRaySources.find(function(yr) {
        return yr.available();
      })) {
        if (have($effect(_templateObject771 || (_templateObject771 = _taggedTemplateLiteral93(["Everything Looks Yellow"]))))) {
          if (!have($skill(_templateObject2175 || (_templateObject2175 = _taggedTemplateLiteral93(["Emotionally Chipped"])))) || get("_feelEnvyUsed") === 3) result.priorities.add(Priorities.BadYR);
        } else result.priorities.add(Priorities.GoodYR);
      }
      if (task.do instanceof import_kolmafia105.Location) {
        var next_monster = globalStateCache.orb().prediction(task.do);
        if (next_monster !== void 0) {
          result.orb_monster = next_monster;
          result.priorities.add(orbPriority(task, next_monster));
        }
      }
      var modifier = getModifiersFrom(outfitSpec);
      if (!moodCompatible(modifier) && task.name !== "Macguffin/Forest") {
        result.priorities.add(Priorities.BadMood);
      }
      if ((have($effect(_templateObject3158 || (_templateObject3158 = _taggedTemplateLiteral93(["Prestidigysfunction"])))) || have($effect(_templateObject4137 || (_templateObject4137 = _taggedTemplateLiteral93(["Turned Into a Skeleton"]))))) && task.combat && task.combat.can("killItem")) {
        result.priorities.add(Priorities.BadMood);
      }
      if (!(task !== null && task !== void 0 && (_task$ignore_banishes = task.ignore_banishes) !== null && _task$ignore_banishes !== void 0 && _task$ignore_banishes.call(task))) {
        var numBanished = globalStateCache.banishes().numPartiallyBanished(task);
        if (numBanished === 1) result.priorities.add(Priorities.GoodBanish);
        else if (numBanished === 2) result.priorities.add(Priorities.GoodBanish2);
        else if (numBanished >= 3) result.priorities.add(Priorities.GoodBanish3);
      }
      if (modifier !== null && modifier !== void 0 && modifier.includes("ML") && !modifier.match("-[\\d .]*ML")) {
        if (getTodaysHolidayWanderers().length > 0 && (0, import_kolmafia105.getCounter)("holiday") <= 0) {
          result.priorities.add(Priorities.BadHoliday);
        }
      }
      var ncforce = undelay(task.ncforce);
      if (ncforce === NCForce.Yes || ncforce === NCForce.Eventually) {
        if (get("noncombatForcerActive")) {
          result.priorities.add(Priorities.GoodForceNC);
        } else if (forceNCPossible()) {
          result.priorities.add(Priorities.BadForcingNC);
        }
      }
      if (have($item(_templateObject5107 || (_templateObject5107 = _taggedTemplateLiteral93(["protonic accelerator pack"])))) && get("questPAGhost") !== "unstarted" && get("ghostLocation") && get("ghostLocation") === task.do) result.priorities.add(Priorities.BadProtonic);
      var ball_useful = task.combat === void 0 || task.combat.can("ignore") || task.combat.can("banish") || task.combat.getDefaultAction() === void 0;
      var ball_may_not_be_useful = ((_task$combat3 = task.combat) === null || _task$combat3 === void 0 ? void 0 : _task$combat3.can("kill")) || ((_task$combat4 = task.combat) === null || _task$combat4 === void 0 ? void 0 : _task$combat4.can("killHard")) || ((_task$combat5 = task.combat) === null || _task$combat5 === void 0 ? void 0 : _task$combat5.can("killItem")) || ((_task$combat6 = task.combat) === null || _task$combat6 === void 0 ? void 0 : _task$combat6.can("killFree")) || ((_task$combat7 = task.combat) === null || _task$combat7 === void 0 ? void 0 : _task$combat7.can("forceItems")) || ((_task$combat8 = task.combat) === null || _task$combat8 === void 0 ? void 0 : _task$combat8.can("yellowRay"));
      var location_blacklist = [$location(_templateObject6102 || (_templateObject6102 = _taggedTemplateLiteral93(["The Shore, Inc. Travel Agency"]))), $location(_templateObject779 || (_templateObject779 = _taggedTemplateLiteral93(["The Hidden Temple"]))), $location(_templateObject869 || (_templateObject869 = _taggedTemplateLiteral93(["The Oasis"]))), $location(_templateObject959 || (_templateObject959 = _taggedTemplateLiteral93(["Lair of the Ninja Snowmen"])))];
      var location_whitelist = [$location(_templateObject1048 || (_templateObject1048 = _taggedTemplateLiteral93(["The Haunted Bathroom"]))), $location(_templateObject1146 || (_templateObject1146 = _taggedTemplateLiteral93(["The Castle in the Clouds in the Sky (Top Floor)"]))), $location(_templateObject1246 || (_templateObject1246 = _taggedTemplateLiteral93(["Lair of the Ninja Snowmen"]))), $location(_templateObject1341 || (_templateObject1341 = _taggedTemplateLiteral93(["The Batrat and Ratbat Burrow"])))];
      var location_in_blacklist = task.do instanceof import_kolmafia105.Location && location_blacklist.includes(task.do);
      var location_in_whitelist = task.do instanceof import_kolmafia105.Location && location_whitelist.includes(task.do);
      if (have($item(_templateObject1439 || (_templateObject1439 = _taggedTemplateLiteral93(["cosmic bowling ball"])))) || get("cosmicBowlingBallReturnCombats") === 0) {
        if (location_in_whitelist || !task.freeaction && !task.freecombat && ball_useful && !ball_may_not_be_useful && !location_in_blacklist) {
          result.priorities.add(Priorities.CosmicBowlingBall);
        }
      }
      var parachuteTarget = undelay(task.parachute);
      if (parachuteTarget && have($item(_templateObject1537 || (_templateObject1537 = _taggedTemplateLiteral93(["crepe paper parachute cape"])))) && !have($effect(_templateObject1637 || (_templateObject1637 = _taggedTemplateLiteral93(["Everything looks Beige"]))))) {
        var _task$combat9;
        if (have($item(_templateObject1736 || (_templateObject1736 = _taggedTemplateLiteral93(["June cleaver"])))) && get("_juneCleaverFightsLeft") === 0 && // Needing the Saber to force items is more important
        (!((_task$combat9 = task.combat) !== null && _task$combat9 !== void 0 && _task$combat9.can("forceItems")) || !have($item(_templateObject1836 || (_templateObject1836 = _taggedTemplateLiteral93(["Fourth of May Cosplay Saber"])))) || get("_saberForceUses") >= 5)) result.priorities.add(Priorities.GoodCleaver);
        if (task.do instanceof import_kolmafia105.Location && task.do === (0, import_kolmafia105.myLocation)()) result.priorities.add(Priorities.GoodLocation);
      }
      if (hasDelay(task)) {
        if (have($item(_templateObject1931 || (_templateObject1931 = _taggedTemplateLiteral93(["backup camera"])))) && !args.minor.skipbackups) {
          var backup = getActiveBackupTarget();
          if (backup) {
            var outfit2 = new Outfit();
            if (outfitSpec !== void 0) outfit2.equip(outfitSpec);
            if (outfit2.canEquip($item(_templateObject2031 || (_templateObject2031 = _taggedTemplateLiteral93(["backup camera"]))))) {
              result.priorities.add(Priorities.LastCopyableMonster);
            }
          }
        }
        var wanderer = wandererSources.find(function(source) {
          return source.available() && source.chance() === 1;
        });
        if (wanderer) {
          var _outfit = new Outfit();
          if (outfitSpec !== void 0) _outfit.equip(outfitSpec);
          if (canEquipResource(_outfit, wanderer)) {
            result.priorities.add(Priorities.Wanderer);
          }
        }
      }
      return result;
    }
  }]);
  return Prioritization2;
}();
function orbPriority(task, monster) {
  if (!(task.do instanceof import_kolmafia105.Location)) return Priorities.None;
  if (task.orbtargets === void 0) {
    var _task$combat10;
    var task_combat = (_task$combat10 = task.combat) !== null && _task$combat10 !== void 0 ? _task$combat10 : new CombatStrategy2();
    var next_monster_strategy = task_combat.currentStrategy(monster);
    var next_useless = next_monster_strategy === "ignore" || next_monster_strategy === "ignoreNoBanish" || next_monster_strategy === "ignoreSoftBanish" || next_monster_strategy === "banish" || next_monster_strategy === void 0;
    var others_useless = task_combat.can("ignore") || task_combat.can("ignoreNoBanish") || task_combat.can("banish") || task_combat.can("ignoreSoftBanish") || task_combat.getDefaultAction() === void 0;
    var others_useful = task_combat.can("kill") || task_combat.can("killFree") || task_combat.can("killHard") || task_combat.can("killItem");
    if (next_useless && others_useful) {
      return Priorities.BadOrb;
    } else if (!next_useless && others_useless) {
      return Priorities.GoodOrb;
    } else {
      return Priorities.None;
    }
  }
  var targets = task.orbtargets();
  if (targets === void 0) return Priorities.None;
  if (targets.length === 0) return Priorities.None;
  if (targets.find(function(t) {
    return t === monster;
  }) === void 0) {
    return Priorities.BadOrb;
  } else {
    return Priorities.GoodOrb;
  }
}

// src/tasks/level1.ts
var _templateObject780;
var _templateObject2176;
function _taggedTemplateLiteral94(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var TootQuest = {
  name: "Toot",
  tasks: [{
    name: "Start",
    after: [],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return step("questM05Toot") !== -1;
    },
    do: function() {
      return (0, import_kolmafia106.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Toot",
    after: ["Start"],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return step("questM05Toot") > 0;
    },
    do: function() {
      return (0, import_kolmafia106.visitUrl)("tutorial.php?action=toot");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Finish",
    after: ["Toot"],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return step("questM05Toot") > 0 && !have($item(_templateObject780 || (_templateObject780 = _taggedTemplateLiteral94(["letter from King Ralph XI"]))));
    },
    do: function() {
      return (0, import_kolmafia106.use)($item(_templateObject2176 || (_templateObject2176 = _taggedTemplateLiteral94(["letter from King Ralph XI"]))));
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }]
};

// src/tasks/level2.ts
var import_kolmafia107 = require("kolmafia");
init_dist();
var _templateObject781;
var _templateObject2177;
var _templateObject3159;
var _templateObject4138;
var _templateObject5108;
var _templateObject6103;
var _templateObject789;
function _taggedTemplateLiteral95(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var MosquitoQuest = {
  name: "Mosquito",
  tasks: [{
    name: "Start",
    after: [],
    ready: function() {
      return atLevel(2);
    },
    completed: function() {
      return step("questL02Larva") !== -1;
    },
    do: function() {
      return (0, import_kolmafia107.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    priority: function() {
      return councilSafe() ? Priorities.Free : Priorities.BadMood;
    },
    freeaction: true
  }, {
    name: "Burn Delay",
    after: ["Start"],
    ready: function() {
      return !have($item(_templateObject781 || (_templateObject781 = _taggedTemplateLiteral95(["protonic accelerator pack"])))) || get("questPAGhost") === "unstarted" || get("ghostLocation") !== $location(_templateObject2177 || (_templateObject2177 = _taggedTemplateLiteral95(["The Spooky Forest"])));
    },
    completed: function() {
      return $location(_templateObject3159 || (_templateObject3159 = _taggedTemplateLiteral95(["The Spooky Forest"]))).turnsSpent >= 5 || step("questL02Larva") >= 1;
    },
    do: $location(_templateObject4138 || (_templateObject4138 = _taggedTemplateLiteral95(["The Spooky Forest"]))),
    outfit: function() {
      if (have($effect(_templateObject5108 || (_templateObject5108 = _taggedTemplateLiteral95(["Super Skill"]))))) return {
        equip: $items(_templateObject6103 || (_templateObject6103 = _taggedTemplateLiteral95(["Greatest American Pants"])))
      };
      return {};
    },
    choices: {
      502: 2,
      505: 1,
      334: 1
    },
    limit: {
      tries: 5
    },
    delay: 5
  }, {
    name: "Mosquito",
    after: ["Burn Delay"],
    prepare: function() {
      tryPlayApriling("-combat");
    },
    completed: function() {
      return step("questL02Larva") >= 1;
    },
    do: $location(_templateObject789 || (_templateObject789 = _taggedTemplateLiteral95(["The Spooky Forest"]))),
    choices: {
      502: 2,
      505: 1,
      334: 1
    },
    outfit: {
      modifier: "-combat"
    },
    limit: {
      soft: 20
    }
  }, {
    name: "Finish",
    after: ["Mosquito"],
    priority: function() {
      return councilSafe() ? Priorities.Free : Priorities.BadMood;
    },
    completed: function() {
      return step("questL02Larva") === 999;
    },
    do: function() {
      return (0, import_kolmafia107.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }]
};

// src/tasks/level3.ts
var import_kolmafia108 = require("kolmafia");
init_dist();
var _templateObject790;
var _templateObject2178;
var _templateObject3160;
var _templateObject4139;
var _templateObject5109;
var _templateObject6104;
var _templateObject791;
function _taggedTemplateLiteral96(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var TavernQuest = {
  name: "Tavern",
  tasks: [{
    name: "Start",
    after: ["Mosquito/Finish"],
    ready: function() {
      return atLevel(3);
    },
    completed: function() {
      return step("questL03Rat") >= 0;
    },
    do: function() {
      return (0, import_kolmafia108.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    priority: function() {
      return councilSafe() ? Priorities.Free : Priorities.BadMood;
    },
    freeaction: true
  }, {
    name: "Tavernkeep",
    after: ["Start"],
    completed: function() {
      return step("questL03Rat") >= 1;
    },
    do: function() {
      return (0, import_kolmafia108.visitUrl)("tavern.php?place=barkeep");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Basement",
    after: ["Tavernkeep"],
    completed: function() {
      return step("questL03Rat") >= 2;
    },
    do: function() {
      (0, import_kolmafia108.visitUrl)("cellar.php");
      var layout = (0, import_kolmafia108.getProperty)("tavernLayout");
      var path3 = [3, 2, 1, 0, 5, 10, 15, 20, 16, 21];
      for (var i = 0; i < path3.length; i++) {
        if (layout.charAt(path3[i]) === "0") {
          (0, import_kolmafia108.visitUrl)("cellar.php?action=explore&whichspot=".concat(path3[i] + 1));
          (0, import_kolmafia108.runCombat)();
          (0, import_kolmafia108.runChoice)(-1);
          break;
        }
      }
    },
    outfit: function() {
      if (have($item(_templateObject790 || (_templateObject790 = _taggedTemplateLiteral96(["June cleaver"]))))) return {
        modifier: "ML, -combat",
        equip: $items(_templateObject2178 || (_templateObject2178 = _taggedTemplateLiteral96(["June cleaver, old patched suit-pants, unbreakable umbrella, Jurassic Parka, barrel lid, carnivorous potted plant"]))),
        modes: {
          umbrella: have($item(_templateObject3160 || (_templateObject3160 = _taggedTemplateLiteral96(["tangle of rat tails"])))) ? "cocoon" : "broken",
          parka: "pterodactyl"
        }
      };
      return {
        modifier: "ML, +combat",
        equip: $items(_templateObject4139 || (_templateObject4139 = _taggedTemplateLiteral96(["old patched suit-pants"])))
      };
    },
    combat: new CombatStrategy2().macro(function() {
      if (have($skill(_templateObject5109 || (_templateObject5109 = _taggedTemplateLiteral96(["Saucegeyser"]))))) return Macro.while_("!mpbelow 24", Macro.skill($skill(_templateObject6104 || (_templateObject6104 = _taggedTemplateLiteral96(["Saucegeyser"])))));
      else return new Macro();
    }).killHard($monster(_templateObject791 || (_templateObject791 = _taggedTemplateLiteral96(["drunken rat king"])))).ignore(),
    choices: function() {
      return {
        509: 1,
        510: 1,
        511: 2,
        514: (0, import_kolmafia108.numericModifier)("Stench Damage") >= 20 ? 2 : 1,
        515: (0, import_kolmafia108.numericModifier)("Spooky Damage") >= 20 ? 2 : 1,
        496: (0, import_kolmafia108.numericModifier)("Hot Damage") >= 20 ? 2 : 1,
        513: (0, import_kolmafia108.numericModifier)("Cold Damage") >= 20 ? 2 : 1
      };
    },
    limit: {
      tries: 10
    }
  }, {
    name: "Finish",
    after: ["Basement"],
    completed: function() {
      return step("questL03Rat") === 999;
    },
    do: function() {
      return (0, import_kolmafia108.visitUrl)("tavern.php?place=barkeep");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }]
};

// src/tasks/level4.ts
var import_kolmafia109 = require("kolmafia");
init_dist();
var _templateObject798;
var _templateObject2179;
var _templateObject3161;
var _templateObject4140;
var _templateObject5123;
var _templateObject6105;
var _templateObject799;
var _templateObject870;
var _templateObject960;
var _templateObject1049;
var _templateObject1147;
var _templateObject1247;
var _templateObject1346;
var _templateObject1440;
var _templateObject1538;
var _templateObject1638;
var _templateObject1737;
var _templateObject1837;
var _templateObject1935;
var _templateObject2035;
var _templateObject2180;
var _templateObject2235;
var _templateObject2331;
var _templateObject2430;
var _templateObject2529;
var _templateObject2628;
var _templateObject2728;
var _templateObject2826;
var _templateObject2926;
var _templateObject3026;
var _templateObject3163;
var _templateObject3228;
var _templateObject3327;
var _templateObject3425;
var _templateObject3524;
var _templateObject3624;
var _templateObject3724;
var _templateObject3824;
var _templateObject3922;
var _templateObject4022;
var _templateObject4141;
var _templateObject4224;
var _templateObject4323;
var _templateObject4422;
var _templateObject4522;
var _templateObject4622;
var _templateObject4722;
var _templateObject4822;
var _templateObject4922;
var _templateObject5022;
var _templateObject5124;
var _templateObject5223;
var _templateObject5322;
var _templateObject5422;
var _templateObject5521;
var _templateObject5620;
function _taggedTemplateLiteral97(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var BatQuest = {
  name: "Bat",
  tasks: [{
    name: "Start",
    after: [],
    ready: function() {
      return atLevel(4);
    },
    completed: function() {
      return step("questL04Bat") !== -1;
    },
    do: function() {
      return (0, import_kolmafia109.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    priority: function() {
      return councilSafe() ? Priorities.Free : Priorities.BadMood;
    },
    freeaction: true
  }, {
    name: "Bat Wings Entrance",
    priority: function() {
      return Priorities.Free;
    },
    after: ["Start"],
    ready: function() {
      return have($item(_templateObject798 || (_templateObject798 = _taggedTemplateLiteral97(["bat wings"]))));
    },
    completed: function() {
      return get("batWingsBatHoleEntrance", false);
    },
    do: $location(_templateObject2179 || (_templateObject2179 = _taggedTemplateLiteral97(["The Bat Hole Entrance"]))),
    prepare: function() {
      if ((0, import_kolmafia109.numericModifier)("stench resistance") < 1) ensureEffect($effect(_templateObject3161 || (_templateObject3161 = _taggedTemplateLiteral97(["Red Door Syndrome"]))));
      if ((0, import_kolmafia109.numericModifier)("stench resistance") < 1) throw "Unable to ensure stench res for guano junction";
    },
    post: function() {
      if (have($item(_templateObject4140 || (_templateObject4140 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))))) (0, import_kolmafia109.use)($item(_templateObject5123 || (_templateObject5123 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))));
    },
    outfit: {
      modifier: "10 stench res",
      equip: $items(_templateObject6105 || (_templateObject6105 = _taggedTemplateLiteral97(["bat wings"]))),
      avoid: $items(_templateObject799 || (_templateObject799 = _taggedTemplateLiteral97(["June cleaver"])))
    },
    limit: {
      tries: 1
    }
  }, {
    name: "Bat Wings Guano",
    priority: function() {
      return Priorities.Free;
    },
    after: ["Start"],
    ready: function() {
      return have($item(_templateObject870 || (_templateObject870 = _taggedTemplateLiteral97(["bat wings"])))) && atLevel(4);
    },
    completed: function() {
      return get("batWingsGuanoJunction", false);
    },
    do: $location(_templateObject960 || (_templateObject960 = _taggedTemplateLiteral97(["Guano Junction"]))),
    prepare: function() {
      if ((0, import_kolmafia109.numericModifier)("stench resistance") < 1) ensureEffect($effect(_templateObject1049 || (_templateObject1049 = _taggedTemplateLiteral97(["Red Door Syndrome"]))));
      if ((0, import_kolmafia109.numericModifier)("stench resistance") < 1) throw "Unable to ensure stench res for guano junction";
    },
    post: function() {
      if (have($item(_templateObject1147 || (_templateObject1147 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))))) (0, import_kolmafia109.use)($item(_templateObject1247 || (_templateObject1247 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))));
    },
    outfit: {
      modifier: "10 stench res",
      equip: $items(_templateObject1346 || (_templateObject1346 = _taggedTemplateLiteral97(["bat wings"]))),
      avoid: $items(_templateObject1440 || (_templateObject1440 = _taggedTemplateLiteral97(["June cleaver"])))
    },
    limit: {
      tries: 1
    }
  }, {
    name: "Bat Wings Batrat",
    priority: function() {
      return Priorities.Free;
    },
    after: ["Start", "Use Sonar 1"],
    ready: function() {
      return have($item(_templateObject1538 || (_templateObject1538 = _taggedTemplateLiteral97(["bat wings"]))));
    },
    completed: function() {
      return get("batWingsBatratBurrow", false);
    },
    do: $location(_templateObject1638 || (_templateObject1638 = _taggedTemplateLiteral97(["The Batrat and Ratbat Burrow"]))),
    prepare: function() {
      if ((0, import_kolmafia109.numericModifier)("stench resistance") < 1) ensureEffect($effect(_templateObject1737 || (_templateObject1737 = _taggedTemplateLiteral97(["Red Door Syndrome"]))));
      if ((0, import_kolmafia109.numericModifier)("stench resistance") < 1) throw "Unable to ensure stench res for guano junction";
    },
    post: function() {
      if (have($item(_templateObject1837 || (_templateObject1837 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))))) (0, import_kolmafia109.use)($item(_templateObject1935 || (_templateObject1935 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))));
    },
    outfit: {
      modifier: "10 stench res",
      equip: $items(_templateObject2035 || (_templateObject2035 = _taggedTemplateLiteral97(["bat wings"]))),
      avoid: $items(_templateObject2180 || (_templateObject2180 = _taggedTemplateLiteral97(["June cleaver"])))
    },
    limit: {
      tries: 1
    }
  }, {
    name: "Bat Wings Bean",
    priority: function() {
      return Priorities.Free;
    },
    after: ["Start", "Use Sonar 2"],
    ready: function() {
      return have($item(_templateObject2235 || (_templateObject2235 = _taggedTemplateLiteral97(["bat wings"]))));
    },
    completed: function() {
      return get("batWingsBeanbatChamber", false);
    },
    do: $location(_templateObject2331 || (_templateObject2331 = _taggedTemplateLiteral97(["The Beanbat Chamber"]))),
    prepare: function() {
      if ((0, import_kolmafia109.numericModifier)("stench resistance") < 1) ensureEffect($effect(_templateObject2430 || (_templateObject2430 = _taggedTemplateLiteral97(["Red Door Syndrome"]))));
      if ((0, import_kolmafia109.numericModifier)("stench resistance") < 1) throw "Unable to ensure stench res for guano junction";
    },
    post: function() {
      if (have($item(_templateObject2529 || (_templateObject2529 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))))) (0, import_kolmafia109.use)($item(_templateObject2628 || (_templateObject2628 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))));
    },
    outfit: {
      modifier: "10 stench res",
      equip: $items(_templateObject2728 || (_templateObject2728 = _taggedTemplateLiteral97(["bat wings"]))),
      avoid: $items(_templateObject2826 || (_templateObject2826 = _taggedTemplateLiteral97(["June cleaver"])))
    },
    limit: {
      tries: 1
    }
  }, {
    name: "Get Sonar 1",
    after: [],
    completed: function() {
      return step("questL04Bat") + (0, import_kolmafia109.itemAmount)($item(_templateObject2926 || (_templateObject2926 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"])))) >= 1;
    },
    do: $location(_templateObject3026 || (_templateObject3026 = _taggedTemplateLiteral97(["Guano Junction"]))),
    ready: function() {
      return stenchPlanner.maximumPossible(true) >= 1;
    },
    prepare: function() {
      if ((0, import_kolmafia109.numericModifier)("stench resistance") < 1) ensureEffect($effect(_templateObject3163 || (_templateObject3163 = _taggedTemplateLiteral97(["Red Door Syndrome"]))));
      if ((0, import_kolmafia109.numericModifier)("stench resistance") < 1) throw "Unable to ensure stench res for guano junction";
    },
    post: function() {
      if (have($item(_templateObject3228 || (_templateObject3228 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))))) (0, import_kolmafia109.use)($item(_templateObject3327 || (_templateObject3327 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))));
    },
    outfit: function() {
      if (!have($skill(_templateObject3425 || (_templateObject3425 = _taggedTemplateLiteral97(["Comprehensive Cartography"])))) && have($item(_templateObject3524 || (_templateObject3524 = _taggedTemplateLiteral97(["industrial fire extinguisher"])))) && get("_fireExtinguisherCharge") >= 20 && !get("fireExtinguisherBatHoleUsed")) return stenchPlanner.outfitFor(1, {
        equip: $items(_templateObject3624 || (_templateObject3624 = _taggedTemplateLiteral97(["industrial fire extinguisher"])))
      });
      else return stenchPlanner.outfitFor(1, {
        modifier: "item"
      });
    },
    choices: {
      1427: 1
    },
    combat: new CombatStrategy2().macro(new Macro().trySkill($skill(_templateObject3724 || (_templateObject3724 = _taggedTemplateLiteral97(["Fire Extinguisher: Zone Specific"]))))).kill($monster(_templateObject3824 || (_templateObject3824 = _taggedTemplateLiteral97(["screambat"])))).killItem(),
    limit: {
      tries: 10
    }
  }, {
    name: "Use Sonar 1",
    after: ["Get Sonar 1"],
    completed: function() {
      return step("questL04Bat") >= 1;
    },
    do: function() {
      return (0, import_kolmafia109.use)($item(_templateObject3922 || (_templateObject3922 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))));
    },
    limit: {
      tries: 3
    },
    freeaction: true
  }, {
    name: "Get Sonar 2",
    after: ["Use Sonar 1"],
    completed: function() {
      return step("questL04Bat") + (0, import_kolmafia109.itemAmount)($item(_templateObject4022 || (_templateObject4022 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"])))) >= 2;
    },
    priority: function() {
      if (step("questL11Shen") === 999 || have($item(_templateObject4141 || (_templateObject4141 = _taggedTemplateLiteral97(["The Stankara Stone"])))) || (0, import_kolmafia109.myDaycount)() === 1 && step("questL11Shen") > 1) return Priorities.None;
      return Priorities.BadMood;
    },
    prepare: function() {
      if ((0, import_kolmafia109.numericModifier)("stench resistance") < 1) ensureEffect($effect(_templateObject4224 || (_templateObject4224 = _taggedTemplateLiteral97(["Red Door Syndrome"]))));
      if ((0, import_kolmafia109.numericModifier)("stench resistance") < 1) throw "Unable to ensure stench res for guano junction";
    },
    do: $location(_templateObject4323 || (_templateObject4323 = _taggedTemplateLiteral97(["Guano Junction"]))),
    post: function() {
      if (have($item(_templateObject4422 || (_templateObject4422 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))))) (0, import_kolmafia109.use)($item(_templateObject4522 || (_templateObject4522 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))));
    },
    outfit: {
      modifier: "item, 10 stench res"
    },
    combat: new CombatStrategy2().kill($monster(_templateObject4622 || (_templateObject4622 = _taggedTemplateLiteral97(["screambat"])))).killItem(),
    limit: {
      tries: 10
    }
  }, {
    name: "Use Sonar 2",
    after: ["Get Sonar 2"],
    completed: function() {
      return step("questL04Bat") >= 2;
    },
    do: function() {
      return (0, import_kolmafia109.use)($item(_templateObject4722 || (_templateObject4722 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))));
    },
    limit: {
      tries: 3
    },
    freeaction: true
  }, {
    name: "Get Sonar 3",
    after: ["Use Sonar 2"],
    completed: function() {
      return step("questL04Bat") + (0, import_kolmafia109.itemAmount)($item(_templateObject4822 || (_templateObject4822 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"])))) >= 3;
    },
    prepare: function() {
      if ((0, import_kolmafia109.numericModifier)("stench resistance") < 1) ensureEffect($effect(_templateObject4922 || (_templateObject4922 = _taggedTemplateLiteral97(["Red Door Syndrome"]))));
      if ((0, import_kolmafia109.numericModifier)("stench resistance") < 1) throw "Unable to ensure stench res for guano junction";
    },
    do: $location(_templateObject5022 || (_templateObject5022 = _taggedTemplateLiteral97(["Guano Junction"]))),
    post: function() {
      if (have($item(_templateObject5124 || (_templateObject5124 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))))) (0, import_kolmafia109.use)($item(_templateObject5223 || (_templateObject5223 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))));
    },
    outfit: {
      modifier: "item, 10 stench res"
    },
    combat: new CombatStrategy2().kill($monster(_templateObject5322 || (_templateObject5322 = _taggedTemplateLiteral97(["screambat"])))).killItem(),
    limit: {
      tries: 10
    }
  }, {
    name: "Use Sonar 3",
    after: ["Get Sonar 3"],
    completed: function() {
      return step("questL04Bat") >= 3;
    },
    do: function() {
      return (0, import_kolmafia109.use)($item(_templateObject5422 || (_templateObject5422 = _taggedTemplateLiteral97(["sonar-in-a-biscuit"]))));
    },
    limit: {
      tries: 3
    },
    freeaction: true
  }, {
    name: "Boss Bat",
    after: ["Bat/Use Sonar 3"],
    completed: function() {
      return step("questL04Bat") >= 4;
    },
    do: $location(_templateObject5521 || (_templateObject5521 = _taggedTemplateLiteral97(["The Boss Bat's Lair"]))),
    combat: new CombatStrategy2().killHard($monster(_templateObject5620 || (_templateObject5620 = _taggedTemplateLiteral97(["Boss Bat"])))).ignore(),
    limit: {
      soft: 10
    },
    delay: 6
  }, {
    name: "Finish",
    after: ["Boss Bat"],
    priority: function() {
      return councilSafe() ? Priorities.Free : Priorities.BadMood;
    },
    completed: function() {
      return step("questL04Bat") === 999;
    },
    do: function() {
      return (0, import_kolmafia109.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }]
};

// src/tasks/level5.ts
var import_kolmafia110 = require("kolmafia");
init_dist();
var _templateObject800;
var _templateObject2181;
var _templateObject3164;
var _templateObject4142;
var _templateObject5125;
var _templateObject6106;
var _templateObject7100;
var _templateObject871;
var _templateObject961;
var _templateObject1050;
var _templateObject1148;
var _templateObject1248;
var _templateObject1347;
var _templateObject1441;
var _templateObject1539;
var _templateObject1639;
var _templateObject1738;
var _templateObject1838;
var _templateObject1936;
var _templateObject2036;
var _templateObject2184;
var _templateObject2236;
var _templateObject2333;
var _templateObject2431;
var _templateObject2530;
function _taggedTemplateLiteral98(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var KnobQuest = {
  name: "Knob",
  tasks: [{
    name: "Start",
    after: [],
    ready: function() {
      return atLevel(5);
    },
    completed: function() {
      return step("questL05Goblin") >= 0;
    },
    prepare: function() {
      if (have($item(_templateObject800 || (_templateObject800 = _taggedTemplateLiteral98(["natural magick candle"]))))) ensureEffect($effect(_templateObject2181 || (_templateObject2181 = _taggedTemplateLiteral98(["The Odour of Magick"]))));
    },
    do: function() {
      return (0, import_kolmafia110.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    priority: function() {
      return councilSafe() ? Priorities.Free : Priorities.BadMood;
    },
    freeaction: true
  }, {
    name: "Outskirts",
    after: [],
    completed: function() {
      return have($item(_templateObject3164 || (_templateObject3164 = _taggedTemplateLiteral98(["Knob Goblin Encryption Key"])))) || step("questL05Goblin") > 0;
    },
    outfit: function() {
      if (have($effect(_templateObject4142 || (_templateObject4142 = _taggedTemplateLiteral98(["Super Skill"]))))) return {
        equip: $items(_templateObject5125 || (_templateObject5125 = _taggedTemplateLiteral98(["Greatest American Pants"])))
      };
      return {};
    },
    do: $location(_templateObject6106 || (_templateObject6106 = _taggedTemplateLiteral98(["The Outskirts of Cobb's Knob"]))),
    choices: {
      111: 3,
      113: 2,
      118: 1
    },
    limit: {
      tries: 12
    },
    delay: 10
  }, {
    name: "Open Knob",
    after: ["Start", "Outskirts"],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return step("questL05Goblin") >= 1;
    },
    do: function() {
      return (0, import_kolmafia110.use)($item(_templateObject7100 || (_templateObject7100 = _taggedTemplateLiteral98(["Cobb's Knob map"]))));
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Harem",
    after: ["Open Knob"],
    completed: function() {
      return have($item(_templateObject871 || (_templateObject871 = _taggedTemplateLiteral98(["Knob Goblin harem veil"])))) && have($item(_templateObject961 || (_templateObject961 = _taggedTemplateLiteral98(["Knob Goblin harem pants"]))));
    },
    do: $location(_templateObject1050 || (_templateObject1050 = _taggedTemplateLiteral98(["Cobb's Knob Harem"]))),
    outfit: function() {
      if (have($item(_templateObject1148 || (_templateObject1148 = _taggedTemplateLiteral98(["industrial fire extinguisher"])))) && get("_fireExtinguisherCharge") >= 20 && !get("fireExtinguisherHaremUsed")) return {
        equip: $items(_templateObject1248 || (_templateObject1248 = _taggedTemplateLiteral98(["industrial fire extinguisher"])))
      };
      else return {
        modifier: "item",
        avoid: $items(_templateObject1347 || (_templateObject1347 = _taggedTemplateLiteral98(["broken champagne bottle"])))
      };
    },
    combat: new CombatStrategy2().macro(
      // Always use the fire extinguisher on the guard
      new Macro().trySkill($skill(_templateObject1441 || (_templateObject1441 = _taggedTemplateLiteral98(["Fire Extinguisher: Zone Specific"])))),
      $monsters(_templateObject1539 || (_templateObject1539 = _taggedTemplateLiteral98(["Knob Goblin Harem Guard, Knob Goblin Madam, Knob Goblin Harem Girl"])))
    ).banish($monsters(_templateObject1639 || (_templateObject1639 = _taggedTemplateLiteral98(["Knob Goblin Harem Guard, Knob Goblin Madam"])))).killItem(),
    limit: {
      soft: 20
    }
    // Allow for Cobb's Knob lab key
  }, {
    name: "Perfume",
    after: ["Harem"],
    completed: function() {
      return have($effect(_templateObject1738 || (_templateObject1738 = _taggedTemplateLiteral98(["Knob Goblin Perfume"])))) || have($item(_templateObject1838 || (_templateObject1838 = _taggedTemplateLiteral98(["Knob Goblin perfume"])))) || step("questL05Goblin") === 999;
    },
    do: $location(_templateObject1936 || (_templateObject1936 = _taggedTemplateLiteral98(["Cobb's Knob Harem"]))),
    outfit: {
      equip: $items(_templateObject2036 || (_templateObject2036 = _taggedTemplateLiteral98(["Knob Goblin harem veil, Knob Goblin harem pants"])))
    },
    limit: {
      tries: 2
    }
    // Allow for Cobb's Knob lab key
  }, {
    name: "King",
    after: ["Harem", "Perfume"],
    priority: function() {
      return have($effect(_templateObject2184 || (_templateObject2184 = _taggedTemplateLiteral98(["Knob Goblin Perfume"])))) ? Priorities.Effect : Priorities.None;
    },
    completed: function() {
      return step("questL05Goblin") === 999;
    },
    do: $location(_templateObject2236 || (_templateObject2236 = _taggedTemplateLiteral98(["Throne Room"]))),
    combat: new CombatStrategy2().killHard($monster(_templateObject2333 || (_templateObject2333 = _taggedTemplateLiteral98(["Knob Goblin King"])))),
    outfit: {
      equip: $items(_templateObject2431 || (_templateObject2431 = _taggedTemplateLiteral98(["Knob Goblin harem veil, Knob Goblin harem pants"]))),
      modifier: "moxie, -10ML"
    },
    effects: $effects(_templateObject2530 || (_templateObject2530 = _taggedTemplateLiteral98(["Knob Goblin Perfume"]))),
    limit: {
      tries: 1
    },
    boss: true
  }]
};

// src/tasks/level6.ts
var import_kolmafia111 = require("kolmafia");
init_dist();
var _templateObject801;
var _templateObject2185;
var _templateObject3165;
var _templateObject4143;
var _templateObject5126;
var _templateObject6107;
var _templateObject7101;
var _templateObject878;
var _templateObject968;
var _templateObject1051;
var _templateObject1149;
var _templateObject1249;
var _templateObject1348;
var _templateObject1446;
var _templateObject1540;
var _templateObject1640;
var _templateObject1739;
var _templateObject1839;
var _templateObject1937;
var _templateObject2037;
var _templateObject2186;
var _templateObject2237;
var _templateObject2334;
var _templateObject2433;
var _templateObject2531;
var _templateObject2629;
var _templateObject2729;
var _templateObject2827;
var _templateObject2927;
var _templateObject3027;
var _templateObject3166;
function _taggedTemplateLiteral99(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var FriarQuest = {
  name: "Friar",
  tasks: [{
    name: "Start",
    after: [],
    ready: function() {
      return atLevel(6);
    },
    completed: function() {
      return step("questL06Friar") !== -1;
    },
    do: function() {
      return (0, import_kolmafia111.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    priority: function() {
      return councilSafe() ? Priorities.Free : Priorities.BadMood;
    },
    freeaction: true
  }, {
    name: "Heart",
    after: ["Start"],
    priority: function() {
      if (get("noncombatForcerActive") && have($item(_templateObject801 || (_templateObject801 = _taggedTemplateLiteral99(["latte lovers member's mug"])))) && !get("latteUnlocks").includes("wing")) return {
        score: -2,
        reason: "Still need latte here"
      };
      else return Priorities.None;
    },
    completed: function() {
      return have($item(_templateObject2185 || (_templateObject2185 = _taggedTemplateLiteral99(["box of birthday candles"])))) || step("questL06Friar") === 999;
    },
    prepare: function() {
      tryPlayApriling("-combat");
    },
    do: $location(_templateObject3165 || (_templateObject3165 = _taggedTemplateLiteral99(["The Dark Heart of the Woods"]))),
    outfit: function() {
      if (have($item(_templateObject4143 || (_templateObject4143 = _taggedTemplateLiteral99(["latte lovers member's mug"])))) && !get("latteUnlocks").includes("wing")) {
        return {
          modifier: "-combat",
          equip: $items(_templateObject5126 || (_templateObject5126 = _taggedTemplateLiteral99(["latte lovers member's mug"])))
        };
      }
      return {
        modifier: "-combat"
      };
    },
    ncforce: NCForce.Eventually,
    limit: {
      tries: 24
    }
  }, {
    name: "Neck",
    after: ["Start"],
    completed: function() {
      return have($item(_templateObject6107 || (_templateObject6107 = _taggedTemplateLiteral99(["dodecagram"])))) || step("questL06Friar") === 999;
    },
    prepare: function() {
      tryPlayApriling("-combat");
    },
    do: $location(_templateObject7101 || (_templateObject7101 = _taggedTemplateLiteral99(["The Dark Neck of the Woods"]))),
    outfit: {
      modifier: "-combat"
    },
    choices: {
      1428: 2
    },
    ncforce: NCForce.Eventually,
    limit: {
      tries: 24
    }
  }, {
    name: "Elbow",
    after: ["Start"],
    priority: function() {
      if (get("noncombatForcerActive") && have($item(_templateObject878 || (_templateObject878 = _taggedTemplateLiteral99(["latte lovers member's mug"])))) && !get("latteUnlocks").includes("vitamins")) return {
        score: -2,
        reason: "Still need latte here"
      };
      else return Priorities.None;
    },
    completed: function() {
      return have($item(_templateObject968 || (_templateObject968 = _taggedTemplateLiteral99(["eldritch butterknife"])))) || step("questL06Friar") === 999;
    },
    prepare: function() {
      tryPlayApriling("-combat");
    },
    do: $location(_templateObject1051 || (_templateObject1051 = _taggedTemplateLiteral99(["The Dark Elbow of the Woods"]))),
    outfit: function() {
      if (have($item(_templateObject1149 || (_templateObject1149 = _taggedTemplateLiteral99(["latte lovers member's mug"])))) && !get("latteUnlocks").includes("vitamins")) {
        return {
          modifier: "-combat",
          equip: $items(_templateObject1249 || (_templateObject1249 = _taggedTemplateLiteral99(["latte lovers member's mug"])))
        };
      }
      return {
        modifier: "-combat"
      };
    },
    ncforce: NCForce.Eventually,
    limit: {
      tries: 24
    }
  }, {
    name: "Finish",
    after: ["Heart", "Elbow", "Neck"],
    completed: function() {
      return step("questL06Friar") === 999;
    },
    do: function() {
      return (0, import_kolmafia111.visitUrl)("friars.php?action=ritual&pwd");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }]
};
var OrganQuest = {
  name: "Organ",
  tasks: [{
    name: "Start",
    after: ["Friar/Finish"],
    completed: function() {
      return step("questM10Azazel") >= 0;
    },
    do: function() {
      (0, import_kolmafia111.visitUrl)("pandamonium.php?action=temp");
      (0, import_kolmafia111.visitUrl)("pandamonium.php?action=sven");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Tutu",
    after: ["Start"],
    completed: function() {
      return have($item(_templateObject1348 || (_templateObject1348 = _taggedTemplateLiteral99(["Azazel's tutu"])))) || step("questM10Azazel") === 999;
    },
    acquire: [{
      item: $item(_templateObject1446 || (_templateObject1446 = _taggedTemplateLiteral99(["imp air"]))),
      num: 5
    }, {
      item: $item(_templateObject1540 || (_templateObject1540 = _taggedTemplateLiteral99(["bus pass"]))),
      num: 5
    }],
    do: function() {
      return (0, import_kolmafia111.visitUrl)("pandamonium.php?action=moan");
    },
    limit: {
      tries: 2
    },
    freeaction: true
  }, {
    name: "Arena",
    after: ["Start"],
    completed: function() {
      if (step("questM10Azazel") === 999) return true;
      if (have($item(_templateObject1640 || (_templateObject1640 = _taggedTemplateLiteral99(["Azazel's unicorn"]))))) return true;
      var count = function(items) {
        return items.reduce(function(sum2, item14) {
          return sum2 + (0, import_kolmafia111.itemAmount)(item14);
        }, 0);
      };
      if (count($items(_templateObject1739 || (_templateObject1739 = _taggedTemplateLiteral99(["giant marshmallow, beer-scented teddy bear, gin-soaked blotter paper"])))) < 2) return false;
      if (count($items(_templateObject1839 || (_templateObject1839 = _taggedTemplateLiteral99(["booze-soaked cherry, comfy pillow, sponge cake"])))) < 2) return false;
      return true;
    },
    do: $location(_templateObject1937 || (_templateObject1937 = _taggedTemplateLiteral99(["Infernal Rackets Backstage"]))),
    limit: {
      soft: 30
    },
    outfit: {
      modifier: "-combat"
    }
  }, {
    name: "Unicorn",
    after: ["Arena"],
    completed: function() {
      return have($item(_templateObject2037 || (_templateObject2037 = _taggedTemplateLiteral99(["Azazel's unicorn"])))) || step("questM10Azazel") === 999;
    },
    do: function() {
      var goals = {
        Bognort: $items(_templateObject2186 || (_templateObject2186 = _taggedTemplateLiteral99(["giant marshmallow, gin-soaked blotter paper"]))),
        Stinkface: $items(_templateObject2237 || (_templateObject2237 = _taggedTemplateLiteral99(["beer-scented teddy bear, gin-soaked blotter paper"]))),
        Flargwurm: $items(_templateObject2334 || (_templateObject2334 = _taggedTemplateLiteral99(["booze-soaked cherry, sponge cake"]))),
        Jim: $items(_templateObject2433 || (_templateObject2433 = _taggedTemplateLiteral99(["comfy pillow, sponge cake"])))
      };
      (0, import_kolmafia111.visitUrl)("pandamonium.php?action=sven");
      for (var _i = 0, _Object$keys = Object.keys(goals); _i < _Object$keys.length; _i++) {
        var member = _Object$keys[_i];
        if (goals[member].length === 0) throw "Unable to solve Azazel's arena quest";
        var item14 = have(goals[member][0]) ? (0, import_kolmafia111.toInt)(goals[member][0]) : (0, import_kolmafia111.toInt)(goals[member][1]);
        (0, import_kolmafia111.visitUrl)("pandamonium.php?action=sven&bandmember=".concat(member, "&togive=").concat(item14, "&preaction=try"));
      }
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Comedy Club",
    after: ["Start"],
    completed: function() {
      return have($item(_templateObject2531 || (_templateObject2531 = _taggedTemplateLiteral99(["observational glasses"]))));
    },
    do: $location(_templateObject2629 || (_templateObject2629 = _taggedTemplateLiteral99(["The Laugh Floor"]))),
    outfit: {
      modifier: "+combat"
    },
    combat: new CombatStrategy2().kill($monsters(_templateObject2729 || (_templateObject2729 = _taggedTemplateLiteral99(["Carbuncle Top, Larry of the Field of Signs, Victor the Insult Comic Hellhound"])))),
    limit: {
      soft: 30
    }
  }, {
    name: "Lollipop",
    after: ["Comedy Club"],
    completed: function() {
      return have($item(_templateObject2827 || (_templateObject2827 = _taggedTemplateLiteral99(["Azazel's lollipop"])))) || step("questM10Azazel") === 999;
    },
    do: function() {
      return (0, import_kolmafia111.visitUrl)("pandamonium.php?action=mourn&preaction=observe");
    },
    outfit: {
      equip: $items(_templateObject2927 || (_templateObject2927 = _taggedTemplateLiteral99(["observational glasses"])))
    },
    limit: {
      tries: 1
    }
  }, {
    name: "Azazel",
    after: ["Tutu", "Unicorn", "Lollipop"],
    completed: function() {
      return step("questM10Azazel") === 999;
    },
    do: function() {
      return (0, import_kolmafia111.visitUrl)("pandamonium.php?action=temp");
    },
    limit: {
      tries: 1
    }
  }, {
    name: "Finish",
    after: ["Azazel"],
    completed: function() {
      return have($skill(_templateObject3027 || (_templateObject3027 = _taggedTemplateLiteral99(["Liver of Steel"]))));
    },
    do: function() {
      return (0, import_kolmafia111.drink)($item(_templateObject3166 || (_templateObject3166 = _taggedTemplateLiteral99(["steel margarita"]))));
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }]
};

// src/tasks/level7.ts
var import_kolmafia112 = require("kolmafia");
init_dist();
var _templateObject808;
var _templateObject2187;
var _templateObject3167;
var _templateObject4144;
var _templateObject5127;
var _templateObject6108;
var _templateObject7102;
var _templateObject879;
var _templateObject969;
var _templateObject1056;
var _templateObject1150;
var _templateObject1250;
var _templateObject1349;
var _templateObject1447;
var _templateObject1541;
var _templateObject1641;
var _templateObject1740;
var _templateObject1840;
var _templateObject1938;
var _templateObject2038;
var _templateObject2188;
var _templateObject2238;
var _templateObject2335;
var _templateObject2434;
var _templateObject2533;
var _templateObject2630;
var _templateObject2730;
var _templateObject2828;
var _templateObject2928;
var _templateObject3028;
var _templateObject3168;
var _templateObject3229;
var _templateObject3328;
var _templateObject3426;
var _templateObject3525;
var _templateObject3625;
var _templateObject3725;
var _templateObject3825;
var _templateObject3923;
var _templateObject4023;
var _templateObject4145;
var _templateObject4225;
var _templateObject4324;
var _templateObject4423;
var _templateObject4523;
var _templateObject4623;
var _templateObject4723;
var _templateObject4823;
var _templateObject4923;
var _templateObject5023;
var _templateObject5128;
var _templateObject5224;
var _templateObject5323;
var _templateObject5423;
var _templateObject5522;
var _templateObject5621;
var _templateObject5720;
var _templateObject5819;
var _templateObject5917;
var _templateObject6015;
var _templateObject6121;
var _templateObject6220;
var _templateObject6320;
var _templateObject6420;
var _templateObject6519;
var _templateObject6616;
var _templateObject6713;
var _templateObject6813;
var _templateObject6913;
var _templateObject7013;
var _templateObject7118;
var _templateObject7218;
var _templateObject7317;
var _templateObject7417;
var _templateObject7515;
var _templateObject7612;
var _templateObject7710;
var _templateObject7810;
var _templateObject7910;
var _templateObject809;
var _templateObject8115;
var _templateObject8215;
var _templateObject8315;
var _templateObject8414;
var _templateObject8511;
var _templateObject8610;
var _templateObject8710;
var _templateObject888;
function _taggedTemplateLiteral100(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function tuneCape() {
  if (have($item(_templateObject808 || (_templateObject808 = _taggedTemplateLiteral100(["unwrapped knock-off retro superhero cape"])))) && (get("retroCapeSuperhero") !== "vampire" || get("retroCapeWashingInstructions") !== "kill")) {
    (0, import_kolmafia112.cliExecute)("retrocape vampire kill");
  }
}
function tryCape(sword) {
  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    rest[_key - 1] = arguments[_key];
  }
  if (have($item(_templateObject2187 || (_templateObject2187 = _taggedTemplateLiteral100(["unwrapped knock-off retro superhero cape"]))))) {
    rest.unshift($item(_templateObject3167 || (_templateObject3167 = _taggedTemplateLiteral100(["unwrapped knock-off retro superhero cape"]))));
    rest.unshift(sword);
  }
  return rest;
}
var slay_macro = new Macro().trySkill($skill(_templateObject4144 || (_templateObject4144 = _taggedTemplateLiteral100(["Slay the Dead"]))));
var Alcove = [{
  name: "Alcove",
  after: ["Start"],
  prepare: function() {
    tuneCape();
    if (haveLoathingIdolMicrophone()) ensureEffect($effect(_templateObject5127 || (_templateObject5127 = _taggedTemplateLiteral100(["Poppy Performance"]))));
    if (have($item(_templateObject6108 || (_templateObject6108 = _taggedTemplateLiteral100(["old bronzer"]))))) ensureEffect($effect(_templateObject7102 || (_templateObject7102 = _taggedTemplateLiteral100(["Sepia Tan"]))));
    if (have($item(_templateObject879 || (_templateObject879 = _taggedTemplateLiteral100(["ant agonist"]))))) ensureEffect($effect(_templateObject969 || (_templateObject969 = _taggedTemplateLiteral100(["All Fired Up"]))));
    if (have($item(_templateObject1056 || (_templateObject1056 = _taggedTemplateLiteral100(["Angry Farmer candy"]))))) ensureEffect($effect(_templateObject1150 || (_templateObject1150 = _taggedTemplateLiteral100(["Sugar Rush"]))));
    if ((0, import_kolmafia112.numericModifier)("Initiative") < 850 && have($skill(_templateObject1250 || (_templateObject1250 = _taggedTemplateLiteral100(["Silent Hunter"]))))) {
      if ((0, import_kolmafia112.myClass)() === $class(_templateObject1349 || (_templateObject1349 = _taggedTemplateLiteral100(["Seal Clubber"])))) ensureWithMPSwaps($effects(_templateObject1447 || (_templateObject1447 = _taggedTemplateLiteral100(["Silent Hunting"]))));
      else ensureWithMPSwaps($effects(_templateObject1541 || (_templateObject1541 = _taggedTemplateLiteral100(["Nearly Silent Hunting"]))));
    }
    tryPlayApriling("-combat");
    if (have($item(_templateObject1641 || (_templateObject1641 = _taggedTemplateLiteral100(["designer sweatpants"])))) && get("sweat", 0) >= 90 && (0, import_kolmafia112.numericModifier)("Initiative") < 850) {
      (0, import_kolmafia112.visitUrl)("runskillz.php?action=Skillz&whichskill=7419&targetplayer=0&pwd&quantity=1");
    }
  },
  ready: function() {
    return (0, import_kolmafia112.myBasestat)($stat(_templateObject1740 || (_templateObject1740 = _taggedTemplateLiteral100(["Muscle"])))) >= 62;
  },
  completed: function() {
    return get("cyrptAlcoveEvilness") <= 13;
  },
  do: $location(_templateObject1840 || (_templateObject1840 = _taggedTemplateLiteral100(["The Defiled Alcove"]))),
  post: function() {
    if (haveFlorest() && Florist_exports.ShuffleTruffle.available()) {
      Florist_exports.ShuffleTruffle.plant();
    }
  },
  outfit: function() {
    var items = [$item(_templateObject1938 || (_templateObject1938 = _taggedTemplateLiteral100(["gravy boat"]))), $item(_templateObject2038 || (_templateObject2038 = _taggedTemplateLiteral100(["backup camera"]))), $item(_templateObject2188 || (_templateObject2188 = _taggedTemplateLiteral100(["rocket boots"]))), $item(_templateObject2238 || (_templateObject2238 = _taggedTemplateLiteral100(["Lord Spookyraven's ear trumpet"]))), $item(_templateObject2335 || (_templateObject2335 = _taggedTemplateLiteral100(["Jurassic Parka"])))];
    if (DaylightShavings_exports.nextBuff() === $effect(_templateObject2434 || (_templateObject2434 = _taggedTemplateLiteral100(["Gull-Wing Moustache"])))) {
      items.push($item(_templateObject2533 || (_templateObject2533 = _taggedTemplateLiteral100(["Daylight Shavings Helmet"]))));
    }
    return {
      equip: tryCape.apply(void 0, [$item(_templateObject2630 || (_templateObject2630 = _taggedTemplateLiteral100(["antique machete"])))].concat(items)),
      modifier: "init 850max",
      modes: {
        backupcamera: "init",
        parka: "pterodactyl"
      }
    };
  },
  // Modern zmobie does not show up in orb
  orbtargets: function() {
    return [];
  },
  choices: {
    153: 4
  },
  combat: new CombatStrategy2().macro(slay_macro).kill(),
  limit: {
    turns: 37
  }
}, {
  name: "Alcove Boss",
  after: ["Start", "Alcove"],
  completed: function() {
    return get("cyrptAlcoveEvilness") === 0 && step("questL07Cyrptic") !== -1;
  },
  do: $location(_templateObject2730 || (_templateObject2730 = _taggedTemplateLiteral100(["The Defiled Alcove"]))),
  combat: new CombatStrategy2().killHard(),
  boss: true,
  limit: {
    tries: 1
  }
}];
var Cranny = [{
  name: "Cranny",
  after: ["Start"],
  ready: function() {
    return (0, import_kolmafia112.myBasestat)($stat(_templateObject2828 || (_templateObject2828 = _taggedTemplateLiteral100(["Muscle"])))) >= 62;
  },
  completed: function() {
    return get("cyrptCrannyEvilness") <= 13;
  },
  prepare: function() {
    tuneCape();
    (0, import_kolmafia112.changeMcd)(10);
    fillHp();
    tryPlayApriling("-combat");
  },
  post: function() {
    if ((0, import_kolmafia112.currentMcd)() > 0) (0, import_kolmafia112.changeMcd)(0);
    if (haveFlorest() && Florist_exports.BlusteryPuffball.available()) {
      Florist_exports.BlusteryPuffball.plant();
    }
  },
  do: $location(_templateObject2928 || (_templateObject2928 = _taggedTemplateLiteral100(["The Defiled Cranny"]))),
  outfit: function() {
    return {
      equip: tryCape($item(_templateObject3028 || (_templateObject3028 = _taggedTemplateLiteral100(["antique machete"]))), $item(_templateObject3168 || (_templateObject3168 = _taggedTemplateLiteral100(["gravy boat"]))), $item(_templateObject3229 || (_templateObject3229 = _taggedTemplateLiteral100(["old patched suit-pants"]))), $item(_templateObject3328 || (_templateObject3328 = _taggedTemplateLiteral100(["unbreakable umbrella"]))), $item(_templateObject3426 || (_templateObject3426 = _taggedTemplateLiteral100(["barrel lid"]))), $item(_templateObject3525 || (_templateObject3525 = _taggedTemplateLiteral100(["carnivorous potted plant"])))),
      modifier: "-combat, ML",
      modes: {
        umbrella: "cocoon"
      }
    };
  },
  choices: {
    523: 4
  },
  combat: new CombatStrategy2().macro(slay_macro).macro(function() {
    var macro = new Macro();
    if (have($skill(_templateObject3625 || (_templateObject3625 = _taggedTemplateLiteral100(["Garbage Nova"]))))) macro.while_("!mpbelow 50", Macro.skill($skill(_templateObject3725 || (_templateObject3725 = _taggedTemplateLiteral100(["Garbage Nova"])))));
    if (have($skill(_templateObject3825 || (_templateObject3825 = _taggedTemplateLiteral100(["Splattersmash"]))))) macro.while_("!mpbelow 25", Macro.skill($skill(_templateObject3923 || (_templateObject3923 = _taggedTemplateLiteral100(["Splattersmash"])))));
    if (have($skill(_templateObject4023 || (_templateObject4023 = _taggedTemplateLiteral100(["Saucegeyser"]))))) macro.while_("!mpbelow 24", Macro.skill($skill(_templateObject4145 || (_templateObject4145 = _taggedTemplateLiteral100(["Saucegeyser"])))));
    return macro;
  }, $monsters(_templateObject4225 || (_templateObject4225 = _taggedTemplateLiteral100(["swarm of ghuol whelps, big swarm of ghuol whelps, giant swarm of ghuol whelps"])))).kill($monsters(_templateObject4324 || (_templateObject4324 = _taggedTemplateLiteral100(["swarm of ghuol whelps, big swarm of ghuol whelps, giant swarm of ghuol whelps, huge ghuol"])))),
  // Do not search for swarm with orb
  orbtargets: function() {
    return [];
  },
  limit: {
    turns: 37
  }
}, {
  name: "Cranny Boss",
  after: ["Start", "Cranny"],
  completed: function() {
    return get("cyrptCrannyEvilness") === 0 && step("questL07Cyrptic") !== -1;
  },
  do: $location(_templateObject4423 || (_templateObject4423 = _taggedTemplateLiteral100(["The Defiled Cranny"]))),
  combat: new CombatStrategy2().killHard(),
  boss: true,
  limit: {
    tries: 1
  }
}];
var Niche = [{
  name: "Niche",
  after: ["Start"],
  prepare: tuneCape,
  ready: function() {
    return (0, import_kolmafia112.myBasestat)($stat(_templateObject4523 || (_templateObject4523 = _taggedTemplateLiteral100(["Muscle"])))) >= 62;
  },
  completed: function() {
    return get("cyrptNicheEvilness") <= 13;
  },
  priority: function() {
    if (have($familiar(_templateObject4623 || (_templateObject4623 = _taggedTemplateLiteral100(["Patriotic Eagle"]))))) {
      if (!have($effect(_templateObject4723 || (_templateObject4723 = _taggedTemplateLiteral100(["Everything Looks Red, White and Blue"]))))) return {
        score: 8,
        reason: "Launch RWB"
      };
      if (get("rwbMonsterCount") > 1 || get("cyrptNicheEvilness") <= 16) return {
        score: 0.1,
        reason: "Kill RWB monster"
      };
      if (have($effect(_templateObject4823 || (_templateObject4823 = _taggedTemplateLiteral100(["Everything Looks Red, White and Blue"]))))) return {
        score: -80,
        reason: "Wait to launch RWB"
      };
    }
    return Priorities.None;
  },
  do: $location(_templateObject4923 || (_templateObject4923 = _taggedTemplateLiteral100(["The Defiled Niche"]))),
  choices: {
    157: 4
  },
  outfit: function() {
    var result = {
      equip: tryCape($item(_templateObject5023 || (_templateObject5023 = _taggedTemplateLiteral100(["antique machete"]))), $item(_templateObject5128 || (_templateObject5128 = _taggedTemplateLiteral100(["gravy boat"]))))
    };
    if (get("rwbMonsterCount") !== 0) {
      result.avoid = $items(_templateObject5224 || (_templateObject5224 = _taggedTemplateLiteral100(["miniature crystal ball"])));
    }
    if (get("rwbMonsterCount") <= 1) {
      result.familiar = $familiar(_templateObject5323 || (_templateObject5323 = _taggedTemplateLiteral100(["Patriotic Eagle"])));
    }
    return result;
  },
  combat: new CombatStrategy2().macro(function() {
    if (get("rwbMonsterCount") <= 1 && get("cyrptNicheEvilness") > 16) return Macro.trySkill($skill(_templateObject5423 || (_templateObject5423 = _taggedTemplateLiteral100(["%fn, fire a Red, White and Blue Blast"]))));
    return new Macro();
  }, $monster(_templateObject5522 || (_templateObject5522 = _taggedTemplateLiteral100(["dirty old lihc"])))).macro(slay_macro, $monsters(_templateObject5621 || (_templateObject5621 = _taggedTemplateLiteral100(["dirty old lihc, basic lihc, senile lihc, slick lihc"])))).kill($monster(_templateObject5720 || (_templateObject5720 = _taggedTemplateLiteral100(["dirty old lihc"])))).banish($monsters(_templateObject5819 || (_templateObject5819 = _taggedTemplateLiteral100(["basic lihc, senile lihc, slick lihc"])))),
  // Don't persist banishes while we are eagle repeating
  ignore_banishes: function() {
    return have($familiar(_templateObject5917 || (_templateObject5917 = _taggedTemplateLiteral100(["Patriotic Eagle"])))) && (0, import_kolmafia112.myTurncount)() < 200;
  },
  orbtargets: function() {
    if (get("rwbMonsterCount") === 0) return [$monster(_templateObject6015 || (_templateObject6015 = _taggedTemplateLiteral100(["dirty old lihc"])))];
    else return void 0;
  },
  map_the_monster: function() {
    if (get("rwbMonsterCount") === 0 && have($familiar(_templateObject6121 || (_templateObject6121 = _taggedTemplateLiteral100(["Patriotic Eagle"]))))) return $monster(_templateObject6220 || (_templateObject6220 = _taggedTemplateLiteral100(["dirty old lihc"])));
    else return $monster(_templateObject6320 || (_templateObject6320 = _taggedTemplateLiteral100(["none"])));
  },
  limit: {
    turns: 37
  }
}, {
  name: "Niche Boss",
  after: ["Start", "Niche"],
  completed: function() {
    return get("cyrptNicheEvilness") === 0 && step("questL07Cyrptic") !== -1;
  },
  do: $location(_templateObject6420 || (_templateObject6420 = _taggedTemplateLiteral100(["The Defiled Niche"]))),
  combat: new CombatStrategy2().killHard(),
  boss: true,
  limit: {
    tries: 1
  }
}];
var Nook = [{
  name: "Nook",
  after: ["Start"],
  prepare: tuneCape,
  priority: function() {
    if (AutumnAton_exports.have()) {
      if ($location(_templateObject6519 || (_templateObject6519 = _taggedTemplateLiteral100(["The Defiled Nook"]))).turnsSpent === 0) return Priorities.GoodAutumnaton;
    }
    return Priorities.None;
  },
  ready: function() {
    return (0, import_kolmafia112.myBasestat)($stat(_templateObject6616 || (_templateObject6616 = _taggedTemplateLiteral100(["Muscle"])))) >= 62;
  },
  completed: function() {
    return get("cyrptNookEvilness") <= 13;
  },
  do: $location(_templateObject6713 || (_templateObject6713 = _taggedTemplateLiteral100(["The Defiled Nook"]))),
  post: function() {
    if (haveFlorest() && Florist_exports.HornOfPlenty.available()) {
      Florist_exports.HornOfPlenty.plant();
    }
  },
  outfit: function() {
    if (have($item(_templateObject6813 || (_templateObject6813 = _taggedTemplateLiteral100(["industrial fire extinguisher"])))) && get("_fireExtinguisherCharge") >= 20 && !get("fireExtinguisherCyrptUsed")) return {
      equip: $items(_templateObject6913 || (_templateObject6913 = _taggedTemplateLiteral100(["gravy boat, industrial fire extinguisher"]))),
      modifier: "item 500max"
    };
    else return {
      equip: tryCape($item(_templateObject7013 || (_templateObject7013 = _taggedTemplateLiteral100(["antique machete"]))), $item(_templateObject7118 || (_templateObject7118 = _taggedTemplateLiteral100(["gravy boat"]))), $item(_templateObject7218 || (_templateObject7218 = _taggedTemplateLiteral100(["deft pirate hook"])))),
      modifier: "item 500max"
    };
  },
  choices: {
    155: 5,
    1429: 1
  },
  orbtargets: function() {
    if (AutumnAton_exports.have() && (0, import_kolmafia112.myTurncount)() < 400) return [];
    else return $monsters(_templateObject7317 || (_templateObject7317 = _taggedTemplateLiteral100(["spiny skelelton, toothy sklelton"])));
  },
  combat: new CombatStrategy2().macro(function() {
    return Macro.externalIf(get("lastCopyableMonster") === $monster(_templateObject7417 || (_templateObject7417 = _taggedTemplateLiteral100(["spiny skelelton"]))), Macro.trySkill($skill(_templateObject7515 || (_templateObject7515 = _taggedTemplateLiteral100(["Feel Nostalgic"])))));
  }, $monster(_templateObject7612 || (_templateObject7612 = _taggedTemplateLiteral100(["toothy sklelton"])))).macro(function() {
    return Macro.externalIf(get("lastCopyableMonster") === $monster(_templateObject7710 || (_templateObject7710 = _taggedTemplateLiteral100(["toothy sklelton"]))), Macro.trySkill($skill(_templateObject7810 || (_templateObject7810 = _taggedTemplateLiteral100(["Feel Nostalgic"])))));
  }, $monster(_templateObject7910 || (_templateObject7910 = _taggedTemplateLiteral100(["spiny skelelton"])))).macro(slay_macro, $monsters(_templateObject809 || (_templateObject809 = _taggedTemplateLiteral100(["spiny skelelton, toothy sklelton"])))).kill($monsters(_templateObject8115 || (_templateObject8115 = _taggedTemplateLiteral100(["spiny skelelton, toothy sklelton"])))).macro(new Macro().trySkill($skill(_templateObject8215 || (_templateObject8215 = _taggedTemplateLiteral100(["Fire Extinguisher: Zone Specific"])))), $monster(_templateObject8315 || (_templateObject8315 = _taggedTemplateLiteral100(["party skelteon"])))).banish($monster(_templateObject8414 || (_templateObject8414 = _taggedTemplateLiteral100(["party skelteon"])))),
  // Don't persist banishes when just here for autumnaton
  ignore_banishes: function() {
    return AutumnAton_exports.have() && (0, import_kolmafia112.myTurncount)() < 100;
  },
  limit: {
    soft: 37
  }
}, {
  name: "Nook Eye",
  // In case we get eyes from outside sources (Nostalgia)
  after: ["Start"],
  priority: function() {
    return Priorities.Free;
  },
  ready: function() {
    return have($item(_templateObject8511 || (_templateObject8511 = _taggedTemplateLiteral100(["evil eye"]))));
  },
  completed: function() {
    return get("cyrptNookEvilness") <= 13;
  },
  do: function() {
    (0, import_kolmafia112.cliExecute)("use * evil eye");
  },
  freeaction: true,
  limit: {
    tries: 13,
    unready: true
  }
}, {
  name: "Nook Boss",
  after: ["Start", "Nook", "Nook Eye"],
  completed: function() {
    return get("cyrptNookEvilness") === 0 && step("questL07Cyrptic") !== -1;
  },
  do: $location(_templateObject8610 || (_templateObject8610 = _taggedTemplateLiteral100(["The Defiled Nook"]))),
  combat: new CombatStrategy2().killHard(),
  boss: true,
  limit: {
    tries: 2
  }
  // Possible dog adventure
}];
var CryptQuest = {
  name: "Crypt",
  tasks: [{
    name: "Start",
    after: [],
    ready: function() {
      return atLevel(7);
    },
    completed: function() {
      return step("questL07Cyrptic") !== -1;
    },
    do: function() {
      return (0, import_kolmafia112.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    priority: function() {
      return councilSafe() ? Priorities.Free : Priorities.BadMood;
    },
    freeaction: true
  }].concat(Alcove, Cranny, Niche, Nook, [{
    name: "Bonerdagon",
    after: ["Start", "Alcove Boss", "Cranny Boss", "Niche Boss", "Nook Boss"],
    completed: function() {
      return step("questL07Cyrptic") >= 1;
    },
    do: function() {
      (0, import_kolmafia112.adv1)($location(_templateObject8710 || (_templateObject8710 = _taggedTemplateLiteral100(["Haert of the Cyrpt"]))), -1, "");
      if (get("lastEncounter") !== "The Bonerdagon") (0, import_kolmafia112.visitUrl)((0, import_kolmafia112.toUrl)($location(_templateObject888 || (_templateObject888 = _taggedTemplateLiteral100(["The Defiled Cranny"])))));
    },
    choices: {
      527: 1
    },
    combat: new CombatStrategy2().killHard(),
    boss: true,
    limit: {
      tries: 2
    }
  }, {
    name: "Finish",
    after: ["Start", "Bonerdagon"],
    priority: function() {
      return councilSafe() ? Priorities.Free : Priorities.BadMood;
    },
    completed: function() {
      return step("questL07Cyrptic") === 999;
    },
    do: function() {
      return (0, import_kolmafia112.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }])
};

// src/tasks/level9.ts
var import_kolmafia113 = require("kolmafia");
init_dist();
var _templateObject880;
var _templateObject2189;
var _templateObject3169;
var _templateObject4146;
var _templateObject5129;
var _templateObject6109;
var _templateObject7103;
var _templateObject881;
var _templateObject970;
var _templateObject1057;
var _templateObject1151;
var _templateObject1251;
var _templateObject1350;
var _templateObject1448;
var _templateObject1546;
var _templateObject1646;
var _templateObject1741;
var _templateObject1841;
var _templateObject1939;
var _templateObject2039;
var _templateObject2190;
var _templateObject2239;
var _templateObject2336;
var _templateObject2435;
var _templateObject2534;
var _templateObject2631;
var _templateObject2731;
var _templateObject2829;
var _templateObject2929;
var _templateObject3029;
var _templateObject3170;
var _templateObject3230;
var _templateObject3329;
var _templateObject3427;
var _templateObject3526;
var _templateObject3626;
var _templateObject3726;
var _templateObject3826;
var _templateObject3924;
var _templateObject4024;
var _templateObject4147;
var _templateObject4226;
var _templateObject4325;
var _templateObject4424;
var _templateObject4524;
var _templateObject4624;
var _templateObject4724;
var _templateObject4824;
var _templateObject4924;
var _templateObject5024;
var _templateObject5130;
var _templateObject5225;
var _templateObject5324;
var _templateObject5424;
var _templateObject5523;
var _templateObject5622;
var _templateObject5721;
var _templateObject5820;
var _templateObject5918;
var _templateObject6016;
var _templateObject6122;
var _templateObject6221;
var _templateObject6321;
var _templateObject6421;
var _templateObject6520;
var _templateObject6617;
var _templateObject6714;
var _templateObject6814;
var _templateObject6914;
var _templateObject7014;
var _templateObject7119;
var _templateObject7219;
var _templateObject7318;
var _templateObject7418;
var _templateObject7516;
var _templateObject7613;
var _templateObject7711;
var _templateObject7811;
var _templateObject7911;
var _templateObject8010;
var _templateObject8116;
var _templateObject8216;
var _templateObject8316;
var _templateObject8415;
var _templateObject8512;
var _templateObject8611;
var _templateObject8711;
var _templateObject889;
var _templateObject897;
var _templateObject907;
var _templateObject9115;
var _templateObject9215;
var _templateObject9314;
var _templateObject9411;
function _taggedTemplateLiteral101(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var ABoo = [{
  name: "ABoo Start",
  after: ["Start Peaks"],
  completed: function() {
    return $location(_templateObject880 || (_templateObject880 = _taggedTemplateLiteral101(["A-Boo Peak"]))).noncombatQueue.includes("Faction Traction = Inaction") || get("booPeakProgress") < 100;
  },
  do: $location(_templateObject2189 || (_templateObject2189 = _taggedTemplateLiteral101(["A-Boo Peak"]))),
  limit: {
    tries: 1
  }
}, {
  name: "ABoo Carto",
  after: ["ABoo Start"],
  completed: function() {
    return !have($skill(_templateObject3169 || (_templateObject3169 = _taggedTemplateLiteral101(["Comprehensive Cartography"])))) || $location(_templateObject4146 || (_templateObject4146 = _taggedTemplateLiteral101(["A-Boo Peak"]))).turnsSpent > 0 || get("lastCartographyBooPeak") === (0, import_kolmafia113.myAscensions)();
  },
  prepare: function() {
    if (have($item(_templateObject5129 || (_templateObject5129 = _taggedTemplateLiteral101(["pec oil"]))))) ensureEffect($effect(_templateObject6109 || (_templateObject6109 = _taggedTemplateLiteral101(["Oiled-Up"]))));
    (0, import_kolmafia113.use)($item(_templateObject7103 || (_templateObject7103 = _taggedTemplateLiteral101(["A-Boo clue"]))));
    fillHp();
  },
  do: $location(_templateObject881 || (_templateObject881 = _taggedTemplateLiteral101(["A-Boo Peak"]))),
  effects: $effects(_templateObject970 || (_templateObject970 = _taggedTemplateLiteral101(["Red Door Syndrome"]))),
  outfit: {
    modifier: "20 spooky res, 20 cold res, HP",
    familiar: $familiar(_templateObject1057 || (_templateObject1057 = _taggedTemplateLiteral101(["Exotic Parrot"])))
  },
  choices: {
    611: 1,
    1430: 1
  },
  combat: new CombatStrategy2().killItem(),
  limit: {
    tries: 1
  },
  freeaction: true,
  expectbeatenup: true
}, {
  name: "ABoo Clues",
  after: ["ABoo Start", "ABoo Carto"],
  completed: function() {
    return (0, import_kolmafia113.itemAmount)($item(_templateObject1151 || (_templateObject1151 = _taggedTemplateLiteral101(["A-Boo clue"])))) * 30 >= get("booPeakProgress");
  },
  do: $location(_templateObject1251 || (_templateObject1251 = _taggedTemplateLiteral101(["A-Boo Peak"]))),
  outfit: {
    modifier: "item",
    equip: $items(_templateObject1350 || (_templateObject1350 = _taggedTemplateLiteral101(["Space Trip safety headphones, HOA regulation book"])))
  },
  combat: new CombatStrategy2().killItem(),
  orbtargets: function() {
    return [];
  },
  choices: {
    611: 1,
    1430: 1
  },
  limit: {
    soft: 15
  }
}, {
  name: "ABoo Horror",
  after: ["ABoo Start", "ABoo Carto"],
  ready: function() {
    return have($item(_templateObject1448 || (_templateObject1448 = _taggedTemplateLiteral101(["A-Boo clue"]))));
  },
  completed: function() {
    return get("booPeakProgress") === 0;
  },
  prepare: function() {
    if (have($item(_templateObject1546 || (_templateObject1546 = _taggedTemplateLiteral101(["pec oil"]))))) ensureEffect($effect(_templateObject1646 || (_templateObject1646 = _taggedTemplateLiteral101(["Oiled-Up"]))));
    (0, import_kolmafia113.use)($item(_templateObject1741 || (_templateObject1741 = _taggedTemplateLiteral101(["A-Boo clue"]))));
    fillHp();
  },
  do: $location(_templateObject1841 || (_templateObject1841 = _taggedTemplateLiteral101(["A-Boo Peak"]))),
  effects: $effects(_templateObject1939 || (_templateObject1939 = _taggedTemplateLiteral101(["Red Door Syndrome"]))),
  outfit: {
    modifier: "20 spooky res, 20 cold res, HP",
    familiar: $familiar(_templateObject2039 || (_templateObject2039 = _taggedTemplateLiteral101(["Exotic Parrot"])))
  },
  choices: {
    611: 1,
    1430: 1
  },
  limit: {
    tries: 5
  },
  freeaction: true,
  expectbeatenup: true
}, {
  name: "ABoo Peak",
  after: ["ABoo Clues", "ABoo Horror"],
  completed: function() {
    return get("booPeakLit");
  },
  do: $location(_templateObject2190 || (_templateObject2190 = _taggedTemplateLiteral101(["A-Boo Peak"]))),
  limit: {
    tries: 1
  }
}];
var Oil = [{
  name: "Oil Kill",
  after: ["Start Peaks"],
  completed: function() {
    return get("oilPeakProgress") === 0;
  },
  prepare: function() {
    if ((0, import_kolmafia113.myMp)() < 80 && (0, import_kolmafia113.myMaxmp)() >= 80) customRestoreMp(80 - (0, import_kolmafia113.myMp)());
    if ((0, import_kolmafia113.myHp)() < 100 && (0, import_kolmafia113.myMaxhp)() >= 100) customRestoreMp(100 - (0, import_kolmafia113.myMp)());
    if ((0, import_kolmafia113.numericModifier)("Monster Level") < 100) (0, import_kolmafia113.changeMcd)(10);
  },
  post: function() {
    if ((0, import_kolmafia113.currentMcd)() > 0) (0, import_kolmafia113.changeMcd)(0);
  },
  do: $location(_templateObject2239 || (_templateObject2239 = _taggedTemplateLiteral101(["Oil Peak"]))),
  outfit: function() {
    var spec = {
      modifier: "ML 100 max, 0.1 item",
      equip: [],
      avoid: $items(_templateObject2336 || (_templateObject2336 = _taggedTemplateLiteral101(["Kramco Sausage-o-Matic\u2122"])))
    };
    if (have($item(_templateObject2435 || (_templateObject2435 = _taggedTemplateLiteral101(["unwrapped knock-off retro superhero cape"]))))) {
      spec.equip.push($item(_templateObject2534 || (_templateObject2534 = _taggedTemplateLiteral101(["unwrapped knock-off retro superhero cape"]))));
      spec.modes = {
        retrocape: ["vampire", "hold"]
      };
    }
    if (have($item(_templateObject2631 || (_templateObject2631 = _taggedTemplateLiteral101(["unbreakable umbrella"]))))) {
      spec.modifier = "ML 80 max, 0.1 item";
      spec.equip.push($item(_templateObject2731 || (_templateObject2731 = _taggedTemplateLiteral101(["unbreakable umbrella"]))));
    }
    if (have($familiar(_templateObject2829 || (_templateObject2829 = _taggedTemplateLiteral101(["Trick-or-Treating Tot"])))) && have($item(_templateObject2929 || (_templateObject2929 = _taggedTemplateLiteral101(["li'l ninja costume"]))))) {
      spec.familiar = $familiar(_templateObject3029 || (_templateObject3029 = _taggedTemplateLiteral101(["Trick-or-Treating Tot"])));
      spec.equip.push($item(_templateObject3170 || (_templateObject3170 = _taggedTemplateLiteral101(["li'l ninja costume"]))));
    }
    return spec;
  },
  combat: new CombatStrategy2().killItem(),
  limit: {
    tries: 18
  },
  orbtargets: function() {
    return void 0;
  }
}, {
  name: "Oil Peak",
  after: ["Oil Kill"],
  completed: function() {
    return get("oilPeakLit");
  },
  do: $location(_templateObject3230 || (_templateObject3230 = _taggedTemplateLiteral101(["Oil Peak"]))),
  limit: {
    tries: 1
  },
  orbtargets: function() {
    return void 0;
  }
}, {
  name: "Oil Jar",
  // get oil for jar of oil
  after: ["Oil Peak"],
  completed: function() {
    return (0, import_kolmafia113.itemAmount)($item(_templateObject3329 || (_templateObject3329 = _taggedTemplateLiteral101(["bubblin' crude"])))) >= 12 || have($item(_templateObject3427 || (_templateObject3427 = _taggedTemplateLiteral101(["jar of oil"])))) || !!(get("twinPeakProgress") & 4);
  },
  do: $location(_templateObject3526 || (_templateObject3526 = _taggedTemplateLiteral101(["Oil Peak"]))),
  outfit: function() {
    if (have($item(_templateObject3626 || (_templateObject3626 = _taggedTemplateLiteral101(["unbreakable umbrella"]))))) return {
      modifier: "ML 80 max, 0.1 item, monster level percent",
      equip: $items(_templateObject3726 || (_templateObject3726 = _taggedTemplateLiteral101(["unbreakable umbrella"])))
    };
    else return {
      modifier: "ML, 0.1 item"
    };
  },
  combat: new CombatStrategy2().killItem(),
  limit: {
    soft: 5
  },
  orbtargets: function() {
    return void 0;
  }
}];
var Twin = [{
  name: "Twin Stench Search",
  after: ["Start Peaks"],
  ready: function() {
    return !have($item(_templateObject3826 || (_templateObject3826 = _taggedTemplateLiteral101(["rusty hedge trimmers"])))) && stenchPlanner.maximumPossible(true) >= 4;
  },
  completed: function() {
    return !!(get("twinPeakProgress") & 1);
  },
  prepare: function() {
    if ((0, import_kolmafia113.numericModifier)("stench resistance") < 4) ensureEffect($effect(_templateObject3924 || (_templateObject3924 = _taggedTemplateLiteral101(["Red Door Syndrome"]))));
    if ((0, import_kolmafia113.numericModifier)("stench resistance") < 4) throw "Unable to ensure stench res for Twin Peak";
    tryPlayApriling("-combat");
  },
  do: $location(_templateObject4024 || (_templateObject4024 = _taggedTemplateLiteral101(["Twin Peak"]))),
  choices: {
    606: 1,
    607: 1
  },
  outfit: function() {
    return stenchPlanner.outfitFor(4, {
      modifier: "-combat, item"
    });
  },
  combat: new CombatStrategy2().killItem($monsters(_templateObject4147 || (_templateObject4147 = _taggedTemplateLiteral101(["bearpig topiary animal, elephant (meatcar?) topiary animal, spider (duck?) topiary animal"])))),
  limit: {
    soft: 10
  }
}, {
  name: "Twin Stench",
  after: ["Start Peaks"],
  ready: function() {
    return have($item(_templateObject4226 || (_templateObject4226 = _taggedTemplateLiteral101(["rusty hedge trimmers"])))) && stenchPlanner.maximumPossible(true) >= 4;
  },
  completed: function() {
    return !!(get("twinPeakProgress") & 1);
  },
  prepare: function() {
    if ((0, import_kolmafia113.numericModifier)("stench resistance") < 4) ensureEffect($effect(_templateObject4325 || (_templateObject4325 = _taggedTemplateLiteral101(["Red Door Syndrome"]))));
    if ((0, import_kolmafia113.numericModifier)("stench resistance") < 4) throw "Unable to ensure stench res for Twin Peak";
  },
  do: function() {
    (0, import_kolmafia113.use)($item(_templateObject4424 || (_templateObject4424 = _taggedTemplateLiteral101(["rusty hedge trimmers"]))));
  },
  choices: {
    606: 1,
    607: 1
  },
  outfit: function() {
    return stenchPlanner.outfitFor(4);
  },
  limit: {
    tries: 1
  }
}, {
  name: "Twin Item Search",
  after: ["Start Peaks"],
  ready: function() {
    return !have($item(_templateObject4524 || (_templateObject4524 = _taggedTemplateLiteral101(["rusty hedge trimmers"]))));
  },
  completed: function() {
    return !!(get("twinPeakProgress") & 2);
  },
  do: $location(_templateObject4624 || (_templateObject4624 = _taggedTemplateLiteral101(["Twin Peak"]))),
  choices: {
    606: 2,
    608: 1
  },
  outfit: {
    modifier: "item 50min, -combat"
  },
  combat: new CombatStrategy2().killItem($monsters(_templateObject4724 || (_templateObject4724 = _taggedTemplateLiteral101(["bearpig topiary animal, elephant (meatcar?) topiary animal, spider (duck?) topiary animal"])))),
  limit: {
    soft: 10
  }
}, {
  name: "Twin Item",
  after: ["Start Peaks"],
  ready: function() {
    return have($item(_templateObject4824 || (_templateObject4824 = _taggedTemplateLiteral101(["rusty hedge trimmers"]))));
  },
  completed: function() {
    return !!(get("twinPeakProgress") & 2);
  },
  do: function() {
    (0, import_kolmafia113.use)($item(_templateObject4924 || (_templateObject4924 = _taggedTemplateLiteral101(["rusty hedge trimmers"]))));
  },
  choices: {
    606: 2,
    608: 1
  },
  outfit: {
    modifier: "item 50min"
  },
  limit: {
    tries: 1
  }
}, {
  name: "Twin Oil Search",
  after: ["Start Peaks", "Oil Jar"],
  ready: function() {
    return !have($item(_templateObject5024 || (_templateObject5024 = _taggedTemplateLiteral101(["rusty hedge trimmers"]))));
  },
  completed: function() {
    return !!(get("twinPeakProgress") & 4);
  },
  do: $location(_templateObject5130 || (_templateObject5130 = _taggedTemplateLiteral101(["Twin Peak"]))),
  choices: {
    606: 3,
    609: 1,
    616: 1
  },
  outfit: {
    modifier: "item, -combat"
  },
  combat: new CombatStrategy2().killItem($monsters(_templateObject5225 || (_templateObject5225 = _taggedTemplateLiteral101(["bearpig topiary animal, elephant (meatcar?) topiary animal, spider (duck?) topiary animal"])))),
  acquire: [{
    item: $item(_templateObject5324 || (_templateObject5324 = _taggedTemplateLiteral101(["jar of oil"])))
  }],
  limit: {
    soft: 10
  }
}, {
  name: "Twin Oil",
  after: ["Start Peaks", "Oil Jar"],
  ready: function() {
    return have($item(_templateObject5424 || (_templateObject5424 = _taggedTemplateLiteral101(["rusty hedge trimmers"]))));
  },
  completed: function() {
    return !!(get("twinPeakProgress") & 4);
  },
  do: function() {
    (0, import_kolmafia113.use)($item(_templateObject5523 || (_templateObject5523 = _taggedTemplateLiteral101(["rusty hedge trimmers"]))));
  },
  choices: {
    606: 3,
    609: 1,
    616: 1
  },
  acquire: [{
    item: $item(_templateObject5622 || (_templateObject5622 = _taggedTemplateLiteral101(["jar of oil"])))
  }],
  limit: {
    tries: 1
  }
}, {
  name: "Twin Init Search",
  after: ["Twin Stench", "Twin Item", "Twin Oil", "Twin Stench Search", "Twin Item Search", "Twin Oil Search"],
  ready: function() {
    return !have($item(_templateObject5721 || (_templateObject5721 = _taggedTemplateLiteral101(["rusty hedge trimmers"]))));
  },
  completed: function() {
    return !!(get("twinPeakProgress") & 8);
  },
  do: $location(_templateObject5820 || (_templateObject5820 = _taggedTemplateLiteral101(["Twin Peak"]))),
  choices: {
    606: 4,
    610: 1,
    1056: 1
  },
  outfit: {
    modifier: "init 40 min, item, -combat"
  },
  combat: new CombatStrategy2().killItem($monsters(_templateObject5918 || (_templateObject5918 = _taggedTemplateLiteral101(["bearpig topiary animal, elephant (meatcar?) topiary animal, spider (duck?) topiary animal"])))),
  limit: {
    soft: 10
  }
}, {
  name: "Twin Init",
  after: ["Twin Stench", "Twin Item", "Twin Oil", "Twin Stench Search", "Twin Item Search", "Twin Oil Search"],
  ready: function() {
    return have($item(_templateObject6016 || (_templateObject6016 = _taggedTemplateLiteral101(["rusty hedge trimmers"]))));
  },
  completed: function() {
    return !!(get("twinPeakProgress") & 8);
  },
  do: function() {
    (0, import_kolmafia113.use)($item(_templateObject6122 || (_templateObject6122 = _taggedTemplateLiteral101(["rusty hedge trimmers"]))));
  },
  choices: {
    606: 4,
    610: 1,
    1056: 1
  },
  outfit: {
    modifier: "init 40 min"
  },
  limit: {
    tries: 1
  }
}];
var ChasmQuest = {
  name: "Orc Chasm",
  tasks: [{
    name: "Start",
    after: [],
    ready: function() {
      return atLevel(9);
    },
    completed: function() {
      return step("questL09Topping") !== -1;
    },
    do: function() {
      return (0, import_kolmafia113.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    priority: function() {
      return councilSafe() ? Priorities.Free : Priorities.BadMood;
    },
    freeaction: true
  }, {
    name: "Bat Wings Bridge Parts",
    after: ["Start"],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return have($item(_templateObject6221 || (_templateObject6221 = _taggedTemplateLiteral101(["bat wings"])))) && get("chasmBridgeProgress") >= 25;
    },
    completed: function() {
      return step("questL09Topping") >= 1;
    },
    do: function() {
      (0, import_kolmafia113.visitUrl)("place.php?whichplace=orc_chasm&action=bridge".concat(get("chasmBridgeProgress")));
      (0, import_kolmafia113.visitUrl)("place.php?whichplace=orc_chasm&action=bridge_jump");
      (0, import_kolmafia113.visitUrl)("place.php?whichplace=highlands&action=highlands_dude");
    },
    outfit: {
      equip: $items(_templateObject6321 || (_templateObject6321 = _taggedTemplateLiteral101(["bat wings"])))
    },
    freeaction: true,
    limit: {
      tries: 1
    }
  }, {
    name: "Bridge",
    after: ["Start", "Macguffin/Forest"],
    // Wait for black paint
    priority: function() {
      if ((0, import_kolmafia113.getWorkshed)() === $item(_templateObject6421 || (_templateObject6421 = _taggedTemplateLiteral101(["model train set"])))) {
        return Priorities.BadTrain;
      }
      if (AutumnAton_exports.have()) {
        if ($location(_templateObject6520 || (_templateObject6520 = _taggedTemplateLiteral101(["The Smut Orc Logging Camp"]))).turnsSpent === 0) return Priorities.GoodAutumnaton;
      }
      return Priorities.None;
    },
    ready: function() {
      return (have($item(_templateObject6617 || (_templateObject6617 = _taggedTemplateLiteral101(["frozen jeans"])))) || have($item(_templateObject6714 || (_templateObject6714 = _taggedTemplateLiteral101(["industrial fire extinguisher"])))) || have($item(_templateObject6814 || (_templateObject6814 = _taggedTemplateLiteral101(["June cleaver"])))) && get("_juneCleaverCold", 0) >= 5) && get("smutOrcNoncombatProgress") < 15 || have($effect(_templateObject6914 || (_templateObject6914 = _taggedTemplateLiteral101(["Red Door Syndrome"])))) || (0, import_kolmafia113.myMeat)() >= 1e3;
    },
    completed: function() {
      return step("questL09Topping") >= 1;
    },
    prepare: function() {
      if (get("smutOrcNoncombatProgress") >= 15 && step("questL11Black") >= 2) {
        ensureEffect($effect(_templateObject7014 || (_templateObject7014 = _taggedTemplateLiteral101(["Red Door Syndrome"]))));
        ensureEffect($effect(_templateObject7119 || (_templateObject7119 = _taggedTemplateLiteral101(["Butt-Rock Hair"]))));
      }
    },
    do: $location(_templateObject7219 || (_templateObject7219 = _taggedTemplateLiteral101(["The Smut Orc Logging Camp"]))),
    post: function() {
      if (have($item(_templateObject7318 || (_templateObject7318 = _taggedTemplateLiteral101(["smut orc keepsake box"]))))) (0, import_kolmafia113.use)($item(_templateObject7418 || (_templateObject7418 = _taggedTemplateLiteral101(["smut orc keepsake box"]))));
      (0, import_kolmafia113.visitUrl)("place.php?whichplace=orc_chasm&action=bridge".concat(get("chasmBridgeProgress")));
    },
    outfit: function() {
      if (get("smutOrcNoncombatProgress") < 15) {
        var equip10 = $items(_templateObject7516 || (_templateObject7516 = _taggedTemplateLiteral101(["Space Trip safety headphones, HOA regulation book"])));
        if (have($item(_templateObject7613 || (_templateObject7613 = _taggedTemplateLiteral101(["frozen jeans"]))))) equip10.push($item(_templateObject7711 || (_templateObject7711 = _taggedTemplateLiteral101(["frozen jeans"]))));
        else if (have($item(_templateObject7811 || (_templateObject7811 = _taggedTemplateLiteral101(["June cleaver"])))) && get("_juneCleaverCold", 0) >= 5) equip10.push($item(_templateObject7911 || (_templateObject7911 = _taggedTemplateLiteral101(["June cleaver"]))));
        else if (have($item(_templateObject8010 || (_templateObject8010 = _taggedTemplateLiteral101(["industrial fire extinguisher"]))))) equip10.push($item(_templateObject8116 || (_templateObject8116 = _taggedTemplateLiteral101(["industrial fire extinguisher"]))));
        return {
          modifier: "item, -ML",
          equip: equip10,
          avoid: $items(_templateObject8216 || (_templateObject8216 = _taggedTemplateLiteral101(["broken champagne bottle"])))
        };
      } else return {
        modifier: "sleaze res",
        equip: $items(_templateObject8316 || (_templateObject8316 = _taggedTemplateLiteral101(["combat lover's locket"])))
      };
    },
    combat: new CombatStrategy2().macro(new Macro().attack().repeat(), [$monster(_templateObject8415 || (_templateObject8415 = _taggedTemplateLiteral101(["smut orc jacker"]))), $monster(_templateObject8512 || (_templateObject8512 = _taggedTemplateLiteral101(["smut orc nailer"]))), $monster(_templateObject8611 || (_templateObject8611 = _taggedTemplateLiteral101(["smut orc pipelayer"]))), $monster(_templateObject8711 || (_templateObject8711 = _taggedTemplateLiteral101(["smut orc screwer"])))]).kill(),
    choices: {
      1345: 3
    },
    freeaction: function() {
      return get("smutOrcNoncombatProgress") >= 15;
    },
    limit: {
      soft: 45,
      guard: Guards.after(function() {
        return !AutumnAton_exports.have() || $location(_templateObject889 || (_templateObject889 = _taggedTemplateLiteral101(["The Smut Orc Logging Camp"]))).turnsSpent > 0;
      })
    }
  }, {
    name: "Bridge Parts",
    after: ["Start"],
    priority: function() {
      return Priorities.Free;
    },
    ready: function() {
      return (have($item(_templateObject897 || (_templateObject897 = _taggedTemplateLiteral101(["morningwood plank"])))) || have($item(_templateObject907 || (_templateObject907 = _taggedTemplateLiteral101(["raging hardwood plank"])))) || have($item(_templateObject9115 || (_templateObject9115 = _taggedTemplateLiteral101(["weirdwood plank"]))))) && (have($item(_templateObject9215 || (_templateObject9215 = _taggedTemplateLiteral101(["long hard screw"])))) || have($item(_templateObject9314 || (_templateObject9314 = _taggedTemplateLiteral101(["messy butt joint"])))) || have($item(_templateObject9411 || (_templateObject9411 = _taggedTemplateLiteral101(["thick caulk"])))));
    },
    completed: function() {
      return step("questL09Topping") >= 1;
    },
    do: function() {
      (0, import_kolmafia113.visitUrl)("place.php?whichplace=orc_chasm&action=bridge".concat(get("chasmBridgeProgress")));
    },
    freeaction: true,
    limit: {
      tries: 30,
      unready: true
    }
  }, {
    name: "Start Peaks",
    after: ["Bridge", "Bridge Parts"],
    completed: function() {
      return step("questL09Topping") >= 2;
    },
    do: function() {
      (0, import_kolmafia113.visitUrl)("place.php?whichplace=highlands&action=highlands_dude");
      (0, import_kolmafia113.council)();
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }].concat(ABoo, Oil, Twin, [{
    name: "Finish",
    after: ["ABoo Peak", "Oil Peak", "Twin Init", "Twin Init Search"],
    completed: function() {
      return step("questL09Topping") === 999;
    },
    do: function() {
      (0, import_kolmafia113.visitUrl)("place.php?whichplace=highlands&action=highlands_dude");
      (0, import_kolmafia113.council)();
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }])
};

// src/tasks/level10.ts
var import_kolmafia114 = require("kolmafia");
init_dist();
var _templateObject890;
var _templateObject2191;
var _templateObject3171;
var _templateObject4148;
var _templateObject5131;
var _templateObject6123;
var _templateObject7104;
var _templateObject891;
var _templateObject971;
var _templateObject1058;
var _templateObject1156;
var _templateObject1256;
var _templateObject1351;
var _templateObject1449;
var _templateObject1547;
var _templateObject1647;
var _templateObject1745;
var _templateObject1845;
var _templateObject1940;
var _templateObject2040;
var _templateObject2194;
var _templateObject2240;
var _templateObject2337;
var _templateObject2436;
var _templateObject2535;
var _templateObject2633;
var _templateObject2733;
var _templateObject2830;
var _templateObject2930;
var _templateObject3030;
var _templateObject3173;
var _templateObject3231;
var _templateObject3330;
var _templateObject3428;
var _templateObject3527;
var _templateObject3627;
var _templateObject3727;
var _templateObject3827;
var _templateObject3925;
var _templateObject4025;
var _templateObject4149;
var _templateObject4227;
var _templateObject4326;
var _templateObject4425;
var _templateObject4525;
var _templateObject4625;
var _templateObject4725;
var _templateObject4825;
var _templateObject4925;
var _templateObject5025;
var _templateObject5132;
var _templateObject5226;
var _templateObject5325;
var _templateObject5425;
var _templateObject5524;
var _templateObject5623;
var _templateObject5722;
var _templateObject5821;
var _templateObject5919;
var _templateObject6017;
var _templateObject6124;
var _templateObject6222;
var _templateObject6322;
var _templateObject6422;
var _templateObject6521;
var _templateObject6618;
function _taggedTemplateLiteral102(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var GiantQuest = {
  name: "Giant",
  tasks: [{
    name: "Start",
    after: [],
    ready: function() {
      return atLevel(10);
    },
    completed: function() {
      return step("questL10Garbage") !== -1;
    },
    do: function() {
      return (0, import_kolmafia114.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    priority: function() {
      return councilSafe() ? Priorities.Free : Priorities.BadMood;
    },
    freeaction: true
  }, {
    name: "Get Bean",
    after: ["Bat/Use Sonar 2"],
    completed: function() {
      return have($item(_templateObject890 || (_templateObject890 = _taggedTemplateLiteral102(["enchanted bean"])))) || step("questL10Garbage") >= 1;
    },
    do: $location(_templateObject2191 || (_templateObject2191 = _taggedTemplateLiteral102(["The Beanbat Chamber"]))),
    outfit: {
      modifier: "item",
      equip: $items(_templateObject3171 || (_templateObject3171 = _taggedTemplateLiteral102(["miniature crystal ball"]))),
      avoid: $items(_templateObject4148 || (_templateObject4148 = _taggedTemplateLiteral102(["broken champagne bottle"])))
    },
    map_the_monster: function() {
      if (have($familiar(_templateObject5131 || (_templateObject5131 = _taggedTemplateLiteral102(["Patriotic Eagle"])))) && have($skill(_templateObject6123 || (_templateObject6123 = _taggedTemplateLiteral102(["Gallapagosian Mating Call"])))) && have($skill(_templateObject7104 || (_templateObject7104 = _taggedTemplateLiteral102(["Map the Monsters"]))))) return $monster(_templateObject891 || (_templateObject891 = _taggedTemplateLiteral102(["none"])));
      return $monster(_templateObject971 || (_templateObject971 = _taggedTemplateLiteral102(["beanbat"])));
    },
    combat: new CombatStrategy2().banish($monsters(_templateObject1058 || (_templateObject1058 = _taggedTemplateLiteral102(["magical fruit bat, musical fruit bat"])))).killItem($monster(_templateObject1156 || (_templateObject1156 = _taggedTemplateLiteral102(["beanbat"])))),
    limit: {
      soft: 10
    }
  }, {
    name: "Grow Beanstalk",
    after: ["Start", "Get Bean"],
    priority: function() {
      return Priorities.Free;
    },
    completed: function() {
      return step("questL10Garbage") >= 1;
    },
    do: function() {
      return (0, import_kolmafia114.use)($item(_templateObject1256 || (_templateObject1256 = _taggedTemplateLiteral102(["enchanted bean"]))));
    },
    outfit: {
      equip: $items(_templateObject1351 || (_templateObject1351 = _taggedTemplateLiteral102(["spring shoes"])))
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Airship YR Healer",
    after: ["Grow Beanstalk"],
    prepare: function() {
      return tryPlayApriling("-combat");
    },
    completed: function() {
      return have($item(_templateObject1449 || (_templateObject1449 = _taggedTemplateLiteral102(["amulet of extreme plot significance"]))));
    },
    do: $location(_templateObject1547 || (_templateObject1547 = _taggedTemplateLiteral102(["The Penultimate Fantasy Airship"]))),
    // Other options (bat wings) are sometimes chosen by choice script
    choices: {
      182: 1
    },
    post: function() {
      if (have($effect(_templateObject1647 || (_templateObject1647 = _taggedTemplateLiteral102(["Temporary Amnesia"]))))) (0, import_kolmafia114.cliExecute)("uneffect Temporary Amnesia");
    },
    orbtargets: function() {
      if (have($item(_templateObject1745 || (_templateObject1745 = _taggedTemplateLiteral102(["Fourth of May Cosplay Saber"]))))) {
        if (have($item(_templateObject1845 || (_templateObject1845 = _taggedTemplateLiteral102(["Mohawk wig"]))))) return $monsters(_templateObject1940 || (_templateObject1940 = _taggedTemplateLiteral102(["Quiet Healer"])));
        else return $monsters(_templateObject2040 || (_templateObject2040 = _taggedTemplateLiteral102(["Quiet Healer, Burly Sidekick"])));
      } else {
        return void 0;
      }
    },
    limit: {
      soft: 50
    },
    delay: function() {
      return have($item(_templateObject2194 || (_templateObject2194 = _taggedTemplateLiteral102(["Plastic Wrap Immateria"])))) ? 25 : have($item(_templateObject2240 || (_templateObject2240 = _taggedTemplateLiteral102(["Gauze Immateria"])))) ? 20 : 15;
    },
    // After that, just look for noncombats
    outfit: function() {
      if (forceItemPossible()) return {
        modifier: "-combat",
        equip: $items(_templateObject2337 || (_templateObject2337 = _taggedTemplateLiteral102(["bat wings"])))
      };
      else return {
        modifier: "-combat, item",
        equip: $items(_templateObject2436 || (_templateObject2436 = _taggedTemplateLiteral102(["bat wings"]))),
        avoid: $items(_templateObject2535 || (_templateObject2535 = _taggedTemplateLiteral102(["broken champagne bottle"])))
      };
    },
    combat: new CombatStrategy2().macro(function() {
      if (have($item(_templateObject2633 || (_templateObject2633 = _taggedTemplateLiteral102(["Mohawk wig"])))) || !have($skill(_templateObject2733 || (_templateObject2733 = _taggedTemplateLiteral102(["Emotionally Chipped"])))) || get("_feelEnvyUsed") >= 3) return new Macro();
      return Macro.skill($skill(_templateObject2830 || (_templateObject2830 = _taggedTemplateLiteral102(["Feel Envy"])))).step(killMacro());
    }, $monster(_templateObject2930 || (_templateObject2930 = _taggedTemplateLiteral102(["Burly Sidekick"])))).forceItems($monster(_templateObject3030 || (_templateObject3030 = _taggedTemplateLiteral102(["Quiet Healer"]))))
  }, {
    name: "Airship",
    after: ["Airship YR Healer"],
    completed: function() {
      return have($item(_templateObject3173 || (_templateObject3173 = _taggedTemplateLiteral102(["S.O.C.K."]))));
    },
    do: $location(_templateObject3231 || (_templateObject3231 = _taggedTemplateLiteral102(["The Penultimate Fantasy Airship"]))),
    // Other options (bat wings) are sometimes chosen by choice script
    choices: {
      182: 1
    },
    post: function() {
      if (have($effect(_templateObject3330 || (_templateObject3330 = _taggedTemplateLiteral102(["Temporary Amnesia"]))))) (0, import_kolmafia114.cliExecute)("uneffect Temporary Amnesia");
    },
    orbtargets: function() {
      return [];
    },
    outfit: {
      modifier: "-combat",
      equip: $items(_templateObject3428 || (_templateObject3428 = _taggedTemplateLiteral102(["bat wings"])))
    },
    limit: {
      soft: 50
    },
    delay: function() {
      return have($item(_templateObject3527 || (_templateObject3527 = _taggedTemplateLiteral102(["Plastic Wrap Immateria"])))) ? 25 : have($item(_templateObject3627 || (_templateObject3627 = _taggedTemplateLiteral102(["Gauze Immateria"])))) ? 20 : 15;
    },
    // After that, just look for noncombats
    combat: new CombatStrategy2().macro(function() {
      return have($item(_templateObject3727 || (_templateObject3727 = _taggedTemplateLiteral102(["Mohawk wig"])))) || !have($skill(_templateObject3827 || (_templateObject3827 = _taggedTemplateLiteral102(["Emotionally Chipped"])))) || get("_feelEnvyUsed") >= 3 ? new Macro() : Macro.skill($skill(_templateObject3925 || (_templateObject3925 = _taggedTemplateLiteral102(["Feel Envy"])))).step(killMacro());
    }, $monster(_templateObject4025 || (_templateObject4025 = _taggedTemplateLiteral102(["Burly Sidekick"]))))
  }, {
    name: "Basement Search",
    after: ["Airship", "Airship YR Healer"],
    completed: function() {
      return (0, import_kolmafia114.containsText)($location(_templateObject4149 || (_templateObject4149 = _taggedTemplateLiteral102(["The Castle in the Clouds in the Sky (Basement)"]))).noncombatQueue, "Mess Around with Gym") || step("questL10Garbage") >= 8;
    },
    prepare: function() {
      tryForceNC();
      tryPlayApriling("-combat");
    },
    do: $location(_templateObject4227 || (_templateObject4227 = _taggedTemplateLiteral102(["The Castle in the Clouds in the Sky (Basement)"]))),
    outfit: function() {
      if (!have($effect(_templateObject4326 || (_templateObject4326 = _taggedTemplateLiteral102(["Citizen of a Zone"])))) && have($familiar(_templateObject4425 || (_templateObject4425 = _taggedTemplateLiteral102(["Patriotic Eagle"]))))) {
        return {
          modifier: "-combat",
          familiar: $familiar(_templateObject4525 || (_templateObject4525 = _taggedTemplateLiteral102(["Patriotic Eagle"])))
        };
      }
      return {
        modifier: "-combat"
      };
    },
    combat: new CombatStrategy2().startingMacro(Macro.trySkill($skill(_templateObject4625 || (_templateObject4625 = _taggedTemplateLiteral102(["%fn, let's pledge allegiance to a Zone"]))))),
    choices: {
      670: 5,
      669: 1,
      671: 4
    },
    limit: {
      soft: 20
    }
  }, {
    name: "Basement Finish",
    after: ["Basement Search"],
    completed: function() {
      return step("questL10Garbage") >= 8;
    },
    do: $location(_templateObject4725 || (_templateObject4725 = _taggedTemplateLiteral102(["The Castle in the Clouds in the Sky (Basement)"]))),
    outfit: {
      equip: $items(_templateObject4825 || (_templateObject4825 = _taggedTemplateLiteral102(["amulet of extreme plot significance"])))
    },
    choices: {
      670: 4
    },
    limit: {
      tries: 1
    }
  }, {
    name: "Ground",
    after: ["Basement Finish"],
    prepare: function() {
      return tryPlayApriling("-combat");
    },
    completed: function() {
      return step("questL10Garbage") >= 9;
    },
    do: $location(_templateObject4925 || (_templateObject4925 = _taggedTemplateLiteral102(["The Castle in the Clouds in the Sky (Ground Floor)"]))),
    choices: {
      672: 3,
      673: 3,
      674: 3,
      1026: 2
    },
    outfit: function() {
      if (have($item(_templateObject5025 || (_templateObject5025 = _taggedTemplateLiteral102(["electric boning knife"]))))) return {};
      else return {
        modifier: "-combat"
      };
    },
    limit: {
      turns: 12
    },
    delay: 10
  }, {
    name: "Ground Knife",
    after: ["Ground", "Tower/Wall of Meat"],
    completed: function() {
      return have($item(_templateObject5132 || (_templateObject5132 = _taggedTemplateLiteral102(["electric boning knife"])))) || step("questL13Final") > 8 || have($item(_templateObject5226 || (_templateObject5226 = _taggedTemplateLiteral102(["Great Wolf's rocket launcher"])))) || have($item(_templateObject5325 || (_templateObject5325 = _taggedTemplateLiteral102(["Drunkula's bell"])))) || have($skill(_templateObject5425 || (_templateObject5425 = _taggedTemplateLiteral102(["Garbage Nova"]))));
    },
    do: $location(_templateObject5524 || (_templateObject5524 = _taggedTemplateLiteral102(["The Castle in the Clouds in the Sky (Ground Floor)"]))),
    choices: {
      672: 3,
      673: 3,
      674: 3,
      1026: 2
    },
    outfit: {
      modifier: "-combat"
    },
    limit: {
      soft: 20
    },
    delay: 10
  }, {
    name: "Top Floor",
    after: ["Ground", "Palindome/Hot Snake Precastle"],
    prepare: function() {
      return tryPlayApriling("-combat");
    },
    completed: function() {
      return step("questL10Garbage") >= 10;
    },
    do: $location(_templateObject5623 || (_templateObject5623 = _taggedTemplateLiteral102(["The Castle in the Clouds in the Sky (Top Floor)"]))),
    outfit: {
      equip: $items(_templateObject5722 || (_templateObject5722 = _taggedTemplateLiteral102(["Mohawk wig"]))),
      modifier: "-combat"
    },
    orbtargets: function() {
      return [];
    },
    combat: new CombatStrategy2().killHard($monster(_templateObject5821 || (_templateObject5821 = _taggedTemplateLiteral102(["Burning Snake of Fire"])))),
    choices: function() {
      return {
        675: 4,
        676: 4,
        677: 1,
        678: 1,
        679: 1,
        1431: (0, import_kolmafia114.haveEquipped)($item(_templateObject5919 || (_templateObject5919 = _taggedTemplateLiteral102(["Mohawk wig"])))) ? 4 : 1
      };
    },
    limit: {
      soft: 20
    }
  }, {
    name: "Finish",
    after: ["Top Floor"],
    priority: function() {
      return councilSafe() ? Priorities.Free : Priorities.BadMood;
    },
    completed: function() {
      return step("questL10Garbage") === 999;
    },
    do: function() {
      return (0, import_kolmafia114.visitUrl)("council.php");
    },
    limit: {
      soft: 10
    },
    freeaction: true
  }, {
    name: "Unlock HITS",
    after: ["Top Floor"],
    completed: function() {
      return have($item(_templateObject6017 || (_templateObject6017 = _taggedTemplateLiteral102(["steam-powered model rocketship"])))) || have($item(_templateObject6124 || (_templateObject6124 = _taggedTemplateLiteral102(["star chart"])))) && (0, import_kolmafia114.itemAmount)($item(_templateObject6222 || (_templateObject6222 = _taggedTemplateLiteral102(["star"])))) >= 8 && (0, import_kolmafia114.itemAmount)($item(_templateObject6322 || (_templateObject6322 = _taggedTemplateLiteral102(["line"])))) >= 7 || have($item(_templateObject6422 || (_templateObject6422 = _taggedTemplateLiteral102(["Richard's star key"])))) || get("nsTowerDoorKeysUsed").includes("Richard's star key");
    },
    do: $location(_templateObject6521 || (_templateObject6521 = _taggedTemplateLiteral102(["The Castle in the Clouds in the Sky (Top Floor)"]))),
    outfit: {
      modifier: "-combat"
    },
    combat: new CombatStrategy2().killHard($monster(_templateObject6618 || (_templateObject6618 = _taggedTemplateLiteral102(["Burning Snake of Fire"])))),
    choices: {
      675: 4,
      676: 4,
      677: 2,
      678: 3,
      679: 1,
      1431: 4
    },
    limit: {
      soft: 20
    }
  }]
};

// src/tasks/level11_hidden.ts
var import_kolmafia115 = require("kolmafia");
init_dist();
var _templateObject898;
var _templateObject2195;
var _templateObject3174;
var _templateObject4150;
var _templateObject5133;
var _templateObject6125;
var _templateObject7105;
var _templateObject899;
var _templateObject978;
var _templateObject1059;
var _templateObject1157;
var _templateObject1257;
var _templateObject1356;
var _templateObject1450;
var _templateObject1548;
var _templateObject1648;
var _templateObject1746;
var _templateObject1846;
var _templateObject1941;
var _templateObject2041;
var _templateObject2196;
var _templateObject2241;
var _templateObject2338;
var _templateObject2437;
var _templateObject2536;
var _templateObject2634;
var _templateObject2734;
var _templateObject2831;
var _templateObject2931;
var _templateObject3031;
var _templateObject3175;
var _templateObject3233;
var _templateObject3331;
var _templateObject3429;
var _templateObject3528;
var _templateObject3628;
var _templateObject3728;
var _templateObject3828;
var _templateObject3926;
var _templateObject4026;
var _templateObject4151;
var _templateObject4228;
var _templateObject4327;
var _templateObject4426;
var _templateObject4526;
var _templateObject4626;
var _templateObject4726;
var _templateObject4826;
var _templateObject4926;
var _templateObject5026;
var _templateObject5134;
var _templateObject5227;
var _templateObject5326;
var _templateObject5426;
var _templateObject5525;
var _templateObject5624;
var _templateObject5723;
var _templateObject5822;
var _templateObject5920;
var _templateObject6018;
var _templateObject6126;
var _templateObject6223;
var _templateObject6323;
var _templateObject6423;
var _templateObject6522;
var _templateObject6619;
var _templateObject6715;
var _templateObject6815;
var _templateObject6915;
var _templateObject7015;
var _templateObject7120;
var _templateObject7220;
var _templateObject7319;
var _templateObject7419;
var _templateObject7517;
var _templateObject7614;
var _templateObject7712;
var _templateObject7812;
var _templateObject7912;
var _templateObject8011;
var _templateObject8117;
var _templateObject8217;
var _templateObject8317;
var _templateObject8416;
var _templateObject8513;
var _templateObject8612;
var _templateObject8712;
var _templateObject8810;
var _templateObject8910;
var _templateObject908;
var _templateObject9116;
var _templateObject9216;
var _templateObject9315;
var _templateObject9412;
var _templateObject9510;
var _templateObject9610;
var _templateObject979;
var _templateObject988;
var _templateObject996;
var _templateObject1006;
var _templateObject10114;
var _templateObject10214;
var _templateObject10312;
var _templateObject10410;
var _templateObject10510;
var _templateObject1066;
var _templateObject1076;
var _templateObject1086;
var _templateObject1096;
var _templateObject1106;
var _templateObject11114;
var _templateObject11214;
var _templateObject11311;
var _templateObject11410;
var _templateObject1158;
var _templateObject1166;
var _templateObject1176;
var _templateObject1186;
var _templateObject1196;
var _templateObject1206;
var _templateObject12114;
var _templateObject12213;
var _templateObject12311;
var _templateObject12410;
var _templateObject1258;
var _templateObject1266;
var _templateObject1276;
var _templateObject1286;
var _templateObject1296;
var _templateObject1306;
var _templateObject13114;
var _templateObject13213;
var _templateObject13310;
var _templateObject13410;
var _templateObject1357;
var _templateObject1366;
var _templateObject1376;
var _templateObject1386;
var _templateObject1396;
var _templateObject1406;
var _templateObject14114;
var _templateObject14213;
var _templateObject14310;
var _templateObject14410;
var _templateObject1456;
var _templateObject1466;
var _templateObject1476;
var _templateObject1486;
var _templateObject1496;
var _templateObject1506;
var _templateObject15114;
var _templateObject15212;
var _templateObject15310;
var _templateObject1549;
var _templateObject1556;
var _templateObject1566;
var _templateObject1576;
var _templateObject1586;
var _templateObject1596;
var _templateObject1606;
var _templateObject16114;
var _templateObject16212;
var _templateObject16310;
var _templateObject1649;
var _templateObject1656;
var _templateObject1666;
var _templateObject1675;
var _templateObject1685;
var _templateObject1695;
var _templateObject1705;
var _templateObject17113;
var _templateObject17211;
var _templateObject17310;
var _templateObject1747;
var _templateObject1755;
var _templateObject1765;
function _taggedTemplateLiteral103(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function manualChoice(whichchoice, option) {
  return (0, import_kolmafia115.visitUrl)("choice.php?whichchoice=".concat(whichchoice, "&pwd=").concat((0, import_kolmafia115.myHash)(), "&option=").concat(option));
}
var Temple = [{
  name: "Forest Coin",
  after: ["Mosquito/Burn Delay"],
  prepare: function() {
    tryPlayApriling("-combat");
  },
  completed: function() {
    return have($item(_templateObject898 || (_templateObject898 = _taggedTemplateLiteral103(["tree-holed coin"])))) || have($item(_templateObject2195 || (_templateObject2195 = _taggedTemplateLiteral103(["Spooky Temple map"])))) || step("questM16Temple") === 999;
  },
  do: $location(_templateObject3174 || (_templateObject3174 = _taggedTemplateLiteral103(["The Spooky Forest"]))),
  ncforce: NCForce.Yes,
  choices: {
    502: 2,
    505: 2,
    334: 1
  },
  outfit: {
    modifier: "-combat"
  },
  limit: {
    soft: 10
  }
}, {
  name: "Forest Map",
  after: ["Forest Coin"],
  prepare: function() {
    tryPlayApriling("-combat");
  },
  completed: function() {
    return have($item(_templateObject4150 || (_templateObject4150 = _taggedTemplateLiteral103(["Spooky Temple map"])))) || step("questM16Temple") === 999;
  },
  do: $location(_templateObject5133 || (_templateObject5133 = _taggedTemplateLiteral103(["The Spooky Forest"]))),
  ncforce: NCForce.Yes,
  choices: {
    502: 3,
    506: 3,
    507: 1,
    334: 1
  },
  outfit: {
    modifier: "-combat"
  },
  limit: {
    soft: 10
  }
}, {
  name: "Forest Fertilizer",
  after: ["Mosquito/Burn Delay"],
  prepare: function() {
    tryPlayApriling("-combat");
  },
  completed: function() {
    return have($item(_templateObject6125 || (_templateObject6125 = _taggedTemplateLiteral103(["Spooky-Gro fertilizer"])))) || step("questM16Temple") === 999;
  },
  do: $location(_templateObject7105 || (_templateObject7105 = _taggedTemplateLiteral103(["The Spooky Forest"]))),
  ncforce: NCForce.Yes,
  choices: {
    502: 3,
    506: 2,
    507: 1,
    334: 1
  },
  outfit: {
    modifier: "-combat"
  },
  limit: {
    soft: 10
  }
}, {
  name: "Forest Sapling",
  after: ["Mosquito/Burn Delay"],
  prepare: function() {
    tryPlayApriling("-combat");
  },
  completed: function() {
    return have($item(_templateObject899 || (_templateObject899 = _taggedTemplateLiteral103(["spooky sapling"])))) || step("questM16Temple") === 999;
  },
  do: $location(_templateObject978 || (_templateObject978 = _taggedTemplateLiteral103(["The Spooky Forest"]))),
  ncforce: NCForce.Yes,
  choices: {
    502: 1,
    503: 3,
    504: 3,
    334: 1
  },
  outfit: {
    modifier: "-combat"
  },
  limit: {
    soft: 10
  }
}, {
  name: "Open Temple",
  after: ["Forest Coin", "Forest Map", "Forest Sapling", "Forest Fertilizer"],
  completed: function() {
    return step("questM16Temple") === 999;
  },
  do: function() {
    return (0, import_kolmafia115.use)($item(_templateObject1059 || (_templateObject1059 = _taggedTemplateLiteral103(["Spooky Temple map"]))));
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Temple Wool",
  after: ["Open Temple", "Misc/Hermit Clover"],
  completed: function() {
    return (0, import_kolmafia115.itemAmount)($item(_templateObject1157 || (_templateObject1157 = _taggedTemplateLiteral103(["stone wool"])))) >= 2 || (0, import_kolmafia115.itemAmount)($item(_templateObject1257 || (_templateObject1257 = _taggedTemplateLiteral103(["stone wool"])))) === 1 && have($item(_templateObject1356 || (_templateObject1356 = _taggedTemplateLiteral103(["the Nostril of the Serpent"])))) || step("questL11Worship") >= 3;
  },
  prepare: function() {
    if ((0, import_kolmafia115.itemAmount)($item(_templateObject1450 || (_templateObject1450 = _taggedTemplateLiteral103(["11-leaf clover"])))) > 1 && !have($effect(_templateObject1548 || (_templateObject1548 = _taggedTemplateLiteral103(["Lucky!"])))) && !have($item(_templateObject1648 || (_templateObject1648 = _taggedTemplateLiteral103(["industrial fire extinguisher"]))))) (0, import_kolmafia115.use)($item(_templateObject1746 || (_templateObject1746 = _taggedTemplateLiteral103(["11-leaf clover"]))));
  },
  do: $location(_templateObject1846 || (_templateObject1846 = _taggedTemplateLiteral103(["The Hidden Temple"]))),
  outfit: function() {
    if (have($item(_templateObject1941 || (_templateObject1941 = _taggedTemplateLiteral103(["industrial fire extinguisher"])))) && get("_fireExtinguisherCharge") >= 10) return {
      equip: $items(_templateObject2041 || (_templateObject2041 = _taggedTemplateLiteral103(["industrial fire extinguisher, deft pirate hook"]))),
      modifier: "+combat"
    };
    else return {
      familiar: $familiar(_templateObject2196 || (_templateObject2196 = _taggedTemplateLiteral103(["Grey Goose"]))),
      equip: $items(_templateObject2241 || (_templateObject2241 = _taggedTemplateLiteral103(["deft pirate hook"]))),
      modifier: "+combat, item"
    };
  },
  combat: new CombatStrategy2().macro(new Macro().trySkill($skill(_templateObject2338 || (_templateObject2338 = _taggedTemplateLiteral103(["Fire Extinguisher: Polar Vortex"])))).trySkill($skill(_templateObject2437 || (_templateObject2437 = _taggedTemplateLiteral103(["Fire Extinguisher: Polar Vortex"])))), $monster(_templateObject2536 || (_templateObject2536 = _taggedTemplateLiteral103(["baa-relief sheep"])))).macro(new Macro().trySkill($skill(_templateObject2634 || (_templateObject2634 = _taggedTemplateLiteral103(["Emit Matter Duplicating Drones"])))), $monster(_templateObject2734 || (_templateObject2734 = _taggedTemplateLiteral103(["Baa'baa'bu'ran"])))).killItem([$monster(_templateObject2831 || (_templateObject2831 = _taggedTemplateLiteral103(["baa-relief sheep"]))), $monster(_templateObject2931 || (_templateObject2931 = _taggedTemplateLiteral103(["Baa'baa'bu'ran"])))]),
  choices: {
    579: 2,
    580: 1,
    581: 3,
    582: 1
  },
  limit: {
    soft: 20
  }
}, {
  name: "Temple Nostril",
  after: ["Open Temple", "Temple Wool"],
  completed: function() {
    return have($item(_templateObject3031 || (_templateObject3031 = _taggedTemplateLiteral103(["the Nostril of the Serpent"])))) || step("questL11Worship") >= 3;
  },
  do: $location(_templateObject3175 || (_templateObject3175 = _taggedTemplateLiteral103(["The Hidden Temple"]))),
  choices: {
    579: 2,
    582: 1
  },
  effects: $effects(_templateObject3233 || (_templateObject3233 = _taggedTemplateLiteral103(["Stone-Faced"]))),
  limit: {
    tries: 1
  }
}, {
  name: "Open City",
  after: ["Temple Nostril", "Macguffin/Diary"],
  acquire: [{
    item: $item(_templateObject3331 || (_templateObject3331 = _taggedTemplateLiteral103(["stone wool"])))
  }],
  completed: function() {
    return step("questL11Worship") >= 3;
  },
  do: function() {
    (0, import_kolmafia115.visitUrl)("adventure.php?snarfblat=280");
    manualChoice(582, 2);
    manualChoice(580, 2);
    manualChoice(584, 4);
    manualChoice(580, 1);
    manualChoice(123, 2);
    (0, import_kolmafia115.visitUrl)("choice.php");
    (0, import_kolmafia115.cliExecute)("dvorak");
    manualChoice(125, 3);
  },
  outfit: {
    avoid: $items(_templateObject3429 || (_templateObject3429 = _taggedTemplateLiteral103(["June cleaver"])))
  },
  effects: $effects(_templateObject3528 || (_templateObject3528 = _taggedTemplateLiteral103(["Stone-Faced"]))),
  limit: {
    tries: 1
  }
}];
var Apartment = [{
  name: "Open Apartment",
  after: ["Get Machete", "Open City"],
  completed: function() {
    return get("hiddenApartmentProgress") >= 1;
  },
  do: $location(_templateObject3628 || (_templateObject3628 = _taggedTemplateLiteral103(["An Overgrown Shrine (Northwest)"]))),
  outfit: {
    equip: $items(_templateObject3728 || (_templateObject3728 = _taggedTemplateLiteral103(["antique machete"])))
  },
  combat: new CombatStrategy2().killHard(),
  choices: {
    781: 1
  },
  limit: {
    tries: 4
  },
  freecombat: true,
  acquire: [{
    item: $item(_templateObject3828 || (_templateObject3828 = _taggedTemplateLiteral103(["antique machete"])))
  }]
}, {
  name: "Apartment Files",
  // Get the last McClusky files here if needed, as a backup plan
  after: ["Open Apartment", "Office Files", "Banish Janitors"],
  priority: function() {
    return have($effect(_templateObject3926 || (_templateObject3926 = _taggedTemplateLiteral103(["Once-Cursed"])))) || have($effect(_templateObject4026 || (_templateObject4026 = _taggedTemplateLiteral103(["Twice-Cursed"])))) || have($effect(_templateObject4151 || (_templateObject4151 = _taggedTemplateLiteral103(["Thrice-Cursed"])))) ? Priorities.Effect : Priorities.None;
  },
  completed: function() {
    return have($item(_templateObject4228 || (_templateObject4228 = _taggedTemplateLiteral103(["McClusky file (page 5)"])))) || have($item(_templateObject4327 || (_templateObject4327 = _taggedTemplateLiteral103(["McClusky file (complete)"])))) || get("hiddenOfficeProgress") >= 7;
  },
  do: $location(_templateObject4426 || (_templateObject4426 = _taggedTemplateLiteral103(["The Hidden Apartment Building"]))),
  combat: new CombatStrategy2().killHard($monster(_templateObject4526 || (_templateObject4526 = _taggedTemplateLiteral103(["ancient protector spirit (The Hidden Apartment Building)"])))).kill($monster(_templateObject4626 || (_templateObject4626 = _taggedTemplateLiteral103(["pygmy witch accountant"])))).banish($monster(_templateObject4726 || (_templateObject4726 = _taggedTemplateLiteral103(["pygmy janitor"])))).banish($monster(_templateObject4826 || (_templateObject4826 = _taggedTemplateLiteral103(["pygmy witch lawyer"])))).ignoreNoBanish($monster(_templateObject4926 || (_templateObject4926 = _taggedTemplateLiteral103(["pygmy shaman"])))).ignore(),
  orbtargets: function() {
    if (have($effect(_templateObject5026 || (_templateObject5026 = _taggedTemplateLiteral103(["Thrice-Cursed"]))))) return [$monster(_templateObject5134 || (_templateObject5134 = _taggedTemplateLiteral103(["pygmy witch accountant"])))];
    else return [$monster(_templateObject5227 || (_templateObject5227 = _taggedTemplateLiteral103(["pygmy shaman"]))), $monster(_templateObject5326 || (_templateObject5326 = _taggedTemplateLiteral103(["pygmy witch accountant"])))];
  },
  post: makeCompleteFile,
  outfit: {
    equip: $items(_templateObject5426 || (_templateObject5426 = _taggedTemplateLiteral103(["miniature crystal ball, deft pirate hook"])))
  },
  limit: {
    soft: 9
  },
  choices: {
    780: 1
  }
}, {
  name: "Apartment",
  after: ["Open Apartment", "Apartment Files"],
  // Wait until after all needed pygmy witch lawyers are done
  priority: function() {
    return have($effect(_templateObject5525 || (_templateObject5525 = _taggedTemplateLiteral103(["Once-Cursed"])))) || have($effect(_templateObject5624 || (_templateObject5624 = _taggedTemplateLiteral103(["Twice-Cursed"])))) || have($effect(_templateObject5723 || (_templateObject5723 = _taggedTemplateLiteral103(["Thrice-Cursed"])))) ? Priorities.MinorEffect : Priorities.None;
  },
  completed: function() {
    return get("hiddenApartmentProgress") >= 7;
  },
  do: $location(_templateObject5822 || (_templateObject5822 = _taggedTemplateLiteral103(["The Hidden Apartment Building"]))),
  combat: new CombatStrategy2().killHard($monster(_templateObject5920 || (_templateObject5920 = _taggedTemplateLiteral103(["ancient protector spirit (The Hidden Apartment Building)"])))).banish($monster(_templateObject6018 || (_templateObject6018 = _taggedTemplateLiteral103(["pygmy janitor"])))).banish($monsters(_templateObject6126 || (_templateObject6126 = _taggedTemplateLiteral103(["pygmy witch lawyer, pygmy witch accountant"])))).ignoreNoBanish($monster(_templateObject6223 || (_templateObject6223 = _taggedTemplateLiteral103(["pygmy shaman"])))).ignore(),
  orbtargets: function() {
    if (have($effect(_templateObject6323 || (_templateObject6323 = _taggedTemplateLiteral103(["Thrice-Cursed"]))))) return [];
    else return [$monster(_templateObject6423 || (_templateObject6423 = _taggedTemplateLiteral103(["pygmy shaman"])))];
  },
  post: makeCompleteFile,
  outfit: function() {
    if (have($effect(_templateObject6522 || (_templateObject6522 = _taggedTemplateLiteral103(["Twice-Cursed"])))) && $location(_templateObject6619 || (_templateObject6619 = _taggedTemplateLiteral103(["The Hidden Apartment Building"]))).turnsSpent === 8) return {
      equip: $items(_templateObject6715 || (_templateObject6715 = _taggedTemplateLiteral103(["candy cane sword cane, miniature crystal ball, deft pirate hook"])))
    };
    return {
      equip: $items(_templateObject6815 || (_templateObject6815 = _taggedTemplateLiteral103(["miniature crystal ball, deft pirate hook"])))
    };
  },
  choices: {
    780: 1
  },
  limit: {
    soft: 9
  }
}, {
  name: "Finish Apartment",
  after: ["Apartment"],
  completed: function() {
    return get("hiddenApartmentProgress") >= 8;
  },
  do: $location(_templateObject6915 || (_templateObject6915 = _taggedTemplateLiteral103(["An Overgrown Shrine (Northwest)"]))),
  choices: {
    781: 2
  },
  limit: {
    tries: 1
  },
  freeaction: true
}];
var Office = [{
  name: "Open Office",
  after: ["Get Machete", "Open City"],
  completed: function() {
    return get("hiddenOfficeProgress") >= 1;
  },
  do: $location(_templateObject7015 || (_templateObject7015 = _taggedTemplateLiteral103(["An Overgrown Shrine (Northeast)"]))),
  combat: new CombatStrategy2().killHard(),
  outfit: {
    equip: $items(_templateObject7120 || (_templateObject7120 = _taggedTemplateLiteral103(["antique machete"])))
  },
  choices: {
    785: 1
  },
  limit: {
    tries: 4
  },
  freecombat: true,
  acquire: [{
    item: $item(_templateObject7220 || (_templateObject7220 = _taggedTemplateLiteral103(["antique machete"])))
  }]
}, {
  name: "Office Files",
  after: ["Open Office", "Banish Janitors"],
  completed: function() {
    return have($item(_templateObject7319 || (_templateObject7319 = _taggedTemplateLiteral103(["McClusky file (page 1)"])))) && have($item(_templateObject7419 || (_templateObject7419 = _taggedTemplateLiteral103(["McClusky file (page 2)"])))) && have($item(_templateObject7517 || (_templateObject7517 = _taggedTemplateLiteral103(["McClusky file (page 3)"])))) && have($item(_templateObject7614 || (_templateObject7614 = _taggedTemplateLiteral103(["McClusky file (page 4)"])))) && have($item(_templateObject7712 || (_templateObject7712 = _taggedTemplateLiteral103(["McClusky file (page 5)"])))) || have($item(_templateObject7812 || (_templateObject7812 = _taggedTemplateLiteral103(["McClusky file (complete)"])))) || get("hiddenOfficeProgress") >= 7 || $location(_templateObject7912 || (_templateObject7912 = _taggedTemplateLiteral103(["The Hidden Office Building"]))).turnsSpent >= 10;
  },
  do: $location(_templateObject8011 || (_templateObject8011 = _taggedTemplateLiteral103(["The Hidden Office Building"]))),
  post: makeCompleteFile,
  combat: new CombatStrategy2().kill($monster(_templateObject8117 || (_templateObject8117 = _taggedTemplateLiteral103(["pygmy witch accountant"])))).banish($monster(_templateObject8217 || (_templateObject8217 = _taggedTemplateLiteral103(["pygmy janitor"])))).banish($monsters(_templateObject8317 || (_templateObject8317 = _taggedTemplateLiteral103(["pygmy headhunter, pygmy witch lawyer"])))),
  choices: {
    786: 2
  },
  limit: {
    soft: 10
  }
}, {
  name: "Office Clip",
  after: ["Office Files", "Apartment Files"],
  completed: function() {
    return have($item(_templateObject8416 || (_templateObject8416 = _taggedTemplateLiteral103(["boring binder clip"])))) || have($item(_templateObject8513 || (_templateObject8513 = _taggedTemplateLiteral103(["McClusky file (complete)"])))) || get("hiddenOfficeProgress") >= 7;
  },
  do: $location(_templateObject8612 || (_templateObject8612 = _taggedTemplateLiteral103(["The Hidden Office Building"]))),
  post: makeCompleteFile,
  choices: {
    786: 2
  },
  combat: new CombatStrategy2().ignore(),
  limit: {
    tries: 6
  }
}, {
  name: "Office Boss",
  after: ["Office Clip"],
  completed: function() {
    return get("hiddenOfficeProgress") >= 7;
  },
  do: $location(_templateObject8712 || (_templateObject8712 = _taggedTemplateLiteral103(["The Hidden Office Building"]))),
  post: makeCompleteFile,
  choices: {
    786: 1
  },
  combat: new CombatStrategy2().killHard($monster(_templateObject8810 || (_templateObject8810 = _taggedTemplateLiteral103(["ancient protector spirit (The Hidden Office Building)"])))).ignore().macro(function() {
    var palindome_dudes_done = have(import_kolmafia115.Item.get(7262)) || step("questL11Palindome") >= 3;
    if (get("banishedPhyla").includes("beast") && officeBanishesDone() && palindome_dudes_done) {
      return Macro.trySkill($skill(_templateObject8910 || (_templateObject8910 = _taggedTemplateLiteral103(["%fn, Release the Patriotic Screech!"]))));
    }
    return new Macro();
  }),
  outfit: function() {
    var palindome_dudes_done = have(import_kolmafia115.Item.get(7262)) || step("questL11Palindome") >= 3;
    if (get("banishedPhyla").includes("beast") && officeBanishesDone() && palindome_dudes_done) return {
      familiar: $familiar(_templateObject908 || (_templateObject908 = _taggedTemplateLiteral103(["Patriotic Eagle"])))
    };
    return {};
  },
  orbtargets: function() {
    return [];
  },
  limit: {
    soft: 10
  }
}, {
  name: "Finish Office",
  after: ["Office Boss"],
  completed: function() {
    return get("hiddenOfficeProgress") >= 8;
  },
  do: $location(_templateObject9116 || (_templateObject9116 = _taggedTemplateLiteral103(["An Overgrown Shrine (Northeast)"]))),
  choices: {
    785: 2
  },
  limit: {
    tries: 1
  },
  freeaction: true
}];
var Hospital = [{
  name: "Open Hospital",
  after: ["Get Machete", "Open City"],
  completed: function() {
    return get("hiddenHospitalProgress") >= 1;
  },
  do: $location(_templateObject9216 || (_templateObject9216 = _taggedTemplateLiteral103(["An Overgrown Shrine (Southwest)"]))),
  combat: new CombatStrategy2().killHard(),
  outfit: {
    equip: $items(_templateObject9315 || (_templateObject9315 = _taggedTemplateLiteral103(["antique machete"])))
  },
  choices: {
    783: 1
  },
  limit: {
    tries: 4
  },
  freecombat: true,
  acquire: [{
    item: $item(_templateObject9412 || (_templateObject9412 = _taggedTemplateLiteral103(["antique machete"])))
  }]
}, {
  name: "Hospital",
  after: ["Open Hospital", "Banish Janitors"],
  completed: function() {
    return get("hiddenHospitalProgress") >= 7;
  },
  do: $location(_templateObject9510 || (_templateObject9510 = _taggedTemplateLiteral103(["The Hidden Hospital"]))),
  combat: new CombatStrategy2().startingMacro(Macro.trySkill($skill(_templateObject9610 || (_templateObject9610 = _taggedTemplateLiteral103(["%fn, let's pledge allegiance to a Zone"]))))).killHard($monster(_templateObject979 || (_templateObject979 = _taggedTemplateLiteral103(["ancient protector spirit (The Hidden Hospital)"])))).kill($monster(_templateObject988 || (_templateObject988 = _taggedTemplateLiteral103(["pygmy witch surgeon"])))).banish($monster(_templateObject996 || (_templateObject996 = _taggedTemplateLiteral103(["pygmy janitor"])))).banish($monsters(_templateObject1006 || (_templateObject1006 = _taggedTemplateLiteral103(["pygmy orderlies, pygmy witch nurse"])))),
  outfit: function() {
    var result = {
      shirt: have($skill(_templateObject10114 || (_templateObject10114 = _taggedTemplateLiteral103(["Torso Awareness"])))) ? $item(_templateObject10214 || (_templateObject10214 = _taggedTemplateLiteral103(["surgical apron"]))) : void 0,
      equip: $items(_templateObject10312 || (_templateObject10312 = _taggedTemplateLiteral103(["half-size scalpel, head mirror, surgical mask, bloodied surgical dungarees"])))
    };
    if (!have($effect(_templateObject10410 || (_templateObject10410 = _taggedTemplateLiteral103(["Citizen of a Zone"])))) && have($familiar(_templateObject10510 || (_templateObject10510 = _taggedTemplateLiteral103(["Patriotic Eagle"]))))) {
      result.familiar = $familiar(_templateObject1066 || (_templateObject1066 = _taggedTemplateLiteral103(["Patriotic Eagle"])));
    }
    return result;
  },
  choices: {
    784: 1
  },
  limit: {
    soft: 20
  }
}, {
  name: "Finish Hospital",
  after: ["Hospital"],
  completed: function() {
    return get("hiddenHospitalProgress") >= 8;
  },
  do: $location(_templateObject1076 || (_templateObject1076 = _taggedTemplateLiteral103(["An Overgrown Shrine (Southwest)"]))),
  choices: {
    783: 2
  },
  limit: {
    tries: 1
  },
  freeaction: true
}];
var Bowling = [{
  name: "Open Bowling",
  after: ["Get Machete", "Open City"],
  completed: function() {
    return get("hiddenBowlingAlleyProgress") >= 1;
  },
  do: $location(_templateObject1086 || (_templateObject1086 = _taggedTemplateLiteral103(["An Overgrown Shrine (Southeast)"]))),
  combat: new CombatStrategy2().killHard(),
  outfit: {
    equip: $items(_templateObject1096 || (_templateObject1096 = _taggedTemplateLiteral103(["antique machete"])))
  },
  choices: {
    787: 1
  },
  limit: {
    tries: 4
  },
  freecombat: true,
  acquire: [{
    item: $item(_templateObject1106 || (_templateObject1106 = _taggedTemplateLiteral103(["antique machete"])))
  }]
}, {
  name: "Bowling",
  after: ["Open Bowling", "Banish Janitors"],
  priority: function() {
    return get("camelSpit") === 100 && cosmicBowlingBallReady() && have($skill(_templateObject11114 || (_templateObject11114 = _taggedTemplateLiteral103(["Map the Monsters"])))) ? Priorities.BestCosmicBowlingBall : Priorities.None;
  },
  ready: function() {
    return (0, import_kolmafia115.myMeat)() >= 500 && (!bowlingBallsGathered() || get("spookyVHSTapeMonster") !== $monster(_templateObject11214 || (_templateObject11214 = _taggedTemplateLiteral103(["pygmy bowler"]))));
  },
  acquire: [{
    item: $item(_templateObject11311 || (_templateObject11311 = _taggedTemplateLiteral103(["Bowl of Scorpions"]))),
    optional: true
  }],
  completed: function() {
    return get("hiddenBowlingAlleyProgress") >= 7;
  },
  prepare: function() {
    if (get("hiddenTavernUnlock") < (0, import_kolmafia115.myAscensions)() && have($item(_templateObject11410 || (_templateObject11410 = _taggedTemplateLiteral103(["book of matches"]))))) {
      (0, import_kolmafia115.use)($item(_templateObject1158 || (_templateObject1158 = _taggedTemplateLiteral103(["book of matches"]))));
      (0, import_kolmafia115.buy)($item(_templateObject1166 || (_templateObject1166 = _taggedTemplateLiteral103(["Bowl of Scorpions"]))));
    }
    if (!bowlingBallsGathered()) {
      if (have($item(_templateObject1176 || (_templateObject1176 = _taggedTemplateLiteral103(["bowling ball"]))))) (0, import_kolmafia115.putCloset)($item(_templateObject1186 || (_templateObject1186 = _taggedTemplateLiteral103(["bowling ball"]))), (0, import_kolmafia115.itemAmount)($item(_templateObject1196 || (_templateObject1196 = _taggedTemplateLiteral103(["bowling ball"])))));
    } else {
      if ((0, import_kolmafia115.closetAmount)($item(_templateObject1206 || (_templateObject1206 = _taggedTemplateLiteral103(["bowling ball"])))) > 0) (0, import_kolmafia115.takeCloset)($item(_templateObject12114 || (_templateObject12114 = _taggedTemplateLiteral103(["bowling ball"]))), (0, import_kolmafia115.closetAmount)($item(_templateObject12213 || (_templateObject12213 = _taggedTemplateLiteral103(["bowling ball"])))));
    }
    if ((0, import_kolmafia115.myFamiliar)() === $familiar(_templateObject12311 || (_templateObject12311 = _taggedTemplateLiteral103(["Melodramedary"]))) && get("camelSpit") === 100) fillHp();
  },
  do: $location(_templateObject12410 || (_templateObject12410 = _taggedTemplateLiteral103(["The Hidden Bowling Alley"]))),
  combat: new CombatStrategy2().killHard($monster(_templateObject1258 || (_templateObject1258 = _taggedTemplateLiteral103(["ancient protector spirit (The Hidden Bowling Alley)"])))).killItem($monster(_templateObject1266 || (_templateObject1266 = _taggedTemplateLiteral103(["pygmy bowler"])))).macro(function() {
    if ((0, import_kolmafia115.myFamiliar)() === $familiar(_templateObject1276 || (_templateObject1276 = _taggedTemplateLiteral103(["Melodramedary"]))) && get("camelSpit") === 100) return Macro.trySkill($skill(_templateObject1286 || (_templateObject1286 = _taggedTemplateLiteral103(["%fn, spit on them!"])))).tryItem($item(_templateObject1296 || (_templateObject1296 = _taggedTemplateLiteral103(["cosmic bowling ball"]))));
    return Macro.externalIf(get("spookyVHSTapeMonster") === $monster(_templateObject1306 || (_templateObject1306 = _taggedTemplateLiteral103(["none"]))), Macro.tryItem($item(_templateObject13114 || (_templateObject13114 = _taggedTemplateLiteral103(["Spooky VHS Tape"]))))).trySkill($skill(_templateObject13213 || (_templateObject13213 = _taggedTemplateLiteral103(["Emit Matter Duplicating Drones"]))));
  }, $monster(_templateObject13310 || (_templateObject13310 = _taggedTemplateLiteral103(["pygmy bowler"])))).banish($monster(_templateObject13410 || (_templateObject13410 = _taggedTemplateLiteral103(["pygmy janitor"])))).banish($monster(_templateObject1357 || (_templateObject1357 = _taggedTemplateLiteral103(["pygmy orderlies"])))),
  outfit: function() {
    var result = {
      equip: $items(_templateObject1366 || (_templateObject1366 = _taggedTemplateLiteral103(["nurse's hat, deft pirate hook"]))),
      modifier: "item",
      avoid: $items(_templateObject1376 || (_templateObject1376 = _taggedTemplateLiteral103(["broken champagne bottle"])))
    };
    if (have($familiar(_templateObject1386 || (_templateObject1386 = _taggedTemplateLiteral103(["Melodramedary"])))) && get("camelSpit") === 100) {
      result.familiar = $familiar(_templateObject1396 || (_templateObject1396 = _taggedTemplateLiteral103(["Melodramedary"])));
    } else if (have($familiar(_templateObject1406 || (_templateObject1406 = _taggedTemplateLiteral103(["Grey Goose"])))) && (0, import_kolmafia115.familiarWeight)($familiar(_templateObject14114 || (_templateObject14114 = _taggedTemplateLiteral103(["Grey Goose"])))) >= 6) {
      result.familiar = $familiar(_templateObject14213 || (_templateObject14213 = _taggedTemplateLiteral103(["Grey Goose"])));
    }
    if (bowlingBallsGathered() && !get("candyCaneSwordBowlingAlley", false)) {
      var _result$equip;
      (_result$equip = result.equip) === null || _result$equip === void 0 || _result$equip.push($item(_templateObject14310 || (_templateObject14310 = _taggedTemplateLiteral103(["candy cane sword cane"]))));
    }
    return result;
  },
  ignore_banishes: function() {
    return bowlingBallsGathered();
  },
  map_the_monster: function() {
    if ((0, import_kolmafia115.itemAmount)($item(_templateObject14410 || (_templateObject14410 = _taggedTemplateLiteral103(["bowling ball"])))) === 0 && have($familiar(_templateObject1456 || (_templateObject1456 = _taggedTemplateLiteral103(["Melodramedary"])))) && get("camelSpit") === 100 && cosmicBowlingBallReady()) return $monster(_templateObject1466 || (_templateObject1466 = _taggedTemplateLiteral103(["pygmy bowler"])));
    return $monster(_templateObject1476 || (_templateObject1476 = _taggedTemplateLiteral103(["none"])));
  },
  choices: {
    788: 1
  },
  parachute: function() {
    if (have($skill(_templateObject1486 || (_templateObject1486 = _taggedTemplateLiteral103(["Map the Monsters"])))) && get("_monstersMapped") < 3 && have($familiar(_templateObject1496 || (_templateObject1496 = _taggedTemplateLiteral103(["Melodramedary"]))))) {
      return void 0;
    }
    return $monster(_templateObject1506 || (_templateObject1506 = _taggedTemplateLiteral103(["pygmy bowler"])));
  },
  limit: {
    soft: 25
  }
}, {
  name: "Finish Bowling",
  after: ["Bowling"],
  completed: function() {
    return get("hiddenBowlingAlleyProgress") >= 8;
  },
  do: $location(_templateObject15114 || (_templateObject15114 = _taggedTemplateLiteral103(["An Overgrown Shrine (Southeast)"]))),
  choices: {
    787: 2
  },
  limit: {
    tries: 1
  },
  freeaction: true
}];
function bowlingBallsGathered() {
  var balls = 0;
  balls += (0, import_kolmafia115.itemAmount)($item(_templateObject15212 || (_templateObject15212 = _taggedTemplateLiteral103(["bowling ball"]))));
  balls += (0, import_kolmafia115.closetAmount)($item(_templateObject15310 || (_templateObject15310 = _taggedTemplateLiteral103(["bowling ball"]))));
  if (get("spookyVHSTapeMonster") === $monster(_templateObject1549 || (_templateObject1549 = _taggedTemplateLiteral103(["pygmy bowler"])))) balls += 1;
  if (have($item(_templateObject1556 || (_templateObject1556 = _taggedTemplateLiteral103(["candy cane sword cane"])))) && !get("candyCaneSwordBowlingAlley", false)) balls += 1;
  var timesBowled = get("hiddenBowlingAlleyProgress") - 1;
  return timesBowled + balls >= 5;
}
var HiddenQuest = {
  name: "Hidden City",
  tasks: [].concat(Temple, [{
    name: "Get Machete",
    after: ["Open City"],
    completed: function() {
      return have($item(_templateObject1566 || (_templateObject1566 = _taggedTemplateLiteral103(["antique machete"]))));
    },
    do: $location(_templateObject1576 || (_templateObject1576 = _taggedTemplateLiteral103(["The Hidden Park"]))),
    outfit: {
      modifier: "-combat"
    },
    choices: {
      789: 2
    },
    limit: {
      soft: 10
    }
  }], Office, Apartment, Hospital, Bowling, [{
    name: "Banish Janitors",
    after: ["Open City"],
    completed: function() {
      return get("relocatePygmyJanitor") === (0, import_kolmafia115.myAscensions)() || have($skill(_templateObject1586 || (_templateObject1586 = _taggedTemplateLiteral103(["Emotionally Chipped"]))));
    },
    do: $location(_templateObject1596 || (_templateObject1596 = _taggedTemplateLiteral103(["The Hidden Park"]))),
    outfit: {
      modifier: "-combat"
    },
    choices: {
      789: 2
    },
    limit: {
      soft: 15
    }
  }, {
    name: "Boss",
    after: ["Finish Office", "Finish Apartment", "Finish Hospital", "Finish Bowling"],
    completed: function() {
      return step("questL11Worship") === 999;
    },
    do: $location(_templateObject1606 || (_templateObject1606 = _taggedTemplateLiteral103(["A Massive Ziggurat"]))),
    outfit: {
      equip: $items(_templateObject16114 || (_templateObject16114 = _taggedTemplateLiteral103(["antique machete"])))
    },
    choices: {
      791: 1
    },
    combat: new CombatStrategy2().killHard($monster(_templateObject16212 || (_templateObject16212 = _taggedTemplateLiteral103(["dense liana"])))).killHard($monster(_templateObject16310 || (_templateObject16310 = _taggedTemplateLiteral103(["Protector Spectre"])))),
    limit: {
      tries: 4
    },
    acquire: [{
      item: $item(_templateObject1649 || (_templateObject1649 = _taggedTemplateLiteral103(["antique machete"])))
    }],
    boss: true
  }])
};
function makeCompleteFile() {
  if (have($item(_templateObject1656 || (_templateObject1656 = _taggedTemplateLiteral103(["McClusky file (page 1)"])))) && have($item(_templateObject1666 || (_templateObject1666 = _taggedTemplateLiteral103(["McClusky file (page 2)"])))) && have($item(_templateObject1675 || (_templateObject1675 = _taggedTemplateLiteral103(["McClusky file (page 3)"])))) && have($item(_templateObject1685 || (_templateObject1685 = _taggedTemplateLiteral103(["McClusky file (page 4)"])))) && have($item(_templateObject1695 || (_templateObject1695 = _taggedTemplateLiteral103(["McClusky file (page 5)"])))) && have($item(_templateObject1705 || (_templateObject1705 = _taggedTemplateLiteral103(["boring binder clip"]))))) {
    (0, import_kolmafia115.cliExecute)("make McClusky file (complete)");
  }
}
function officeBanishesDone() {
  if (get("hiddenHospitalProgress") < 7) return false;
  if (get("hiddenApartmentProgress") < 7) return false;
  if (get("hiddenBowlingAlleyProgress") < 7) return false;
  return have($item(_templateObject17113 || (_templateObject17113 = _taggedTemplateLiteral103(["McClusky file (page 1)"])))) && have($item(_templateObject17211 || (_templateObject17211 = _taggedTemplateLiteral103(["McClusky file (page 2)"])))) && have($item(_templateObject17310 || (_templateObject17310 = _taggedTemplateLiteral103(["McClusky file (page 3)"])))) && have($item(_templateObject1747 || (_templateObject1747 = _taggedTemplateLiteral103(["McClusky file (page 4)"])))) && have($item(_templateObject1755 || (_templateObject1755 = _taggedTemplateLiteral103(["McClusky file (page 5)"])))) || have($item(_templateObject1765 || (_templateObject1765 = _taggedTemplateLiteral103(["McClusky file (complete)"])))) || get("hiddenOfficeProgress") >= 7;
}

// src/tasks/level11_manor.ts
var import_kolmafia116 = require("kolmafia");
init_dist();
var _templateObject900;
var _templateObject2197;
var _templateObject3176;
var _templateObject4152;
var _templateObject5135;
var _templateObject6127;
var _templateObject7106;
var _templateObject8100;
var _templateObject980;
var _templateObject1060;
var _templateObject1159;
var _templateObject1259;
var _templateObject1358;
var _templateObject1451;
var _templateObject1550;
var _templateObject1650;
var _templateObject1748;
var _templateObject1847;
var _templateObject1945;
var _templateObject2045;
var _templateObject2198;
var _templateObject2244;
var _templateObject2339;
var _templateObject2438;
var _templateObject2537;
var _templateObject2635;
var _templateObject2735;
var _templateObject2833;
var _templateObject2933;
var _templateObject3033;
var _templateObject3177;
var _templateObject3234;
var _templateObject3333;
var _templateObject3430;
var _templateObject3529;
var _templateObject3629;
var _templateObject3729;
var _templateObject3829;
var _templateObject3927;
var _templateObject4027;
var _templateObject4153;
var _templateObject4229;
var _templateObject4328;
var _templateObject4427;
var _templateObject4527;
var _templateObject4627;
var _templateObject4727;
var _templateObject4827;
var _templateObject4927;
var _templateObject5027;
var _templateObject5136;
var _templateObject5228;
var _templateObject5327;
var _templateObject5427;
var _templateObject5526;
var _templateObject5625;
var _templateObject5724;
var _templateObject5823;
var _templateObject5921;
var _templateObject6019;
var _templateObject6128;
var _templateObject6224;
var _templateObject6324;
var _templateObject6424;
var _templateObject6523;
var _templateObject6620;
var _templateObject6716;
var _templateObject6816;
var _templateObject6916;
var _templateObject7016;
var _templateObject7121;
var _templateObject7221;
var _templateObject7320;
var _templateObject7420;
var _templateObject7518;
var _templateObject7615;
var _templateObject7713;
var _templateObject7813;
var _templateObject7913;
var _templateObject8012;
var _templateObject8118;
var _templateObject8218;
var _templateObject8318;
var _templateObject8417;
var _templateObject8514;
var _templateObject8613;
var _templateObject8713;
var _templateObject8811;
var _templateObject8911;
var _templateObject909;
var _templateObject9117;
var _templateObject9217;
var _templateObject9316;
var _templateObject9413;
var _templateObject9511;
var _templateObject9611;
var _templateObject9710;
var _templateObject989;
var _templateObject997;
var _templateObject1007;
var _templateObject10115;
var _templateObject10215;
var _templateObject10313;
var _templateObject10411;
var _templateObject10511;
var _templateObject1067;
function ownKeys18(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread18(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys18(Object(t), true).forEach(function(r2) {
      _defineProperty37(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys18(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty37(obj, key, value) {
  key = _toPropertyKey42(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey42(t) {
  var i = _toPrimitive42(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive42(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _createForOfIteratorHelper33(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray58(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray58(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray58(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray58(o, minLen);
}
function _arrayLikeToArray58(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral104(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var Manor1 = [{
  name: "Kitchen",
  after: ["Start"],
  completed: function() {
    return step("questM20Necklace") >= 1;
  },
  prepare: function() {
    if (have($item(_templateObject900 || (_templateObject900 = _taggedTemplateLiteral104(["rainbow glitter candle"]))))) (0, import_kolmafia116.use)($item(_templateObject2197 || (_templateObject2197 = _taggedTemplateLiteral104(["rainbow glitter candle"]))));
  },
  do: $location(_templateObject3176 || (_templateObject3176 = _taggedTemplateLiteral104(["The Haunted Kitchen"]))),
  outfit: {
    modifier: "stench res, hot res",
    avoid: $items(_templateObject4152 || (_templateObject4152 = _taggedTemplateLiteral104(["Roman Candelabra"])))
  },
  choices: {
    893: 2
  },
  combat: new CombatStrategy2().kill(),
  limit: {
    soft: 21
  },
  delay: 7
}, {
  name: "Billiards",
  after: ["Kitchen"],
  completed: function() {
    return step("questM20Necklace") >= 3;
  },
  priority: function() {
    return have($effect(_templateObject5135 || (_templateObject5135 = _taggedTemplateLiteral104(["Chalky Hand"])))) && !have($item(_templateObject6127 || (_templateObject6127 = _taggedTemplateLiteral104(["handful of hand chalk"])))) ? Priorities.Effect : Priorities.None;
  },
  prepare: function() {
    if (have($item(_templateObject7106 || (_templateObject7106 = _taggedTemplateLiteral104(["handful of hand chalk"])))) && have($item(_templateObject8100 || (_templateObject8100 = _taggedTemplateLiteral104(["pool cue"]))))) ensureEffect($effect(_templateObject980 || (_templateObject980 = _taggedTemplateLiteral104(["Chalky Hand"]))));
    tryPlayApriling("-combat");
  },
  ready: function() {
    return (0, import_kolmafia116.myInebriety)() <= 15 && ((0, import_kolmafia116.myInebriety)() === 1 || (0, import_kolmafia116.myDaycount)() > 1);
  },
  // Nonnegative contribution
  do: $location(_templateObject1060 || (_templateObject1060 = _taggedTemplateLiteral104(["The Haunted Billiards Room"]))),
  choices: {
    875: 1,
    900: 2,
    1436: 1
  },
  outfit: function() {
    return {
      equip: $items(_templateObject1159 || (_templateObject1159 = _taggedTemplateLiteral104(["pool cue"]))),
      modifier: "-combat"
    };
  },
  combat: new CombatStrategy2().ignore().killItem($monster(_templateObject1259 || (_templateObject1259 = _taggedTemplateLiteral104(["chalkdust wraith"])))).kill($monster(_templateObject1358 || (_templateObject1358 = _taggedTemplateLiteral104(["pooltergeist (ultra-rare)"])))),
  limit: {
    soft: 20,
    message: 'Consider increasing your permanent pool skill with "A Shark\'s Chum", if you have not.'
  }
}, {
  name: "Library",
  after: ["Billiards"],
  completed: function() {
    return step("questM20Necklace") >= 4;
  },
  do: $location(_templateObject1451 || (_templateObject1451 = _taggedTemplateLiteral104(["The Haunted Library"]))),
  combat: new CombatStrategy2().banish($monsters(_templateObject1550 || (_templateObject1550 = _taggedTemplateLiteral104(["banshee librarian, bookbat"])))).kill(),
  outfit: {
    equip: $items(_templateObject1650 || (_templateObject1650 = _taggedTemplateLiteral104(["deft pirate hook"])))
  },
  orbtargets: function() {
    return void 0;
  },
  // do not dodge anything with orb
  choices: {
    163: 4,
    888: 5,
    889: 5,
    894: 1
  },
  limit: {
    soft: 20
  }
}, {
  name: "Finish Floor1",
  after: ["Library"],
  priority: function() {
    return Priorities.Free;
  },
  completed: function() {
    return step("questM20Necklace") === 999;
  },
  do: function() {
    return (0, import_kolmafia116.visitUrl)("place.php?whichplace=manor1&action=manor1_ladys");
  },
  limit: {
    tries: 1
  },
  freeaction: true
}];
var Manor2 = [{
  name: "Start Floor2",
  after: ["Finish Floor1"],
  priority: function() {
    return Priorities.Free;
  },
  completed: function() {
    return step("questM21Dance") >= 1;
  },
  do: function() {
    return (0, import_kolmafia116.visitUrl)("place.php?whichplace=manor2&action=manor2_ladys");
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Gallery Delay",
  after: ["Start Floor2"],
  completed: function() {
    return $location(_templateObject1748 || (_templateObject1748 = _taggedTemplateLiteral104(["The Haunted Gallery"]))).turnsSpent >= 5 || have($item(_templateObject1847 || (_templateObject1847 = _taggedTemplateLiteral104(["Lady Spookyraven's dancing shoes"])))) || step("questM21Dance") >= 2;
  },
  do: $location(_templateObject1945 || (_templateObject1945 = _taggedTemplateLiteral104(["The Haunted Gallery"]))),
  choices: {
    89: 6,
    896: 1
  },
  // TODO: louvre
  limit: {
    turns: 5
  },
  delay: 5
}, {
  name: "Gallery",
  after: ["Gallery Delay"],
  completed: function() {
    return have($item(_templateObject2045 || (_templateObject2045 = _taggedTemplateLiteral104(["Lady Spookyraven's dancing shoes"])))) || step("questM21Dance") >= 2;
  },
  do: $location(_templateObject2198 || (_templateObject2198 = _taggedTemplateLiteral104(["The Haunted Gallery"]))),
  choices: {
    89: 6,
    896: 1
  },
  // TODO: louvre
  outfit: {
    modifier: "-combat"
  },
  limit: {
    soft: 15
  }
}, {
  name: "Bathroom Delay",
  after: ["Start Floor2"],
  completed: function() {
    return $location(_templateObject2244 || (_templateObject2244 = _taggedTemplateLiteral104(["The Haunted Bathroom"]))).turnsSpent >= 5 || have($item(_templateObject2339 || (_templateObject2339 = _taggedTemplateLiteral104(["Lady Spookyraven's powder puff"])))) || step("questM21Dance") >= 2;
  },
  do: $location(_templateObject2438 || (_templateObject2438 = _taggedTemplateLiteral104(["The Haunted Bathroom"]))),
  choices: {
    881: 1,
    105: 1,
    892: 1
  },
  combat: new CombatStrategy2().killHard($monster(_templateObject2537 || (_templateObject2537 = _taggedTemplateLiteral104(["cosmetics wraith"])))).macro(function() {
    if (have($item(_templateObject2635 || (_templateObject2635 = _taggedTemplateLiteral104(["genie bottle"]))))) return new Macro();
    return killMacro();
  }, $monster(_templateObject2735 || (_templateObject2735 = _taggedTemplateLiteral104(["toilet papergeist"])))).banish($monsters(_templateObject2833 || (_templateObject2833 = _taggedTemplateLiteral104(["claw-foot bathtub, malevolent hair clog"])))),
  limit: {
    turns: 5
  },
  delay: 5,
  // No need to search for cosmetics wraith
  orbtargets: function() {
    return [];
  },
  ignore_banishes: function() {
    return have($item(_templateObject2933 || (_templateObject2933 = _taggedTemplateLiteral104(["genie bottle"]))));
  }
}, {
  name: "Bathroom",
  after: ["Bathroom Delay"],
  completed: function() {
    return have($item(_templateObject3033 || (_templateObject3033 = _taggedTemplateLiteral104(["Lady Spookyraven's powder puff"])))) || step("questM21Dance") >= 2;
  },
  do: $location(_templateObject3177 || (_templateObject3177 = _taggedTemplateLiteral104(["The Haunted Bathroom"]))),
  choices: {
    881: 1,
    105: 1,
    892: 1
  },
  outfit: {
    modifier: "-combat"
  },
  combat: new CombatStrategy2().killHard($monster(_templateObject3234 || (_templateObject3234 = _taggedTemplateLiteral104(["cosmetics wraith"])))).macro(function() {
    if (have($item(_templateObject3333 || (_templateObject3333 = _taggedTemplateLiteral104(["genie bottle"]))))) return new Macro();
    return killMacro();
  }, $monster(_templateObject3430 || (_templateObject3430 = _taggedTemplateLiteral104(["toilet papergeist"])))).banish($monsters(_templateObject3529 || (_templateObject3529 = _taggedTemplateLiteral104(["claw-foot bathtub, malevolent hair clog"])))),
  limit: {
    soft: 15
  },
  // No need to search for cosmetics wraith
  orbtargets: function() {
    return [];
  },
  ignore_banishes: function() {
    return have($item(_templateObject3629 || (_templateObject3629 = _taggedTemplateLiteral104(["genie bottle"]))));
  }
}, {
  name: "Bedroom",
  after: ["Start Floor2"],
  completed: function() {
    return (have($item(_templateObject3729 || (_templateObject3729 = _taggedTemplateLiteral104(["Lady Spookyraven's finest gown"])))) || step("questM21Dance") >= 2) && have($item(_templateObject3829 || (_templateObject3829 = _taggedTemplateLiteral104(["Lord Spookyraven's spectacles"]))));
  },
  do: $location(_templateObject3927 || (_templateObject3927 = _taggedTemplateLiteral104(["The Haunted Bedroom"]))),
  choices: function() {
    return {
      876: 1,
      877: 1,
      878: !have($item(_templateObject4027 || (_templateObject4027 = _taggedTemplateLiteral104(["Lord Spookyraven's spectacles"])))) ? 3 : 4,
      879: 1,
      880: 1,
      897: 2
    };
  },
  combat: new CombatStrategy2().killHard($monster(_templateObject4153 || (_templateObject4153 = _taggedTemplateLiteral104(["animated ornate nightstand"])))).kill($monster(_templateObject4229 || (_templateObject4229 = _taggedTemplateLiteral104(["elegant animated nightstand"])))).banish($monsters(_templateObject4328 || (_templateObject4328 = _taggedTemplateLiteral104(["animated mahogany nightstand, animated rustic nightstand, Wardr\xF6b nightstand"])))).ignore($monster(_templateObject4427 || (_templateObject4427 = _taggedTemplateLiteral104(["tumbleweed"])))),
  delay: function() {
    if (!have($item(_templateObject4527 || (_templateObject4527 = _taggedTemplateLiteral104(["Lord Spookyraven's spectacles"]))))) return 0;
    if (!have($item(_templateObject4627 || (_templateObject4627 = _taggedTemplateLiteral104(["disposable instant camera"])))) && !have($item(_templateObject4727 || (_templateObject4727 = _taggedTemplateLiteral104(["photograph of a dog"])))) && step("questL11Palindome") < 3) return 0;
    return 5;
  },
  limit: {
    soft: 20
  }
}, {
  name: "Bedroom Camera",
  after: ["Bedroom"],
  completed: function() {
    return have($item(_templateObject4827 || (_templateObject4827 = _taggedTemplateLiteral104(["disposable instant camera"])))) || have($item(_templateObject4927 || (_templateObject4927 = _taggedTemplateLiteral104(["photograph of a dog"])))) || step("questL11Palindome") >= 3;
  },
  do: $location(_templateObject5027 || (_templateObject5027 = _taggedTemplateLiteral104(["The Haunted Bedroom"]))),
  choices: {
    876: 1,
    877: 1,
    878: 4,
    879: 1,
    880: 1,
    897: 2
  },
  combat: new CombatStrategy2().killHard($monster(_templateObject5136 || (_templateObject5136 = _taggedTemplateLiteral104(["animated ornate nightstand"])))).banish($monsters(_templateObject5228 || (_templateObject5228 = _taggedTemplateLiteral104(["animated mahogany nightstand, animated rustic nightstand, Wardr\xF6b nightstand, elegant animated nightstand"])))).ignore($monster(_templateObject5327 || (_templateObject5327 = _taggedTemplateLiteral104(["tumbleweed"])))),
  parachute: $monster(_templateObject5427 || (_templateObject5427 = _taggedTemplateLiteral104(["animated ornate nightstand"]))),
  limit: {
    soft: 10
  }
}, {
  name: "Open Ballroom",
  after: ["Gallery", "Bathroom", "Bedroom"],
  completed: function() {
    return step("questM21Dance") >= 3;
  },
  priority: function() {
    return Priorities.Free;
  },
  do: function() {
    return (0, import_kolmafia116.visitUrl)("place.php?whichplace=manor2&action=manor2_ladys");
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Finish Floor2",
  after: ["Open Ballroom"],
  completed: function() {
    return step("questM21Dance") >= 4;
  },
  do: $location(_templateObject5526 || (_templateObject5526 = _taggedTemplateLiteral104(["The Haunted Ballroom"]))),
  limit: {
    turns: 1
  }
}];
var ManorBasement = [{
  name: "Ballroom Delay",
  after: ["Macguffin/Diary", "Finish Floor2"],
  completed: function() {
    return $location(_templateObject5625 || (_templateObject5625 = _taggedTemplateLiteral104(["The Haunted Ballroom"]))).turnsSpent >= 5 || step("questL11Manor") >= 1;
  },
  do: $location(_templateObject5724 || (_templateObject5724 = _taggedTemplateLiteral104(["The Haunted Ballroom"]))),
  choices: {
    90: 3,
    106: 4,
    921: 1
  },
  limit: {
    turns: 5
  },
  delay: 5
}, {
  name: "Ballroom",
  after: ["Ballroom Delay"],
  completed: function() {
    return step("questL11Manor") >= 1;
  },
  do: $location(_templateObject5823 || (_templateObject5823 = _taggedTemplateLiteral104(["The Haunted Ballroom"]))),
  outfit: {
    modifier: "-combat"
  },
  choices: {
    90: 3,
    106: 4,
    921: 1
  },
  limit: {
    soft: 10
  }
}, {
  name: "Learn Recipe",
  after: ["Ballroom"],
  completed: function() {
    return get("spookyravenRecipeUsed") === "with_glasses";
  },
  do: function() {
    (0, import_kolmafia116.visitUrl)("place.php?whichplace=manor4&action=manor4_chamberwall");
    (0, import_kolmafia116.use)($item(_templateObject5921 || (_templateObject5921 = _taggedTemplateLiteral104(["recipe: mortar-dissolving solution"]))));
  },
  outfit: {
    equip: $items(_templateObject6019 || (_templateObject6019 = _taggedTemplateLiteral104(["Lord Spookyraven's spectacles"])))
  },
  limit: {
    tries: 1
  }
}, {
  name: "Wine Cellar",
  after: ["Learn Recipe"],
  prepare: function() {
    return tryPlayApriling("booze");
  },
  completed: function() {
    return have($item(_templateObject6128 || (_templateObject6128 = _taggedTemplateLiteral104(["bottle of Chateau de Vinegar"])))) || have($item(_templateObject6224 || (_templateObject6224 = _taggedTemplateLiteral104(["unstable fulminate"])))) || have($item(_templateObject6324 || (_templateObject6324 = _taggedTemplateLiteral104(["wine bomb"])))) || step("questL11Manor") >= 3;
  },
  do: $location(_templateObject6424 || (_templateObject6424 = _taggedTemplateLiteral104(["The Haunted Wine Cellar"]))),
  outfit: function() {
    return {
      modifier: "item, booze drop",
      equip: have($item(_templateObject6523 || (_templateObject6523 = _taggedTemplateLiteral104(["Lil' Doctor\u2122 bag"])))) && get("_otoscopeUsed") < 3 ? $items(_templateObject6620 || (_templateObject6620 = _taggedTemplateLiteral104(["Lil' Doctor\u2122 bag"]))) : []
    };
  },
  choices: {
    901: 2
  },
  combat: new CombatStrategy2().macro(Macro.trySkill($skill(_templateObject6716 || (_templateObject6716 = _taggedTemplateLiteral104(["Otoscope"])))), $monster(_templateObject6816 || (_templateObject6816 = _taggedTemplateLiteral104(["possessed wine rack"])))).killItem($monster(_templateObject6916 || (_templateObject6916 = _taggedTemplateLiteral104(["possessed wine rack"])))).banish($monsters(_templateObject7016 || (_templateObject7016 = _taggedTemplateLiteral104(["mad wino, skeletal sommelier"])))),
  limit: {
    soft: 15
  }
}, {
  name: "Laundry Room",
  after: ["Learn Recipe"],
  prepare: function() {
    return tryPlayApriling("food");
  },
  completed: function() {
    return have($item(_templateObject7121 || (_templateObject7121 = _taggedTemplateLiteral104(["blasting soda"])))) || have($item(_templateObject7221 || (_templateObject7221 = _taggedTemplateLiteral104(["unstable fulminate"])))) || have($item(_templateObject7320 || (_templateObject7320 = _taggedTemplateLiteral104(["wine bomb"])))) || step("questL11Manor") >= 3;
  },
  do: $location(_templateObject7420 || (_templateObject7420 = _taggedTemplateLiteral104(["The Haunted Laundry Room"]))),
  outfit: function() {
    return {
      modifier: "item, food drop",
      equip: have($item(_templateObject7518 || (_templateObject7518 = _taggedTemplateLiteral104(["Lil' Doctor\u2122 bag"])))) && get("_otoscopeUsed") < 3 ? $items(_templateObject7615 || (_templateObject7615 = _taggedTemplateLiteral104(["Lil' Doctor\u2122 bag"]))) : []
    };
  },
  choices: {
    891: 2
  },
  combat: new CombatStrategy2().macro(Macro.trySkill($skill(_templateObject7713 || (_templateObject7713 = _taggedTemplateLiteral104(["Otoscope"])))), $monster(_templateObject7813 || (_templateObject7813 = _taggedTemplateLiteral104(["cabinet of Dr. Limpieza"])))).killItem($monster(_templateObject7913 || (_templateObject7913 = _taggedTemplateLiteral104(["cabinet of Dr. Limpieza"])))).banish($monsters(_templateObject8012 || (_templateObject8012 = _taggedTemplateLiteral104(["plaid ghost, possessed laundry press"])))),
  limit: {
    soft: 15
  }
}, {
  name: "Fulminate",
  after: ["Wine Cellar", "Laundry Room"],
  completed: function() {
    return have($item(_templateObject8118 || (_templateObject8118 = _taggedTemplateLiteral104(["unstable fulminate"])))) || have($item(_templateObject8218 || (_templateObject8218 = _taggedTemplateLiteral104(["wine bomb"])))) || step("questL11Manor") >= 3;
  },
  do: function() {
    return (0, import_kolmafia116.create)($item(_templateObject8318 || (_templateObject8318 = _taggedTemplateLiteral104(["unstable fulminate"]))));
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Boiler Room",
  after: ["Fulminate"],
  completed: function() {
    return have($item(_templateObject8417 || (_templateObject8417 = _taggedTemplateLiteral104(["wine bomb"])))) || step("questL11Manor") >= 3;
  },
  prepare: function() {
    if ((0, import_kolmafia116.numericModifier)("Monster Level") < 81) (0, import_kolmafia116.changeMcd)(10);
    tuneSnapper($phylum(_templateObject8514 || (_templateObject8514 = _taggedTemplateLiteral104(["constructs"]))));
    (0, import_kolmafia116.restoreMp)(200);
  },
  post: function() {
    if ((0, import_kolmafia116.currentMcd)() > 0) (0, import_kolmafia116.changeMcd)(0);
  },
  do: $location(_templateObject8613 || (_templateObject8613 = _taggedTemplateLiteral104(["The Haunted Boiler Room"]))),
  outfit: function() {
    var result = {
      equip: [$item(_templateObject8713 || (_templateObject8713 = _taggedTemplateLiteral104(["unstable fulminate"])))],
      modes: {},
      familiar: $familiar(_templateObject8811 || (_templateObject8811 = _taggedTemplateLiteral104(["Red-Nosed Snapper"])))
    };
    var ml_needed = 81 - 10;
    var _iterator = _createForOfIteratorHelper33(getActiveEffects()), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var effect2 = _step.value;
        ml_needed -= (0, import_kolmafia116.numericModifier)(effect2, "Monster Level");
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    if (have($skill(_templateObject8911 || (_templateObject8911 = _taggedTemplateLiteral104(["Ur-Kel's Aria of Annoyance"])))) && !have($effect(_templateObject909 || (_templateObject909 = _taggedTemplateLiteral104(["Ur-Kel's Aria of Annoyance"]))))) ml_needed -= Math.min(2 * (0, import_kolmafia116.myLevel)(), 60);
    if (have($skill(_templateObject9117 || (_templateObject9117 = _taggedTemplateLiteral104(["Pride of the Puffin"])))) && !have($effect(_templateObject9217 || (_templateObject9217 = _taggedTemplateLiteral104(["Pride of the Puffin"]))))) ml_needed -= 10;
    if (have($skill(_templateObject9316 || (_templateObject9316 = _taggedTemplateLiteral104(["Drescher's Annoying Noise"])))) && !have($effect(_templateObject9413 || (_templateObject9413 = _taggedTemplateLiteral104(["Drescher's Annoying Noise"]))))) ml_needed -= 10;
    if (ml_needed > 0 && have($item(_templateObject9511 || (_templateObject9511 = _taggedTemplateLiteral104(["Jurassic Parka"])))) && have($skill(_templateObject9611 || (_templateObject9611 = _taggedTemplateLiteral104(["Torso Awareness"]))))) {
      result.equip.push($item(_templateObject9710 || (_templateObject9710 = _taggedTemplateLiteral104(["Jurassic Parka"]))));
      result.modes.parka = "spikolodon";
      ml_needed -= Math.min(3 * (0, import_kolmafia116.myLevel)(), 33);
    }
    if (ml_needed > 0 && have($item(_templateObject989 || (_templateObject989 = _taggedTemplateLiteral104(["old patched suit-pants"]))))) {
      result.equip.push($item(_templateObject997 || (_templateObject997 = _taggedTemplateLiteral104(["old patched suit-pants"]))));
      ml_needed -= 40;
    }
    if (ml_needed > 0 && have($item(_templateObject1007 || (_templateObject1007 = _taggedTemplateLiteral104(["backup camera"]))))) {
      result.equip.push($item(_templateObject10115 || (_templateObject10115 = _taggedTemplateLiteral104(["backup camera"]))));
      result.modes.backupcamera = "ml";
      ml_needed -= Math.min(3 * (0, import_kolmafia116.myLevel)(), 50);
    }
    if (ml_needed > 0) {
      return _objectSpread18(_objectSpread18({}, result), {}, {
        modifier: "ML"
      });
    } else {
      return result;
    }
  },
  effects: $effects(_templateObject10215 || (_templateObject10215 = _taggedTemplateLiteral104(["Ur-Kel's Aria of Annoyance, Pride of the Puffin, Drescher's Annoying Noise"]))),
  choices: {
    902: 2
  },
  combat: new CombatStrategy2().kill($monster(_templateObject10313 || (_templateObject10313 = _taggedTemplateLiteral104(["monstrous boiler"])))).banish($monsters(_templateObject10411 || (_templateObject10411 = _taggedTemplateLiteral104(["coaltergeist, steam elemental"])))),
  parachute: $monster(_templateObject10511 || (_templateObject10511 = _taggedTemplateLiteral104(["monstrous boiler"]))),
  limit: {
    soft: 10
  }
}, {
  name: "Blow Wall",
  after: ["Boiler Room"],
  completed: function() {
    return step("questL11Manor") >= 3;
  },
  do: function() {
    return (0, import_kolmafia116.visitUrl)("place.php?whichplace=manor4&action=manor4_chamberwall");
  },
  limit: {
    tries: 1
  },
  freeaction: true
}];
var ManorQuest = {
  name: "Manor",
  tasks: [{
    name: "Start",
    after: [],
    completed: function() {
      return step("questM20Necklace") >= 0;
    },
    do: function() {
      return (0, import_kolmafia116.use)($item(_templateObject1067 || (_templateObject1067 = _taggedTemplateLiteral104(["telegram from Lady Spookyraven"]))));
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }].concat(Manor1, Manor2, ManorBasement, [{
    name: "Boss",
    after: ["Blow Wall"],
    completed: function() {
      return step("questL11Manor") >= 999;
    },
    do: function() {
      return (0, import_kolmafia116.visitUrl)("place.php?whichplace=manor4&action=manor4_chamberboss");
    },
    combat: new CombatStrategy2().killHard(),
    limit: {
      tries: 1
    },
    boss: true
  }])
};

// src/tasks/level11_palindome.ts
var import_kolmafia117 = require("kolmafia");
init_dist();
var _templateObject901;
var _templateObject2199;
var _templateObject3178;
var _templateObject4154;
var _templateObject5137;
var _templateObject6129;
var _templateObject7107;
var _templateObject8101;
var _templateObject981;
var _templateObject1061;
var _templateObject1160;
var _templateObject1260;
var _templateObject1359;
var _templateObject1457;
var _templateObject1551;
var _templateObject1651;
var _templateObject1749;
var _templateObject1848;
var _templateObject1946;
var _templateObject2046;
var _templateObject21100;
var _templateObject2245;
var _templateObject2340;
var _templateObject2439;
var _templateObject2538;
var _templateObject2636;
var _templateObject2736;
var _templateObject2834;
var _templateObject2934;
var _templateObject3034;
var _templateObject3179;
var _templateObject3235;
var _templateObject3334;
var _templateObject3431;
var _templateObject3530;
var _templateObject3630;
var _templateObject3730;
var _templateObject3830;
var _templateObject3928;
var _templateObject4028;
var _templateObject4155;
var _templateObject4230;
var _templateObject4329;
var _templateObject4428;
var _templateObject4528;
var _templateObject4628;
var _templateObject4728;
var _templateObject4828;
var _templateObject4928;
var _templateObject5028;
var _templateObject5138;
var _templateObject5229;
var _templateObject5328;
var _templateObject5428;
var _templateObject5527;
var _templateObject5626;
var _templateObject5725;
var _templateObject5824;
var _templateObject5922;
var _templateObject6020;
var _templateObject6130;
var _templateObject6225;
var _templateObject6325;
var _templateObject6425;
var _templateObject6524;
var _templateObject6621;
var _templateObject6717;
var _templateObject6817;
var _templateObject6917;
var _templateObject7017;
var _templateObject7122;
var _templateObject7222;
var _templateObject7321;
var _templateObject7421;
var _templateObject7519;
var _templateObject7616;
var _templateObject7714;
var _templateObject7814;
var _templateObject7914;
var _templateObject8013;
var _templateObject8119;
var _templateObject8219;
var _templateObject8319;
var _templateObject8418;
var _templateObject8515;
var _templateObject8614;
var _templateObject8714;
var _templateObject8812;
var _templateObject8912;
var _templateObject9010;
var _templateObject9118;
var _templateObject9218;
var _templateObject9317;
var _templateObject9414;
var _templateObject9512;
var _templateObject9612;
var _templateObject9711;
var _templateObject9810;
var _templateObject998;
var _templateObject1008;
var _templateObject10116;
var _templateObject10216;
var _templateObject10314;
var _templateObject10412;
var _templateObject10512;
var _templateObject1068;
var _templateObject1077;
var _templateObject1087;
var _templateObject1097;
var _templateObject1107;
var _templateObject11115;
var _templateObject11215;
var _templateObject11312;
var _templateObject11411;
var _templateObject11510;
var _templateObject1167;
var _templateObject1177;
var _templateObject1187;
var _templateObject1197;
var _templateObject1207;
var _templateObject12115;
var _templateObject12214;
var _templateObject12312;
var _templateObject12411;
var _templateObject12510;
var _templateObject1267;
var _templateObject1277;
var _templateObject1287;
var _templateObject1297;
var _templateObject1307;
var _templateObject13115;
var _templateObject13214;
var _templateObject13311;
var _templateObject13411;
var _templateObject13510;
var _templateObject1367;
var _templateObject1377;
var _templateObject1387;
var _templateObject1397;
var _templateObject1407;
var _templateObject14115;
var _templateObject14214;
var _templateObject14311;
var _templateObject14411;
var _templateObject1458;
var _templateObject1467;
var _templateObject1477;
var _templateObject1487;
var _templateObject1497;
var _templateObject1507;
var _templateObject15115;
var _templateObject15213;
var _templateObject15311;
var _templateObject15410;
var _templateObject1557;
var _templateObject1567;
var _templateObject1577;
var _templateObject1587;
var _templateObject1597;
function _taggedTemplateLiteral105(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function shenItem(item14) {
  return get("shenQuestItem") === item14.name && (step("questL11Shen") === 1 || step("questL11Shen") === 3 || step("questL11Shen") === 5);
}
var Copperhead = [{
  name: "Copperhead Start",
  after: ["Macguffin/Diary"],
  completed: function() {
    return step("questL11Shen") >= 1;
  },
  do: $location(_templateObject901 || (_templateObject901 = _taggedTemplateLiteral105(["The Copperhead Club"]))),
  choices: {
    1074: 1
  },
  limit: {
    tries: 1
  }
}, {
  name: "Copperhead",
  after: ["Copperhead Start"],
  ready: function() {
    return step("questL11Shen") === 2 || step("questL11Shen") === 4 || step("questL11Shen") === 6;
  },
  completed: function() {
    return step("questL11Shen") === 999;
  },
  prepare: function() {
    if (have($item(_templateObject2199 || (_templateObject2199 = _taggedTemplateLiteral105(["crappy waiter disguise"]))))) ensureEffect($effect(_templateObject3178 || (_templateObject3178 = _taggedTemplateLiteral105(["Crappily Disguised as a Waiter"]))));
  },
  do: $location(_templateObject4154 || (_templateObject4154 = _taggedTemplateLiteral105(["The Copperhead Club"]))),
  combat: new CombatStrategy2().kill($monster(_templateObject5137 || (_templateObject5137 = _taggedTemplateLiteral105(["Mob Penguin Capo"])))),
  orbtargets: function() {
    if (have($familiar(_templateObject6129 || (_templateObject6129 = _taggedTemplateLiteral105(["Robortender"]))))) return [$monster(_templateObject7107 || (_templateObject7107 = _taggedTemplateLiteral105(["Mob Penguin Capo"])))];
    return [];
  },
  outfit: function() {
    if (have($familiar(_templateObject8101 || (_templateObject8101 = _taggedTemplateLiteral105(["Robortender"]))))) {
      var target = globalStateCache.orb().prediction($location(_templateObject981 || (_templateObject981 = _taggedTemplateLiteral105(["The Copperhead Club"]))));
      if (target === $monster(_templateObject1061 || (_templateObject1061 = _taggedTemplateLiteral105(["Mob Penguin Capo"])))) return {
        equip: $items(_templateObject1160 || (_templateObject1160 = _taggedTemplateLiteral105(["miniature crystal ball"]))),
        familiar: $familiar(_templateObject1260 || (_templateObject1260 = _taggedTemplateLiteral105(["Robortender"])))
      };
      else return {
        equip: $items(_templateObject1359 || (_templateObject1359 = _taggedTemplateLiteral105(["miniature crystal ball"])))
      };
    }
    return {};
  },
  choices: function() {
    return {
      852: 1,
      853: 1,
      854: 1,
      855: get("copperheadClubHazard") !== "lantern" ? 3 : 4
    };
  },
  limit: {
    tries: 30
  }
  // Extra waiter disguise adventures
}, {
  name: "Bat Snake",
  after: ["Copperhead Start", "Bat/Use Sonar 1"],
  ready: function() {
    return shenItem($item(_templateObject1457 || (_templateObject1457 = _taggedTemplateLiteral105(["The Stankara Stone"]))));
  },
  priority: function() {
    var jar_needed = !have($item(_templateObject1551 || (_templateObject1551 = _taggedTemplateLiteral105(["killing jar"])))) && !have($familiar(_templateObject1651 || (_templateObject1651 = _taggedTemplateLiteral105(["Melodramedary"])))) && (get("gnasirProgress") & 4) === 0 && get("desertExploration") < 100;
    if (jar_needed && get("lastEncounter") === "banshee librarian" && have($skill(_templateObject1749 || (_templateObject1749 = _taggedTemplateLiteral105(["Emotionally Chipped"])))) && get("_feelEnvyUsed") < 3 && get("_feelNostalgicUsed") < 3) return Priorities.GoodFeelNostalgia;
    else return Priorities.None;
  },
  completed: function() {
    return step("questL11Shen") === 999 || have($item(_templateObject1848 || (_templateObject1848 = _taggedTemplateLiteral105(["The Stankara Stone"])))) || (0, import_kolmafia117.myDaycount)() === 1 && step("questL11Shen") > 1;
  },
  do: $location(_templateObject1946 || (_templateObject1946 = _taggedTemplateLiteral105(["The Batrat and Ratbat Burrow"]))),
  combat: new CombatStrategy2().macro(function() {
    var jar_needed = !have($item(_templateObject2046 || (_templateObject2046 = _taggedTemplateLiteral105(["killing jar"])))) && !have($familiar(_templateObject21100 || (_templateObject21100 = _taggedTemplateLiteral105(["Melodramedary"])))) && (get("gnasirProgress") & 4) === 0 && get("desertExploration") < 100;
    if (jar_needed && get("lastEncounter") === "banshee librarian") {
      return Macro.trySkill($skill(_templateObject2245 || (_templateObject2245 = _taggedTemplateLiteral105(["Feel Nostalgic"])))).trySkill($skill(_templateObject2340 || (_templateObject2340 = _taggedTemplateLiteral105(["Feel Envy"])))).step(killMacro());
    }
    return new Macro();
  }, $monsters(_templateObject2439 || (_templateObject2439 = _taggedTemplateLiteral105(["batrat, ratbat"])))).killHard($monster(_templateObject2538 || (_templateObject2538 = _taggedTemplateLiteral105(["Batsnake"])))).killItem(),
  outfit: {
    modifier: "item",
    avoid: $items(_templateObject2636 || (_templateObject2636 = _taggedTemplateLiteral105(["broken champagne bottle"])))
  },
  limit: {
    soft: 10
  },
  orbtargets: function() {
    return [];
  },
  delay: function() {
    return step("questL04Bat") >= 3 ? 5 : 0;
  }
}, {
  name: "Cold Snake",
  after: ["Copperhead Start", "McLargeHuge/Trapper Return"],
  ready: function() {
    return shenItem($item(_templateObject2736 || (_templateObject2736 = _taggedTemplateLiteral105(["The First Pizza"])))) && !get("noncombatForcerActive");
  },
  completed: function() {
    return step("questL11Shen") === 999 || have($item(_templateObject2834 || (_templateObject2834 = _taggedTemplateLiteral105(["The First Pizza"])))) || (0, import_kolmafia117.myDaycount)() === 1 && step("questL11Shen") > 3;
  },
  prepare: function() {
    (0, import_kolmafia117.restoreHp)((0, import_kolmafia117.myMaxhp)());
    tryPlayApriling("+combat");
  },
  do: $location(_templateObject2934 || (_templateObject2934 = _taggedTemplateLiteral105(["Lair of the Ninja Snowmen"]))),
  outfit: function() {
    var spec = {
      modifier: "50 combat, init",
      skipDefaults: true,
      familiar: $familiar(_templateObject3034 || (_templateObject3034 = _taggedTemplateLiteral105(["Jumpsuited Hound Dog"]))),
      avoid: $items(_templateObject3179 || (_templateObject3179 = _taggedTemplateLiteral105(["miniature crystal ball"])))
    };
    if (have($familiar(_templateObject3235 || (_templateObject3235 = _taggedTemplateLiteral105(["Trick-or-Treating Tot"])))) && !have($item(_templateObject3334 || (_templateObject3334 = _taggedTemplateLiteral105(["li'l ninja costume"]))))) spec.familiar = $familiar(_templateObject3431 || (_templateObject3431 = _taggedTemplateLiteral105(["Trick-or-Treating Tot"])));
    if (have($item(_templateObject3530 || (_templateObject3530 = _taggedTemplateLiteral105(["latte lovers member's mug"])))) && get("latteModifier").includes("Combat Rate: 10")) {
      spec.offhand = $item(_templateObject3630 || (_templateObject3630 = _taggedTemplateLiteral105(["latte lovers member's mug"])));
    }
    return spec;
  },
  combat: new CombatStrategy2().killHard([$monster(_templateObject3730 || (_templateObject3730 = _taggedTemplateLiteral105(["Frozen Solid Snake"]))), $monster(_templateObject3830 || (_templateObject3830 = _taggedTemplateLiteral105(["ninja snowman assassin"])))]),
  orbtargets: function() {
    return void 0;
  },
  // no assassins in orbs
  limit: {
    soft: 10
  },
  delay: 5
}, {
  name: "Hot Snake Precastle",
  after: ["Copperhead Start", "Giant/Ground"],
  ready: function() {
    return shenItem($item(_templateObject3928 || (_templateObject3928 = _taggedTemplateLiteral105(["Murphy's Rancid Black Flag"])))) && !have($item(_templateObject4028 || (_templateObject4028 = _taggedTemplateLiteral105(["steam-powered model rocketship"]))));
  },
  completed: function() {
    return step("questL11Shen") === 999 || have($item(_templateObject4155 || (_templateObject4155 = _taggedTemplateLiteral105(["Murphy's Rancid Black Flag"]))));
  },
  do: $location(_templateObject4230 || (_templateObject4230 = _taggedTemplateLiteral105(["The Castle in the Clouds in the Sky (Top Floor)"]))),
  outfit: {
    equip: $items(_templateObject4329 || (_templateObject4329 = _taggedTemplateLiteral105(["Mohawk wig"]))),
    modifier: "-combat"
  },
  choices: function() {
    return {
      675: 4,
      676: 4,
      677: step("questL10Garbage") >= 10 ? 2 : 1,
      678: step("questL10Garbage") >= 10 ? 3 : 1,
      679: 1,
      1431: (0, import_kolmafia117.haveEquipped)($item(_templateObject4428 || (_templateObject4428 = _taggedTemplateLiteral105(["Mohawk wig"])))) ? 4 : 1
    };
  },
  orbtargets: function() {
    return [];
  },
  combat: new CombatStrategy2().killHard($monster(_templateObject4528 || (_templateObject4528 = _taggedTemplateLiteral105(["Burning Snake of Fire"])))),
  limit: {
    soft: 10
  },
  delay: 5
}, {
  name: "Hot Snake Postcastle",
  after: ["Copperhead Start", "Giant/Ground"],
  ready: function() {
    return shenItem($item(_templateObject4628 || (_templateObject4628 = _taggedTemplateLiteral105(["Murphy's Rancid Black Flag"])))) && have($item(_templateObject4728 || (_templateObject4728 = _taggedTemplateLiteral105(["steam-powered model rocketship"]))));
  },
  completed: function() {
    return step("questL11Shen") === 999 || have($item(_templateObject4828 || (_templateObject4828 = _taggedTemplateLiteral105(["Murphy's Rancid Black Flag"]))));
  },
  do: $location(_templateObject4928 || (_templateObject4928 = _taggedTemplateLiteral105(["The Castle in the Clouds in the Sky (Top Floor)"]))),
  choices: {
    675: 4,
    676: 4,
    677: 1,
    678: 1,
    679: 1,
    1431: 4
  },
  outfit: {
    modifier: "+combat"
  },
  combat: new CombatStrategy2().killHard($monster(_templateObject5028 || (_templateObject5028 = _taggedTemplateLiteral105(["Burning Snake of Fire"])))),
  orbtargets: function() {
    return [];
  },
  limit: {
    soft: 10
  },
  delay: 5
}, {
  name: "Sleaze Star Snake",
  after: ["Copperhead Start", "Giant/Unlock HITS"],
  ready: function() {
    return shenItem($item(_templateObject5138 || (_templateObject5138 = _taggedTemplateLiteral105(["The Eye of the Stars"]))));
  },
  completed: function() {
    return step("questL11Shen") === 999 || have($item(_templateObject5229 || (_templateObject5229 = _taggedTemplateLiteral105(["The Eye of the Stars"]))));
  },
  do: $location(_templateObject5328 || (_templateObject5328 = _taggedTemplateLiteral105(["The Hole in the Sky"]))),
  combat: new CombatStrategy2().killHard($monster(_templateObject5428 || (_templateObject5428 = _taggedTemplateLiteral105(["The Snake With Like Ten Heads"])))),
  limit: {
    soft: 10
  },
  delay: 5
}, {
  name: "Sleaze Frat Snake",
  after: ["Copperhead Start"],
  ready: function() {
    return shenItem($item(_templateObject5527 || (_templateObject5527 = _taggedTemplateLiteral105(["The Lacrosse Stick of Lacoronado"]))));
  },
  completed: function() {
    return step("questL11Shen") === 999 || have($item(_templateObject5626 || (_templateObject5626 = _taggedTemplateLiteral105(["The Lacrosse Stick of Lacoronado"]))));
  },
  do: $location(_templateObject5725 || (_templateObject5725 = _taggedTemplateLiteral105(["The Smut Orc Logging Camp"]))),
  combat: new CombatStrategy2().killHard($monster(_templateObject5824 || (_templateObject5824 = _taggedTemplateLiteral105(["The Frattlesnake"])))),
  limit: {
    soft: 10
  },
  delay: 5
}, {
  name: "Spooky Snake Precrypt",
  after: ["Copperhead Start"],
  ready: function() {
    return shenItem($item(_templateObject5922 || (_templateObject5922 = _taggedTemplateLiteral105(["The Shield of Brook"])))) && step("questL07Cyrptic") < 999;
  },
  completed: function() {
    return step("questL11Shen") === 999 || have($item(_templateObject6020 || (_templateObject6020 = _taggedTemplateLiteral105(["The Shield of Brook"]))));
  },
  do: $location(_templateObject6130 || (_templateObject6130 = _taggedTemplateLiteral105(["The Unquiet Garves"]))),
  combat: new CombatStrategy2().killHard($monster(_templateObject6225 || (_templateObject6225 = _taggedTemplateLiteral105(["Snakeleton"])))),
  limit: {
    soft: 10
  },
  delay: 5
}, {
  name: "Spooky Snake Postcrypt",
  after: ["Copperhead Start"],
  ready: function() {
    return shenItem($item(_templateObject6325 || (_templateObject6325 = _taggedTemplateLiteral105(["The Shield of Brook"])))) && step("questL07Cyrptic") === 999;
  },
  completed: function() {
    return step("questL11Shen") === 999 || have($item(_templateObject6425 || (_templateObject6425 = _taggedTemplateLiteral105(["The Shield of Brook"]))));
  },
  do: $location(_templateObject6524 || (_templateObject6524 = _taggedTemplateLiteral105(["The VERY Unquiet Garves"]))),
  combat: new CombatStrategy2().killHard($monster(_templateObject6621 || (_templateObject6621 = _taggedTemplateLiteral105(["Snakeleton"])))),
  limit: {
    soft: 10
  },
  delay: 5
}];
var Zepplin = [{
  name: "Protesters Start",
  after: ["Macguffin/Diary"],
  completed: function() {
    return step("questL11Ron") >= 1;
  },
  do: $location(_templateObject6717 || (_templateObject6717 = _taggedTemplateLiteral105(["A Mob of Zeppelin Protesters"]))),
  combat: new CombatStrategy2().killHard($monster(_templateObject6817 || (_templateObject6817 = _taggedTemplateLiteral105(["The Nuge"])))),
  choices: {
    856: 1,
    857: 1,
    858: 1,
    866: 2,
    1432: 1
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Protesters",
  after: ["Protesters Start", "Misc/Hermit Clover", "McLargeHuge/Clover Ore"],
  ready: function() {
    return (0, import_kolmafia117.canEquip)($item(_templateObject6917 || (_templateObject6917 = _taggedTemplateLiteral105(["transparent pants"])))) && ((0, import_kolmafia117.itemAmount)($item(_templateObject7017 || (_templateObject7017 = _taggedTemplateLiteral105(["11-leaf clover"])))) > cloversToSave() || have($item(_templateObject7122 || (_templateObject7122 = _taggedTemplateLiteral105(["Flamin' Whatshisname"])))) || step("questL11Shen") === 999);
  },
  prepare: function() {
    if (have($item(_templateObject7222 || (_templateObject7222 = _taggedTemplateLiteral105(["lynyrd musk"]))))) ensureEffect($effect(_templateObject7321 || (_templateObject7321 = _taggedTemplateLiteral105(["Musky"]))));
    if (AugustScepter_exports.canCast(2) && !have($effect(_templateObject7421 || (_templateObject7421 = _taggedTemplateLiteral105(["Lucky!"]))))) (0, import_kolmafia117.useSkill)($skill(_templateObject7519 || (_templateObject7519 = _taggedTemplateLiteral105(["Aug. 2nd: Find an Eleven-Leaf Clover Day"]))));
    if ((0, import_kolmafia117.itemAmount)($item(_templateObject7616 || (_templateObject7616 = _taggedTemplateLiteral105(["11-leaf clover"])))) > cloversToSave() && !have($effect(_templateObject7714 || (_templateObject7714 = _taggedTemplateLiteral105(["Lucky!"]))))) (0, import_kolmafia117.use)($item(_templateObject7814 || (_templateObject7814 = _taggedTemplateLiteral105(["11-leaf clover"]))));
    if (!have($item(_templateObject7914 || (_templateObject7914 = _taggedTemplateLiteral105(["candy cane sword cane"])))) && have($item(_templateObject8013 || (_templateObject8013 = _taggedTemplateLiteral105(["pocket wish"])))) && !have($effect(_templateObject8119 || (_templateObject8119 = _taggedTemplateLiteral105(["Dirty Pear"]))))) (0, import_kolmafia117.cliExecute)("genie effect dirty pear");
    if (have($skill(_templateObject8219 || (_templateObject8219 = _taggedTemplateLiteral105(["Bend Hell"])))) && !get("_bendHellUsed")) ensureWithMPSwaps([$effect(_templateObject8319 || (_templateObject8319 = _taggedTemplateLiteral105(["Bendin' Hell"])))]);
  },
  completed: function() {
    return get("zeppelinProtestors") >= 80;
  },
  priority: function() {
    return have($effect(_templateObject8418 || (_templateObject8418 = _taggedTemplateLiteral105(["Dirty Pear"])))) ? Priorities.Effect : Priorities.None;
  },
  do: $location(_templateObject8515 || (_templateObject8515 = _taggedTemplateLiteral105(["A Mob of Zeppelin Protesters"]))),
  combat: new CombatStrategy2().macro(new Macro().tryItem($item(_templateObject8614 || (_templateObject8614 = _taggedTemplateLiteral105(["cigarette lighter"]))))).killHard($monster(_templateObject8714 || (_templateObject8714 = _taggedTemplateLiteral105(["The Nuge"])))).killItem($monster(_templateObject8812 || (_templateObject8812 = _taggedTemplateLiteral105(["Blue Oyster cultist"])))).killItem($monster(_templateObject8912 || (_templateObject8912 = _taggedTemplateLiteral105(["lynyrd skinner"])))).kill(),
  choices: function() {
    return {
      856: 1,
      857: (0, import_kolmafia117.haveEquipped)($item(_templateObject9010 || (_templateObject9010 = _taggedTemplateLiteral105(["candy cane sword cane"])))) ? 2 : 1,
      858: 1,
      866: 2,
      1432: 1
    };
  },
  outfit: function() {
    var sleazeitems = $items(_templateObject9118 || (_templateObject9118 = _taggedTemplateLiteral105(["candy cane sword cane, deck of lewd playing cards, June cleaver, designer sweatpants, Jurassic Parka, transparent pants"])));
    if ((0, import_kolmafia117.itemAmount)($item(_templateObject9218 || (_templateObject9218 = _taggedTemplateLiteral105(["11-leaf clover"])))) > cloversToSave() || have($effect(_templateObject9317 || (_templateObject9317 = _taggedTemplateLiteral105(["Lucky!"]))))) return {
      modifier: "sleaze dmg, sleaze spell dmg",
      equip: sleazeitems,
      modes: {
        parka: "dilophosaur"
      }
    };
    return {
      modifier: "-combat, sleaze dmg, sleaze spell dmg",
      equip: sleazeitems,
      modes: {
        parka: "dilophosaur"
      }
    };
  },
  freeaction: function() {
    return (0, import_kolmafia117.itemAmount)($item(_templateObject9414 || (_templateObject9414 = _taggedTemplateLiteral105(["11-leaf clover"])))) > cloversToSave() || have($effect(_templateObject9512 || (_templateObject9512 = _taggedTemplateLiteral105(["Lucky!"]))));
  },
  limit: {
    soft: 30
  }
}, {
  name: "Protesters Finish",
  after: ["Protesters"],
  completed: function() {
    return step("questL11Ron") >= 2;
  },
  do: $location(_templateObject9612 || (_templateObject9612 = _taggedTemplateLiteral105(["A Mob of Zeppelin Protesters"]))),
  combat: new CombatStrategy2().killHard($monster(_templateObject9711 || (_templateObject9711 = _taggedTemplateLiteral105(["The Nuge"])))),
  choices: {
    856: 1,
    857: 1,
    858: 1,
    866: 2,
    1432: 1
  },
  limit: {
    tries: 2
  },
  // If clovers were used before the intro adventure, we need to clear both the intro and closing advs here.
  freeaction: true
}, {
  name: "Zepplin",
  after: ["Protesters Finish"],
  completed: function() {
    return step("questL11Ron") >= 5;
  },
  prepare: function() {
    if (have($item(_templateObject9810 || (_templateObject9810 = _taggedTemplateLiteral105(["Red Zeppelin ticket"]))))) return;
    (0, import_kolmafia117.visitUrl)("woods.php");
    (0, import_kolmafia117.visitUrl)("shop.php?whichshop=blackmarket");
    (0, import_kolmafia117.visitUrl)("shop.php?whichshop=blackmarket&action=buyitem&whichrow=289&ajax=1&quantity=1");
    if (!have($item(_templateObject998 || (_templateObject998 = _taggedTemplateLiteral105(["Red Zeppelin ticket"]))))) throw "Unable to buy Red Zeppelin ticket; please buy manually";
  },
  do: $location(_templateObject1008 || (_templateObject1008 = _taggedTemplateLiteral105(["The Red Zeppelin"]))),
  combat: new CombatStrategy2().killHard($monster(_templateObject10116 || (_templateObject10116 = _taggedTemplateLiteral105(['Ron "The Weasel" Copperhead'])))).macro(function() {
    return Macro.externalIf(get("_glarkCableUses") < 5, Macro.tryItem($item(_templateObject10216 || (_templateObject10216 = _taggedTemplateLiteral105(["glark cable"])))));
  }, $monsters(_templateObject10314 || (_templateObject10314 = _taggedTemplateLiteral105(["man with the red buttons, red skeleton, red butler"])))).banish($monsters(_templateObject10412 || (_templateObject10412 = _taggedTemplateLiteral105(["Red Herring, Red Snapper"])))).kill(),
  orbtargets: function() {
    return $monsters(_templateObject10512 || (_templateObject10512 = _taggedTemplateLiteral105(["man with the red buttons, red skeleton, red butler"])));
  },
  outfit: {
    modifier: "item",
    avoid: $items(_templateObject1068 || (_templateObject1068 = _taggedTemplateLiteral105(["broken champagne bottle"])))
  },
  limit: {
    soft: 13
  }
}];
var Dome = [{
  name: "Talisman",
  after: ["Copperhead", "Zepplin", "Bat Snake", "Cold Snake", "Hot Snake Precastle", "Hot Snake Postcastle", "Sleaze Star Snake", "Sleaze Frat Snake", "Spooky Snake Precrypt", "Spooky Snake Postcrypt"],
  completed: function() {
    return have($item(_templateObject1077 || (_templateObject1077 = _taggedTemplateLiteral105(["Talisman o' Namsilat"]))));
  },
  do: function() {
    return (0, import_kolmafia117.create)($item(_templateObject1087 || (_templateObject1087 = _taggedTemplateLiteral105(["Talisman o' Namsilat"]))));
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Palindome Dog",
  after: ["Talisman", "Manor/Bedroom Camera"],
  completed: function() {
    return have($item(_templateObject1097 || (_templateObject1097 = _taggedTemplateLiteral105(["photograph of a dog"])))) || step("questL11Palindome") >= 3;
  },
  prepare: function() {
    return tuneSnapper($phylum(_templateObject1107 || (_templateObject1107 = _taggedTemplateLiteral105(["dudes"]))));
  },
  do: $location(_templateObject11115 || (_templateObject11115 = _taggedTemplateLiteral105(["Inside the Palindome"]))),
  outfit: function() {
    if (have($item(_templateObject11215 || (_templateObject11215 = _taggedTemplateLiteral105(["stunt nuts"]))))) return {
      equip: $items(_templateObject11312 || (_templateObject11312 = _taggedTemplateLiteral105(["Talisman o' Namsilat"]))),
      modifier: "-combat",
      familiar: $familiar(_templateObject11411 || (_templateObject11411 = _taggedTemplateLiteral105(["Red-Nosed Snapper"])))
    };
    return {
      equip: $items(_templateObject11510 || (_templateObject11510 = _taggedTemplateLiteral105(["Talisman o' Namsilat"]))),
      modifier: "-combat, item",
      avoid: $items(_templateObject1167 || (_templateObject1167 = _taggedTemplateLiteral105(["broken champagne bottle"]))),
      familiar: $familiar(_templateObject1177 || (_templateObject1177 = _taggedTemplateLiteral105(["Red-Nosed Snapper"])))
    };
  },
  combat: new CombatStrategy2().banish($monsters(_templateObject1187 || (_templateObject1187 = _taggedTemplateLiteral105(["Evil Olive, Flock of Stab-bats, Taco Cat, Tan Gnat"])))).macro(new Macro().item($item(_templateObject1197 || (_templateObject1197 = _taggedTemplateLiteral105(["disposable instant camera"])))), $monsters(_templateObject1207 || (_templateObject1207 = _taggedTemplateLiteral105(["Bob Racecar, Racecar Bob"])))).killItem($monsters(_templateObject12115 || (_templateObject12115 = _taggedTemplateLiteral105(["Bob Racecar, Racecar Bob"])))).kill(),
  limit: {
    soft: 20
  }
}, {
  name: "Palindome Dudes",
  after: ["Palindome Dog"],
  completed: function() {
    return have(import_kolmafia117.Item.get(7262)) || step("questL11Palindome") >= 3;
  },
  do: $location(_templateObject12214 || (_templateObject12214 = _taggedTemplateLiteral105(["Inside the Palindome"]))),
  prepare: function() {
    return tuneSnapper($phylum(_templateObject12312 || (_templateObject12312 = _taggedTemplateLiteral105(["dudes"]))));
  },
  outfit: function() {
    if (have($item(_templateObject12411 || (_templateObject12411 = _taggedTemplateLiteral105(["stunt nuts"]))))) return {
      equip: $items(_templateObject12510 || (_templateObject12510 = _taggedTemplateLiteral105(["Talisman o' Namsilat"]))),
      modifier: "-combat",
      familiar: $familiar(_templateObject1267 || (_templateObject1267 = _taggedTemplateLiteral105(["Red-Nosed Snapper"])))
    };
    return {
      equip: $items(_templateObject1277 || (_templateObject1277 = _taggedTemplateLiteral105(["Talisman o' Namsilat"]))),
      modifier: "-combat, item",
      avoid: $items(_templateObject1287 || (_templateObject1287 = _taggedTemplateLiteral105(["broken champagne bottle"]))),
      familiar: $familiar(_templateObject1297 || (_templateObject1297 = _taggedTemplateLiteral105(["Red-Nosed Snapper"])))
    };
  },
  combat: new CombatStrategy2().banish($monsters(_templateObject1307 || (_templateObject1307 = _taggedTemplateLiteral105(["Evil Olive, Flock of Stab-bats, Taco Cat, Tan Gnat"])))).killItem($monsters(_templateObject13115 || (_templateObject13115 = _taggedTemplateLiteral105(["Bob Racecar, Racecar Bob"])))).kill(),
  limit: {
    soft: 20
  }
}, {
  name: "Palindome Photos",
  after: ["Palindome Dog", "Palindome Dudes"],
  completed: function() {
    return have($item(_templateObject13214 || (_templateObject13214 = _taggedTemplateLiteral105(["photograph of a red nugget"])))) && have($item(_templateObject13311 || (_templateObject13311 = _taggedTemplateLiteral105(["photograph of God"])))) && have($item(_templateObject13411 || (_templateObject13411 = _taggedTemplateLiteral105(["photograph of an ostrich egg"])))) || step("questL11Palindome") >= 3;
  },
  do: $location(_templateObject13510 || (_templateObject13510 = _taggedTemplateLiteral105(["Inside the Palindome"]))),
  outfit: function() {
    if (have($item(_templateObject1367 || (_templateObject1367 = _taggedTemplateLiteral105(["stunt nuts"]))))) return {
      equip: $items(_templateObject1377 || (_templateObject1377 = _taggedTemplateLiteral105(["Talisman o' Namsilat"]))),
      modifier: "-combat"
    };
    return {
      equip: $items(_templateObject1387 || (_templateObject1387 = _taggedTemplateLiteral105(["Talisman o' Namsilat"]))),
      modifier: "-combat, item",
      avoid: $items(_templateObject1397 || (_templateObject1397 = _taggedTemplateLiteral105(["broken champagne bottle"])))
    };
  },
  combat: new CombatStrategy2().killItem($monsters(_templateObject1407 || (_templateObject1407 = _taggedTemplateLiteral105(["Bob Racecar, Racecar Bob"])))),
  limit: {
    soft: 20
  }
}, {
  name: "Palindome Nuts",
  after: ["Palindome Dog", "Palindome Dudes", "Palindome Photos"],
  do: $location(_templateObject14115 || (_templateObject14115 = _taggedTemplateLiteral105(["Inside the Palindome"]))),
  completed: function() {
    return have($item(_templateObject14214 || (_templateObject14214 = _taggedTemplateLiteral105(["stunt nuts"])))) || have($item(_templateObject14311 || (_templateObject14311 = _taggedTemplateLiteral105(["wet stunt nut stew"])))) || step("questL11Palindome") >= 5;
  },
  outfit: {
    equip: $items(_templateObject14411 || (_templateObject14411 = _taggedTemplateLiteral105(["Talisman o' Namsilat"]))),
    modifier: "item",
    avoid: $items(_templateObject1458 || (_templateObject1458 = _taggedTemplateLiteral105(["broken champagne bottle"])))
  },
  combat: new CombatStrategy2().killItem($monsters(_templateObject1467 || (_templateObject1467 = _taggedTemplateLiteral105(["Bob Racecar, Racecar Bob"])))),
  limit: {
    soft: 20
  }
}, {
  name: "Alarm Gem",
  after: ["Palindome Dudes", "Palindome Photos"],
  // If we are not cursed, or we've already completed the cursed quest. Then no risk of removing curse.
  ready: function() {
    return $effects(_templateObject1477 || (_templateObject1477 = _taggedTemplateLiteral105(["Once-Cursed, Twice-Cursed, Thrice-Cursed"]))).find(function(e) {
      return have(e);
    }) === void 0 || get("hiddenApartmentProgress") >= 7;
  },
  completed: function() {
    return step("questL11Palindome") >= 3;
  },
  do: function() {
    if (have(import_kolmafia117.Item.get(7262))) (0, import_kolmafia117.use)(import_kolmafia117.Item.get(7262));
    (0, import_kolmafia117.visitUrl)("place.php?whichplace=palindome&action=pal_droffice");
    (0, import_kolmafia117.visitUrl)("choice.php?pwd=".concat((0, import_kolmafia117.myHash)(), "&whichchoice=872&option=1&photo1=2259&photo2=7264&photo3=7263&photo4=7265"));
    (0, import_kolmafia117.use)(1, import_kolmafia117.Item.get(7270));
    (0, import_kolmafia117.visitUrl)("place.php?whichplace=palindome&action=pal_mroffice");
    fillHp();
  },
  outfit: {
    equip: $items(_templateObject1487 || (_templateObject1487 = _taggedTemplateLiteral105(["Talisman o' Namsilat"])))
  },
  limit: {
    tries: 1
  },
  freeaction: true,
  expectbeatenup: true
}, {
  name: "Grove",
  after: ["Alarm Gem"],
  completed: function() {
    return have($item(_templateObject1497 || (_templateObject1497 = _taggedTemplateLiteral105(["bird rib"])))) && have($item(_templateObject1507 || (_templateObject1507 = _taggedTemplateLiteral105(["lion oil"])))) || have($item(_templateObject15115 || (_templateObject15115 = _taggedTemplateLiteral105(["wet stew"])))) || have($item(_templateObject15213 || (_templateObject15213 = _taggedTemplateLiteral105(["wet stunt nut stew"])))) || step("questL11Palindome") >= 5;
  },
  do: $location(_templateObject15311 || (_templateObject15311 = _taggedTemplateLiteral105(["Whitey's Grove"]))),
  outfit: {
    modifier: "50 combat, item"
  },
  combat: new CombatStrategy2().killItem($monster(_templateObject15410 || (_templateObject15410 = _taggedTemplateLiteral105(["whitesnake"])))).killItem($monster(_templateObject1557 || (_templateObject1557 = _taggedTemplateLiteral105(["white lion"])))),
  limit: {
    soft: 15
  }
}, {
  name: "Open Alarm",
  after: ["Alarm Gem", "Palindome Nuts", "Grove"],
  completed: function() {
    return step("questL11Palindome") >= 5;
  },
  do: function() {
    if (!have($item(_templateObject1567 || (_templateObject1567 = _taggedTemplateLiteral105(["wet stunt nut stew"]))))) (0, import_kolmafia117.create)($item(_templateObject1577 || (_templateObject1577 = _taggedTemplateLiteral105(["wet stunt nut stew"]))));
    (0, import_kolmafia117.visitUrl)("place.php?whichplace=palindome&action=pal_mrlabel");
  },
  outfit: {
    equip: $items(_templateObject1587 || (_templateObject1587 = _taggedTemplateLiteral105(["Talisman o' Namsilat"])))
  },
  limit: {
    tries: 1
  },
  freeaction: true
}];
var PalindomeQuest = {
  name: "Palindome",
  tasks: [].concat(Copperhead, Zepplin, Dome, [{
    name: "Boss",
    after: ["Open Alarm"],
    completed: function() {
      return step("questL11Palindome") === 999;
    },
    do: function() {
      (0, import_kolmafia117.visitUrl)("place.php?whichplace=palindome&action=pal_drlabel");
      (0, import_kolmafia117.runChoice)(-1);
    },
    outfit: {
      equip: $items(_templateObject1597 || (_templateObject1597 = _taggedTemplateLiteral105(["Talisman o' Namsilat, Mega Gem"])))
    },
    choices: {
      131: 1
    },
    combat: new CombatStrategy2().killHard(),
    limit: {
      tries: 1
    },
    boss: true
  }])
};
function cloversToSave() {
  return 1;
}

// src/tasks/level11.ts
var import_kolmafia118 = require("kolmafia");
init_dist();
var _templateObject990;
var _templateObject2200;
var _templateObject3180;
var _templateObject4156;
var _templateObject5139;
var _templateObject6131;
var _templateObject7108;
var _templateObject8102;
var _templateObject991;
var _templateObject1069;
var _templateObject1161;
var _templateObject1261;
var _templateObject1360;
var _templateObject1459;
var _templateObject1558;
var _templateObject1657;
var _templateObject1750;
var _templateObject1849;
var _templateObject1947;
var _templateObject2047;
var _templateObject21101;
var _templateObject2246;
var _templateObject2341;
var _templateObject2440;
var _templateObject2539;
var _templateObject2637;
var _templateObject2737;
var _templateObject2835;
var _templateObject2935;
var _templateObject3035;
var _templateObject3181;
var _templateObject3236;
var _templateObject3335;
var _templateObject3433;
var _templateObject3531;
var _templateObject3631;
var _templateObject3731;
var _templateObject3831;
var _templateObject3929;
var _templateObject4029;
var _templateObject4157;
var _templateObject4231;
var _templateObject4330;
var _templateObject4429;
var _templateObject4529;
var _templateObject4629;
var _templateObject4729;
var _templateObject4829;
var _templateObject4929;
var _templateObject5029;
var _templateObject5140;
var _templateObject5230;
var _templateObject5329;
var _templateObject5429;
var _templateObject5528;
var _templateObject5627;
var _templateObject5726;
var _templateObject5825;
var _templateObject5923;
var _templateObject6021;
var _templateObject6132;
var _templateObject6226;
var _templateObject6326;
var _templateObject6426;
var _templateObject6525;
var _templateObject6622;
var _templateObject6718;
var _templateObject6818;
var _templateObject6918;
var _templateObject7018;
var _templateObject7123;
var _templateObject7223;
var _templateObject7322;
var _templateObject7422;
var _templateObject7520;
var _templateObject7617;
var _templateObject7715;
var _templateObject7815;
var _templateObject7915;
var _templateObject8014;
var _templateObject8120;
var _templateObject8220;
var _templateObject8320;
var _templateObject8419;
var _templateObject8516;
var _templateObject8615;
var _templateObject8715;
var _templateObject8813;
var _templateObject8913;
var _templateObject9011;
var _templateObject9119;
var _templateObject9219;
var _templateObject9318;
var _templateObject9415;
var _templateObject9513;
var _templateObject9613;
var _templateObject9712;
var _templateObject9811;
var _templateObject999;
var _templateObject1009;
var _templateObject10117;
var _templateObject10217;
var _templateObject10315;
var _templateObject10413;
var _templateObject10513;
var _templateObject10610;
var _templateObject1078;
var _templateObject1088;
var _templateObject1098;
var _templateObject1108;
var _templateObject11116;
var _templateObject11216;
var _templateObject11313;
var _templateObject11412;
var _templateObject11511;
var _templateObject1168;
var _templateObject1178;
function _taggedTemplateLiteral106(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var Diary = [{
  name: "Forest",
  after: ["Start"],
  prepare: function() {
    tryPlayApriling("+combat");
  },
  completed: function() {
    return step("questL11Black") >= 2;
  },
  do: $location(_templateObject990 || (_templateObject990 = _taggedTemplateLiteral106(["The Black Forest"]))),
  post: function() {
    if (have($effect(_templateObject2200 || (_templateObject2200 = _taggedTemplateLiteral106(["Really Quite Poisoned"]))))) uneffect($effect(_templateObject3180 || (_templateObject3180 = _taggedTemplateLiteral106(["Really Quite Poisoned"]))));
  },
  outfit: function() {
    var equip10 = [$item(_templateObject4156 || (_templateObject4156 = _taggedTemplateLiteral106(["blackberry galoshes"])))];
    if (have($item(_templateObject5139 || (_templateObject5139 = _taggedTemplateLiteral106(["latte lovers member's mug"])))) && !get("latteUnlocks").includes("cajun")) {
      equip10.push($item(_templateObject6131 || (_templateObject6131 = _taggedTemplateLiteral106(["latte lovers member's mug"]))));
    }
    if (have($item(_templateObject7108 || (_templateObject7108 = _taggedTemplateLiteral106(["candy cane sword cane"])))) && !get("candyCaneSwordBlackForest", false)) equip10.push($item(_templateObject8102 || (_templateObject8102 = _taggedTemplateLiteral106(["candy cane sword cane"]))));
    if (have($item(_templateObject991 || (_templateObject991 = _taggedTemplateLiteral106(["reassembled blackbird"]))))) {
      return {
        equip: equip10,
        modifier: "50 combat 5max, -1ML"
      };
    }
    return {
      equip: equip10,
      familiar: $familiar(_templateObject1069 || (_templateObject1069 = _taggedTemplateLiteral106(["Reassembled Blackbird"]))),
      modifier: "50 combat 5max, item, -1ML",
      avoid: $items(_templateObject1161 || (_templateObject1161 = _taggedTemplateLiteral106(["broken champagne bottle"])))
    };
  },
  choices: function() {
    return {
      923: 1,
      924: beeOption(),
      928: 4,
      1018: 1,
      1019: 1
    };
  },
  combat: new CombatStrategy2().ignore($monster(_templateObject1261 || (_templateObject1261 = _taggedTemplateLiteral106(["blackberry bush"])))).killItem($monsters(_templateObject1360 || (_templateObject1360 = _taggedTemplateLiteral106(["black adder, black panther"])))).kill(),
  orbtargets: function() {
    return void 0;
  },
  // do not dodge anything with orb
  limit: {
    soft: 15
  }
}, {
  name: "Buy Documents",
  after: ["Forest"],
  ready: function() {
    return (0, import_kolmafia118.myMeat)() >= 5e3;
  },
  completed: function() {
    return have($item(_templateObject1459 || (_templateObject1459 = _taggedTemplateLiteral106(["forged identification documents"])))) || step("questL11Black") >= 4;
  },
  do: function() {
    (0, import_kolmafia118.visitUrl)("woods.php");
    (0, import_kolmafia118.visitUrl)("shop.php?whichshop=blackmarket");
    (0, import_kolmafia118.visitUrl)("shop.php?whichshop=blackmarket&action=buyitem&whichrow=281&ajax=1&quantity=1");
  },
  outfit: {
    equip: $items(_templateObject1558 || (_templateObject1558 = _taggedTemplateLiteral106(["designer sweatpants"])))
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Diary",
  after: ["Buy Documents", "Misc/Unlock Beach"],
  ready: function() {
    return (0, import_kolmafia118.myMeat)() >= 500;
  },
  completed: function() {
    return step("questL11Black") >= 4;
  },
  do: $location(_templateObject1657 || (_templateObject1657 = _taggedTemplateLiteral106(["The Shore, Inc. Travel Agency"]))),
  post: function() {
    if (step("questL11Black") < 4) {
      debug("Possible mafia diary desync detected; refreshing...");
      (0, import_kolmafia118.cliExecute)("refresh all");
      if (have($item(_templateObject1750 || (_templateObject1750 = _taggedTemplateLiteral106(["your father's MacGuffin diary"]))))) (0, import_kolmafia118.use)($item(_templateObject1849 || (_templateObject1849 = _taggedTemplateLiteral106(["your father's MacGuffin diary"]))));
      (0, import_kolmafia118.visitUrl)("questlog.php?which=1");
    }
  },
  choices: {
    793: 1
  },
  limit: {
    tries: 1
  }
}];
var Desert = [{
  name: "Scrip",
  after: ["Misc/Unlock Beach", "Misc/Unlock Island"],
  ready: function() {
    return (0, import_kolmafia118.myMeat)() >= 6e3 || step("questL11Black") >= 4 && (0, import_kolmafia118.myMeat)() >= 500;
  },
  completed: function() {
    return have($item(_templateObject1947 || (_templateObject1947 = _taggedTemplateLiteral106(["Shore Inc. Ship Trip Scrip"])))) || have($item(_templateObject2047 || (_templateObject2047 = _taggedTemplateLiteral106(["UV-resistant compass"]))));
  },
  do: $location(_templateObject21101 || (_templateObject21101 = _taggedTemplateLiteral106(["The Shore, Inc. Travel Agency"]))),
  outfit: function() {
    if (!get("candyCaneSwordShore")) return {
      equip: $items(_templateObject2246 || (_templateObject2246 = _taggedTemplateLiteral106(["candy cane sword cane"])))
    };
    else return {};
  },
  choices: function() {
    var swordReady = (0, import_kolmafia118.haveEquipped)($item(_templateObject2341 || (_templateObject2341 = _taggedTemplateLiteral106(["candy cane sword cane"])))) && !get("candyCaneSwordShore");
    var statChoice = byStat({
      Muscle: 1,
      Mysticality: 2,
      Moxie: 3
    });
    return {
      793: swordReady ? 5 : statChoice
    };
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Compass",
  after: ["Misc/Unlock Beach", "Scrip"],
  completed: function() {
    return have($item(_templateObject2440 || (_templateObject2440 = _taggedTemplateLiteral106(["UV-resistant compass"]))));
  },
  do: function() {
    return (0, import_kolmafia118.buy)($coinmaster(_templateObject2539 || (_templateObject2539 = _taggedTemplateLiteral106(["The Shore, Inc. Gift Shop"]))), 1, $item(_templateObject2637 || (_templateObject2637 = _taggedTemplateLiteral106(["UV-resistant compass"]))));
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Oasis",
  after: ["Compass"],
  completed: function() {
    return get("desertExploration") >= 100;
  },
  ready: function() {
    return !have($effect(_templateObject2737 || (_templateObject2737 = _taggedTemplateLiteral106(["Ultrahydrated"])))) && get("oasisAvailable", false);
  },
  do: $location(_templateObject2835 || (_templateObject2835 = _taggedTemplateLiteral106(["The Oasis"]))),
  limit: {
    soft: 10
  }
}, {
  name: "Oasis Drum",
  after: ["Compass"],
  ready: function() {
    return have($item(_templateObject2935 || (_templateObject2935 = _taggedTemplateLiteral106(["worm-riding hooks"])))) || (0, import_kolmafia118.itemAmount)($item(_templateObject3035 || (_templateObject3035 = _taggedTemplateLiteral106(["worm-riding manual page"])))) >= 15;
  },
  priority: function() {
    return have($effect(_templateObject3181 || (_templateObject3181 = _taggedTemplateLiteral106(["Ultrahydrated"])))) ? Priorities.MinorEffect : Priorities.None;
  },
  completed: function() {
    return get("desertExploration") >= 100 || have($item(_templateObject3236 || (_templateObject3236 = _taggedTemplateLiteral106(["drum machine"])))) || (get("gnasirProgress") & 16) !== 0;
  },
  do: $location(_templateObject3335 || (_templateObject3335 = _taggedTemplateLiteral106(["The Oasis"]))),
  combat: new CombatStrategy2().killItem($monster(_templateObject3433 || (_templateObject3433 = _taggedTemplateLiteral106(["blur"])))),
  outfit: {
    modifier: "item",
    avoid: $items(_templateObject3531 || (_templateObject3531 = _taggedTemplateLiteral106(["broken champagne bottle"])))
  },
  limit: {
    soft: 15
  },
  post: function() {
    if (!(0, import_kolmafia118.visitUrl)("place.php?whichplace=desertbeach").includes("action=db_gnasir")) return;
    if ((0, import_kolmafia118.itemAmount)($item(_templateObject3631 || (_templateObject3631 = _taggedTemplateLiteral106(["worm-riding manual page"])))) >= 15 || (get("gnasirProgress") & 1) === 0 && have($item(_templateObject3731 || (_templateObject3731 = _taggedTemplateLiteral106(["stone rose"])))) || (get("gnasirProgress") & 2) === 0 && have($item(_templateObject3831 || (_templateObject3831 = _taggedTemplateLiteral106(["can of black paint"])))) || (get("gnasirProgress") & 4) === 0 && have($item(_templateObject3929 || (_templateObject3929 = _taggedTemplateLiteral106(["killing jar"]))))) {
      var res = (0, import_kolmafia118.visitUrl)("place.php?whichplace=desertbeach&action=db_gnasir");
      while (res.includes("value=2")) {
        res = (0, import_kolmafia118.runChoice)(2);
      }
      (0, import_kolmafia118.runChoice)(1);
    }
    (0, import_kolmafia118.cliExecute)("use * desert sightseeing pamphlet");
    if (have($item(_templateObject4029 || (_templateObject4029 = _taggedTemplateLiteral106(["worm-riding hooks"])))) && have($item(_templateObject4157 || (_templateObject4157 = _taggedTemplateLiteral106(["drum machine"]))))) (0, import_kolmafia118.use)($item(_templateObject4231 || (_templateObject4231 = _taggedTemplateLiteral106(["drum machine"]))));
  },
  parachute: $monster(_templateObject4330 || (_templateObject4330 = _taggedTemplateLiteral106(["blur"])))
}, {
  name: "Milestone",
  after: ["Misc/Unlock Beach", "Diary"],
  ready: function() {
    return have($item(_templateObject4429 || (_templateObject4429 = _taggedTemplateLiteral106(["milestone"]))));
  },
  completed: function() {
    return !have($item(_templateObject4529 || (_templateObject4529 = _taggedTemplateLiteral106(["milestone"])))) || get("desertExploration") >= 100;
  },
  do: function() {
    return (0, import_kolmafia118.use)($item(_templateObject4629 || (_templateObject4629 = _taggedTemplateLiteral106(["milestone"]))), (0, import_kolmafia118.availableAmount)($item(_templateObject4729 || (_templateObject4729 = _taggedTemplateLiteral106(["milestone"])))));
  },
  limit: {
    tries: 5
  },
  // 5 to account for max of starting, poke garden & pull
  freeaction: true
}, {
  name: "Desert",
  after: ["Diary", "Compass"],
  acquire: [{
    item: $item(_templateObject4829 || (_templateObject4829 = _taggedTemplateLiteral106(["can of black paint"]))),
    useful: function() {
      return (get("gnasirProgress") & 2) === 0;
    }
  }],
  ready: function() {
    var cond = (have($item(_templateObject4929 || (_templateObject4929 = _taggedTemplateLiteral106(["can of black paint"])))) || (0, import_kolmafia118.myMeat)() >= 1e3 || (get("gnasirProgress") & 2) !== 0) && (0, import_kolmafia118.itemAmount)($item(_templateObject5029 || (_templateObject5029 = _taggedTemplateLiteral106(["worm-riding manual page"])))) < 15 && !have($item(_templateObject5140 || (_templateObject5140 = _taggedTemplateLiteral106(["worm-riding hooks"])))) && (!get("oasisAvailable", false) && !have($effect(_templateObject5230 || (_templateObject5230 = _taggedTemplateLiteral106(["A Girl Named Sue"])))) || have($effect(_templateObject5329 || (_templateObject5329 = _taggedTemplateLiteral106(["Ultrahydrated"])))));
    return cond;
  },
  priority: function() {
    return have($effect(_templateObject5429 || (_templateObject5429 = _taggedTemplateLiteral106(["Ultrahydrated"])))) ? Priorities.MinorEffect : Priorities.None;
  },
  completed: function() {
    return get("desertExploration") >= 100;
  },
  do: $location(_templateObject5528 || (_templateObject5528 = _taggedTemplateLiteral106(["The Arid, Extra-Dry Desert"]))),
  outfit: function() {
    if (!have($skill(_templateObject5627 || (_templateObject5627 = _taggedTemplateLiteral106(["Just the Facts"])))) && have($item(_templateObject5726 || (_templateObject5726 = _taggedTemplateLiteral106(["industrial fire extinguisher"])))) && get("_fireExtinguisherCharge") >= 20 && !get("fireExtinguisherDesertUsed") && have($effect(_templateObject5825 || (_templateObject5825 = _taggedTemplateLiteral106(["Ultrahydrated"]))))) return {
      equip: $items(_templateObject5923 || (_templateObject5923 = _taggedTemplateLiteral106(["survival knife, industrial fire extinguisher, UV-resistant compass, dromedary drinking helmet"]))),
      familiar: $familiar(_templateObject6021 || (_templateObject6021 = _taggedTemplateLiteral106(["Melodramedary"]))),
      avoid: $items(_templateObject6132 || (_templateObject6132 = _taggedTemplateLiteral106(["Roman Candelabra, backup camera"])))
    };
    else return {
      equip: $items(_templateObject6226 || (_templateObject6226 = _taggedTemplateLiteral106(["survival knife, UV-resistant compass, dromedary drinking helmet"]))),
      familiar: $familiar(_templateObject6326 || (_templateObject6326 = _taggedTemplateLiteral106(["Melodramedary"]))),
      avoid: $items(_templateObject6426 || (_templateObject6426 = _taggedTemplateLiteral106(["Roman Candelabra, backup camera"])))
    };
  },
  combat: new CombatStrategy2().macro(function() {
    if (!have($skill(_templateObject6525 || (_templateObject6525 = _taggedTemplateLiteral106(["Just the Facts"])))) && have($effect(_templateObject6622 || (_templateObject6622 = _taggedTemplateLiteral106(["Ultrahydrated"])))) && have($item(_templateObject6718 || (_templateObject6718 = _taggedTemplateLiteral106(["industrial fire extinguisher"])))) && get("_fireExtinguisherCharge") >= 20 && !get("fireExtinguisherDesertUsed")) return new Macro().trySkill($skill(_templateObject6818 || (_templateObject6818 = _taggedTemplateLiteral106(["Fire Extinguisher: Zone Specific"]))));
    else return new Macro();
  }).kill(),
  post: function() {
    if (!(0, import_kolmafia118.visitUrl)("place.php?whichplace=desertbeach").includes("action=db_gnasir")) return;
    if ((get("gnasirProgress") & 16) > 0) return;
    if ((0, import_kolmafia118.itemAmount)($item(_templateObject6918 || (_templateObject6918 = _taggedTemplateLiteral106(["worm-riding manual page"])))) >= 15 || (get("gnasirProgress") & 1) === 0 && have($item(_templateObject7018 || (_templateObject7018 = _taggedTemplateLiteral106(["stone rose"])))) || (get("gnasirProgress") & 2) === 0 && have($item(_templateObject7123 || (_templateObject7123 = _taggedTemplateLiteral106(["can of black paint"])))) || (get("gnasirProgress") & 4) === 0 && have($item(_templateObject7223 || (_templateObject7223 = _taggedTemplateLiteral106(["killing jar"]))))) {
      var res = (0, import_kolmafia118.visitUrl)("place.php?whichplace=desertbeach&action=db_gnasir");
      while (res.includes("value=2")) {
        res = (0, import_kolmafia118.runChoice)(2);
      }
      (0, import_kolmafia118.runChoice)(1);
    }
    (0, import_kolmafia118.cliExecute)("use * desert sightseeing pamphlet");
    if (have($item(_templateObject7322 || (_templateObject7322 = _taggedTemplateLiteral106(["worm-riding hooks"])))) && have($item(_templateObject7422 || (_templateObject7422 = _taggedTemplateLiteral106(["drum machine"]))))) (0, import_kolmafia118.use)($item(_templateObject7520 || (_templateObject7520 = _taggedTemplateLiteral106(["drum machine"]))));
  },
  limit: {
    soft: 30
  },
  choices: {
    805: 1
  }
}];
function rotatePyramid(goal) {
  var ratchets = (goal - get("pyramidPosition") + 5) % 5;
  var to_buy = ratchets - (0, import_kolmafia118.itemAmount)($item(_templateObject7617 || (_templateObject7617 = _taggedTemplateLiteral106(["tomb ratchet"])))) - (0, import_kolmafia118.itemAmount)($item(_templateObject7715 || (_templateObject7715 = _taggedTemplateLiteral106(["crumbling wooden wheel"]))));
  if (to_buy > 0) {
    (0, import_kolmafia118.buy)($item(_templateObject7815 || (_templateObject7815 = _taggedTemplateLiteral106(["tomb ratchet"]))), to_buy);
  }
  (0, import_kolmafia118.visitUrl)("place.php?whichplace=pyramid&action=pyramid_control");
  for (var i = 0; i < ratchets; i++) {
    if (have($item(_templateObject7915 || (_templateObject7915 = _taggedTemplateLiteral106(["crumbling wooden wheel"]))))) {
      (0, import_kolmafia118.visitUrl)("choice.php?whichchoice=929&option=1&pwd");
    } else {
      (0, import_kolmafia118.visitUrl)("choice.php?whichchoice=929&option=2&pwd");
    }
  }
  if (get("pyramidPosition") !== goal) throw "Failed to rotate pyramid to ".concat(goal);
  (0, import_kolmafia118.visitUrl)("choice.php?whichchoice=929&option=5&pwd");
}
var Pyramid = [{
  name: "Open Pyramid",
  after: ["Desert", "Oasis", "Oasis Drum", "Manor/Boss", "Palindome/Boss", "Hidden City/Boss"],
  completed: function() {
    return step("questL11Pyramid") >= 0;
  },
  do: function() {
    return (0, import_kolmafia118.visitUrl)("place.php?whichplace=desertbeach&action=db_pyramid1");
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Upper Chamber",
  after: ["Open Pyramid"],
  completed: function() {
    return step("questL11Pyramid") >= 1;
  },
  do: $location(_templateObject8014 || (_templateObject8014 = _taggedTemplateLiteral106(["The Upper Chamber"]))),
  outfit: {
    modifier: "+combat"
  },
  limit: {
    turns: 6
  }
}, {
  name: "Middle Chamber",
  after: ["Upper Chamber"],
  prepare: function() {
    if (haveLoathingIdolMicrophone()) {
      ensureEffect($effect(_templateObject8120 || (_templateObject8120 = _taggedTemplateLiteral106(["Spitting Rhymes"]))));
    }
    if (have($item(_templateObject8220 || (_templateObject8220 = _taggedTemplateLiteral106(["tangle of rat tails"])))) && (0, import_kolmafia118.myMaxmp)() >= 80) {
      customRestoreMp(80);
    }
  },
  completed: function() {
    if (get("pyramidBombUsed")) return true;
    var ratchets = (0, import_kolmafia118.itemAmount)($item(_templateObject8320 || (_templateObject8320 = _taggedTemplateLiteral106(["tomb ratchet"])))) + (0, import_kolmafia118.itemAmount)($item(_templateObject8419 || (_templateObject8419 = _taggedTemplateLiteral106(["crumbling wooden wheel"]))));
    var needed = have($item(_templateObject8516 || (_templateObject8516 = _taggedTemplateLiteral106(["ancient bomb"])))) ? 3 : have($item(_templateObject8615 || (_templateObject8615 = _taggedTemplateLiteral106(["ancient bronze token"])))) ? 7 : 10;
    return ratchets >= needed;
  },
  do: $location(_templateObject8715 || (_templateObject8715 = _taggedTemplateLiteral106(["The Middle Chamber"]))),
  limit: {
    soft: 30
  },
  combat: new CombatStrategy2().macro(function() {
    var result = Macro.tryItem($item(_templateObject8813 || (_templateObject8813 = _taggedTemplateLiteral106(["tangle of rat tails"])))).trySkill($skill(_templateObject8913 || (_templateObject8913 = _taggedTemplateLiteral106(["Otoscope"])))).trySkill($skill(_templateObject9011 || (_templateObject9011 = _taggedTemplateLiteral106(["Curse of Weaksauce"]))));
    if (have($skill(_templateObject9119 || (_templateObject9119 = _taggedTemplateLiteral106(["Saucegeyser"]))))) return result.while_("!mpbelow 24", Macro.skill($skill(_templateObject9219 || (_templateObject9219 = _taggedTemplateLiteral106(["Saucegeyser"])))));
    return result;
  }, $monster(_templateObject9318 || (_templateObject9318 = _taggedTemplateLiteral106(["tomb rat"])))).killItem([$monster(_templateObject9415 || (_templateObject9415 = _taggedTemplateLiteral106(["tomb rat"]))), $monster(_templateObject9513 || (_templateObject9513 = _taggedTemplateLiteral106(["tomb rat king"])))]).banish([$monster(_templateObject9613 || (_templateObject9613 = _taggedTemplateLiteral106(["tomb asp"]))), $monster(_templateObject9712 || (_templateObject9712 = _taggedTemplateLiteral106(["tomb servant"])))]),
  outfit: function() {
    var _result$equip, _result$equip2, _result$equip3;
    var result = {
      modifier: "item",
      equip: []
    };
    if (have($item(_templateObject9811 || (_templateObject9811 = _taggedTemplateLiteral106(["Lil' Doctor\u2122 bag"])))) && get("_otoscopeUsed") < 3) (_result$equip = result.equip) === null || _result$equip === void 0 || _result$equip.push($item(_templateObject999 || (_templateObject999 = _taggedTemplateLiteral106(["Lil' Doctor\u2122 bag"]))));
    else (_result$equip2 = result.equip) === null || _result$equip2 === void 0 || _result$equip2.push($item(_templateObject1009 || (_templateObject1009 = _taggedTemplateLiteral106(["deft pirate hook"]))));
    if (DaylightShavings_exports.nextBuff() === $effect(_templateObject10117 || (_templateObject10117 = _taggedTemplateLiteral106(["Spectacle Moustache"])))) (_result$equip3 = result.equip) === null || _result$equip3 === void 0 || _result$equip3.push($item(_templateObject10217 || (_templateObject10217 = _taggedTemplateLiteral106(["Daylight Shavings Helmet"]))));
    return result;
  },
  delay: 9
}, {
  name: "Middle Chamber Delay",
  after: ["Upper Chamber", "Middle Chamber"],
  prepare: function() {
    if (haveLoathingIdolMicrophone()) {
      ensureEffect($effect(_templateObject10315 || (_templateObject10315 = _taggedTemplateLiteral106(["Spitting Rhymes"]))));
    }
  },
  completed: function() {
    if (!get("controlRoomUnlock")) return false;
    if (get("pyramidBombUsed")) return true;
    var ratchets = (0, import_kolmafia118.itemAmount)($item(_templateObject10413 || (_templateObject10413 = _taggedTemplateLiteral106(["tomb ratchet"])))) + (0, import_kolmafia118.itemAmount)($item(_templateObject10513 || (_templateObject10513 = _taggedTemplateLiteral106(["crumbling wooden wheel"]))));
    var needed = have($item(_templateObject10610 || (_templateObject10610 = _taggedTemplateLiteral106(["ancient bomb"])))) ? 3 : have($item(_templateObject1078 || (_templateObject1078 = _taggedTemplateLiteral106(["ancient bronze token"])))) ? 7 : 10;
    return ratchets >= needed;
  },
  do: $location(_templateObject1088 || (_templateObject1088 = _taggedTemplateLiteral106(["The Middle Chamber"]))),
  limit: {
    soft: 30
  },
  combat: new CombatStrategy2().ignore(),
  delay: 9
}, {
  name: "Get Token",
  after: ["Middle Chamber Delay"],
  completed: function() {
    return have($item(_templateObject1098 || (_templateObject1098 = _taggedTemplateLiteral106(["ancient bronze token"])))) || have($item(_templateObject1108 || (_templateObject1108 = _taggedTemplateLiteral106(["ancient bomb"])))) || get("pyramidBombUsed");
  },
  do: function() {
    return rotatePyramid(4);
  },
  limit: {
    tries: 1
  }
}, {
  name: "Get Bomb",
  after: ["Get Token"],
  completed: function() {
    return have($item(_templateObject11116 || (_templateObject11116 = _taggedTemplateLiteral106(["ancient bomb"])))) || get("pyramidBombUsed");
  },
  do: function() {
    return rotatePyramid(3);
  },
  limit: {
    tries: 1
  }
}, {
  name: "Use Bomb",
  after: ["Get Bomb"],
  completed: function() {
    return get("pyramidBombUsed");
  },
  do: function() {
    return rotatePyramid(1);
  },
  limit: {
    tries: 1
  }
}, {
  name: "Boss",
  after: ["Use Bomb"],
  completed: function() {
    return step("questL11Pyramid") === 999;
  },
  do: function() {
    return (0, import_kolmafia118.visitUrl)("place.php?whichplace=pyramid&action=pyramid_state1a");
  },
  post: function() {
    (0, import_kolmafia118.cliExecute)("refresh all");
  },
  outfit: function() {
    if (!have($item(_templateObject11216 || (_templateObject11216 = _taggedTemplateLiteral106(["Pick-O-Matic lockpicks"]))))) return {
      familiar: $familiar(_templateObject11313 || (_templateObject11313 = _taggedTemplateLiteral106(["Gelatinous Cubeling"])))
    };
    else return {};
  },
  combat: new CombatStrategy2().killHard(),
  limit: {
    tries: 1
  },
  boss: true
}];
var MacguffinQuest = {
  name: "Macguffin",
  tasks: [{
    name: "Start",
    after: [],
    ready: function() {
      return atLevel(11);
    },
    priority: function() {
      return Priorities.Free;
    },
    // Always start this quest ASAP, it is key for routing
    completed: function() {
      return step("questL11MacGuffin") !== -1;
    },
    do: function() {
      return (0, import_kolmafia118.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }].concat(Diary, Desert, Pyramid, [{
    name: "Finish",
    after: ["Boss"],
    priority: function() {
      return councilSafe() ? Priorities.Free : Priorities.BadMood;
    },
    completed: function() {
      return step("questL11MacGuffin") === 999;
    },
    do: function() {
      return (0, import_kolmafia118.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }])
};
function beeOption() {
  if (!have($familiar(_templateObject11412 || (_templateObject11412 = _taggedTemplateLiteral106(["Shorter-Order Cook"])))) && !have($item(_templateObject11511 || (_templateObject11511 = _taggedTemplateLiteral106(["beehive"]))))) return 3;
  if (!have($item(_templateObject1168 || (_templateObject1168 = _taggedTemplateLiteral106(["blackberry galoshes"])))) && (0, import_kolmafia118.itemAmount)($item(_templateObject1178 || (_templateObject1178 = _taggedTemplateLiteral106(["blackberry"])))) >= 3) return 2;
  return 1;
}

// src/tasks/level13.ts
var import_kolmafia119 = require("kolmafia");
init_dist();
var _templateObject1000;
var _templateObject2201;
var _templateObject3183;
var _templateObject4158;
var _templateObject5141;
var _templateObject6133;
var _templateObject7109;
var _templateObject8103;
var _templateObject9100;
var _templateObject1070;
var _templateObject1169;
var _templateObject1268;
var _templateObject1361;
var _templateObject1460;
var _templateObject1559;
var _templateObject1658;
var _templateObject1751;
var _templateObject1850;
var _templateObject1948;
var _templateObject2048;
var _templateObject21102;
var _templateObject2247;
var _templateObject2343;
var _templateObject2441;
var _templateObject2540;
var _templateObject2638;
var _templateObject2738;
var _templateObject2836;
var _templateObject2936;
var _templateObject3036;
var _templateObject3184;
var _templateObject3237;
var _templateObject3336;
var _templateObject3434;
var _templateObject3533;
var _templateObject3633;
var _templateObject3733;
var _templateObject3833;
var _templateObject3930;
var _templateObject4030;
var _templateObject4159;
var _templateObject4232;
var _templateObject4331;
var _templateObject4430;
var _templateObject4530;
var _templateObject4630;
var _templateObject4730;
var _templateObject4830;
var _templateObject4930;
var _templateObject5030;
var _templateObject5142;
var _templateObject5231;
var _templateObject5330;
var _templateObject5430;
var _templateObject5529;
var _templateObject5628;
var _templateObject5727;
var _templateObject5826;
var _templateObject5924;
var _templateObject6022;
var _templateObject6134;
var _templateObject6227;
var _templateObject6327;
var _templateObject6427;
var _templateObject6526;
var _templateObject6623;
var _templateObject6719;
var _templateObject6819;
var _templateObject6919;
var _templateObject7019;
var _templateObject7124;
var _templateObject7224;
var _templateObject7323;
var _templateObject7423;
var _templateObject7521;
var _templateObject7618;
var _templateObject7716;
var _templateObject7816;
var _templateObject7916;
var _templateObject8015;
var _templateObject8121;
var _templateObject8221;
var _templateObject8321;
var _templateObject8420;
var _templateObject8517;
var _templateObject8616;
var _templateObject8716;
var _templateObject8814;
var _templateObject8914;
var _templateObject9012;
var _templateObject9120;
var _templateObject9220;
var _templateObject9319;
var _templateObject9416;
var _templateObject9514;
var _templateObject9614;
var _templateObject9713;
var _templateObject9812;
var _templateObject9910;
var _templateObject10010;
var _templateObject10118;
var _templateObject10218;
var _templateObject10316;
var _templateObject10414;
var _templateObject10514;
var _templateObject10611;
var _templateObject1079;
var _templateObject1089;
var _templateObject1099;
var _templateObject1109;
var _templateObject11117;
var _templateObject11217;
var _templateObject11314;
var _templateObject11413;
var _templateObject11512;
var _templateObject11610;
var _templateObject1179;
var _templateObject1188;
var _templateObject1198;
var _templateObject1208;
var _templateObject12116;
var _templateObject12215;
function _taggedTemplateLiteral107(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var Challenges = [{
  name: "Speed Challenge",
  after: ["Start"],
  completed: function() {
    return get("nsContestants1") > -1;
  },
  prepare: function() {
    if ((0, import_kolmafia119.numericModifier)("Initiative") < 400 && have($skill(_templateObject1000 || (_templateObject1000 = _taggedTemplateLiteral107(["Silent Hunter"]))))) {
      if ((0, import_kolmafia119.myClass)() === $class(_templateObject2201 || (_templateObject2201 = _taggedTemplateLiteral107(["Seal Clubber"])))) ensureWithMPSwaps($effects(_templateObject3183 || (_templateObject3183 = _taggedTemplateLiteral107(["Silent Hunting"]))));
      else ensureWithMPSwaps($effects(_templateObject4158 || (_templateObject4158 = _taggedTemplateLiteral107(["Nearly Silent Hunting"]))));
    }
    if (have($item(_templateObject5141 || (_templateObject5141 = _taggedTemplateLiteral107(["designer sweatpants"])))) && get("sweat", 0) >= 90 && (0, import_kolmafia119.numericModifier)("Initiative") < 400) {
      (0, import_kolmafia119.visitUrl)("runskillz.php?action=Skillz&whichskill=7419&targetplayer=0&pwd&quantity=1");
    }
  },
  do: function() {
    (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower&action=ns_01_contestbooth");
    (0, import_kolmafia119.runChoice)(1);
    (0, import_kolmafia119.runChoice)(6);
  },
  outfit: {
    modifier: "init",
    familiar: $familiar(_templateObject6133 || (_templateObject6133 = _taggedTemplateLiteral107(["Oily Woim"])))
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Moxie Challenge",
  after: ["Start"],
  ready: function() {
    return get("nsChallenge1") === $stat(_templateObject7109 || (_templateObject7109 = _taggedTemplateLiteral107(["Moxie"])));
  },
  completed: function() {
    return get("nsContestants2") > -1;
  },
  do: function() {
    (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower&action=ns_01_contestbooth");
    (0, import_kolmafia119.runChoice)(2);
    (0, import_kolmafia119.runChoice)(6);
  },
  outfit: {
    modifier: "moxie"
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Muscle Challenge",
  after: ["Start"],
  ready: function() {
    return get("nsChallenge1") === $stat(_templateObject8103 || (_templateObject8103 = _taggedTemplateLiteral107(["Muscle"])));
  },
  completed: function() {
    return get("nsContestants2") > -1;
  },
  do: function() {
    (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower&action=ns_01_contestbooth");
    (0, import_kolmafia119.runChoice)(2);
    (0, import_kolmafia119.runChoice)(6);
  },
  outfit: {
    modifier: "muscle"
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Mysticality Challenge",
  after: ["Start"],
  ready: function() {
    return get("nsChallenge1") === $stat(_templateObject9100 || (_templateObject9100 = _taggedTemplateLiteral107(["Mysticality"])));
  },
  completed: function() {
    return get("nsContestants2") > -1;
  },
  do: function() {
    (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower&action=ns_01_contestbooth");
    (0, import_kolmafia119.runChoice)(2);
    (0, import_kolmafia119.runChoice)(6);
  },
  outfit: {
    modifier: "mysticality"
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Hot Challenge",
  after: ["Start"],
  ready: function() {
    return get("nsChallenge2") === "hot";
  },
  completed: function() {
    return get("nsContestants3") > -1;
  },
  do: function() {
    (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower&action=ns_01_contestbooth");
    (0, import_kolmafia119.runChoice)(3);
    (0, import_kolmafia119.runChoice)(6);
  },
  outfit: {
    modifier: "hot dmg, hot spell dmg"
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Cold Challenge",
  after: ["Start"],
  ready: function() {
    return get("nsChallenge2") === "cold";
  },
  completed: function() {
    return get("nsContestants3") > -1;
  },
  do: function() {
    (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower&action=ns_01_contestbooth");
    (0, import_kolmafia119.runChoice)(3);
    (0, import_kolmafia119.runChoice)(6);
  },
  outfit: {
    modifier: "cold dmg, cold spell dmg"
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Spooky Challenge",
  after: ["Start"],
  ready: function() {
    return get("nsChallenge2") === "spooky";
  },
  completed: function() {
    return get("nsContestants3") > -1;
  },
  do: function() {
    (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower&action=ns_01_contestbooth");
    (0, import_kolmafia119.runChoice)(3);
    (0, import_kolmafia119.runChoice)(6);
  },
  outfit: {
    modifier: "spooky dmg, spooky spell dmg"
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Stench Challenge",
  after: ["Start"],
  ready: function() {
    return get("nsChallenge2") === "stench";
  },
  completed: function() {
    return get("nsContestants3") > -1;
  },
  do: function() {
    (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower&action=ns_01_contestbooth");
    (0, import_kolmafia119.runChoice)(3);
    (0, import_kolmafia119.runChoice)(6);
  },
  outfit: {
    modifier: "stench dmg, stench spell dmg"
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Sleaze Challenge",
  after: ["Start"],
  ready: function() {
    return get("nsChallenge2") === "sleaze";
  },
  completed: function() {
    return get("nsContestants3") > -1;
  },
  do: function() {
    (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower&action=ns_01_contestbooth");
    (0, import_kolmafia119.runChoice)(3);
    (0, import_kolmafia119.runChoice)(6);
  },
  outfit: {
    modifier: "sleaze dmg, sleaze spell dmg"
  },
  limit: {
    tries: 1
  },
  freeaction: true
}];
var ChallengeBosses = [{
  name: "Speed Boss",
  after: ["Speed Challenge"],
  completed: function() {
    return get("nsContestants1") === 0;
  },
  prepare: fillHp,
  do: $location(_templateObject1070 || (_templateObject1070 = _taggedTemplateLiteral107(["Fastest Adventurer Contest"]))),
  combat: new CombatStrategy2().killHard(),
  limit: {
    tries: 5
  },
  boss: true
}, {
  name: "Stat Boss",
  after: ["Muscle Challenge", "Moxie Challenge", "Mysticality Challenge"],
  completed: function() {
    return get("nsContestants2") === 0;
  },
  prepare: fillHp,
  do: $location(_templateObject1169 || (_templateObject1169 = _taggedTemplateLiteral107(["A Crowd of (Stat) Adventurers"]))),
  combat: new CombatStrategy2().killHard(),
  limit: {
    tries: 10
  },
  boss: true
}, {
  name: "Element Boss",
  after: ["Hot Challenge", "Cold Challenge", "Spooky Challenge", "Stench Challenge", "Sleaze Challenge"],
  completed: function() {
    return get("nsContestants3") === 0;
  },
  prepare: fillHp,
  do: $location(_templateObject1268 || (_templateObject1268 = _taggedTemplateLiteral107(["A Crowd of (Element) Adventurers"]))),
  combat: new CombatStrategy2().killHard(),
  limit: {
    tries: 10
  },
  boss: true
}];
var Door = [{
  name: "Boris Lock",
  after: ["Maze", "Keys/All Heroes"],
  acquire: [{
    item: $item(_templateObject1361 || (_templateObject1361 = _taggedTemplateLiteral107(["Boris's key"])))
  }],
  completed: function() {
    return get("nsTowerDoorKeysUsed").includes("Boris");
  },
  do: function() {
    return (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower_door&action=ns_lock1");
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Jarlsberg Lock",
  after: ["Maze", "Keys/All Heroes"],
  acquire: [{
    item: $item(_templateObject1460 || (_templateObject1460 = _taggedTemplateLiteral107(["Jarlsberg's key"])))
  }],
  completed: function() {
    return get("nsTowerDoorKeysUsed").includes("Jarlsberg");
  },
  do: function() {
    return (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower_door&action=ns_lock2");
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Sneaky Pete Lock",
  after: ["Maze", "Keys/All Heroes"],
  acquire: [{
    item: $item(_templateObject1559 || (_templateObject1559 = _taggedTemplateLiteral107(["Sneaky Pete's key"])))
  }],
  completed: function() {
    return get("nsTowerDoorKeysUsed").includes("Sneaky Pete");
  },
  do: function() {
    return (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower_door&action=ns_lock3");
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Star Lock",
  after: ["Maze", "Keys/Star Key"],
  acquire: [{
    item: $item(_templateObject1658 || (_templateObject1658 = _taggedTemplateLiteral107(["Richard's star key"])))
  }],
  completed: function() {
    return get("nsTowerDoorKeysUsed").includes("Richard's star key");
  },
  do: function() {
    return (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower_door&action=ns_lock4");
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Digital Lock",
  after: ["Maze", "Digital/Key"],
  completed: function() {
    return get("nsTowerDoorKeysUsed").includes("digital key");
  },
  do: function() {
    return (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower_door&action=ns_lock5");
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Skeleton Lock",
  after: ["Maze", "Keys/Skeleton Key"],
  acquire: [{
    item: $item(_templateObject1751 || (_templateObject1751 = _taggedTemplateLiteral107(["skeleton key"])))
  }],
  completed: function() {
    return get("nsTowerDoorKeysUsed").includes("skeleton key");
  },
  do: function() {
    return (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower_door&action=ns_lock6");
  },
  limit: {
    tries: 1
  },
  freeaction: true
}, {
  name: "Door",
  after: ["Boris Lock", "Jarlsberg Lock", "Sneaky Pete Lock", "Star Lock", "Digital Lock", "Skeleton Lock"],
  completed: function() {
    return step("questL13Final") > 5;
  },
  do: function() {
    return (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower_door&action=ns_doorknob");
  },
  limit: {
    tries: 1
  },
  freeaction: true
}];
var wand = [{
  name: "Wand W",
  after: ["Wall of Bones"],
  ready: function() {
    return !have($item(_templateObject1850 || (_templateObject1850 = _taggedTemplateLiteral107(["11-leaf clover"])))) && !have($skill(_templateObject1948 || (_templateObject1948 = _taggedTemplateLiteral107(["Aug. 2nd: Find an Eleven-Leaf Clover Day"]))));
  },
  completed: function() {
    return have($item(_templateObject2048 || (_templateObject2048 = _taggedTemplateLiteral107(["ruby W"])))) || have($item(_templateObject21102 || (_templateObject21102 = _taggedTemplateLiteral107(["WA"])))) || have($item(_templateObject2247 || (_templateObject2247 = _taggedTemplateLiteral107(["Wand of Nagamar"]))));
  },
  do: $location(_templateObject2343 || (_templateObject2343 = _taggedTemplateLiteral107(["Pandamonium Slums"]))),
  outfit: {
    modifier: "item"
  },
  combat: new CombatStrategy2().killItem($monster(_templateObject2441 || (_templateObject2441 = _taggedTemplateLiteral107(["W imp"])))),
  limit: {
    soft: 20
  }
}, {
  name: "Wand A",
  after: ["Wall of Bones"],
  ready: function() {
    return !have($item(_templateObject2540 || (_templateObject2540 = _taggedTemplateLiteral107(["11-leaf clover"])))) && !have($skill(_templateObject2638 || (_templateObject2638 = _taggedTemplateLiteral107(["Aug. 2nd: Find an Eleven-Leaf Clover Day"]))));
  },
  completed: function() {
    return have($item(_templateObject2738 || (_templateObject2738 = _taggedTemplateLiteral107(["metallic A"])))) || have($item(_templateObject2836 || (_templateObject2836 = _taggedTemplateLiteral107(["WA"])))) || have($item(_templateObject2936 || (_templateObject2936 = _taggedTemplateLiteral107(["Wand of Nagamar"]))));
  },
  do: $location(_templateObject3036 || (_templateObject3036 = _taggedTemplateLiteral107(["The Penultimate Fantasy Airship"]))),
  outfit: {
    modifier: "item"
  },
  combat: new CombatStrategy2().killItem($monster(_templateObject3184 || (_templateObject3184 = _taggedTemplateLiteral107(["MagiMechTech MechaMech"])))),
  limit: {
    soft: 20
  }
}, {
  name: "Wand N",
  after: ["Wall of Bones"],
  ready: function() {
    return !have($item(_templateObject3237 || (_templateObject3237 = _taggedTemplateLiteral107(["11-leaf clover"])))) && !have($skill(_templateObject3336 || (_templateObject3336 = _taggedTemplateLiteral107(["Aug. 2nd: Find an Eleven-Leaf Clover Day"]))));
  },
  completed: function() {
    return have($item(_templateObject3434 || (_templateObject3434 = _taggedTemplateLiteral107(["lowercase N"])))) || have($item(_templateObject3533 || (_templateObject3533 = _taggedTemplateLiteral107(["ND"])))) || have($item(_templateObject3633 || (_templateObject3633 = _taggedTemplateLiteral107(["Wand of Nagamar"]))));
  },
  do: $location(_templateObject3733 || (_templateObject3733 = _taggedTemplateLiteral107(["The Valley of Rof L'm Fao"]))),
  outfit: {
    modifier: "item"
  },
  combat: new CombatStrategy2().killItem($monster(_templateObject3833 || (_templateObject3833 = _taggedTemplateLiteral107(["XXX pr0n"])))),
  limit: {
    soft: 20
  }
}, {
  name: "Wand D",
  after: ["Wall of Bones"],
  ready: function() {
    return !have($item(_templateObject3930 || (_templateObject3930 = _taggedTemplateLiteral107(["11-leaf clover"])))) && !have($skill(_templateObject4030 || (_templateObject4030 = _taggedTemplateLiteral107(["Aug. 2nd: Find an Eleven-Leaf Clover Day"]))));
  },
  completed: function() {
    return have($item(_templateObject4159 || (_templateObject4159 = _taggedTemplateLiteral107(["heavy D"])))) || have($item(_templateObject4232 || (_templateObject4232 = _taggedTemplateLiteral107(["ND"])))) || have($item(_templateObject4331 || (_templateObject4331 = _taggedTemplateLiteral107(["Wand of Nagamar"]))));
  },
  do: $location(_templateObject4430 || (_templateObject4430 = _taggedTemplateLiteral107(["The Castle in the Clouds in the Sky (Basement)"]))),
  outfit: {
    modifier: "item"
  },
  combat: new CombatStrategy2().killItem($monster(_templateObject4530 || (_templateObject4530 = _taggedTemplateLiteral107(["Alphabet Giant"])))),
  limit: {
    soft: 20
  }
}, {
  name: "Wand Parts",
  after: ["Wall of Bones"],
  ready: function() {
    return have($item(_templateObject4630 || (_templateObject4630 = _taggedTemplateLiteral107(["11-leaf clover"])))) || have($skill(_templateObject4730 || (_templateObject4730 = _taggedTemplateLiteral107(["Aug. 2nd: Find an Eleven-Leaf Clover Day"]))));
  },
  completed: function() {
    return have($item(_templateObject4830 || (_templateObject4830 = _taggedTemplateLiteral107(["Wand of Nagamar"])))) || (have($item(_templateObject4930 || (_templateObject4930 = _taggedTemplateLiteral107(["WA"])))) || have($item(_templateObject5030 || (_templateObject5030 = _taggedTemplateLiteral107(["ruby W"])))) && have($item(_templateObject5142 || (_templateObject5142 = _taggedTemplateLiteral107(["metallic A"]))))) && (have($item(_templateObject5231 || (_templateObject5231 = _taggedTemplateLiteral107(["ND"])))) || have($item(_templateObject5330 || (_templateObject5330 = _taggedTemplateLiteral107(["lowercase N"])))) && have($item(_templateObject5430 || (_templateObject5430 = _taggedTemplateLiteral107(["heavy D"])))));
  },
  prepare: function() {
    if (have($item(_templateObject5529 || (_templateObject5529 = _taggedTemplateLiteral107(["11-leaf clover"]))))) (0, import_kolmafia119.use)($item(_templateObject5628 || (_templateObject5628 = _taggedTemplateLiteral107(["11-leaf clover"]))));
    else (0, import_kolmafia119.useSkill)($skill(_templateObject5727 || (_templateObject5727 = _taggedTemplateLiteral107(["Aug. 2nd: Find an Eleven-Leaf Clover Day"]))));
  },
  do: $location(_templateObject5826 || (_templateObject5826 = _taggedTemplateLiteral107(["The Castle in the Clouds in the Sky (Basement)"]))),
  limit: {
    tries: 1
  }
}, {
  name: "Wand",
  after: ["Wand W", "Wand A", "Wand N", "Wand D", "Wand Parts"],
  completed: function() {
    return have($item(_templateObject5924 || (_templateObject5924 = _taggedTemplateLiteral107(["Wand of Nagamar"]))));
  },
  do: function() {
    (0, import_kolmafia119.cliExecute)("make Wand of Nagamar");
  },
  limit: {
    tries: 1
  }
}];
var TowerQuest = {
  name: "Tower",
  tasks: [{
    name: "Start",
    after: ["Mosquito/Finish", "Tavern/Finish", "Bat/Finish", "Knob/King", "Friar/Finish", "Crypt/Finish", "McLargeHuge/Finish", "Orc Chasm/Finish", "Giant/Finish", "Macguffin/Finish", "War/Boss Hippie"],
    ready: function() {
      return atLevel(13);
    },
    completed: function() {
      return step("questL13Final") !== -1;
    },
    do: function() {
      return (0, import_kolmafia119.visitUrl)("council.php");
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }].concat(Challenges, ChallengeBosses, [{
    name: "Coronation",
    after: ["Speed Boss", "Stat Boss", "Element Boss"],
    completed: function() {
      return step("questL13Final") > 2;
    },
    do: function() {
      (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower&action=ns_01_contestbooth");
      (0, import_kolmafia119.runChoice)(-1);
    },
    choices: {
      1003: 4
    },
    limit: {
      tries: 1
    }
  }, {
    name: "Frank",
    after: ["Coronation"],
    completed: function() {
      return step("questL13Final") > 3;
    },
    do: function() {
      (0, import_kolmafia119.visitUrl)("place.php?whichplace=nstower&action=ns_02_coronation");
      (0, import_kolmafia119.runChoice)(-1);
    },
    choices: {
      1020: 1,
      1021: 1,
      1022: 1
    },
    limit: {
      tries: 1
    }
  }, {
    name: "Maze",
    after: ["Frank"],
    completed: function() {
      return step("questL13Final") > 4;
    },
    prepare: function() {
      fillHp();
    },
    do: $location(_templateObject6022 || (_templateObject6022 = _taggedTemplateLiteral107(["The Hedge Maze"]))),
    choices: {
      1004: 1,
      1005: 2,
      1008: 2,
      1011: 2,
      1013: 1,
      1022: 1
    },
    outfit: {
      modifier: "hot res, cold res, stench res, spooky res, sleaze res",
      familiar: $familiar(_templateObject6134 || (_templateObject6134 = _taggedTemplateLiteral107(["Exotic Parrot"])))
    },
    effects: $effects(_templateObject6227 || (_templateObject6227 = _taggedTemplateLiteral107(["Red Door Syndrome"]))),
    limit: {
      tries: 1
    }
  }], Door, [{
    name: "Beehive",
    after: ["Macguffin/Forest"],
    completed: function() {
      return have($item(_templateObject6327 || (_templateObject6327 = _taggedTemplateLiteral107(["beehive"])))) || have($familiar(_templateObject6427 || (_templateObject6427 = _taggedTemplateLiteral107(["Shorter-Order Cook"])))) && have($item(_templateObject6526 || (_templateObject6526 = _taggedTemplateLiteral107(["June cleaver"])))) || step("questL13Final") > 6;
    },
    do: $location(_templateObject6623 || (_templateObject6623 = _taggedTemplateLiteral107(["The Black Forest"]))),
    choices: {
      923: 1,
      924: 3,
      1018: 1,
      1019: 1
    },
    outfit: {
      modifier: "-combat"
    },
    limit: {
      soft: 5
    }
  }, {
    name: "Wall of Skin",
    after: ["Door", "Beehive"],
    prepare: function() {
      if (have($item(_templateObject6719 || (_templateObject6719 = _taggedTemplateLiteral107(["handful of hand chalk"]))))) ensureEffect($effect(_templateObject6819 || (_templateObject6819 = _taggedTemplateLiteral107(["Chalky Hand"]))));
      fillHp();
    },
    completed: function() {
      return step("questL13Final") > 6;
    },
    do: $location(_templateObject6919 || (_templateObject6919 = _taggedTemplateLiteral107(["Tower Level 1"]))),
    outfit: {
      familiar: $familiar(_templateObject7019 || (_templateObject7019 = _taggedTemplateLiteral107(["Shorter-Order Cook"]))),
      equip: $items(_templateObject7124 || (_templateObject7124 = _taggedTemplateLiteral107(["hot plate, June cleaver, bottle opener belt buckle"])))
    },
    combat: new CombatStrategy2().macro(new Macro().tryItem($item(_templateObject7224 || (_templateObject7224 = _taggedTemplateLiteral107(["beehive"])))).attack().repeat()).kill(),
    boss: true,
    limit: {
      tries: 1
    }
  }, {
    name: "Wall of Meat",
    after: ["Wall of Skin"],
    prepare: function() {
      fillHp();
    },
    completed: function() {
      return step("questL13Final") > 7;
    },
    do: $location(_templateObject7323 || (_templateObject7323 = _taggedTemplateLiteral107(["Tower Level 2"]))),
    outfit: function() {
      if (have($familiar(_templateObject7423 || (_templateObject7423 = _taggedTemplateLiteral107(["Trick-or-Treating Tot"])))) && have($item(_templateObject7521 || (_templateObject7521 = _taggedTemplateLiteral107(["li'l pirate costume"]))))) {
        return {
          modifier: "meat",
          familiar: $familiar(_templateObject7618 || (_templateObject7618 = _taggedTemplateLiteral107(["Trick-or-Treating Tot"]))),
          equip: $items(_templateObject7716 || (_templateObject7716 = _taggedTemplateLiteral107(["li'l pirate costume, June cleaver"])))
        };
      }
      return {
        modifier: "meat",
        equip: $items(_templateObject7816 || (_templateObject7816 = _taggedTemplateLiteral107(["amulet coin, June cleaver"])))
        // Use amulet coin (if we have) to avoid using orb
      };
    },
    combat: new CombatStrategy2().killHard(),
    boss: true,
    limit: {
      tries: 2
    }
  }, {
    name: "Wall of Bones",
    after: ["Wall of Meat", "Giant/Ground Knife"],
    completed: function() {
      return step("questL13Final") > 8;
    },
    acquire: [{
      item: $item(_templateObject7916 || (_templateObject7916 = _taggedTemplateLiteral107(["meteorb"]))),
      optional: true,
      useful: function() {
        return have($item(_templateObject8015 || (_templateObject8015 = _taggedTemplateLiteral107(["metal meteoroid"]))));
      }
    }],
    prepare: function() {
      if (have($item(_templateObject8121 || (_templateObject8121 = _taggedTemplateLiteral107(["electric boning knife"]))))) return;
      if ((0, import_kolmafia119.haveEquipped)($item(_templateObject8221 || (_templateObject8221 = _taggedTemplateLiteral107(["Great Wolf's rocket launcher"]))))) {
        if ((0, import_kolmafia119.myBuffedstat)($stat(_templateObject8321 || (_templateObject8321 = _taggedTemplateLiteral107(["moxie"])))) < 1e3) ensureEffect($effect(_templateObject8420 || (_templateObject8420 = _taggedTemplateLiteral107(["Cock of the Walk"]))));
        if ((0, import_kolmafia119.myBuffedstat)($stat(_templateObject8517 || (_templateObject8517 = _taggedTemplateLiteral107(["moxie"])))) < 1e3) ensureEffect($effect(_templateObject8616 || (_templateObject8616 = _taggedTemplateLiteral107(["Superhuman Sarcasm"]))));
        if ((0, import_kolmafia119.myBuffedstat)($stat(_templateObject8716 || (_templateObject8716 = _taggedTemplateLiteral107(["moxie"])))) < 1e3) ensureEffect($effect(_templateObject8814 || (_templateObject8814 = _taggedTemplateLiteral107(["Gr8ness"]))));
      } else if (have($item(_templateObject8914 || (_templateObject8914 = _taggedTemplateLiteral107(["Drunkula's bell"]))))) {
        if ((0, import_kolmafia119.myBuffedstat)($stat(_templateObject9012 || (_templateObject9012 = _taggedTemplateLiteral107(["mysticality"])))) < 2700) ensureEffect($effect(_templateObject9120 || (_templateObject9120 = _taggedTemplateLiteral107(["On the Shoulders of Giants"]))));
        if ((0, import_kolmafia119.myBuffedstat)($stat(_templateObject9220 || (_templateObject9220 = _taggedTemplateLiteral107(["mysticality"])))) < 2700) ensureEffect($effect(_templateObject9319 || (_templateObject9319 = _taggedTemplateLiteral107(["Mystically Oiled"]))));
        if ((0, import_kolmafia119.myBuffedstat)($stat(_templateObject9416 || (_templateObject9416 = _taggedTemplateLiteral107(["mysticality"])))) < 2700) ensureEffect($effect(_templateObject9514 || (_templateObject9514 = _taggedTemplateLiteral107(["Gr8ness"]))));
      }
      fillHp();
      customRestoreMp(Math.min(200, (0, import_kolmafia119.myMaxmp)()));
    },
    do: $location(_templateObject9614 || (_templateObject9614 = _taggedTemplateLiteral107(["Tower Level 3"]))),
    outfit: function() {
      if (have($item(_templateObject9713 || (_templateObject9713 = _taggedTemplateLiteral107(["electric boning knife"]))))) return {};
      if (have($item(_templateObject9812 || (_templateObject9812 = _taggedTemplateLiteral107(["Great Wolf's rocket launcher"]))))) return {
        equip: $items(_templateObject9910 || (_templateObject9910 = _taggedTemplateLiteral107(["Great Wolf's rocket launcher"]))),
        modifier: "moxie"
      };
      if (have($item(_templateObject10010 || (_templateObject10010 = _taggedTemplateLiteral107(["Drunkula's bell"]))))) return {
        modifier: "myst"
      };
      if (have($skill(_templateObject10118 || (_templateObject10118 = _taggedTemplateLiteral107(["Garbage Nova"]))))) return {
        modifier: "spell dmg, myst",
        equip: $items(_templateObject10218 || (_templateObject10218 = _taggedTemplateLiteral107(["meteorb, unwrapped knock-off retro superhero cape"]))),
        modes: {
          retrocape: ["heck", "kill"]
        },
        familiar: $familiar(_templateObject10316 || (_templateObject10316 = _taggedTemplateLiteral107(["none"])))
        // Familiar actions can cause wall of bones to heal
      };
      return {};
    },
    combat: new CombatStrategy2().macro(function() {
      if (have($item(_templateObject10414 || (_templateObject10414 = _taggedTemplateLiteral107(["electric boning knife"]))))) return Macro.item($item(_templateObject10514 || (_templateObject10514 = _taggedTemplateLiteral107(["electric boning knife"]))));
      if ((0, import_kolmafia119.haveEquipped)($item(_templateObject10611 || (_templateObject10611 = _taggedTemplateLiteral107(["Great Wolf's rocket launcher"]))))) return Macro.skill($skill(_templateObject1079 || (_templateObject1079 = _taggedTemplateLiteral107(["Fire Rocket"]))));
      if (have($item(_templateObject1089 || (_templateObject1089 = _taggedTemplateLiteral107(["Drunkula's bell"]))))) return Macro.item($item(_templateObject1099 || (_templateObject1099 = _taggedTemplateLiteral107(["Drunkula's bell"]))));
      if (have($skill(_templateObject1109 || (_templateObject1109 = _taggedTemplateLiteral107(["Garbage Nova"]))))) return Macro.skill($skill(_templateObject11117 || (_templateObject11117 = _taggedTemplateLiteral107(["Garbage Nova"])))).repeat();
      throw "Unable to find way to kill Wall of Bones";
    }),
    boss: true,
    limit: {
      tries: 1
    }
  }], wand, [{
    name: "Mirror",
    after: ["Wall of Bones", "Wand"],
    acquire: [{
      item: $item(_templateObject11217 || (_templateObject11217 = _taggedTemplateLiteral107(["Wand of Nagamar"])))
    }],
    completed: function() {
      return step("questL13Final") > 9;
    },
    do: $location(_templateObject11314 || (_templateObject11314 = _taggedTemplateLiteral107(["Tower Level 4"]))),
    choices: {
      1015: 2
    },
    limit: {
      tries: 1
    },
    freeaction: true
  }, {
    name: "Shadow",
    after: ["Mirror"],
    prepare: function() {
      fillHp();
      var garters_needed = Math.min(20, Math.ceil((100 + (0, import_kolmafia119.myMaxhp)() / 6) / 80)) - (0, import_kolmafia119.itemAmount)($item(_templateObject11413 || (_templateObject11413 = _taggedTemplateLiteral107(["gauze garter"]))));
      if (garters_needed > 0 && (0, import_kolmafia119.myTurncount)() >= 1e3) {
        (0, import_kolmafia119.buy)($item(_templateObject11512 || (_templateObject11512 = _taggedTemplateLiteral107(["gauze garter"]))), garters_needed, 500);
      }
    },
    completed: function() {
      return step("questL13Final") > 10;
    },
    do: $location(_templateObject11610 || (_templateObject11610 = _taggedTemplateLiteral107(["Tower Level 5"]))),
    outfit: function() {
      return {
        equip: $items(_templateObject1179 || (_templateObject1179 = _taggedTemplateLiteral107(["unwrapped knock-off retro superhero cape, Jurassic Parka, attorney's badge"]))),
        modes: {
          parka: "kachungasaur",
          retrocape: ["heck", "hold"]
        },
        modifier: "HP",
        avoid: $items(_templateObject1188 || (_templateObject1188 = _taggedTemplateLiteral107(["extra-wide head candle"])))
      };
    },
    combat: new CombatStrategy2().macro(new Macro().item($item(_templateObject1198 || (_templateObject1198 = _taggedTemplateLiteral107(["gauze garter"])))).repeat()),
    boss: true,
    limit: {
      tries: 1
    }
  }, {
    name: "Naughty Sorceress",
    after: ["Shadow"],
    completed: function() {
      return step("questL13Final") > 11;
    },
    do: $location(_templateObject1208 || (_templateObject1208 = _taggedTemplateLiteral107(["The Naughty Sorceress' Chamber"]))),
    outfit: {
      modifier: "muscle",
      equip: $items(_templateObject12116 || (_templateObject12116 = _taggedTemplateLiteral107(["June cleaver"])))
    },
    combat: new CombatStrategy2().macro(function() {
      return Macro.externalIf((0, import_kolmafia119.haveEquipped)($item(_templateObject12215 || (_templateObject12215 = _taggedTemplateLiteral107(["June cleaver"])))), Macro.attack().repeat());
    }).kill(),
    boss: true,
    limit: {
      tries: 1
    }
  }])
};

// src/tasks/diet.ts
var import_kolmafia120 = require("kolmafia");
init_dist();
var _templateObject1001;
var _templateObject2204;
var _templateObject3185;
var _templateObject4160;
var _templateObject5143;
var _templateObject6135;
var _templateObject7125;
var _templateObject8104;
var _templateObject9101;
var _templateObject1071;
var _templateObject1170;
var _templateObject1269;
var _templateObject1368;
var _templateObject1461;
var _templateObject1560;
var _templateObject1659;
var _templateObject1756;
var _templateObject1851;
var _templateObject1949;
var _templateObject2049;
var _templateObject21103;
var _templateObject2248;
var _templateObject2344;
var _templateObject2443;
var _templateObject2541;
var _templateObject2639;
var _templateObject2739;
function _taggedTemplateLiteral108(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var DietQuest = {
  name: "Diet",
  tasks: [{
    name: "Eat",
    ready: function() {
      return atLevel(5) && (have($item(_templateObject1001 || (_templateObject1001 = _taggedTemplateLiteral108(["Ol' Scratch's salad fork"])))) || args.minor.skipfork) && (!get("pizzaOfLegendEaten") && have($item(_templateObject2204 || (_templateObject2204 = _taggedTemplateLiteral108(["Pizza of Legend"])))) || !get("calzoneOfLegendEaten") && have($item(_templateObject3185 || (_templateObject3185 = _taggedTemplateLiteral108(["Calzone of Legend"])))) || !get("deepDishOfLegendEaten") && have($item(_templateObject4160 || (_templateObject4160 = _taggedTemplateLiteral108(["Deep Dish of Legend"]))))) && (have($effect(_templateObject5143 || (_templateObject5143 = _taggedTemplateLiteral108(["Ready to Eat"])))) || (0, import_kolmafia120.myLevel)() >= 12);
    },
    completed: function() {
      return (0, import_kolmafia120.myFullness)() > 0;
    },
    do: function() {
      customRestoreMp(20);
      (0, import_kolmafia120.useSkill)($skill(_templateObject6135 || (_templateObject6135 = _taggedTemplateLiteral108(["Cannelloni Cocoon"]))));
      if (have($item(_templateObject7125 || (_templateObject7125 = _taggedTemplateLiteral108(["milk of magnesium"])))) && !get("_milkOfMagnesiumUsed")) (0, import_kolmafia120.use)($item(_templateObject8104 || (_templateObject8104 = _taggedTemplateLiteral108(["milk of magnesium"]))));
      if (!args.minor.skipfork) (0, import_kolmafia120.eat)(1, $item(_templateObject9101 || (_templateObject9101 = _taggedTemplateLiteral108(["Ol' Scratch's salad fork"]))));
      if (!get("calzoneOfLegendEaten") && have($item(_templateObject1071 || (_templateObject1071 = _taggedTemplateLiteral108(["Calzone of Legend"]))))) (0, import_kolmafia120.eat)(1, $item(_templateObject1170 || (_templateObject1170 = _taggedTemplateLiteral108(["Calzone of Legend"]))));
      else if (!get("pizzaOfLegendEaten") && have($item(_templateObject1269 || (_templateObject1269 = _taggedTemplateLiteral108(["Pizza of Legend"]))))) (0, import_kolmafia120.eat)(1, $item(_templateObject1368 || (_templateObject1368 = _taggedTemplateLiteral108(["Pizza of Legend"]))));
      else if (!get("deepDishOfLegendEaten") && have($item(_templateObject1461 || (_templateObject1461 = _taggedTemplateLiteral108(["Deep Dish of Legend"]))))) (0, import_kolmafia120.eat)(1, $item(_templateObject1560 || (_templateObject1560 = _taggedTemplateLiteral108(["Deep Dish of Legend"]))));
    },
    outfit: {
      equip: $items(_templateObject1659 || (_templateObject1659 = _taggedTemplateLiteral108(["nurse's hat, familiar scrapbook, LOV Eardigan, LOV Epaulettes, LOV Earrings, sea salt scrubs"]))),
      modifier: "100 hot res, HP"
    },
    limit: {
      tries: 1
    }
  }, {
    name: "Drink",
    ready: function() {
      return atLevel(11) && (have($item(_templateObject1756 || (_templateObject1756 = _taggedTemplateLiteral108(["Frosty's frosty mug"])))) || args.minor.skipmug);
    },
    completed: function() {
      return (0, import_kolmafia120.myInebriety)() === 1 || !have($item(_templateObject1851 || (_templateObject1851 = _taggedTemplateLiteral108(["astral pilsner"])))) && !have($item(_templateObject1949 || (_templateObject1949 = _taggedTemplateLiteral108(["astral six-pack"]))));
    },
    do: function() {
      if (have($item(_templateObject2049 || (_templateObject2049 = _taggedTemplateLiteral108(["astral six-pack"]))))) (0, import_kolmafia120.use)($item(_templateObject21103 || (_templateObject21103 = _taggedTemplateLiteral108(["astral six-pack"]))));
      customRestoreMp(20);
      (0, import_kolmafia120.useSkill)($skill(_templateObject2248 || (_templateObject2248 = _taggedTemplateLiteral108(["Cannelloni Cocoon"]))));
      if (!args.minor.skipmug) (0, import_kolmafia120.drink)(1, $item(_templateObject2344 || (_templateObject2344 = _taggedTemplateLiteral108(["Frosty's frosty mug"]))));
      (0, import_kolmafia120.drink)(1, $item(_templateObject2443 || (_templateObject2443 = _taggedTemplateLiteral108(["astral pilsner"]))));
    },
    outfit: {
      equip: $items(_templateObject2541 || (_templateObject2541 = _taggedTemplateLiteral108(["nurse's hat, sea salt scrubs"]))),
      modifier: "100 cold res, HP"
    },
    effects: $effects(_templateObject2639 || (_templateObject2639 = _taggedTemplateLiteral108(["Ode to Booze"]))),
    limit: {
      tries: 1
    }
  }, {
    name: "Numberology",
    priority: function() {
      return Priorities.Free;
    },
    after: ["Summon/War Frat 151st Infantryman"],
    completed: function() {
      return (
        // When you use 3 casts of numberology in ronin,
        // it locks you out of all your remaining casts once you break ronin
        get("_universeCalculated") >= get("skillLevel144") || get("_universeCalculated") >= 2
      );
    },
    ready: function() {
      return (0, import_kolmafia120.myAdventures)() > 0 && Object.keys((0, import_kolmafia120.reverseNumberology)()).includes("69");
    },
    do: function() {
      customRestoreMp(1);
      (0, import_kolmafia120.cliExecute)("numberology 69");
    },
    limit: {
      tries: 5
    },
    freeaction: true
  }, {
    name: "Tune after Diet",
    after: ["Diet/Eat", "Diet/Drink"],
    ready: function() {
      return (0, import_kolmafia120.mySign)() === "Blender" || (0, import_kolmafia120.mySign)() === "Opossum";
    },
    completed: function() {
      return !have($item(_templateObject2739 || (_templateObject2739 = _taggedTemplateLiteral108(["hewn moon-rune spoon"])))) || args.minor.tune === void 0 || get("moonTuned", false);
    },
    priority: function() {
      return Priorities.Free;
    },
    freeaction: true,
    do: function() {
      return (0, import_kolmafia120.cliExecute)("spoon ".concat(args.minor.tune));
    },
    limit: {
      tries: 1
    }
  }]
};

// src/tasks/all.ts
function _createForOfIteratorHelper34(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray59(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray59(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray59(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray59(o, minLen);
}
function _arrayLikeToArray59(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function all_tasks() {
  var quests2 = [
    TootQuest,
    MiscQuest,
    DietQuest,
    PullQuest,
    WandQuest,
    KeysQuest,
    SummonQuest,
    MosquitoQuest,
    TavernQuest,
    BatQuest,
    KnobQuest,
    FriarQuest,
    // OrganQuest,
    CryptQuest,
    McLargeHugeQuest,
    ChasmQuest,
    GiantQuest,
    HiddenQuest,
    ManorQuest,
    PalindomeQuest,
    MacguffinQuest,
    WarQuest,
    TowerQuest,
    DigitalQuest
  ];
  var tasks = getTasks(quests2);
  var _iterator = _createForOfIteratorHelper34(tasks), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var task = _step.value;
      if (task.limit.soft) {
        task.limit.soft *= args.minor.luck;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return tasks;
}

// src/main.ts
init_dist();

// src/sim.ts
var import_kolmafia121 = require("kolmafia");
init_dist();
var _templateObject1080;
var _templateObject2205;
var _templateObject3186;
var _templateObject4161;
var _templateObject5144;
var _templateObject6136;
var _templateObject7126;
var _templateObject8105;
var _templateObject9102;
var _templateObject1081;
var _templateObject1171;
var _templateObject1270;
var _templateObject1369;
var _templateObject1468;
var _templateObject1561;
var _templateObject1660;
var _templateObject1757;
var _templateObject1855;
var _templateObject1950;
var _templateObject2050;
var _templateObject21104;
var _templateObject2249;
var _templateObject2345;
var _templateObject2444;
var _templateObject2543;
var _templateObject2640;
var _templateObject2740;
var _templateObject2837;
var _templateObject2937;
var _templateObject3037;
var _templateObject3187;
var _templateObject3238;
var _templateObject3337;
var _templateObject3435;
var _templateObject3534;
var _templateObject3634;
var _templateObject3734;
var _templateObject3834;
var _templateObject3931;
var _templateObject4031;
var _templateObject4162;
var _templateObject4233;
var _templateObject4332;
var _templateObject4431;
var _templateObject4531;
var _templateObject4631;
var _templateObject4731;
var _templateObject4831;
var _templateObject4931;
var _templateObject5031;
var _templateObject5145;
var _templateObject5232;
var _templateObject5331;
var _templateObject5431;
var _templateObject5530;
var _templateObject5629;
var _templateObject5728;
var _templateObject5827;
var _templateObject5925;
var _templateObject6023;
var _templateObject6137;
var _templateObject6228;
var _templateObject6328;
var _templateObject6428;
var _templateObject6527;
var _templateObject6624;
var _templateObject6720;
var _templateObject6820;
var _templateObject6920;
var _templateObject7020;
var _templateObject7127;
var _templateObject7225;
var _templateObject7324;
var _templateObject7424;
var _templateObject7522;
var _templateObject7619;
var _templateObject7717;
var _templateObject7817;
var _templateObject7917;
var _templateObject8016;
var _templateObject8122;
var _templateObject8222;
var _templateObject8322;
var _templateObject8421;
var _templateObject8518;
var _templateObject8617;
var _templateObject8717;
var _templateObject8815;
var _templateObject8915;
var _templateObject9013;
var _templateObject9121;
var _templateObject9221;
var _templateObject9320;
var _templateObject9417;
function _slicedToArray32(arr, i) {
  return _arrayWithHoles32(arr) || _iterableToArrayLimit32(arr, i) || _unsupportedIterableToArray60(arr, i) || _nonIterableRest32();
}
function _nonIterableRest32() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit32(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles32(arr) {
  if (Array.isArray(arr)) return arr;
}
function _createForOfIteratorHelper35(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray60(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray60(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray60(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray60(o, minLen);
}
function _arrayLikeToArray60(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral109(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _defineProperties34(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey43(descriptor.key), descriptor);
  }
}
function _createClass34(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties34(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties34(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _classCallCheck34(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperty38(obj, key, value) {
  key = _toPropertyKey43(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey43(t) {
  var i = _toPrimitive43(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _toPrimitive43(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var Hardcoded = /* @__PURE__ */ _createClass34(function Hardcoded2(have65, name) {
  _classCallCheck34(this, Hardcoded2);
  _defineProperty38(this, "have", void 0);
  _defineProperty38(this, "name", void 0);
  this.have = have65;
  this.name = name;
});
function buildIotmList() {
  return [{
    thing: $item(_templateObject1080 || (_templateObject1080 = _taggedTemplateLiteral109(["Clan VIP Lounge key"]))),
    why: "YRs, +combat"
  }, {
    thing: new Hardcoded(have($item(_templateObject2205 || (_templateObject2205 = _taggedTemplateLiteral109(["cold medicine cabinet"])))) || (0, import_kolmafia121.getWorkshed)() === $item(_templateObject3186 || (_templateObject3186 = _taggedTemplateLiteral109(["cold medicine cabinet"]))), "Cold medicine cabinet"),
    why: "Get Extrovermectin for profit"
  }, {
    thing: new Hardcoded(have($skill(_templateObject4161 || (_templateObject4161 = _taggedTemplateLiteral109(["Summon Clip Art"])))), "Summon Clip Art"),
    why: "Amulet coin"
  }, {
    thing: $familiar(_templateObject5144 || (_templateObject5144 = _taggedTemplateLiteral109(["Artistic Goth Kid"]))),
    why: "Wanderers"
  }, {
    thing: $familiar(_templateObject6136 || (_templateObject6136 = _taggedTemplateLiteral109(["Reagnimated Gnome"]))),
    why: "Adv gain"
  }, {
    thing: new Hardcoded(get("chateauAvailable"), "Chateau Mantegna"),
    why: "Free rests, +exp"
  }, {
    thing: new Hardcoded(get("lovebugsUnlocked"), "Lovebugs"),
    why: "Crypt, Desert"
  }, {
    thing: $item(_templateObject7126 || (_templateObject7126 = _taggedTemplateLiteral109(["Deck of Every Card"]))),
    why: "A key for the NS tower, stone wool, ore"
  }, {
    thing: $item(_templateObject8105 || (_templateObject8105 = _taggedTemplateLiteral109(["protonic accelerator pack"]))),
    why: "Wanderers"
  }, {
    thing: $familiar(_templateObject9102 || (_templateObject9102 = _taggedTemplateLiteral109(["Trick-or-Treating Tot"]))),
    why: "+item"
  }, {
    thing: $familiar(_templateObject1081 || (_templateObject1081 = _taggedTemplateLiteral109(["Space Jellyfish"]))),
    why: 'Stench jellies for profit; see the argument "jellies"'
  }, {
    thing: new Hardcoded(get("loveTunnelAvailable"), "LOV Tunnel"),
    why: "+exp"
  }, {
    thing: $item(_templateObject1171 || (_templateObject1171 = _taggedTemplateLiteral109(["Kremlin's Greatest Briefcase"]))),
    why: "Banishes"
  }, {
    thing: $item(_templateObject1270 || (_templateObject1270 = _taggedTemplateLiteral109(["January's Garbage Tote"]))),
    why: "+item, +meat"
  }, {
    thing: $item(_templateObject1369 || (_templateObject1369 = _taggedTemplateLiteral109(["SongBoom\u2122 BoomBox"]))),
    why: "Meat and special seasonings"
  }, {
    thing: $item(_templateObject1468 || (_templateObject1468 = _taggedTemplateLiteral109(["Bastille Battalion control rig"]))),
    why: "+exp"
  }, {
    thing: $item(_templateObject1561 || (_templateObject1561 = _taggedTemplateLiteral109(["latte lovers member's mug"]))),
    why: "Banishes"
  }, {
    thing: new Hardcoded(get("voteAlways"), "Voting Booth"),
    why: "Wanderers"
  }, {
    thing: new Hardcoded(get("daycareOpen"), "Boxing Daycare"),
    why: "+exp"
  }, {
    thing: $item(_templateObject1660 || (_templateObject1660 = _taggedTemplateLiteral109(["Kramco Sausage-o-Matic\u2122"]))),
    why: "Wanderers"
  }, {
    thing: $item(_templateObject1757 || (_templateObject1757 = _taggedTemplateLiteral109(["Lil' Doctor\u2122 bag"]))),
    why: "Banish, instakill, +item"
  }, {
    thing: $item(_templateObject1855 || (_templateObject1855 = _taggedTemplateLiteral109(["Fourth of May Cosplay Saber"]))),
    why: "Familiar Weight"
  }, {
    thing: new Hardcoded(CampAway_exports.have(), "Distant Woods Getaway Brochure"),
    why: "+exp"
  }, {
    thing: $item(_templateObject1950 || (_templateObject1950 = _taggedTemplateLiteral109(["Powerful Glove"]))),
    why: "Pixels"
  }, {
    thing: $familiar(_templateObject2050 || (_templateObject2050 = _taggedTemplateLiteral109(["Left-Hand Man"]))),
    why: "Carn plant"
  }, {
    thing: $familiar(_templateObject21104 || (_templateObject21104 = _taggedTemplateLiteral109(["Melodramedary"]))),
    why: "Desert progress"
  }, {
    thing: $item(_templateObject2249 || (_templateObject2249 = _taggedTemplateLiteral109(["Cargo Cultist Shorts"]))),
    why: "Mountain man"
  }, {
    thing: $skill(_templateObject2345 || (_templateObject2345 = _taggedTemplateLiteral109(["Comprehensive Cartography"]))),
    why: "Billiards, Friars, Nook, Castle, War start"
  }, {
    thing: $item(_templateObject2444 || (_templateObject2444 = _taggedTemplateLiteral109(["unwrapped knock-off retro superhero cape"]))),
    why: "Slay the dead in crypt"
  }, {
    thing: $item(_templateObject2543 || (_templateObject2543 = _taggedTemplateLiteral109(["miniature crystal ball"]))),
    why: "Monster prediction"
  }, {
    thing: $skill(_templateObject2640 || (_templateObject2640 = _taggedTemplateLiteral109(["Emotionally Chipped"]))),
    why: "Banish, -combat, items"
  }, {
    thing: $item(_templateObject2740 || (_templateObject2740 = _taggedTemplateLiteral109(["backup camera"]))),
    why: "ML, init"
  }, {
    thing: $familiar(_templateObject2837 || (_templateObject2837 = _taggedTemplateLiteral109(["Shorter-Order Cook"]))),
    why: "Kill the Wall of Skin, initial exp"
  }, {
    thing: $item(_templateObject2937 || (_templateObject2937 = _taggedTemplateLiteral109(["familiar scrapbook"]))),
    why: "+exp"
  }, {
    thing: $item(_templateObject3037 || (_templateObject3037 = _taggedTemplateLiteral109(["industrial fire extinguisher"]))),
    why: "Harem outfit, Bat hole, stone wool, Crypt, Ultrahydrated, Shadow bricks"
  }, {
    thing: $item(_templateObject3187 || (_templateObject3187 = _taggedTemplateLiteral109(["Daylight Shavings Helmet"]))),
    why: "+meat, +item"
  }, {
    thing: $item(_templateObject3238 || (_templateObject3238 = _taggedTemplateLiteral109(["cursed magnifying glass"]))),
    why: "Wanderers"
  }, {
    thing: new Hardcoded(have($item(_templateObject3337 || (_templateObject3337 = _taggedTemplateLiteral109(["cosmic bowling ball"])))) || get("cosmicBowlingBallReturnCombats", -1) >= 0, "Cosmic bowling ball"),
    why: "Banishes"
  }, {
    thing: $item(_templateObject3435 || (_templateObject3435 = _taggedTemplateLiteral109(["combat lover's locket"]))),
    why: "Reminiscing"
  }, {
    thing: $familiar(_templateObject3534 || (_templateObject3534 = _taggedTemplateLiteral109(["Grey Goose"]))),
    why: "Duplication drones"
  }, {
    thing: $item(_templateObject3634 || (_templateObject3634 = _taggedTemplateLiteral109(["unbreakable umbrella"]))),
    why: "-combat modifier, ML"
  }, {
    thing: $item(_templateObject3734 || (_templateObject3734 = _taggedTemplateLiteral109(["June cleaver"]))),
    why: "Tavern, +adv"
  }, {
    thing: $item(_templateObject3834 || (_templateObject3834 = _taggedTemplateLiteral109(["designer sweatpants"]))),
    why: "Sleaze damage, +init"
  }, {
    thing: $item(_templateObject3931 || (_templateObject3931 = _taggedTemplateLiteral109(["Jurassic Parka"]))),
    why: "Meat, ML, -combat forces"
  }, {
    thing: new Hardcoded(AutumnAton_exports.have(), "autumn-aton"),
    why: "Lobsterfrogman"
  }, {
    thing: new Hardcoded(have($item(_templateObject4031 || (_templateObject4031 = _taggedTemplateLiteral109(["model train set"])))) || (0, import_kolmafia121.getWorkshed)() === $item(_templateObject4162 || (_templateObject4162 = _taggedTemplateLiteral109(["model train set"]))), "Model train set"),
    why: "Meat, MP, Ore, Orc bridge parts, and res"
  }, {
    thing: $item(_templateObject4233 || (_templateObject4233 = _taggedTemplateLiteral109(["S.I.T. Course Completion Certificate"]))),
    why: "Profit, +meat"
  }, {
    thing: $item(_templateObject4332 || (_templateObject4332 = _taggedTemplateLiteral109(["closed-circuit pay phone"]))),
    why: "Shadow bricks, +meat"
  }, {
    thing: $item(_templateObject4431 || (_templateObject4431 = _taggedTemplateLiteral109(["cursed monkey's paw"]))),
    why: "Banishes"
  }, {
    thing: $item(_templateObject4531 || (_templateObject4531 = _taggedTemplateLiteral109(["Cincho de Mayo"]))),
    why: "-combat forces"
  }, {
    thing: $item(_templateObject4631 || (_templateObject4631 = _taggedTemplateLiteral109(["2002 Mr. Store Catalog"]))),
    why: "+item, +init, wanderers"
  }, {
    thing: $familiar(_templateObject4731 || (_templateObject4731 = _taggedTemplateLiteral109(["Patriotic Eagle"]))),
    why: "Niche, Palindome, Twin Paak"
  }, {
    thing: $item(_templateObject4831 || (_templateObject4831 = _taggedTemplateLiteral109(["august scepter"]))),
    why: "Protestors, Nuns"
  }, {
    thing: $skill(_templateObject4931 || (_templateObject4931 = _taggedTemplateLiteral109(["Just the Facts"]))),
    why: "Desert, Wishes"
  }, {
    thing: $familiar(_templateObject5031 || (_templateObject5031 = _taggedTemplateLiteral109(["Jill-of-All-Trades"]))),
    why: "+meat, +item"
  }, {
    thing: $item(_templateObject5145 || (_templateObject5145 = _taggedTemplateLiteral109(["candy cane sword cane"]))),
    why: "NS key, protestors, black forest, war start, bowling, shore"
  }];
}
function buildLocketList() {
  return [{
    thing: $monster(_templateObject5232 || (_templateObject5232 = _taggedTemplateLiteral109(["Astronomer"]))),
    why: "Star Key"
  }, {
    thing: $monster(_templateObject5331 || (_templateObject5331 = _taggedTemplateLiteral109(["Camel's Toe"]))),
    why: "Star Key"
  }, {
    thing: $monster(_templateObject5431 || (_templateObject5431 = _taggedTemplateLiteral109(["Baa'baa'bu'ran"]))),
    why: "Wool"
  }, {
    thing: $monster(_templateObject5530 || (_templateObject5530 = _taggedTemplateLiteral109(["mountain man"]))),
    why: "Ore (without trainset)"
  }, {
    thing: $monster(_templateObject5629 || (_templateObject5629 = _taggedTemplateLiteral109(["War Frat 151st Infantryman"]))),
    why: "Outfit (without numberology)"
  }];
}
function buildMiscList() {
  return [{
    thing: $familiar(_templateObject5728 || (_templateObject5728 = _taggedTemplateLiteral109(["Oily Woim"]))),
    why: "Bonus initiative"
  }, {
    thing: $familiar(_templateObject5827 || (_templateObject5827 = _taggedTemplateLiteral109(["Gelatinous Cubeling"]))),
    why: "Daily dungeon"
  }, {
    thing: $familiar(_templateObject5925 || (_templateObject5925 = _taggedTemplateLiteral109(["Hobo Monkey"]))),
    why: "Meat drops"
  }, {
    thing: new Hardcoded(get("poolSharkCount") >= 25, "Permanent pool skill from A Shark's Chum"),
    why: "Haunted billiards room"
  }];
}
function buildRequiredSkillsList() {
  return [{
    thing: $skill(_templateObject6023 || (_templateObject6023 = _taggedTemplateLiteral109(["Saucestorm"]))),
    why: "Combat"
  }, {
    thing: $skill(_templateObject6137 || (_templateObject6137 = _taggedTemplateLiteral109(["Cannelloni Cocoon"]))),
    why: "Healing"
  }, {
    thing: $skill(_templateObject6228 || (_templateObject6228 = _taggedTemplateLiteral109(["Pizza Lover"]))),
    why: "Adv gain, +exp"
  }];
}
function buildRecommendedSkillsList() {
  return [{
    thing: $skill(_templateObject6328 || (_templateObject6328 = _taggedTemplateLiteral109(["Torso Awareness"]))),
    why: "Shirts"
  }, {
    thing: $skill(_templateObject6428 || (_templateObject6428 = _taggedTemplateLiteral109(["Curse of Weaksauce"]))),
    why: "Combat"
  }, {
    thing: $skill(_templateObject6527 || (_templateObject6527 = _taggedTemplateLiteral109(["Snokebomb"]))),
    why: "Banishes"
  }, {
    thing: $skill(_templateObject6624 || (_templateObject6624 = _taggedTemplateLiteral109(["Batter Up!"]))),
    why: "Banishes"
  }, {
    thing: $skill(_templateObject6720 || (_templateObject6720 = _taggedTemplateLiteral109(["Ire of the Orca"]))),
    why: "Fury"
  }, {
    thing: $skill(_templateObject6820 || (_templateObject6820 = _taggedTemplateLiteral109(["Lock Picking"]))),
    why: "Key"
  }, {
    thing: $skill(_templateObject6920 || (_templateObject6920 = _taggedTemplateLiteral109(["Bend Hell"]))),
    why: "+sleaze dmg"
  }, {
    thing: $skill(_templateObject7020 || (_templateObject7020 = _taggedTemplateLiteral109(["Smooth Movement"]))),
    why: "-combat"
  }, {
    thing: $skill(_templateObject7127 || (_templateObject7127 = _taggedTemplateLiteral109(["The Sonata of Sneakiness"]))),
    why: "-combat"
  }, {
    thing: $skill(_templateObject7225 || (_templateObject7225 = _taggedTemplateLiteral109(["Carlweather's Cantata of Confrontation"]))),
    why: "+combat"
  }, {
    thing: $skill(_templateObject7324 || (_templateObject7324 = _taggedTemplateLiteral109(["Musk of the Moose"]))),
    why: "+combat"
  }, {
    thing: $skill(_templateObject7424 || (_templateObject7424 = _taggedTemplateLiteral109(["Amphibian Sympathy"]))),
    why: "Fam weight"
  }, {
    thing: $skill(_templateObject7522 || (_templateObject7522 = _taggedTemplateLiteral109(["Empathy of the Newt"]))),
    why: "Fam weight"
  }, {
    thing: $skill(_templateObject7619 || (_templateObject7619 = _taggedTemplateLiteral109(["Leash of Linguini"]))),
    why: "Fam weight"
  }, {
    thing: $skill(_templateObject7717 || (_templateObject7717 = _taggedTemplateLiteral109(["Tao of the Terrapin"]))),
    why: "QoL, Pixel Key"
  }, {
    thing: $skill(_templateObject7817 || (_templateObject7817 = _taggedTemplateLiteral109(["Walberg's Dim Bulb"]))),
    why: "+init"
  }, {
    thing: $skill(_templateObject7917 || (_templateObject7917 = _taggedTemplateLiteral109(["Springy Fusilli"]))),
    why: "+init"
  }, {
    thing: $skill(_templateObject8016 || (_templateObject8016 = _taggedTemplateLiteral109(["Cletus's Canticle of Celerity"]))),
    why: "+init"
  }, {
    thing: $skill(_templateObject8122 || (_templateObject8122 = _taggedTemplateLiteral109(["Suspicious Gaze"]))),
    why: "+init"
  }, {
    thing: $skill(_templateObject8222 || (_templateObject8222 = _taggedTemplateLiteral109(["Song of Slowness"]))),
    why: "+init"
  }, {
    thing: $skill(_templateObject8322 || (_templateObject8322 = _taggedTemplateLiteral109(["Ur-Kel's Aria of Annoyance"]))),
    why: "ML"
  }, {
    thing: $skill(_templateObject8421 || (_templateObject8421 = _taggedTemplateLiteral109(["Pride of the Puffin"]))),
    why: "ML"
  }, {
    thing: $skill(_templateObject8518 || (_templateObject8518 = _taggedTemplateLiteral109(["Drescher's Annoying Noise"]))),
    why: "ML"
  }, {
    thing: $skill(_templateObject8617 || (_templateObject8617 = _taggedTemplateLiteral109(["Fat Leon's Phat Loot Lyric"]))),
    why: "+item"
  }, {
    thing: $skill(_templateObject8717 || (_templateObject8717 = _taggedTemplateLiteral109(["Singer's Faithful Ocelot"]))),
    why: "+item"
  }, {
    thing: $skill(_templateObject8815 || (_templateObject8815 = _taggedTemplateLiteral109(["The Polka of Plenty"]))),
    why: "+meat"
  }, {
    thing: $skill(_templateObject8915 || (_templateObject8915 = _taggedTemplateLiteral109(["Disco Leer"]))),
    why: "+meat"
  }, {
    thing: $skill(_templateObject9013 || (_templateObject9013 = _taggedTemplateLiteral109(["Garbage Nova"]))),
    why: "Wall of bones"
  }, {
    thing: $skill(_templateObject9121 || (_templateObject9121 = _taggedTemplateLiteral109(["Gingerbread Mob Hit"]))),
    why: "Free kill"
  }, {
    thing: $skill(_templateObject9221 || (_templateObject9221 = _taggedTemplateLiteral109(["Shattering Punch"]))),
    why: "Free kills"
  }, {
    thing: $skill(_templateObject9320 || (_templateObject9320 = _taggedTemplateLiteral109(["Blood Bubble"]))),
    why: "QoL"
  }, {
    thing: $skill(_templateObject9417 || (_templateObject9417 = _taggedTemplateLiteral109(["Blood Bond"]))),
    why: "Fam weight"
  }];
}
function buildPullList(optional) {
  var result = [];
  var _iterator = _createForOfIteratorHelper35(pullStrategy.pulls), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _pull$description;
      var pull = _step.value;
      var items = pull.items().filter(function(item14) {
        return item14;
      });
      if (items.length === 0) continue;
      var big_items = items.filter(function(item14) {
        return (0, import_kolmafia121.mallPrice)(item14) === 0 || (0, import_kolmafia121.mallPrice)(item14) > 2e5;
      });
      if (big_items.length < items.length && pull.name !== "Runaway IoTM") continue;
      if (pull.optional !== optional) continue;
      result.push({
        thing: big_items,
        why: (_pull$description = pull.description) !== null && _pull$description !== void 0 ? _pull$description : "Pull"
      });
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return result;
}
function checkThing(thing) {
  if (thing instanceof Hardcoded) return [thing.have, thing.name];
  if (thing instanceof import_kolmafia121.Familiar) return [have(thing), thing.hatchling.name];
  if (thing instanceof import_kolmafia121.Skill) return [permedSkills().has(thing), thing.name];
  if (thing instanceof import_kolmafia121.Monster) return [new Set(CombatLoversLocket_exports.unlockedLocketMonsters()).has(thing), thing.name];
  return [have(thing) || (0, import_kolmafia121.storageAmount)(thing) > 0, thing.name];
}
function check(req) {
  if (Array.isArray(req.thing)) {
    var checks = req.thing.map(checkThing);
    return [checks.find(function(res2) {
      return res2[0];
    }) !== void 0, checks.map(function(res2) {
      return res2[1];
    }).join(" OR "), req];
  } else {
    var res = checkThing(req.thing);
    return [res[0], res[1], req];
  }
}
function checkRequirements() {
  var missing_optional = 0;
  var missing = 0;
  var categories = [["Skills (Required)", buildRequiredSkillsList(), true], ["Expensive Pulls (Required)", buildPullList(false), true], ["Skills (Optional/Recommended)", buildRecommendedSkillsList(), false], ["Expensive Pulls (Optional)", buildPullList(true), false], ["IoTMs", buildIotmList(), false], ["Miscellany", buildMiscList(), false], ["Combat Lover's Locket Monsters", buildLocketList(), false]];
  (0, import_kolmafia121.printHtml)("Checking your character... Legend: <font color='#888888'>\u2713 Have</font> / <font color='red'>X Missing & Required</font> / <font color='black'>X Missing & Optional");
  for (var _i = 0, _categories = categories; _i < _categories.length; _i++) {
    var _categories$_i = _slicedToArray32(_categories[_i], 3), name = _categories$_i[0], requirements = _categories$_i[1], required = _categories$_i[2];
    if (requirements.length === 0) continue;
    var requirements_info = requirements.map(check);
    (0, import_kolmafia121.print)(name, "blue");
    var _iterator2 = _createForOfIteratorHelper35(requirements_info.sort(function(a, b) {
      return a[1].localeCompare(b[1]);
    })), _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
        var _step2$value = _slicedToArray32(_step2.value, 3), have_it = _step2$value[0], _name = _step2$value[1], req = _step2$value[2];
        var color = have_it ? "#888888" : required ? "red" : "black";
        var symbol = have_it ? "\u2713" : "X";
        if (!have_it && !required) missing_optional++;
        if (!have_it && required) missing++;
        (0, import_kolmafia121.print)("".concat(symbol, " ").concat(_name, " - ").concat(req.why), color);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    (0, import_kolmafia121.print)("");
  }
  if (missing > 0) {
    (0, import_kolmafia121.print)("You are missing ".concat(missing, " required things. This script will not yet work for you."), "red");
    if (missing_optional > 0) (0, import_kolmafia121.print)("You are also missing ".concat(missing_optional, " optional things."));
  } else {
    if (missing_optional > 0) {
      (0, import_kolmafia121.print)("You are missing ".concat(missing_optional, " optional things. This script may work, but it could do better."));
    } else {
      (0, import_kolmafia121.print)("You have everything! You are the shiniest star. This script should work great.");
    }
  }
}

// src/_git_commit.ts
var lastCommitHash = "e7800ef";

// src/main.ts
var _templateObject1090;
var _templateObject2206;
function _createForOfIteratorHelper36(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray61(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step2 = it.next();
    normalCompletion = step2.done;
    return step2;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null) it.return();
    } finally {
      if (didErr) throw err;
    }
  } };
}
function _unsupportedIterableToArray61(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray61(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray61(o, minLen);
}
function _arrayLikeToArray61(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral110(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var time_property = toTempPref("first_start");
var svn_name = "Kasekopf-loop-casual-branches-release";
function main(command) {
  var _args$debug$ignoretas, _args$debug$ignoretas2, _args$debug$completed, _args$debug$completed2;
  sinceKolmafiaRevision(28258);
  Args.fill(args, command);
  if (args.debug.settings) {
    debug(JSON.stringify(args));
    return;
  }
  if (args.help) {
    Args.showHelp(args);
    return;
  }
  if (args.sim) {
    checkRequirements();
    return;
  }
  printVersionInfo();
  if (args.version) return;
  if ((0, import_kolmafia122.myPath)() !== $path(_templateObject1090 || (_templateObject1090 = _taggedTemplateLiteral110(["A Shrunken Adventurer am I"]))) && !args.debug.list) throw "You are not currently in a Shrunken Adventurer run. Please start one.";
  var set_time_now = get(time_property, -1) === -1;
  if (set_time_now) _set(time_property, (0, import_kolmafia122.gametimeToInt)());
  _set("choiceAdventure1507", 1);
  if ((0, import_kolmafia122.visitUrl)("main.php").includes("dense, trackless jungle")) (0, import_kolmafia122.runChoice)(-1);
  var tasks = prioritize(all_tasks());
  var engine = new Engine2(tasks, (_args$debug$ignoretas = (_args$debug$ignoretas2 = args.debug.ignoretasks) === null || _args$debug$ignoretas2 === void 0 ? void 0 : _args$debug$ignoretas2.split(",")) !== null && _args$debug$ignoretas !== void 0 ? _args$debug$ignoretas : [], (_args$debug$completed = (_args$debug$completed2 = args.debug.completedtasks) === null || _args$debug$completed2 === void 0 ? void 0 : _args$debug$completed2.split(",")) !== null && _args$debug$completed !== void 0 ? _args$debug$completed : []);
  try {
    if (args.debug.list) {
      listTasks(engine);
      return;
    }
    engine.run(args.debug.actions);
    var remaining_tasks = tasks.filter(function(task2) {
      return !task2.completed();
    });
    if (!runComplete()) {
      if (args.debug.actions !== void 0) {
        var next2 = engine.getNextTask();
        if (next2) {
          debug("Next task: ".concat(next2.name));
          return;
        }
      }
      debug("Remaining tasks:", "red");
      var _iterator = _createForOfIteratorHelper36(remaining_tasks), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var task = _step.value;
          if (!task.completed()) debug("".concat(task.name), "red");
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      throw "Unable to find available task, but the run is not complete.";
    }
  } finally {
    engine.propertyManager.resetAll();
  }
  if (step("questL13Final") > 11) {
    (0, import_kolmafia122.print)("Shrunken Adventurer complete!", "purple");
  }
  (0, import_kolmafia122.print)("   Adventures used: ".concat((0, import_kolmafia122.turnsPlayed)()), "purple");
  (0, import_kolmafia122.print)("   Adventures remaining: ".concat((0, import_kolmafia122.myAdventures)()), "purple");
  if (set_time_now) (0, import_kolmafia122.print)("   Time: ".concat(convertMilliseconds((0, import_kolmafia122.gametimeToInt)() - get(time_property, (0, import_kolmafia122.gametimeToInt)()))), "purple");
  else (0, import_kolmafia122.print)("   Time: ".concat(convertMilliseconds((0, import_kolmafia122.gametimeToInt)() - get(time_property, (0, import_kolmafia122.gametimeToInt)())), " since first run today started"), "purple");
  if ((0, import_kolmafia122.inHardcore)()) {
    (0, import_kolmafia122.print)("   Pulls used: 0 (Hardcore)");
  } else {
    (0, import_kolmafia122.print)("   Pulls used: ".concat(get(toTempPref("pullsUsed")), " (").concat((0, import_kolmafia122.pullsRemaining)(), " remaining)"), "purple");
  }
}
function runComplete() {
  return step("questL13Final") > 11 || (0, import_kolmafia122.myPath)() !== $path(_templateObject2206 || (_templateObject2206 = _taggedTemplateLiteral110(["A Shrunken Adventurer am I"])));
}
function printVersionInfo() {
  debug("Running loopsmol version [".concat(lastCommitHash !== null && lastCommitHash !== void 0 ? lastCommitHash : "custom-built", "] in KoLmafia r").concat((0, import_kolmafia122.getRevision)()));
  if (lastCommitHash !== void 0) {
    if ((0, import_kolmafia122.svnExists)(svn_name) && !(0, import_kolmafia122.svnAtHead)(svn_name)) debug('A newer version of this script is available and can be obtained with "svn update".', "red");
    else if (args.version) {
      debug("This script is up to date.", "red");
    }
  }
}
function listTasks(engine) {
  var show_phyla = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  engine.updatePlan();
  var _iterator2 = _createForOfIteratorHelper36(engine.tasks), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var task = _step2.value;
      if (task.completed()) {
        debug("".concat(task.name, ": Done"), "blue");
      } else {
        if (engine.available(task)) {
          var priority = Prioritization.from(task);
          var reason = priority.explain();
          var why = reason === "" ? "Route" : reason;
          debug("".concat(task.name, ": Available [").concat(priority.score(), ": ").concat(why, "]"));
        } else {
          debug("".concat(task.name, ": Not Available"), "red");
        }
      }
      if (show_phyla) {
        if (task.do instanceof import_kolmafia122.Location) {
          var _task$combat;
          if ((_task$combat = task.combat) !== null && _task$combat !== void 0 && _task$combat.can("banish")) {
            var _iterator3 = _createForOfIteratorHelper36(getMonsters4(task.do)), _step3;
            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                var _ref, _task$combat$currentS;
                var monster = _step3.value;
                var strat = (_ref = (_task$combat$currentS = task.combat.currentStrategy(monster)) !== null && _task$combat$currentS !== void 0 ? _task$combat$currentS : task.combat.getDefaultAction()) !== null && _ref !== void 0 ? _ref : "ignore";
                debug("  * ".concat(strat, " ").concat(monster.name, " ").concat(monster.phylum));
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
          } else {
            var _iterator4 = _createForOfIteratorHelper36(getMonsters4(task.do)), _step4;
            try {
              for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
                var _ref2, _task$combat$currentS2, _task$combat2, _task$combat3;
                var _monster = _step4.value;
                var _strat = (_ref2 = (_task$combat$currentS2 = (_task$combat2 = task.combat) === null || _task$combat2 === void 0 ? void 0 : _task$combat2.currentStrategy(_monster)) !== null && _task$combat$currentS2 !== void 0 ? _task$combat$currentS2 : (_task$combat3 = task.combat) === null || _task$combat3 === void 0 ? void 0 : _task$combat3.getDefaultAction()) !== null && _ref2 !== void 0 ? _ref2 : "ignore";
                debug("  * ".concat(_strat, " ").concat(_monster.name, " ").concat(_monster.phylum), "grey");
              }
            } catch (err) {
              _iterator4.e(err);
            } finally {
              _iterator4.f();
            }
          }
        }
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  main
});
